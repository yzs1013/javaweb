{"remainingRequest":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\JavaWebVue\\javaweb-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\JavaWebVue\\javaweb-ui\\node_modules\\element-ui\\lib\\element-ui.common.js","dependencies":[{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\element-ui\\lib\\element-ui.common.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbCIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb24iKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC50by1zdHJpbmctdGFnIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdCIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5ldmVyeSIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWxsIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlciIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4iKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZSIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb21lIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24udG8tc3RyaW5nLXRhZyIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLnRvLXN0cmluZy10YWciKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5pcy1uYW4iKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnBhcnNlLWZsb2F0Iik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZCIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZnJlZXplIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcyIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IiKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0iKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmZpeGVkIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5saW5rIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zbWFsbCIpO3JlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIik7cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiKTtyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCIpO3ZhciBfdHlwZW9mMj1yZXF1aXJlKCJEOi9KYXZhV2ViVnVlL2phdmF3ZWItdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mIik7bW9kdWxlLmV4cG9ydHM9LyoqKioqKi9mdW5jdGlvbihtb2R1bGVzKXsvLyB3ZWJwYWNrQm9vdHN0cmFwCi8qKioqKiovIC8vIFRoZSBtb2R1bGUgY2FjaGUKLyoqKioqKi92YXIgaW5zdGFsbGVkTW9kdWxlcz17fTsvKioqKioqLyAvKioqKioqLyAvLyBUaGUgcmVxdWlyZSBmdW5jdGlvbgovKioqKioqL2Z1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpey8qKioqKiovIC8qKioqKiovIC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZQovKioqKioqL2lmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKXsvKioqKioqL3JldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzOy8qKioqKiovfS8qKioqKiovIC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpCi8qKioqKiovdmFyIG1vZHVsZT1pbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXT17LyoqKioqKi9pOm1vZHVsZUlkLC8qKioqKiovbDpmYWxzZSwvKioqKioqL2V4cG9ydHM6e30vKioqKioqL307LyoqKioqKi8gLyoqKioqKi8gLy8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uCi8qKioqKiovbW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cyxtb2R1bGUsbW9kdWxlLmV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyk7LyoqKioqKi8gLyoqKioqKi8gLy8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZAovKioqKioqL21vZHVsZS5sPXRydWU7LyoqKioqKi8gLyoqKioqKi8gLy8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGUKLyoqKioqKi9yZXR1cm4gbW9kdWxlLmV4cG9ydHM7LyoqKioqKi99LyoqKioqKi8gLyoqKioqKi8gLyoqKioqKi8gLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXykKLyoqKioqKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm09bW9kdWxlczsvKioqKioqLyAvKioqKioqLyAvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZQovKioqKioqL19fd2VicGFja19yZXF1aXJlX18uYz1pbnN0YWxsZWRNb2R1bGVzOy8qKioqKiovIC8qKioqKiovIC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0cwovKioqKioqL19fd2VicGFja19yZXF1aXJlX18uZD1mdW5jdGlvbihleHBvcnRzLG5hbWUsZ2V0dGVyKXsvKioqKioqL2lmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cyxuYW1lKSl7LyoqKioqKi9PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxuYW1lLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmdldHRlcn0pOy8qKioqKiovfS8qKioqKiovfTsvKioqKioqLyAvKioqKioqLyAvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzCi8qKioqKiovX193ZWJwYWNrX3JlcXVpcmVfXy5yPWZ1bmN0aW9uKGV4cG9ydHMpey8qKioqKiovaWYodHlwZW9mIFN5bWJvbCE9PSd1bmRlZmluZWQnJiZTeW1ib2wudG9TdHJpbmdUYWcpey8qKioqKiovT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTonTW9kdWxlJ30pOy8qKioqKiovfS8qKioqKiovT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsJ19fZXNNb2R1bGUnLHt2YWx1ZTp0cnVlfSk7LyoqKioqKi99Oy8qKioqKiovIC8qKioqKiovIC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdAovKioqKioqLyAvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXQKLyoqKioqKi8gLy8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zCi8qKioqKiovIC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdAovKioqKioqLyAvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlCi8qKioqKiovX193ZWJwYWNrX3JlcXVpcmVfXy50PWZ1bmN0aW9uKHZhbHVlLG1vZGUpey8qKioqKiovaWYobW9kZSYxKXZhbHVlPV9fd2VicGFja19yZXF1aXJlX18odmFsdWUpOy8qKioqKiovaWYobW9kZSY4KXJldHVybiB2YWx1ZTsvKioqKioqL2lmKG1vZGUmNCYmX3R5cGVvZjIodmFsdWUpPT09J29iamVjdCcmJnZhbHVlJiZ2YWx1ZS5fX2VzTW9kdWxlKXJldHVybiB2YWx1ZTsvKioqKioqL3ZhciBucz1PYmplY3QuY3JlYXRlKG51bGwpOy8qKioqKiovX193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTsvKioqKioqL09iamVjdC5kZWZpbmVQcm9wZXJ0eShucywnZGVmYXVsdCcse2VudW1lcmFibGU6dHJ1ZSx2YWx1ZTp2YWx1ZX0pOy8qKioqKiovaWYobW9kZSYyJiZ0eXBlb2YgdmFsdWUhPSdzdHJpbmcnKWZvcih2YXIga2V5IGluIHZhbHVlKXtfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsa2V5LGZ1bmN0aW9uKGtleSl7cmV0dXJuIHZhbHVlW2tleV07fS5iaW5kKG51bGwsa2V5KSk7fS8qKioqKiovcmV0dXJuIG5zOy8qKioqKiovfTsvKioqKioqLyAvKioqKioqLyAvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlcwovKioqKioqL19fd2VicGFja19yZXF1aXJlX18ubj1mdW5jdGlvbihtb2R1bGUpey8qKioqKiovdmFyIGdldHRlcj1tb2R1bGUmJm1vZHVsZS5fX2VzTW9kdWxlPy8qKioqKiovZnVuY3Rpb24gZ2V0RGVmYXVsdCgpe3JldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTt9Oi8qKioqKiovZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpe3JldHVybiBtb2R1bGU7fTsvKioqKioqL19fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsJ2EnLGdldHRlcik7LyoqKioqKi9yZXR1cm4gZ2V0dGVyOy8qKioqKiovfTsvKioqKioqLyAvKioqKioqLyAvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwKLyoqKioqKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm89ZnVuY3Rpb24ob2JqZWN0LHByb3BlcnR5KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCxwcm9wZXJ0eSk7fTsvKioqKioqLyAvKioqKioqLyAvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfXwovKioqKioqL19fd2VicGFja19yZXF1aXJlX18ucD0iL2Rpc3QvIjsvKioqKioqLyAvKioqKioqLyAvKioqKioqLyAvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHMKLyoqKioqKi9yZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnM9NDUpOy8qKioqKiovfSgvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLyAvKioqKioqL1svKiAwICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL3V0aWxzL2RhdGUtdXRpbCIpOy8qKiovfSwvKiAxICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL3V0aWxzL2RvbSIpOy8qKiovfSwvKiAyICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL3V0aWxzL3V0aWwiKTsvKioqL30sLyogMyAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi9taXhpbnMvZW1pdHRlciIpOy8qKiovfSwvKiA0ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL21peGlucy9sb2NhbGUiKTsvKioqL30sLyogNSAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi91dGlscy92dWUtcG9wcGVyIik7LyoqKi99LC8qIDYgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgidnVlIik7LyoqKi99LC8qIDcgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgiZWxlbWVudC11aS9saWIvdXRpbHMvbWVyZ2UiKTsvKioqL30sLyogOCAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi9pbnB1dCIpOy8qKiovfSwvKiA5ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL21peGlucy9taWdyYXRpbmciKTsvKioqL30sLyogMTAgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgiZWxlbWVudC11aS9saWIvdXRpbHMvY2xpY2tvdXRzaWRlIik7LyoqKi99LC8qIDExICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL3V0aWxzL3BvcHVwIik7LyoqKi99LC8qIDEyICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL2J1dHRvbiIpOy8qKiovfSwvKiAxMyAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi91dGlscy9yZXNpemUtZXZlbnQiKTsvKioqL30sLyogMTQgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgidGhyb3R0bGUtZGVib3VuY2UvZGVib3VuY2UiKTsvKioqL30sLyogMTUgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgiZWxlbWVudC11aS9saWIvbG9jYWxlIik7LyoqKi99LC8qIDE2ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL2NoZWNrYm94Iik7LyoqKi99LC8qIDE3ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL3Njcm9sbGJhciIpOy8qKiovfSwvKiAxOCAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi91dGlscy90eXBlcyIpOy8qKiovfSwvKiAxOSAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi91dGlscy9zaGFyZWQiKTsvKioqL30sLyogMjAgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgiZWxlbWVudC11aS9saWIvdXRpbHMvZGF0ZSIpOy8qKiovfSwvKiAyMSAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi90cmFuc2l0aW9ucy9jb2xsYXBzZS10cmFuc2l0aW9uIik7LyoqKi99LC8qIDIyICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL21peGlucy9mb2N1cyIpOy8qKiovfSwvKiAyMyAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi91dGlscy92ZG9tIik7LyoqKi99LC8qIDI0ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImJhYmVsLWhlbHBlci12dWUtanN4LW1lcmdlLXByb3BzIik7LyoqKi99LC8qIDI1ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoInRocm90dGxlLWRlYm91bmNlL3Rocm90dGxlIik7LyoqKi99LC8qIDI2ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL3Rvb2x0aXAiKTsvKioqL30sLyogMjcgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgiZWxlbWVudC11aS9saWIvdXRpbHMvc2Nyb2xsLWludG8tdmlldyIpOy8qKiovfSwvKiAyOCAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi9idXR0b24tZ3JvdXAiKTsvKioqL30sLyogMjkgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgiZWxlbWVudC11aS9saWIvdGFnIik7LyoqKi99LC8qIDMwICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL3V0aWxzL3Njcm9sbGJhci13aWR0aCIpOy8qKiovfSwvKiAzMSAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi9jaGVja2JveC1ncm91cCIpOy8qKiovfSwvKiAzMiAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi91dGlscy9hZnRlci1sZWF2ZSIpOy8qKiovfSwvKiAzMyAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi9wcm9ncmVzcyIpOy8qKiovfSwvKiAzNCAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi91dGlscy9hcmlhLXV0aWxzIik7LyoqKi99LC8qIDM1ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoInRocm90dGxlLWRlYm91bmNlIik7LyoqKi99LC8qIDM2ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL3NlbGVjdCIpOy8qKiovfSwvKiAzNyAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi9vcHRpb24iKTsvKioqL30sLyogMzggKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgibm9ybWFsaXplLXdoZWVsIik7LyoqKi99LC8qIDM5ICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImVsZW1lbnQtdWkvbGliL3V0aWxzL2FyaWEtZGlhbG9nIik7LyoqKi99LC8qIDQwICovIC8qKiovZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXJlcXVpcmUoImFzeW5jLXZhbGlkYXRvciIpOy8qKiovfSwvKiA0MSAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKCJlbGVtZW50LXVpL2xpYi9pbnB1dC1udW1iZXIiKTsvKioqL30sLyogNDIgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgiZWxlbWVudC11aS9saWIvY2FzY2FkZXItcGFuZWwiKTsvKioqL30sLyogNDMgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgiZWxlbWVudC11aS9saWIvcmFkaW8iKTsvKioqL30sLyogNDQgKi8gLyoqKi9mdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZSgiZWxlbWVudC11aS9saWIvcG9wb3ZlciIpOy8qKiovfSwvKiA0NSAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe21vZHVsZS5leHBvcnRzPV9fd2VicGFja19yZXF1aXJlX18oNDYpOy8qKiovfSwvKiA0NiAqLyAvKioqL2Z1bmN0aW9uKG1vZHVsZSxfX3dlYnBhY2tfZXhwb3J0c19fLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9wYWdpbmF0aW9uL3NyYy9wYWdlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NzI3NGYyNjcmCnZhciBwYWdlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzcyNzRmMjY3X3JlbmRlcj1mdW5jdGlvbiBwYWdlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzcyNzRmMjY3X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidWwiLHtzdGF0aWNDbGFzczoiZWwtcGFnZXIiLG9uOntjbGljazpfdm0ub25QYWdlckNsaWNrfX0sW192bS5wYWdlQ291bnQ+MD9fYygibGkiLHtzdGF0aWNDbGFzczoibnVtYmVyIixjbGFzczp7YWN0aXZlOl92bS5jdXJyZW50UGFnZT09PTEsZGlzYWJsZWQ6X3ZtLmRpc2FibGVkfX0sW192bS5fdigiMSIpXSk6X3ZtLl9lKCksX3ZtLnNob3dQcmV2TW9yZT9fYygibGkiLHtzdGF0aWNDbGFzczoiZWwtaWNvbiBtb3JlIGJ0bi1xdWlja3ByZXYiLGNsYXNzOltfdm0ucXVpY2twcmV2SWNvbkNsYXNzLHtkaXNhYmxlZDpfdm0uZGlzYWJsZWR9XSxvbjp7bW91c2VlbnRlcjpmdW5jdGlvbiBtb3VzZWVudGVyKCRldmVudCl7X3ZtLm9uTW91c2VlbnRlcigibGVmdCIpO30sbW91c2VsZWF2ZTpmdW5jdGlvbiBtb3VzZWxlYXZlKCRldmVudCl7X3ZtLnF1aWNrcHJldkljb25DbGFzcz0iZWwtaWNvbi1tb3JlIjt9fX0pOl92bS5fZSgpLF92bS5fbChfdm0ucGFnZXJzLGZ1bmN0aW9uKHBhZ2VyKXtyZXR1cm4gX2MoImxpIix7a2V5OnBhZ2VyLHN0YXRpY0NsYXNzOiJudW1iZXIiLGNsYXNzOnthY3RpdmU6X3ZtLmN1cnJlbnRQYWdlPT09cGFnZXIsZGlzYWJsZWQ6X3ZtLmRpc2FibGVkfX0sW192bS5fdihfdm0uX3MocGFnZXIpKV0pO30pLF92bS5zaG93TmV4dE1vcmU/X2MoImxpIix7c3RhdGljQ2xhc3M6ImVsLWljb24gbW9yZSBidG4tcXVpY2tuZXh0IixjbGFzczpbX3ZtLnF1aWNrbmV4dEljb25DbGFzcyx7ZGlzYWJsZWQ6X3ZtLmRpc2FibGVkfV0sb246e21vdXNlZW50ZXI6ZnVuY3Rpb24gbW91c2VlbnRlcigkZXZlbnQpe192bS5vbk1vdXNlZW50ZXIoInJpZ2h0Iik7fSxtb3VzZWxlYXZlOmZ1bmN0aW9uIG1vdXNlbGVhdmUoJGV2ZW50KXtfdm0ucXVpY2tuZXh0SWNvbkNsYXNzPSJlbC1pY29uLW1vcmUiO319fSk6X3ZtLl9lKCksX3ZtLnBhZ2VDb3VudD4xP19jKCJsaSIse3N0YXRpY0NsYXNzOiJudW1iZXIiLGNsYXNzOnthY3RpdmU6X3ZtLmN1cnJlbnRQYWdlPT09X3ZtLnBhZ2VDb3VudCxkaXNhYmxlZDpfdm0uZGlzYWJsZWR9fSxbX3ZtLl92KF92bS5fcyhfdm0ucGFnZUNvdW50KSldKTpfdm0uX2UoKV0sMik7fTt2YXIgc3RhdGljUmVuZGVyRm5zPVtdO3BhZ2VydnVlX3R5cGVfdGVtcGxhdGVfaWRfNzI3NGYyNjdfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BhZ2luYXRpb24vc3JjL3BhZ2VyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03Mjc0ZjI2NyYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvcGFnaW5hdGlvbi9zcmMvcGFnZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbFBhZ2VyJyxwcm9wczp7Y3VycmVudFBhZ2U6TnVtYmVyLHBhZ2VDb3VudDpOdW1iZXIscGFnZXJDb3VudDpOdW1iZXIsZGlzYWJsZWQ6Qm9vbGVhbn0sd2F0Y2g6e3Nob3dQcmV2TW9yZTpmdW5jdGlvbiBzaG93UHJldk1vcmUodmFsKXtpZighdmFsKXRoaXMucXVpY2twcmV2SWNvbkNsYXNzPSdlbC1pY29uLW1vcmUnO30sc2hvd05leHRNb3JlOmZ1bmN0aW9uIHNob3dOZXh0TW9yZSh2YWwpe2lmKCF2YWwpdGhpcy5xdWlja25leHRJY29uQ2xhc3M9J2VsLWljb24tbW9yZSc7fX0sbWV0aG9kczp7b25QYWdlckNsaWNrOmZ1bmN0aW9uIG9uUGFnZXJDbGljayhldmVudCl7dmFyIHRhcmdldD1ldmVudC50YXJnZXQ7aWYodGFyZ2V0LnRhZ05hbWU9PT0nVUwnfHx0aGlzLmRpc2FibGVkKXtyZXR1cm47fXZhciBuZXdQYWdlPU51bWJlcihldmVudC50YXJnZXQudGV4dENvbnRlbnQpO3ZhciBwYWdlQ291bnQ9dGhpcy5wYWdlQ291bnQ7dmFyIGN1cnJlbnRQYWdlPXRoaXMuY3VycmVudFBhZ2U7dmFyIHBhZ2VyQ291bnRPZmZzZXQ9dGhpcy5wYWdlckNvdW50LTI7aWYodGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKCdtb3JlJykhPT0tMSl7aWYodGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKCdxdWlja3ByZXYnKSE9PS0xKXtuZXdQYWdlPWN1cnJlbnRQYWdlLXBhZ2VyQ291bnRPZmZzZXQ7fWVsc2UgaWYodGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKCdxdWlja25leHQnKSE9PS0xKXtuZXdQYWdlPWN1cnJlbnRQYWdlK3BhZ2VyQ291bnRPZmZzZXQ7fX0vKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9pZighaXNOYU4obmV3UGFnZSkpe2lmKG5ld1BhZ2U8MSl7bmV3UGFnZT0xO31pZihuZXdQYWdlPnBhZ2VDb3VudCl7bmV3UGFnZT1wYWdlQ291bnQ7fX1pZihuZXdQYWdlIT09Y3VycmVudFBhZ2Upe3RoaXMuJGVtaXQoJ2NoYW5nZScsbmV3UGFnZSk7fX0sb25Nb3VzZWVudGVyOmZ1bmN0aW9uIG9uTW91c2VlbnRlcihkaXJlY3Rpb24pe2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuO2lmKGRpcmVjdGlvbj09PSdsZWZ0Jyl7dGhpcy5xdWlja3ByZXZJY29uQ2xhc3M9J2VsLWljb24tZC1hcnJvdy1sZWZ0Jzt9ZWxzZXt0aGlzLnF1aWNrbmV4dEljb25DbGFzcz0nZWwtaWNvbi1kLWFycm93LXJpZ2h0Jzt9fX0sY29tcHV0ZWQ6e3BhZ2VyczpmdW5jdGlvbiBwYWdlcnMoKXt2YXIgcGFnZXJDb3VudD10aGlzLnBhZ2VyQ291bnQ7dmFyIGhhbGZQYWdlckNvdW50PShwYWdlckNvdW50LTEpLzI7dmFyIGN1cnJlbnRQYWdlPU51bWJlcih0aGlzLmN1cnJlbnRQYWdlKTt2YXIgcGFnZUNvdW50PU51bWJlcih0aGlzLnBhZ2VDb3VudCk7dmFyIHNob3dQcmV2TW9yZT1mYWxzZTt2YXIgc2hvd05leHRNb3JlPWZhbHNlO2lmKHBhZ2VDb3VudD5wYWdlckNvdW50KXtpZihjdXJyZW50UGFnZT5wYWdlckNvdW50LWhhbGZQYWdlckNvdW50KXtzaG93UHJldk1vcmU9dHJ1ZTt9aWYoY3VycmVudFBhZ2U8cGFnZUNvdW50LWhhbGZQYWdlckNvdW50KXtzaG93TmV4dE1vcmU9dHJ1ZTt9fXZhciBhcnJheT1bXTtpZihzaG93UHJldk1vcmUmJiFzaG93TmV4dE1vcmUpe3ZhciBzdGFydFBhZ2U9cGFnZUNvdW50LShwYWdlckNvdW50LTIpO2Zvcih2YXIgaT1zdGFydFBhZ2U7aTxwYWdlQ291bnQ7aSsrKXthcnJheS5wdXNoKGkpO319ZWxzZSBpZighc2hvd1ByZXZNb3JlJiZzaG93TmV4dE1vcmUpe2Zvcih2YXIgX2k9MjtfaTxwYWdlckNvdW50O19pKyspe2FycmF5LnB1c2goX2kpO319ZWxzZSBpZihzaG93UHJldk1vcmUmJnNob3dOZXh0TW9yZSl7dmFyIG9mZnNldD1NYXRoLmZsb29yKHBhZ2VyQ291bnQvMiktMTtmb3IodmFyIF9pMj1jdXJyZW50UGFnZS1vZmZzZXQ7X2kyPD1jdXJyZW50UGFnZStvZmZzZXQ7X2kyKyspe2FycmF5LnB1c2goX2kyKTt9fWVsc2V7Zm9yKHZhciBfaTM9MjtfaTM8cGFnZUNvdW50O19pMysrKXthcnJheS5wdXNoKF9pMyk7fX10aGlzLnNob3dQcmV2TW9yZT1zaG93UHJldk1vcmU7dGhpcy5zaG93TmV4dE1vcmU9c2hvd05leHRNb3JlO3JldHVybiBhcnJheTt9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57Y3VycmVudDpudWxsLHNob3dQcmV2TW9yZTpmYWxzZSxzaG93TmV4dE1vcmU6ZmFsc2UscXVpY2tuZXh0SWNvbkNsYXNzOidlbC1pY29uLW1vcmUnLHF1aWNrcHJldkljb25DbGFzczonZWwtaWNvbi1tb3JlJ307fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9wYWdpbmF0aW9uL3NyYy9wYWdlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3BhZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXBhZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qcwovKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi8gLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuCi8vIFRoaXMgbW9kdWxlIGlzIGEgcnVudGltZSB1dGlsaXR5IGZvciBjbGVhbmVyIGNvbXBvbmVudCBtb2R1bGUgb3V0cHV0IGFuZCB3aWxsCi8vIGJlIGluY2x1ZGVkIGluIHRoZSBmaW5hbCB3ZWJwYWNrIHVzZXIgYnVuZGxlLgpmdW5jdGlvbiBub3JtYWxpemVDb21wb25lbnQoc2NyaXB0RXhwb3J0cyxyZW5kZXIsc3RhdGljUmVuZGVyRm5zLGZ1bmN0aW9uYWxUZW1wbGF0ZSxpbmplY3RTdHlsZXMsc2NvcGVJZCxtb2R1bGVJZGVudGlmaWVyLC8qIHNlcnZlciBvbmx5ICovc2hhZG93TW9kZS8qIHZ1ZS1jbGkgb25seSAqLyl7Ly8gVnVlLmV4dGVuZCBjb25zdHJ1Y3RvciBleHBvcnQgaW50ZXJvcAp2YXIgb3B0aW9ucz10eXBlb2Ygc2NyaXB0RXhwb3J0cz09PSdmdW5jdGlvbic/c2NyaXB0RXhwb3J0cy5vcHRpb25zOnNjcmlwdEV4cG9ydHM7Ly8gcmVuZGVyIGZ1bmN0aW9ucwppZihyZW5kZXIpe29wdGlvbnMucmVuZGVyPXJlbmRlcjtvcHRpb25zLnN0YXRpY1JlbmRlckZucz1zdGF0aWNSZW5kZXJGbnM7b3B0aW9ucy5fY29tcGlsZWQ9dHJ1ZTt9Ly8gZnVuY3Rpb25hbCB0ZW1wbGF0ZQppZihmdW5jdGlvbmFsVGVtcGxhdGUpe29wdGlvbnMuZnVuY3Rpb25hbD10cnVlO30vLyBzY29wZWRJZAppZihzY29wZUlkKXtvcHRpb25zLl9zY29wZUlkPSdkYXRhLXYtJytzY29wZUlkO312YXIgaG9vaztpZihtb2R1bGVJZGVudGlmaWVyKXsvLyBzZXJ2ZXIgYnVpbGQKaG9vaz1mdW5jdGlvbiBob29rKGNvbnRleHQpey8vIDIuMyBpbmplY3Rpb24KY29udGV4dD1jb250ZXh0fHwvLyBjYWNoZWQgY2FsbAp0aGlzLiR2bm9kZSYmdGhpcy4kdm5vZGUuc3NyQ29udGV4dHx8Ly8gc3RhdGVmdWwKdGhpcy5wYXJlbnQmJnRoaXMucGFyZW50LiR2bm9kZSYmdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQ7Ly8gZnVuY3Rpb25hbAovLyAyLjIgd2l0aCBydW5Jbk5ld0NvbnRleHQ6IHRydWUKaWYoIWNvbnRleHQmJnR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fIT09J3VuZGVmaW5lZCcpe2NvbnRleHQ9X19WVUVfU1NSX0NPTlRFWFRfXzt9Ly8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXMKaWYoaW5qZWN0U3R5bGVzKXtpbmplY3RTdHlsZXMuY2FsbCh0aGlzLGNvbnRleHQpO30vLyByZWdpc3RlciBjb21wb25lbnQgbW9kdWxlIGlkZW50aWZpZXIgZm9yIGFzeW5jIGNodW5rIGluZmVycmVuY2UKaWYoY29udGV4dCYmY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpe2NvbnRleHQuX3JlZ2lzdGVyZWRDb21wb25lbnRzLmFkZChtb2R1bGVJZGVudGlmaWVyKTt9fTsvLyB1c2VkIGJ5IHNzciBpbiBjYXNlIGNvbXBvbmVudCBpcyBjYWNoZWQgYW5kIGJlZm9yZUNyZWF0ZQovLyBuZXZlciBnZXRzIGNhbGxlZApvcHRpb25zLl9zc3JSZWdpc3Rlcj1ob29rO31lbHNlIGlmKGluamVjdFN0eWxlcyl7aG9vaz1zaGFkb3dNb2RlP2Z1bmN0aW9uKCl7aW5qZWN0U3R5bGVzLmNhbGwodGhpcyx0aGlzLiRyb290LiRvcHRpb25zLnNoYWRvd1Jvb3QpO306aW5qZWN0U3R5bGVzO31pZihob29rKXtpZihvcHRpb25zLmZ1bmN0aW9uYWwpey8vIGZvciB0ZW1wbGF0ZS1vbmx5IGhvdC1yZWxvYWQgYmVjYXVzZSBpbiB0aGF0IGNhc2UgdGhlIHJlbmRlciBmbiBkb2Vzbid0Ci8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXIKb3B0aW9ucy5faW5qZWN0U3R5bGVzPWhvb2s7Ly8gcmVnaXN0ZXIgZm9yIGZ1bmN0aW9hbCBjb21wb25lbnQgaW4gdnVlIGZpbGUKdmFyIG9yaWdpbmFsUmVuZGVyPW9wdGlvbnMucmVuZGVyO29wdGlvbnMucmVuZGVyPWZ1bmN0aW9uIHJlbmRlcldpdGhTdHlsZUluamVjdGlvbihoLGNvbnRleHQpe2hvb2suY2FsbChjb250ZXh0KTtyZXR1cm4gb3JpZ2luYWxSZW5kZXIoaCxjb250ZXh0KTt9O31lbHNley8vIGluamVjdCBjb21wb25lbnQgcmVnaXN0cmF0aW9uIGFzIGJlZm9yZUNyZWF0ZSBob29rCnZhciBleGlzdGluZz1vcHRpb25zLmJlZm9yZUNyZWF0ZTtvcHRpb25zLmJlZm9yZUNyZWF0ZT1leGlzdGluZz9bXS5jb25jYXQoZXhpc3RpbmcsaG9vayk6W2hvb2tdO319cmV0dXJue2V4cG9ydHM6c2NyaXB0RXhwb3J0cyxvcHRpb25zOm9wdGlvbnN9O30vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BhZ2luYXRpb24vc3JjL3BhZ2VyLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGNvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3BhZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLHBhZ2VydnVlX3R5cGVfdGVtcGxhdGVfaWRfNzI3NGYyNjdfcmVuZGVyLHN0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgYXBpO31jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3BhZ2luYXRpb24vc3JjL3BhZ2VyLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWdlcj1jb21wb25lbnQuZXhwb3J0czsvLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi9zZWxlY3QiCnZhciBzZWxlY3RfPV9fd2VicGFja19yZXF1aXJlX18oMzYpO3ZhciBzZWxlY3RfZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHNlbGVjdF8pOy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL29wdGlvbiIKdmFyIG9wdGlvbl89X193ZWJwYWNrX3JlcXVpcmVfXygzNyk7dmFyIG9wdGlvbl9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4ob3B0aW9uXyk7Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvaW5wdXQiCnZhciBpbnB1dF89X193ZWJwYWNrX3JlcXVpcmVfXyg4KTt2YXIgaW5wdXRfZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGlucHV0Xyk7Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvbWl4aW5zL2xvY2FsZSIKdmFyIGxvY2FsZV89X193ZWJwYWNrX3JlcXVpcmVfXyg0KTt2YXIgbG9jYWxlX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihsb2NhbGVfKTsvLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi91dGlscy91dGlsIgp2YXIgdXRpbF89X193ZWJwYWNrX3JlcXVpcmVfXygyKTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BhZ2luYXRpb24vc3JjL3BhZ2luYXRpb24uanMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWdpbmF0aW9uPXtuYW1lOidFbFBhZ2luYXRpb24nLHByb3BzOntwYWdlU2l6ZTp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxMH0sc21hbGw6Qm9vbGVhbix0b3RhbDpOdW1iZXIscGFnZUNvdW50Ok51bWJlcixwYWdlckNvdW50Ont0eXBlOk51bWJlcix2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbHVlKXtyZXR1cm4odmFsdWV8MCk9PT12YWx1ZSYmdmFsdWU+NCYmdmFsdWU8MjImJnZhbHVlJTI9PT0xO30sZGVmYXVsdDo3fSxjdXJyZW50UGFnZTp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxfSxsYXlvdXQ6e2RlZmF1bHQ6J3ByZXYsIHBhZ2VyLCBuZXh0LCBqdW1wZXIsIC0+LCB0b3RhbCd9LHBhZ2VTaXplczp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuWzEwLDIwLDMwLDQwLDUwLDEwMF07fX0scG9wcGVyQ2xhc3M6U3RyaW5nLHByZXZUZXh0OlN0cmluZyxuZXh0VGV4dDpTdHJpbmcsYmFja2dyb3VuZDpCb29sZWFuLGRpc2FibGVkOkJvb2xlYW4saGlkZU9uU2luZ2xlUGFnZTpCb29sZWFufSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aW50ZXJuYWxDdXJyZW50UGFnZToxLGludGVybmFsUGFnZVNpemU6MCxsYXN0RW1pdHRlZFBhZ2U6LTEsdXNlckNoYW5nZVBhZ2VTaXplOmZhbHNlfTt9LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGxheW91dD10aGlzLmxheW91dDtpZighbGF5b3V0KXJldHVybiBudWxsO2lmKHRoaXMuaGlkZU9uU2luZ2xlUGFnZSYmKCF0aGlzLmludGVybmFsUGFnZUNvdW50fHx0aGlzLmludGVybmFsUGFnZUNvdW50PT09MSkpcmV0dXJuIG51bGw7dmFyIHRlbXBsYXRlPWgoJ2RpdicseydjbGFzcyc6WydlbC1wYWdpbmF0aW9uJyx7J2lzLWJhY2tncm91bmQnOnRoaXMuYmFja2dyb3VuZCwnZWwtcGFnaW5hdGlvbi0tc21hbGwnOnRoaXMuc21hbGx9XX0pO3ZhciBURU1QTEFURV9NQVA9e3ByZXY6aCgncHJldicpLGp1bXBlcjpoKCdqdW1wZXInKSxwYWdlcjpoKCdwYWdlcicse2F0dHJzOntjdXJyZW50UGFnZTp0aGlzLmludGVybmFsQ3VycmVudFBhZ2UscGFnZUNvdW50OnRoaXMuaW50ZXJuYWxQYWdlQ291bnQscGFnZXJDb3VudDp0aGlzLnBhZ2VyQ291bnQsZGlzYWJsZWQ6dGhpcy5kaXNhYmxlZH0sb246eydjaGFuZ2UnOnRoaXMuaGFuZGxlQ3VycmVudENoYW5nZX19KSxuZXh0OmgoJ25leHQnKSxzaXplczpoKCdzaXplcycse2F0dHJzOntwYWdlU2l6ZXM6dGhpcy5wYWdlU2l6ZXN9fSksc2xvdDpoKCdzbG90JyxbdGhpcy4kc2xvdHMuZGVmYXVsdD90aGlzLiRzbG90cy5kZWZhdWx0OicnXSksdG90YWw6aCgndG90YWwnKX07dmFyIGNvbXBvbmVudHM9bGF5b3V0LnNwbGl0KCcsJykubWFwKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBpdGVtLnRyaW0oKTt9KTt2YXIgcmlnaHRXcmFwcGVyPWgoJ2RpdicseydjbGFzcyc6J2VsLXBhZ2luYXRpb25fX3JpZ2h0d3JhcHBlcid9KTt2YXIgaGF2ZVJpZ2h0V3JhcHBlcj1mYWxzZTt0ZW1wbGF0ZS5jaGlsZHJlbj10ZW1wbGF0ZS5jaGlsZHJlbnx8W107cmlnaHRXcmFwcGVyLmNoaWxkcmVuPXJpZ2h0V3JhcHBlci5jaGlsZHJlbnx8W107Y29tcG9uZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGNvbXBvKXtpZihjb21wbz09PSctPicpe2hhdmVSaWdodFdyYXBwZXI9dHJ1ZTtyZXR1cm47fWlmKCFoYXZlUmlnaHRXcmFwcGVyKXt0ZW1wbGF0ZS5jaGlsZHJlbi5wdXNoKFRFTVBMQVRFX01BUFtjb21wb10pO31lbHNle3JpZ2h0V3JhcHBlci5jaGlsZHJlbi5wdXNoKFRFTVBMQVRFX01BUFtjb21wb10pO319KTtpZihoYXZlUmlnaHRXcmFwcGVyKXt0ZW1wbGF0ZS5jaGlsZHJlbi51bnNoaWZ0KHJpZ2h0V3JhcHBlcik7fXJldHVybiB0ZW1wbGF0ZTt9LGNvbXBvbmVudHM6e1ByZXY6e3JlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2J1dHRvbicse2F0dHJzOnt0eXBlOididXR0b24nLGRpc2FibGVkOnRoaXMuJHBhcmVudC5kaXNhYmxlZHx8dGhpcy4kcGFyZW50LmludGVybmFsQ3VycmVudFBhZ2U8PTF9LCdjbGFzcyc6J2J0bi1wcmV2Jyxvbjp7J2NsaWNrJzp0aGlzLiRwYXJlbnQucHJldn19LFt0aGlzLiRwYXJlbnQucHJldlRleHQ/aCgnc3BhbicsW3RoaXMuJHBhcmVudC5wcmV2VGV4dF0pOmgoJ2knLHsnY2xhc3MnOidlbC1pY29uIGVsLWljb24tYXJyb3ctbGVmdCd9KV0pO319LE5leHQ6e3JlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgoJ2J1dHRvbicse2F0dHJzOnt0eXBlOididXR0b24nLGRpc2FibGVkOnRoaXMuJHBhcmVudC5kaXNhYmxlZHx8dGhpcy4kcGFyZW50LmludGVybmFsQ3VycmVudFBhZ2U9PT10aGlzLiRwYXJlbnQuaW50ZXJuYWxQYWdlQ291bnR8fHRoaXMuJHBhcmVudC5pbnRlcm5hbFBhZ2VDb3VudD09PTB9LCdjbGFzcyc6J2J0bi1uZXh0Jyxvbjp7J2NsaWNrJzp0aGlzLiRwYXJlbnQubmV4dH19LFt0aGlzLiRwYXJlbnQubmV4dFRleHQ/aCgnc3BhbicsW3RoaXMuJHBhcmVudC5uZXh0VGV4dF0pOmgoJ2knLHsnY2xhc3MnOidlbC1pY29uIGVsLWljb24tYXJyb3ctcmlnaHQnfSldKTt9fSxTaXplczp7bWl4aW5zOltsb2NhbGVfZGVmYXVsdC5hXSxwcm9wczp7cGFnZVNpemVzOkFycmF5fSx3YXRjaDp7cGFnZVNpemVzOntpbW1lZGlhdGU6dHJ1ZSxoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsLG9sZFZhbCl7aWYoT2JqZWN0KHV0aWxfWyJ2YWx1ZUVxdWFscyJdKShuZXdWYWwsb2xkVmFsKSlyZXR1cm47aWYoQXJyYXkuaXNBcnJheShuZXdWYWwpKXt0aGlzLiRwYXJlbnQuaW50ZXJuYWxQYWdlU2l6ZT1uZXdWYWwuaW5kZXhPZih0aGlzLiRwYXJlbnQucGFnZVNpemUpPi0xP3RoaXMuJHBhcmVudC5wYWdlU2l6ZTp0aGlzLnBhZ2VTaXplc1swXTt9fX19LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIGgoJ3NwYW4nLHsnY2xhc3MnOidlbC1wYWdpbmF0aW9uX19zaXplcyd9LFtoKCdlbC1zZWxlY3QnLHthdHRyczp7dmFsdWU6dGhpcy4kcGFyZW50LmludGVybmFsUGFnZVNpemUscG9wcGVyQ2xhc3M6dGhpcy4kcGFyZW50LnBvcHBlckNsYXNzfHwnJyxzaXplOidtaW5pJyxkaXNhYmxlZDp0aGlzLiRwYXJlbnQuZGlzYWJsZWR9LG9uOnsnaW5wdXQnOnRoaXMuaGFuZGxlQ2hhbmdlfX0sW3RoaXMucGFnZVNpemVzLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gaCgnZWwtb3B0aW9uJyx7YXR0cnM6e3ZhbHVlOml0ZW0sbGFiZWw6aXRlbStfdGhpcy50KCdlbC5wYWdpbmF0aW9uLnBhZ2VzaXplJyl9fSk7fSldKV0pO30sY29tcG9uZW50czp7RWxTZWxlY3Q6c2VsZWN0X2RlZmF1bHQuYSxFbE9wdGlvbjpvcHRpb25fZGVmYXVsdC5hfSxtZXRob2RzOntoYW5kbGVDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKHZhbCl7aWYodmFsIT09dGhpcy4kcGFyZW50LmludGVybmFsUGFnZVNpemUpe3RoaXMuJHBhcmVudC5pbnRlcm5hbFBhZ2VTaXplPXZhbD1wYXJzZUludCh2YWwsMTApO3RoaXMuJHBhcmVudC51c2VyQ2hhbmdlUGFnZVNpemU9dHJ1ZTt0aGlzLiRwYXJlbnQuJGVtaXQoJ3VwZGF0ZTpwYWdlU2l6ZScsdmFsKTt0aGlzLiRwYXJlbnQuJGVtaXQoJ3NpemUtY2hhbmdlJyx2YWwpO319fX0sSnVtcGVyOnttaXhpbnM6W2xvY2FsZV9kZWZhdWx0LmFdLGNvbXBvbmVudHM6e0VsSW5wdXQ6aW5wdXRfZGVmYXVsdC5hfSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57dXNlcklucHV0Om51bGx9O30sd2F0Y2g6eyckcGFyZW50LmludGVybmFsQ3VycmVudFBhZ2UnOmZ1bmN0aW9uICRwYXJlbnRJbnRlcm5hbEN1cnJlbnRQYWdlKCl7dGhpcy51c2VySW5wdXQ9bnVsbDt9fSxtZXRob2RzOntoYW5kbGVLZXl1cDpmdW5jdGlvbiBoYW5kbGVLZXl1cChfcmVmKXt2YXIga2V5Q29kZT1fcmVmLmtleUNvZGUsdGFyZ2V0PV9yZWYudGFyZ2V0Oy8vIENocm9tZSwgU2FmYXJpLCBGaXJlZm94IHRyaWdnZXJzIGNoYW5nZSBldmVudCBvbiBFbnRlcgovLyBIYWNrIGZvciBJRTogaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudC9pc3N1ZXMvMTE3MTAKLy8gRHJvcCB0aGlzIG1ldGhvZCB3aGVuIHdlIG5vIGxvbmdlciBzdXBwb3J0cyBJRQppZihrZXlDb2RlPT09MTMpe3RoaXMuaGFuZGxlQ2hhbmdlKHRhcmdldC52YWx1ZSk7fX0saGFuZGxlSW5wdXQ6ZnVuY3Rpb24gaGFuZGxlSW5wdXQodmFsdWUpe3RoaXMudXNlcklucHV0PXZhbHVlO30saGFuZGxlQ2hhbmdlOmZ1bmN0aW9uIGhhbmRsZUNoYW5nZSh2YWx1ZSl7dGhpcy4kcGFyZW50LmludGVybmFsQ3VycmVudFBhZ2U9dGhpcy4kcGFyZW50LmdldFZhbGlkQ3VycmVudFBhZ2UodmFsdWUpO3RoaXMuJHBhcmVudC5lbWl0Q2hhbmdlKCk7dGhpcy51c2VySW5wdXQ9bnVsbDt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3JldHVybiBoKCdzcGFuJyx7J2NsYXNzJzonZWwtcGFnaW5hdGlvbl9fanVtcCd9LFt0aGlzLnQoJ2VsLnBhZ2luYXRpb24uZ290bycpLGgoJ2VsLWlucHV0Jyx7J2NsYXNzJzonZWwtcGFnaW5hdGlvbl9fZWRpdG9yIGlzLWluLXBhZ2luYXRpb24nLGF0dHJzOnttaW46MSxtYXg6dGhpcy4kcGFyZW50LmludGVybmFsUGFnZUNvdW50LHZhbHVlOnRoaXMudXNlcklucHV0IT09bnVsbD90aGlzLnVzZXJJbnB1dDp0aGlzLiRwYXJlbnQuaW50ZXJuYWxDdXJyZW50UGFnZSx0eXBlOidudW1iZXInLGRpc2FibGVkOnRoaXMuJHBhcmVudC5kaXNhYmxlZH0sbmF0aXZlT246eydrZXl1cCc6dGhpcy5oYW5kbGVLZXl1cH0sb246eydpbnB1dCc6dGhpcy5oYW5kbGVJbnB1dCwnY2hhbmdlJzp0aGlzLmhhbmRsZUNoYW5nZX19KSx0aGlzLnQoJ2VsLnBhZ2luYXRpb24ucGFnZUNsYXNzaWZpZXInKV0pO319LFRvdGFsOnttaXhpbnM6W2xvY2FsZV9kZWZhdWx0LmFdLHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIHR5cGVvZiB0aGlzLiRwYXJlbnQudG90YWw9PT0nbnVtYmVyJz9oKCdzcGFuJyx7J2NsYXNzJzonZWwtcGFnaW5hdGlvbl9fdG90YWwnfSxbdGhpcy50KCdlbC5wYWdpbmF0aW9uLnRvdGFsJyx7dG90YWw6dGhpcy4kcGFyZW50LnRvdGFsfSldKTonJzt9fSxQYWdlcjpwYWdlcn0sbWV0aG9kczp7aGFuZGxlQ3VycmVudENoYW5nZTpmdW5jdGlvbiBoYW5kbGVDdXJyZW50Q2hhbmdlKHZhbCl7dGhpcy5pbnRlcm5hbEN1cnJlbnRQYWdlPXRoaXMuZ2V0VmFsaWRDdXJyZW50UGFnZSh2YWwpO3RoaXMudXNlckNoYW5nZVBhZ2VTaXplPXRydWU7dGhpcy5lbWl0Q2hhbmdlKCk7fSxwcmV2OmZ1bmN0aW9uIHByZXYoKXtpZih0aGlzLmRpc2FibGVkKXJldHVybjt2YXIgbmV3VmFsPXRoaXMuaW50ZXJuYWxDdXJyZW50UGFnZS0xO3RoaXMuaW50ZXJuYWxDdXJyZW50UGFnZT10aGlzLmdldFZhbGlkQ3VycmVudFBhZ2UobmV3VmFsKTt0aGlzLiRlbWl0KCdwcmV2LWNsaWNrJyx0aGlzLmludGVybmFsQ3VycmVudFBhZ2UpO3RoaXMuZW1pdENoYW5nZSgpO30sbmV4dDpmdW5jdGlvbiBuZXh0KCl7aWYodGhpcy5kaXNhYmxlZClyZXR1cm47dmFyIG5ld1ZhbD10aGlzLmludGVybmFsQ3VycmVudFBhZ2UrMTt0aGlzLmludGVybmFsQ3VycmVudFBhZ2U9dGhpcy5nZXRWYWxpZEN1cnJlbnRQYWdlKG5ld1ZhbCk7dGhpcy4kZW1pdCgnbmV4dC1jbGljaycsdGhpcy5pbnRlcm5hbEN1cnJlbnRQYWdlKTt0aGlzLmVtaXRDaGFuZ2UoKTt9LGdldFZhbGlkQ3VycmVudFBhZ2U6ZnVuY3Rpb24gZ2V0VmFsaWRDdXJyZW50UGFnZSh2YWx1ZSl7dmFsdWU9cGFyc2VJbnQodmFsdWUsMTApO3ZhciBoYXZlUGFnZUNvdW50PXR5cGVvZiB0aGlzLmludGVybmFsUGFnZUNvdW50PT09J251bWJlcic7dmFyIHJlc2V0VmFsdWU9dm9pZCAwO2lmKCFoYXZlUGFnZUNvdW50KXtpZihpc05hTih2YWx1ZSl8fHZhbHVlPDEpcmVzZXRWYWx1ZT0xO31lbHNle2lmKHZhbHVlPDEpe3Jlc2V0VmFsdWU9MTt9ZWxzZSBpZih2YWx1ZT50aGlzLmludGVybmFsUGFnZUNvdW50KXtyZXNldFZhbHVlPXRoaXMuaW50ZXJuYWxQYWdlQ291bnQ7fX1pZihyZXNldFZhbHVlPT09dW5kZWZpbmVkJiZpc05hTih2YWx1ZSkpe3Jlc2V0VmFsdWU9MTt9ZWxzZSBpZihyZXNldFZhbHVlPT09MCl7cmVzZXRWYWx1ZT0xO31yZXR1cm4gcmVzZXRWYWx1ZT09PXVuZGVmaW5lZD92YWx1ZTpyZXNldFZhbHVlO30sZW1pdENoYW5nZTpmdW5jdGlvbiBlbWl0Q2hhbmdlKCl7dmFyIF90aGlzMj10aGlzO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7aWYoX3RoaXMyLmludGVybmFsQ3VycmVudFBhZ2UhPT1fdGhpczIubGFzdEVtaXR0ZWRQYWdlfHxfdGhpczIudXNlckNoYW5nZVBhZ2VTaXplKXtfdGhpczIuJGVtaXQoJ2N1cnJlbnQtY2hhbmdlJyxfdGhpczIuaW50ZXJuYWxDdXJyZW50UGFnZSk7X3RoaXMyLmxhc3RFbWl0dGVkUGFnZT1fdGhpczIuaW50ZXJuYWxDdXJyZW50UGFnZTtfdGhpczIudXNlckNoYW5nZVBhZ2VTaXplPWZhbHNlO319KTt9fSxjb21wdXRlZDp7aW50ZXJuYWxQYWdlQ291bnQ6ZnVuY3Rpb24gaW50ZXJuYWxQYWdlQ291bnQoKXtpZih0eXBlb2YgdGhpcy50b3RhbD09PSdudW1iZXInKXtyZXR1cm4gTWF0aC5tYXgoMSxNYXRoLmNlaWwodGhpcy50b3RhbC90aGlzLmludGVybmFsUGFnZVNpemUpKTt9ZWxzZSBpZih0eXBlb2YgdGhpcy5wYWdlQ291bnQ9PT0nbnVtYmVyJyl7cmV0dXJuIE1hdGgubWF4KDEsdGhpcy5wYWdlQ291bnQpO31yZXR1cm4gbnVsbDt9fSx3YXRjaDp7Y3VycmVudFBhZ2U6e2ltbWVkaWF0ZTp0cnVlLGhhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcih2YWwpe3RoaXMuaW50ZXJuYWxDdXJyZW50UGFnZT10aGlzLmdldFZhbGlkQ3VycmVudFBhZ2UodmFsKTt9fSxwYWdlU2l6ZTp7aW1tZWRpYXRlOnRydWUsaGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKHZhbCl7dGhpcy5pbnRlcm5hbFBhZ2VTaXplPWlzTmFOKHZhbCk/MTA6dmFsO319LGludGVybmFsQ3VycmVudFBhZ2U6e2ltbWVkaWF0ZTp0cnVlLGhhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcihuZXdWYWwpe3RoaXMuJGVtaXQoJ3VwZGF0ZTpjdXJyZW50UGFnZScsbmV3VmFsKTt0aGlzLmxhc3RFbWl0dGVkUGFnZT0tMTt9fSxpbnRlcm5hbFBhZ2VDb3VudDpmdW5jdGlvbiBpbnRlcm5hbFBhZ2VDb3VudChuZXdWYWwpey8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL3ZhciBvbGRQYWdlPXRoaXMuaW50ZXJuYWxDdXJyZW50UGFnZTtpZihuZXdWYWw+MCYmb2xkUGFnZT09PTApe3RoaXMuaW50ZXJuYWxDdXJyZW50UGFnZT0xO31lbHNlIGlmKG9sZFBhZ2U+bmV3VmFsKXt0aGlzLmludGVybmFsQ3VycmVudFBhZ2U9bmV3VmFsPT09MD8xOm5ld1ZhbDt0aGlzLnVzZXJDaGFuZ2VQYWdlU2l6ZSYmdGhpcy5lbWl0Q2hhbmdlKCk7fXRoaXMudXNlckNoYW5nZVBhZ2VTaXplPWZhbHNlO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BhZ2luYXRpb24vaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9wYWdpbmF0aW9uLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHBhZ2luYXRpb24ubmFtZSxwYWdpbmF0aW9uKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfcGFnaW5hdGlvbj1wYWdpbmF0aW9uOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGlhbG9nL3NyYy9jb21wb25lbnQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTYwMTQwZTYyJgp2YXIgY29tcG9uZW50dnVlX3R5cGVfdGVtcGxhdGVfaWRfNjAxNDBlNjJfcmVuZGVyPWZ1bmN0aW9uIGNvbXBvbmVudHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzYwMTQwZTYyX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidHJhbnNpdGlvbiIse2F0dHJzOntuYW1lOiJkaWFsb2ctZmFkZSJ9LG9uOnsiYWZ0ZXItZW50ZXIiOl92bS5hZnRlckVudGVyLCJhZnRlci1sZWF2ZSI6X3ZtLmFmdGVyTGVhdmV9fSxbX2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS52aXNpYmxlLGV4cHJlc3Npb246InZpc2libGUifV0sc3RhdGljQ2xhc3M6ImVsLWRpYWxvZ19fd3JhcHBlciIsb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldCE9PSRldmVudC5jdXJyZW50VGFyZ2V0KXtyZXR1cm4gbnVsbDt9cmV0dXJuIF92bS5oYW5kbGVXcmFwcGVyQ2xpY2soJGV2ZW50KTt9fX0sW19jKCJkaXYiLHtrZXk6X3ZtLmtleSxyZWY6ImRpYWxvZyIsY2xhc3M6WyJlbC1kaWFsb2ciLHsiaXMtZnVsbHNjcmVlbiI6X3ZtLmZ1bGxzY3JlZW4sImVsLWRpYWxvZy0tY2VudGVyIjpfdm0uY2VudGVyfSxfdm0uY3VzdG9tQ2xhc3NdLHN0eWxlOl92bS5zdHlsZSxhdHRyczp7cm9sZToiZGlhbG9nIiwiYXJpYS1tb2RhbCI6InRydWUiLCJhcmlhLWxhYmVsIjpfdm0udGl0bGV8fCJkaWFsb2cifX0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtZGlhbG9nX19oZWFkZXIifSxbX3ZtLl90KCJ0aXRsZSIsW19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWRpYWxvZ19fdGl0bGUifSxbX3ZtLl92KF92bS5fcyhfdm0udGl0bGUpKV0pXSksX3ZtLnNob3dDbG9zZT9fYygiYnV0dG9uIix7c3RhdGljQ2xhc3M6ImVsLWRpYWxvZ19faGVhZGVyYnRuIixhdHRyczp7dHlwZToiYnV0dG9uIiwiYXJpYS1sYWJlbCI6IkNsb3NlIn0sb246e2NsaWNrOl92bS5oYW5kbGVDbG9zZX19LFtfYygiaSIse3N0YXRpY0NsYXNzOiJlbC1kaWFsb2dfX2Nsb3NlIGVsLWljb24gZWwtaWNvbi1jbG9zZSJ9KV0pOl92bS5fZSgpXSwyKSxfdm0ucmVuZGVyZWQ/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1kaWFsb2dfX2JvZHkifSxbX3ZtLl90KCJkZWZhdWx0IildLDIpOl92bS5fZSgpLF92bS4kc2xvdHMuZm9vdGVyP19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtZGlhbG9nX19mb290ZXIifSxbX3ZtLl90KCJmb290ZXIiKV0sMik6X3ZtLl9lKCldKV0pXSk7fTt2YXIgY29tcG9uZW50dnVlX3R5cGVfdGVtcGxhdGVfaWRfNjAxNDBlNjJfc3RhdGljUmVuZGVyRm5zPVtdO2NvbXBvbmVudHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzYwMTQwZTYyX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kaWFsb2cvc3JjL2NvbXBvbmVudC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjAxNDBlNjImCi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3V0aWxzL3BvcHVwIgp2YXIgcG9wdXBfPV9fd2VicGFja19yZXF1aXJlX18oMTEpO3ZhciBwb3B1cF9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4ocG9wdXBfKTsvLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi9taXhpbnMvbWlncmF0aW5nIgp2YXIgbWlncmF0aW5nXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDkpO3ZhciBtaWdyYXRpbmdfZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKG1pZ3JhdGluZ18pOy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL21peGlucy9lbWl0dGVyIgp2YXIgZW1pdHRlcl89X193ZWJwYWNrX3JlcXVpcmVfXygzKTt2YXIgZW1pdHRlcl9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oZW1pdHRlcl8pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RpYWxvZy9zcmMvY29tcG9uZW50LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjb21wb25lbnR2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsRGlhbG9nJyxtaXhpbnM6W3BvcHVwX2RlZmF1bHQuYSxlbWl0dGVyX2RlZmF1bHQuYSxtaWdyYXRpbmdfZGVmYXVsdC5hXSxwcm9wczp7dGl0bGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Jyd9LG1vZGFsOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxtb2RhbEFwcGVuZFRvQm9keTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sYXBwZW5kVG9Cb2R5Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0sbG9ja1Njcm9sbDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sY2xvc2VPbkNsaWNrTW9kYWw6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGNsb3NlT25QcmVzc0VzY2FwZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sc2hvd0Nsb3NlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSx3aWR0aDpTdHJpbmcsZnVsbHNjcmVlbjpCb29sZWFuLGN1c3RvbUNsYXNzOnt0eXBlOlN0cmluZyxkZWZhdWx0OicnfSx0b3A6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JzE1dmgnfSxiZWZvcmVDbG9zZTpGdW5jdGlvbixjZW50ZXI6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxkZXN0cm95T25DbG9zZTpCb29sZWFufSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57Y2xvc2VkOmZhbHNlLGtleTowfTt9LHdhdGNoOnt2aXNpYmxlOmZ1bmN0aW9uIHZpc2libGUodmFsKXt2YXIgX3RoaXM9dGhpcztpZih2YWwpe3RoaXMuY2xvc2VkPWZhbHNlO3RoaXMuJGVtaXQoJ29wZW4nKTt0aGlzLiRlbC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLHRoaXMudXBkYXRlUG9wcGVyKTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzLiRyZWZzLmRpYWxvZy5zY3JvbGxUb3A9MDt9KTtpZih0aGlzLmFwcGVuZFRvQm9keSl7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLiRlbCk7fX1lbHNle3RoaXMuJGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsdGhpcy51cGRhdGVQb3BwZXIpO2lmKCF0aGlzLmNsb3NlZCl0aGlzLiRlbWl0KCdjbG9zZScpO2lmKHRoaXMuZGVzdHJveU9uQ2xvc2Upe3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7X3RoaXMua2V5Kys7fSk7fX19fSxjb21wdXRlZDp7c3R5bGU6ZnVuY3Rpb24gc3R5bGUoKXt2YXIgc3R5bGU9e307aWYoIXRoaXMuZnVsbHNjcmVlbil7c3R5bGUubWFyZ2luVG9wPXRoaXMudG9wO2lmKHRoaXMud2lkdGgpe3N0eWxlLndpZHRoPXRoaXMud2lkdGg7fX1yZXR1cm4gc3R5bGU7fX0sbWV0aG9kczp7Z2V0TWlncmF0aW5nQ29uZmlnOmZ1bmN0aW9uIGdldE1pZ3JhdGluZ0NvbmZpZygpe3JldHVybntwcm9wczp7J3NpemUnOidzaXplIGlzIHJlbW92ZWQuJ319O30saGFuZGxlV3JhcHBlckNsaWNrOmZ1bmN0aW9uIGhhbmRsZVdyYXBwZXJDbGljaygpe2lmKCF0aGlzLmNsb3NlT25DbGlja01vZGFsKXJldHVybjt0aGlzLmhhbmRsZUNsb3NlKCk7fSxoYW5kbGVDbG9zZTpmdW5jdGlvbiBoYW5kbGVDbG9zZSgpe2lmKHR5cGVvZiB0aGlzLmJlZm9yZUNsb3NlPT09J2Z1bmN0aW9uJyl7dGhpcy5iZWZvcmVDbG9zZSh0aGlzLmhpZGUpO31lbHNle3RoaXMuaGlkZSgpO319LGhpZGU6ZnVuY3Rpb24gaGlkZShjYW5jZWwpe2lmKGNhbmNlbCE9PWZhbHNlKXt0aGlzLiRlbWl0KCd1cGRhdGU6dmlzaWJsZScsZmFsc2UpO3RoaXMuJGVtaXQoJ2Nsb3NlJyk7dGhpcy5jbG9zZWQ9dHJ1ZTt9fSx1cGRhdGVQb3BwZXI6ZnVuY3Rpb24gdXBkYXRlUG9wcGVyKCl7dGhpcy5icm9hZGNhc3QoJ0VsU2VsZWN0RHJvcGRvd24nLCd1cGRhdGVQb3BwZXInKTt0aGlzLmJyb2FkY2FzdCgnRWxEcm9wZG93bk1lbnUnLCd1cGRhdGVQb3BwZXInKTt9LGFmdGVyRW50ZXI6ZnVuY3Rpb24gYWZ0ZXJFbnRlcigpe3RoaXMuJGVtaXQoJ29wZW5lZCcpO30sYWZ0ZXJMZWF2ZTpmdW5jdGlvbiBhZnRlckxlYXZlKCl7dGhpcy4kZW1pdCgnY2xvc2VkJyk7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7aWYodGhpcy52aXNpYmxlKXt0aGlzLnJlbmRlcmVkPXRydWU7dGhpcy5vcGVuKCk7aWYodGhpcy5hcHBlbmRUb0JvZHkpe2RvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy4kZWwpO319fSxkZXN0cm95ZWQ6ZnVuY3Rpb24gZGVzdHJveWVkKCl7Ly8gaWYgYXBwZW5kVG9Cb2R5IGlzIHRydWUsIHJlbW92ZSBET00gbm9kZSBhZnRlciBkZXN0cm95CmlmKHRoaXMuYXBwZW5kVG9Cb2R5JiZ0aGlzLiRlbCYmdGhpcy4kZWwucGFyZW50Tm9kZSl7dGhpcy4kZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLiRlbCk7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGlhbG9nL3NyYy9jb21wb25lbnQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19jb21wb25lbnR2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189Y29tcG9uZW50dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGlhbG9nL3NyYy9jb21wb25lbnQudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgY29tcG9uZW50X2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2NvbXBvbmVudHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxjb21wb25lbnR2dWVfdHlwZV90ZW1wbGF0ZV9pZF82MDE0MGU2Ml9yZW5kZXIsY29tcG9uZW50dnVlX3R5cGVfdGVtcGxhdGVfaWRfNjAxNDBlNjJfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBjb21wb25lbnRfYXBpO31jb21wb25lbnRfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9kaWFsb2cvc3JjL2NvbXBvbmVudC52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2NvbXBvbmVudD1jb21wb25lbnRfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kaWFsb2cvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9zcmNfY29tcG9uZW50Lmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHNyY19jb21wb25lbnQubmFtZSxzcmNfY29tcG9uZW50KTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZGlhbG9nPXNyY19jb21wb25lbnQ7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9hdXRvY29tcGxldGUvc3JjL2F1dG9jb21wbGV0ZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MTUyZjJlZTYmCnZhciBhdXRvY29tcGxldGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8xNTJmMmVlNl9yZW5kZXI9ZnVuY3Rpb24gYXV0b2NvbXBsZXRldnVlX3R5cGVfdGVtcGxhdGVfaWRfMTUyZjJlZTZfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToiY2xpY2tvdXRzaWRlIixyYXdOYW1lOiJ2LWNsaWNrb3V0c2lkZSIsdmFsdWU6X3ZtLmNsb3NlLGV4cHJlc3Npb246ImNsb3NlIn1dLHN0YXRpY0NsYXNzOiJlbC1hdXRvY29tcGxldGUiLGF0dHJzOnsiYXJpYS1oYXNwb3B1cCI6Imxpc3Rib3giLHJvbGU6ImNvbWJvYm94IiwiYXJpYS1leHBhbmRlZCI6X3ZtLnN1Z2dlc3Rpb25WaXNpYmxlLCJhcmlhLW93bnMiOl92bS5pZH19LFtfYygiZWwtaW5wdXQiLF92bS5fYih7cmVmOiJpbnB1dCIsb246e2lucHV0Ol92bS5oYW5kbGVJbnB1dCxjaGFuZ2U6X3ZtLmhhbmRsZUNoYW5nZSxmb2N1czpfdm0uaGFuZGxlRm9jdXMsYmx1cjpfdm0uaGFuZGxlQmx1cixjbGVhcjpfdm0uaGFuZGxlQ2xlYXJ9LG5hdGl2ZU9uOntrZXlkb3duOltmdW5jdGlvbigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsInVwIiwzOCwkZXZlbnQua2V5LFsiVXAiLCJBcnJvd1VwIl0pKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7X3ZtLmhpZ2hsaWdodChfdm0uaGlnaGxpZ2h0ZWRJbmRleC0xKTt9LGZ1bmN0aW9uKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwiZG93biIsNDAsJGV2ZW50LmtleSxbIkRvd24iLCJBcnJvd0Rvd24iXSkpe3JldHVybiBudWxsO30kZXZlbnQucHJldmVudERlZmF1bHQoKTtfdm0uaGlnaGxpZ2h0KF92bS5oaWdobGlnaHRlZEluZGV4KzEpO30sZnVuY3Rpb24oJGV2ZW50KXtpZighKCJidXR0b24iaW4gJGV2ZW50KSYmX3ZtLl9rKCRldmVudC5rZXlDb2RlLCJlbnRlciIsMTMsJGV2ZW50LmtleSwiRW50ZXIiKSl7cmV0dXJuIG51bGw7fXJldHVybiBfdm0uaGFuZGxlS2V5RW50ZXIoJGV2ZW50KTt9LGZ1bmN0aW9uKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwidGFiIiw5LCRldmVudC5rZXksIlRhYiIpKXtyZXR1cm4gbnVsbDt9cmV0dXJuIF92bS5jbG9zZSgkZXZlbnQpO31dfX0sImVsLWlucHV0IixbX3ZtLiRwcm9wcyxfdm0uJGF0dHJzXSxmYWxzZSksW192bS4kc2xvdHMucHJlcGVuZD9fYygidGVtcGxhdGUiLHtzbG90OiJwcmVwZW5kIn0sW192bS5fdCgicHJlcGVuZCIpXSwyKTpfdm0uX2UoKSxfdm0uJHNsb3RzLmFwcGVuZD9fYygidGVtcGxhdGUiLHtzbG90OiJhcHBlbmQifSxbX3ZtLl90KCJhcHBlbmQiKV0sMik6X3ZtLl9lKCksX3ZtLiRzbG90cy5wcmVmaXg/X2MoInRlbXBsYXRlIix7c2xvdDoicHJlZml4In0sW192bS5fdCgicHJlZml4IildLDIpOl92bS5fZSgpLF92bS4kc2xvdHMuc3VmZml4P19jKCJ0ZW1wbGF0ZSIse3Nsb3Q6InN1ZmZpeCJ9LFtfdm0uX3QoInN1ZmZpeCIpXSwyKTpfdm0uX2UoKV0sMiksX2MoImVsLWF1dG9jb21wbGV0ZS1zdWdnZXN0aW9ucyIse3JlZjoic3VnZ2VzdGlvbnMiLGNsYXNzOltfdm0ucG9wcGVyQ2xhc3M/X3ZtLnBvcHBlckNsYXNzOiIiXSxhdHRyczp7InZpc2libGUtYXJyb3ciOiIiLCJwb3BwZXItb3B0aW9ucyI6X3ZtLnBvcHBlck9wdGlvbnMsImFwcGVuZC10by1ib2R5Ijpfdm0ucG9wcGVyQXBwZW5kVG9Cb2R5LHBsYWNlbWVudDpfdm0ucGxhY2VtZW50LGlkOl92bS5pZH19LF92bS5fbChfdm0uc3VnZ2VzdGlvbnMsZnVuY3Rpb24oaXRlbSxpbmRleCl7cmV0dXJuIF9jKCJsaSIse2tleTppbmRleCxjbGFzczp7aGlnaGxpZ2h0ZWQ6X3ZtLmhpZ2hsaWdodGVkSW5kZXg9PT1pbmRleH0sYXR0cnM6e2lkOl92bS5pZCsiLWl0ZW0tIitpbmRleCxyb2xlOiJvcHRpb24iLCJhcmlhLXNlbGVjdGVkIjpfdm0uaGlnaGxpZ2h0ZWRJbmRleD09PWluZGV4fSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtfdm0uc2VsZWN0KGl0ZW0pO319fSxbX3ZtLl90KCJkZWZhdWx0IixbX3ZtLl92KCJcbiAgICAgICAgIitfdm0uX3MoaXRlbVtfdm0udmFsdWVLZXldKSsiXG4gICAgICAiKV0se2l0ZW06aXRlbX0pXSwyKTt9KSwwKV0sMSk7fTt2YXIgYXV0b2NvbXBsZXRldnVlX3R5cGVfdGVtcGxhdGVfaWRfMTUyZjJlZTZfc3RhdGljUmVuZGVyRm5zPVtdO2F1dG9jb21wbGV0ZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzE1MmYyZWU2X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9hdXRvY29tcGxldGUvc3JjL2F1dG9jb21wbGV0ZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MTUyZjJlZTYmCi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgInRocm90dGxlLWRlYm91bmNlL2RlYm91bmNlIgp2YXIgZGVib3VuY2VfPV9fd2VicGFja19yZXF1aXJlX18oMTQpO3ZhciBkZWJvdW5jZV9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oZGVib3VuY2VfKTsvLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi91dGlscy9jbGlja291dHNpZGUiCnZhciBjbGlja291dHNpZGVfPV9fd2VicGFja19yZXF1aXJlX18oMTApO3ZhciBjbGlja291dHNpZGVfZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGNsaWNrb3V0c2lkZV8pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvYXV0b2NvbXBsZXRlL3NyYy9hdXRvY29tcGxldGUtc3VnZ2VzdGlvbnMudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWNkMTBkY2YwJgp2YXIgYXV0b2NvbXBsZXRlX3N1Z2dlc3Rpb25zdnVlX3R5cGVfdGVtcGxhdGVfaWRfY2QxMGRjZjBfcmVuZGVyPWZ1bmN0aW9uIGF1dG9jb21wbGV0ZV9zdWdnZXN0aW9uc3Z1ZV90eXBlX3RlbXBsYXRlX2lkX2NkMTBkY2YwX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidHJhbnNpdGlvbiIse2F0dHJzOntuYW1lOiJlbC16b29tLWluLXRvcCJ9LG9uOnsiYWZ0ZXItbGVhdmUiOl92bS5kb0Rlc3Ryb3l9fSxbX2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5zaG93UG9wcGVyLGV4cHJlc3Npb246InNob3dQb3BwZXIifV0sc3RhdGljQ2xhc3M6ImVsLWF1dG9jb21wbGV0ZS1zdWdnZXN0aW9uIGVsLXBvcHBlciIsY2xhc3M6eyJpcy1sb2FkaW5nIjohX3ZtLnBhcmVudC5oaWRlTG9hZGluZyYmX3ZtLnBhcmVudC5sb2FkaW5nfSxzdHlsZTp7d2lkdGg6X3ZtLmRyb3Bkb3duV2lkdGh9LGF0dHJzOntyb2xlOiJyZWdpb24ifX0sW19jKCJlbC1zY3JvbGxiYXIiLHthdHRyczp7dGFnOiJ1bCIsIndyYXAtY2xhc3MiOiJlbC1hdXRvY29tcGxldGUtc3VnZ2VzdGlvbl9fd3JhcCIsInZpZXctY2xhc3MiOiJlbC1hdXRvY29tcGxldGUtc3VnZ2VzdGlvbl9fbGlzdCJ9fSxbIV92bS5wYXJlbnQuaGlkZUxvYWRpbmcmJl92bS5wYXJlbnQubG9hZGluZz9fYygibGkiLFtfYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pY29uLWxvYWRpbmcifSldKTpfdm0uX3QoImRlZmF1bHQiKV0sMildLDEpXSk7fTt2YXIgYXV0b2NvbXBsZXRlX3N1Z2dlc3Rpb25zdnVlX3R5cGVfdGVtcGxhdGVfaWRfY2QxMGRjZjBfc3RhdGljUmVuZGVyRm5zPVtdO2F1dG9jb21wbGV0ZV9zdWdnZXN0aW9uc3Z1ZV90eXBlX3RlbXBsYXRlX2lkX2NkMTBkY2YwX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9hdXRvY29tcGxldGUvc3JjL2F1dG9jb21wbGV0ZS1zdWdnZXN0aW9ucy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Y2QxMGRjZjAmCi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3V0aWxzL3Z1ZS1wb3BwZXIiCnZhciB2dWVfcG9wcGVyXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDUpO3ZhciB2dWVfcG9wcGVyX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfcG9wcGVyXyk7Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvc2Nyb2xsYmFyIgp2YXIgc2Nyb2xsYmFyXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDE3KTt2YXIgc2Nyb2xsYmFyX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihzY3JvbGxiYXJfKTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9hdXRvY29tcGxldGUvc3JjL2F1dG9jb21wbGV0ZS1zdWdnZXN0aW9ucy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYXV0b2NvbXBsZXRlX3N1Z2dlc3Rpb25zdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtjb21wb25lbnRzOntFbFNjcm9sbGJhcjpzY3JvbGxiYXJfZGVmYXVsdC5hfSxtaXhpbnM6W3Z1ZV9wb3BwZXJfZGVmYXVsdC5hLGVtaXR0ZXJfZGVmYXVsdC5hXSxjb21wb25lbnROYW1lOidFbEF1dG9jb21wbGV0ZVN1Z2dlc3Rpb25zJyxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57cGFyZW50OnRoaXMuJHBhcmVudCxkcm9wZG93bldpZHRoOicnfTt9LHByb3BzOntvcHRpb25zOntkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJue2dwdUFjY2VsZXJhdGlvbjpmYWxzZX07fX0saWQ6U3RyaW5nfSxtZXRob2RzOntzZWxlY3Q6ZnVuY3Rpb24gc2VsZWN0KGl0ZW0pe3RoaXMuZGlzcGF0Y2goJ0VsQXV0b2NvbXBsZXRlJywnaXRlbS1jbGljaycsaXRlbSk7fX0sdXBkYXRlZDpmdW5jdGlvbiB1cGRhdGVkKCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oXyl7X3RoaXMucG9wcGVySlMmJl90aGlzLnVwZGF0ZVBvcHBlcigpO30pO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy4kcGFyZW50LnBvcHBlckVsbT10aGlzLnBvcHBlckVsbT10aGlzLiRlbDt0aGlzLnJlZmVyZW5jZUVsbT10aGlzLiRwYXJlbnQuJHJlZnMuaW5wdXQuJHJlZnMuaW5wdXR8fHRoaXMuJHBhcmVudC4kcmVmcy5pbnB1dC4kcmVmcy50ZXh0YXJlYTt0aGlzLnJlZmVyZW5jZUxpc3Q9dGhpcy4kZWwucXVlcnlTZWxlY3RvcignLmVsLWF1dG9jb21wbGV0ZS1zdWdnZXN0aW9uX19saXN0Jyk7dGhpcy5yZWZlcmVuY2VMaXN0LnNldEF0dHJpYnV0ZSgncm9sZScsJ2xpc3Rib3gnKTt0aGlzLnJlZmVyZW5jZUxpc3Quc2V0QXR0cmlidXRlKCdpZCcsdGhpcy5pZCk7fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt2YXIgX3RoaXMyPXRoaXM7dGhpcy4kb24oJ3Zpc2libGUnLGZ1bmN0aW9uKHZhbCxpbnB1dFdpZHRoKXtfdGhpczIuZHJvcGRvd25XaWR0aD1pbnB1dFdpZHRoKydweCc7X3RoaXMyLnNob3dQb3BwZXI9dmFsO30pO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYXV0b2NvbXBsZXRlL3NyYy9hdXRvY29tcGxldGUtc3VnZ2VzdGlvbnMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19hdXRvY29tcGxldGVfc3VnZ2VzdGlvbnN2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189YXV0b2NvbXBsZXRlX3N1Z2dlc3Rpb25zdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYXV0b2NvbXBsZXRlL3NyYy9hdXRvY29tcGxldGUtc3VnZ2VzdGlvbnMudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgYXV0b2NvbXBsZXRlX3N1Z2dlc3Rpb25zX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2F1dG9jb21wbGV0ZV9zdWdnZXN0aW9uc3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxhdXRvY29tcGxldGVfc3VnZ2VzdGlvbnN2dWVfdHlwZV90ZW1wbGF0ZV9pZF9jZDEwZGNmMF9yZW5kZXIsYXV0b2NvbXBsZXRlX3N1Z2dlc3Rpb25zdnVlX3R5cGVfdGVtcGxhdGVfaWRfY2QxMGRjZjBfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBhdXRvY29tcGxldGVfc3VnZ2VzdGlvbnNfYXBpO31hdXRvY29tcGxldGVfc3VnZ2VzdGlvbnNfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9hdXRvY29tcGxldGUvc3JjL2F1dG9jb21wbGV0ZS1zdWdnZXN0aW9ucy52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYXV0b2NvbXBsZXRlX3N1Z2dlc3Rpb25zPWF1dG9jb21wbGV0ZV9zdWdnZXN0aW9uc19jb21wb25lbnQuZXhwb3J0czsvLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi9taXhpbnMvZm9jdXMiCnZhciBmb2N1c189X193ZWJwYWNrX3JlcXVpcmVfXygyMik7dmFyIGZvY3VzX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihmb2N1c18pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2F1dG9jb21wbGV0ZS9zcmMvYXV0b2NvbXBsZXRlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBhdXRvY29tcGxldGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQXV0b2NvbXBsZXRlJyxtaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hLGZvY3VzX2RlZmF1bHQoKSgnaW5wdXQnKSxtaWdyYXRpbmdfZGVmYXVsdC5hXSxpbmhlcml0QXR0cnM6ZmFsc2UsY29tcG9uZW50TmFtZTonRWxBdXRvY29tcGxldGUnLGNvbXBvbmVudHM6e0VsSW5wdXQ6aW5wdXRfZGVmYXVsdC5hLEVsQXV0b2NvbXBsZXRlU3VnZ2VzdGlvbnM6YXV0b2NvbXBsZXRlX3N1Z2dlc3Rpb25zfSxkaXJlY3RpdmVzOntDbGlja291dHNpZGU6Y2xpY2tvdXRzaWRlX2RlZmF1bHQuYX0scHJvcHM6e3ZhbHVlS2V5Ont0eXBlOlN0cmluZyxkZWZhdWx0Oid2YWx1ZSd9LHBvcHBlckNsYXNzOlN0cmluZyxwb3BwZXJPcHRpb25zOk9iamVjdCxwbGFjZWhvbGRlcjpTdHJpbmcsY2xlYXJhYmxlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0sZGlzYWJsZWQ6Qm9vbGVhbixuYW1lOlN0cmluZyxzaXplOlN0cmluZyx2YWx1ZTpTdHJpbmcsbWF4bGVuZ3RoOk51bWJlcixtaW5sZW5ndGg6TnVtYmVyLGF1dG9mb2N1czpCb29sZWFuLGZldGNoU3VnZ2VzdGlvbnM6RnVuY3Rpb24sdHJpZ2dlck9uRm9jdXM6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGN1c3RvbUl0ZW06U3RyaW5nLHNlbGVjdFdoZW5Vbm1hdGNoZWQ6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxwcmVmaXhJY29uOlN0cmluZyxzdWZmaXhJY29uOlN0cmluZyxsYWJlbDpTdHJpbmcsZGVib3VuY2U6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MzAwfSxwbGFjZW1lbnQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2JvdHRvbS1zdGFydCd9LGhpZGVMb2FkaW5nOkJvb2xlYW4scG9wcGVyQXBwZW5kVG9Cb2R5Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxoaWdobGlnaHRGaXJzdEl0ZW06e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2FjdGl2YXRlZDpmYWxzZSxzdWdnZXN0aW9uczpbXSxsb2FkaW5nOmZhbHNlLGhpZ2hsaWdodGVkSW5kZXg6LTEsc3VnZ2VzdGlvbkRpc2FibGVkOmZhbHNlfTt9LGNvbXB1dGVkOntzdWdnZXN0aW9uVmlzaWJsZTpmdW5jdGlvbiBzdWdnZXN0aW9uVmlzaWJsZSgpe3ZhciBzdWdnZXN0aW9ucz10aGlzLnN1Z2dlc3Rpb25zO3ZhciBpc1ZhbGlkRGF0YT1BcnJheS5pc0FycmF5KHN1Z2dlc3Rpb25zKSYmc3VnZ2VzdGlvbnMubGVuZ3RoPjA7cmV0dXJuKGlzVmFsaWREYXRhfHx0aGlzLmxvYWRpbmcpJiZ0aGlzLmFjdGl2YXRlZDt9LGlkOmZ1bmN0aW9uIGlkKCl7cmV0dXJuJ2VsLWF1dG9jb21wbGV0ZS0nK09iamVjdCh1dGlsX1siZ2VuZXJhdGVJZCJdKSgpO319LHdhdGNoOntzdWdnZXN0aW9uVmlzaWJsZTpmdW5jdGlvbiBzdWdnZXN0aW9uVmlzaWJsZSh2YWwpe3ZhciAkaW5wdXQ9dGhpcy5nZXRJbnB1dCgpO2lmKCRpbnB1dCl7dGhpcy5icm9hZGNhc3QoJ0VsQXV0b2NvbXBsZXRlU3VnZ2VzdGlvbnMnLCd2aXNpYmxlJyxbdmFsLCRpbnB1dC5vZmZzZXRXaWR0aF0pO319fSxtZXRob2RzOntnZXRNaWdyYXRpbmdDb25maWc6ZnVuY3Rpb24gZ2V0TWlncmF0aW5nQ29uZmlnKCl7cmV0dXJue3Byb3BzOnsnY3VzdG9tLWl0ZW0nOidjdXN0b20taXRlbSBpcyByZW1vdmVkLCB1c2Ugc2NvcGVkIHNsb3QgaW5zdGVhZC4nLCdwcm9wcyc6J3Byb3BzIGlzIHJlbW92ZWQsIHVzZSB2YWx1ZS1rZXkgaW5zdGVhZC4nfX07fSxnZXREYXRhOmZ1bmN0aW9uIGdldERhdGEocXVlcnlTdHJpbmcpe3ZhciBfdGhpcz10aGlzO2lmKHRoaXMuc3VnZ2VzdGlvbkRpc2FibGVkKXtyZXR1cm47fXRoaXMubG9hZGluZz10cnVlO3RoaXMuZmV0Y2hTdWdnZXN0aW9ucyhxdWVyeVN0cmluZyxmdW5jdGlvbihzdWdnZXN0aW9ucyl7X3RoaXMubG9hZGluZz1mYWxzZTtpZihfdGhpcy5zdWdnZXN0aW9uRGlzYWJsZWQpe3JldHVybjt9aWYoQXJyYXkuaXNBcnJheShzdWdnZXN0aW9ucykpe190aGlzLnN1Z2dlc3Rpb25zPXN1Z2dlc3Rpb25zO190aGlzLmhpZ2hsaWdodGVkSW5kZXg9X3RoaXMuaGlnaGxpZ2h0Rmlyc3RJdGVtPzA6LTE7fWVsc2V7Y29uc29sZS5lcnJvcignW0VsZW1lbnQgRXJyb3JdW0F1dG9jb21wbGV0ZV1hdXRvY29tcGxldGUgc3VnZ2VzdGlvbnMgbXVzdCBiZSBhbiBhcnJheScpO319KTt9LGhhbmRsZUlucHV0OmZ1bmN0aW9uIGhhbmRsZUlucHV0KHZhbHVlKXt0aGlzLiRlbWl0KCdpbnB1dCcsdmFsdWUpO3RoaXMuc3VnZ2VzdGlvbkRpc2FibGVkPWZhbHNlO2lmKCF0aGlzLnRyaWdnZXJPbkZvY3VzJiYhdmFsdWUpe3RoaXMuc3VnZ2VzdGlvbkRpc2FibGVkPXRydWU7dGhpcy5zdWdnZXN0aW9ucz1bXTtyZXR1cm47fXRoaXMuZGVib3VuY2VkR2V0RGF0YSh2YWx1ZSk7fSxoYW5kbGVDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKHZhbHVlKXt0aGlzLiRlbWl0KCdjaGFuZ2UnLHZhbHVlKTt9LGhhbmRsZUZvY3VzOmZ1bmN0aW9uIGhhbmRsZUZvY3VzKGV2ZW50KXt0aGlzLmFjdGl2YXRlZD10cnVlO3RoaXMuJGVtaXQoJ2ZvY3VzJyxldmVudCk7aWYodGhpcy50cmlnZ2VyT25Gb2N1cyl7dGhpcy5kZWJvdW5jZWRHZXREYXRhKHRoaXMudmFsdWUpO319LGhhbmRsZUJsdXI6ZnVuY3Rpb24gaGFuZGxlQmx1cihldmVudCl7dGhpcy4kZW1pdCgnYmx1cicsZXZlbnQpO30saGFuZGxlQ2xlYXI6ZnVuY3Rpb24gaGFuZGxlQ2xlYXIoKXt0aGlzLmFjdGl2YXRlZD1mYWxzZTt0aGlzLiRlbWl0KCdjbGVhcicpO30sY2xvc2U6ZnVuY3Rpb24gY2xvc2UoZSl7dGhpcy5hY3RpdmF0ZWQ9ZmFsc2U7fSxoYW5kbGVLZXlFbnRlcjpmdW5jdGlvbiBoYW5kbGVLZXlFbnRlcihlKXt2YXIgX3RoaXMyPXRoaXM7aWYodGhpcy5zdWdnZXN0aW9uVmlzaWJsZSYmdGhpcy5oaWdobGlnaHRlZEluZGV4Pj0wJiZ0aGlzLmhpZ2hsaWdodGVkSW5kZXg8dGhpcy5zdWdnZXN0aW9ucy5sZW5ndGgpe2UucHJldmVudERlZmF1bHQoKTt0aGlzLnNlbGVjdCh0aGlzLnN1Z2dlc3Rpb25zW3RoaXMuaGlnaGxpZ2h0ZWRJbmRleF0pO31lbHNlIGlmKHRoaXMuc2VsZWN0V2hlblVubWF0Y2hlZCl7dGhpcy4kZW1pdCgnc2VsZWN0Jyx7dmFsdWU6dGhpcy52YWx1ZX0pO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKF8pe190aGlzMi5zdWdnZXN0aW9ucz1bXTtfdGhpczIuaGlnaGxpZ2h0ZWRJbmRleD0tMTt9KTt9fSxzZWxlY3Q6ZnVuY3Rpb24gc2VsZWN0KGl0ZW0pe3ZhciBfdGhpczM9dGhpczt0aGlzLiRlbWl0KCdpbnB1dCcsaXRlbVt0aGlzLnZhbHVlS2V5XSk7dGhpcy4kZW1pdCgnc2VsZWN0JyxpdGVtKTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbihfKXtfdGhpczMuc3VnZ2VzdGlvbnM9W107X3RoaXMzLmhpZ2hsaWdodGVkSW5kZXg9LTE7fSk7fSxoaWdobGlnaHQ6ZnVuY3Rpb24gaGlnaGxpZ2h0KGluZGV4KXtpZighdGhpcy5zdWdnZXN0aW9uVmlzaWJsZXx8dGhpcy5sb2FkaW5nKXtyZXR1cm47fWlmKGluZGV4PDApe3RoaXMuaGlnaGxpZ2h0ZWRJbmRleD0tMTtyZXR1cm47fWlmKGluZGV4Pj10aGlzLnN1Z2dlc3Rpb25zLmxlbmd0aCl7aW5kZXg9dGhpcy5zdWdnZXN0aW9ucy5sZW5ndGgtMTt9dmFyIHN1Z2dlc3Rpb249dGhpcy4kcmVmcy5zdWdnZXN0aW9ucy4kZWwucXVlcnlTZWxlY3RvcignLmVsLWF1dG9jb21wbGV0ZS1zdWdnZXN0aW9uX193cmFwJyk7dmFyIHN1Z2dlc3Rpb25MaXN0PXN1Z2dlc3Rpb24ucXVlcnlTZWxlY3RvckFsbCgnLmVsLWF1dG9jb21wbGV0ZS1zdWdnZXN0aW9uX19saXN0IGxpJyk7dmFyIGhpZ2hsaWdodEl0ZW09c3VnZ2VzdGlvbkxpc3RbaW5kZXhdO3ZhciBzY3JvbGxUb3A9c3VnZ2VzdGlvbi5zY3JvbGxUb3A7dmFyIG9mZnNldFRvcD1oaWdobGlnaHRJdGVtLm9mZnNldFRvcDtpZihvZmZzZXRUb3AraGlnaGxpZ2h0SXRlbS5zY3JvbGxIZWlnaHQ+c2Nyb2xsVG9wK3N1Z2dlc3Rpb24uY2xpZW50SGVpZ2h0KXtzdWdnZXN0aW9uLnNjcm9sbFRvcCs9aGlnaGxpZ2h0SXRlbS5zY3JvbGxIZWlnaHQ7fWlmKG9mZnNldFRvcDxzY3JvbGxUb3Ape3N1Z2dlc3Rpb24uc2Nyb2xsVG9wLT1oaWdobGlnaHRJdGVtLnNjcm9sbEhlaWdodDt9dGhpcy5oaWdobGlnaHRlZEluZGV4PWluZGV4O3ZhciAkaW5wdXQ9dGhpcy5nZXRJbnB1dCgpOyRpbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtYWN0aXZlZGVzY2VuZGFudCcsdGhpcy5pZCsnLWl0ZW0tJyt0aGlzLmhpZ2hsaWdodGVkSW5kZXgpO30sZ2V0SW5wdXQ6ZnVuY3Rpb24gZ2V0SW5wdXQoKXtyZXR1cm4gdGhpcy4kcmVmcy5pbnB1dC5nZXRJbnB1dCgpO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciBfdGhpczQ9dGhpczt0aGlzLmRlYm91bmNlZEdldERhdGE9ZGVib3VuY2VfZGVmYXVsdCgpKHRoaXMuZGVib3VuY2UsdGhpcy5nZXREYXRhKTt0aGlzLiRvbignaXRlbS1jbGljaycsZnVuY3Rpb24oaXRlbSl7X3RoaXM0LnNlbGVjdChpdGVtKTt9KTt2YXIgJGlucHV0PXRoaXMuZ2V0SW5wdXQoKTskaW5wdXQuc2V0QXR0cmlidXRlKCdyb2xlJywndGV4dGJveCcpOyRpbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtYXV0b2NvbXBsZXRlJywnbGlzdCcpOyRpbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtY29udHJvbHMnLCdpZCcpOyRpbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtYWN0aXZlZGVzY2VuZGFudCcsdGhpcy5pZCsnLWl0ZW0tJyt0aGlzLmhpZ2hsaWdodGVkSW5kZXgpO30sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7dGhpcy4kcmVmcy5zdWdnZXN0aW9ucy4kZGVzdHJveSgpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYXV0b2NvbXBsZXRlL3NyYy9hdXRvY29tcGxldGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19hdXRvY29tcGxldGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189YXV0b2NvbXBsZXRldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYXV0b2NvbXBsZXRlL3NyYy9hdXRvY29tcGxldGUudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgYXV0b2NvbXBsZXRlX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2F1dG9jb21wbGV0ZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxhdXRvY29tcGxldGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8xNTJmMmVlNl9yZW5kZXIsYXV0b2NvbXBsZXRldnVlX3R5cGVfdGVtcGxhdGVfaWRfMTUyZjJlZTZfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBhdXRvY29tcGxldGVfYXBpO31hdXRvY29tcGxldGVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9hdXRvY29tcGxldGUvc3JjL2F1dG9jb21wbGV0ZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYXV0b2NvbXBsZXRlPWF1dG9jb21wbGV0ZV9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2F1dG9jb21wbGV0ZS9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2F1dG9jb21wbGV0ZS5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChhdXRvY29tcGxldGUubmFtZSxhdXRvY29tcGxldGUpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19hdXRvY29tcGxldGU9YXV0b2NvbXBsZXRlOy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL2J1dHRvbiIKdmFyIGJ1dHRvbl89X193ZWJwYWNrX3JlcXVpcmVfXygxMik7dmFyIGJ1dHRvbl9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oYnV0dG9uXyk7Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvYnV0dG9uLWdyb3VwIgp2YXIgYnV0dG9uX2dyb3VwXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDI4KTt2YXIgYnV0dG9uX2dyb3VwX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihidXR0b25fZ3JvdXBfKTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kcm9wZG93bi9zcmMvZHJvcGRvd24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGRyb3Bkb3dudnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbERyb3Bkb3duJyxjb21wb25lbnROYW1lOidFbERyb3Bkb3duJyxtaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hLG1pZ3JhdGluZ19kZWZhdWx0LmFdLGRpcmVjdGl2ZXM6e0NsaWNrb3V0c2lkZTpjbGlja291dHNpZGVfZGVmYXVsdC5hfSxjb21wb25lbnRzOntFbEJ1dHRvbjpidXR0b25fZGVmYXVsdC5hLEVsQnV0dG9uR3JvdXA6YnV0dG9uX2dyb3VwX2RlZmF1bHQuYX0scHJvdmlkZTpmdW5jdGlvbiBwcm92aWRlKCl7cmV0dXJue2Ryb3Bkb3duOnRoaXN9O30scHJvcHM6e3RyaWdnZXI6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2hvdmVyJ30sdHlwZTpTdHJpbmcsc2l6ZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30sc3BsaXRCdXR0b246Qm9vbGVhbixoaWRlT25DbGljazp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0scGxhY2VtZW50Ont0eXBlOlN0cmluZyxkZWZhdWx0Oidib3R0b20tZW5kJ30sdmlzaWJsZUFycm93OntkZWZhdWx0OnRydWV9LHNob3dUaW1lb3V0Ont0eXBlOk51bWJlcixkZWZhdWx0OjI1MH0saGlkZVRpbWVvdXQ6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MTUwfSx0YWJpbmRleDp7dHlwZTpOdW1iZXIsZGVmYXVsdDowfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3RpbWVvdXQ6bnVsbCx2aXNpYmxlOmZhbHNlLHRyaWdnZXJFbG06bnVsbCxtZW51SXRlbXM6bnVsbCxtZW51SXRlbXNBcnJheTpudWxsLGRyb3Bkb3duRWxtOm51bGwsZm9jdXNpbmc6ZmFsc2UsbGlzdElkOidkcm9wZG93bi1tZW51LScrT2JqZWN0KHV0aWxfWyJnZW5lcmF0ZUlkIl0pKCl9O30sY29tcHV0ZWQ6e2Ryb3Bkb3duU2l6ZTpmdW5jdGlvbiBkcm9wZG93blNpemUoKXtyZXR1cm4gdGhpcy5zaXplfHwodGhpcy4kRUxFTUVOVHx8e30pLnNpemU7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy4kb24oJ21lbnUtaXRlbS1jbGljaycsdGhpcy5oYW5kbGVNZW51SXRlbUNsaWNrKTt9LHdhdGNoOnt2aXNpYmxlOmZ1bmN0aW9uIHZpc2libGUodmFsKXt0aGlzLmJyb2FkY2FzdCgnRWxEcm9wZG93bk1lbnUnLCd2aXNpYmxlJyx2YWwpO3RoaXMuJGVtaXQoJ3Zpc2libGUtY2hhbmdlJyx2YWwpO30sZm9jdXNpbmc6ZnVuY3Rpb24gZm9jdXNpbmcodmFsKXt2YXIgc2VsZkRlZmluZT10aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcuZWwtZHJvcGRvd24tc2VsZmRlZmluZScpO2lmKHNlbGZEZWZpbmUpey8vIOiHquWumuS5iQppZih2YWwpe3NlbGZEZWZpbmUuY2xhc3NOYW1lKz0nIGZvY3VzaW5nJzt9ZWxzZXtzZWxmRGVmaW5lLmNsYXNzTmFtZT1zZWxmRGVmaW5lLmNsYXNzTmFtZS5yZXBsYWNlKCdmb2N1c2luZycsJycpO319fX0sbWV0aG9kczp7Z2V0TWlncmF0aW5nQ29uZmlnOmZ1bmN0aW9uIGdldE1pZ3JhdGluZ0NvbmZpZygpe3JldHVybntwcm9wczp7J21lbnUtYWxpZ24nOidtZW51LWFsaWduIGlzIHJlbmFtZWQgdG8gcGxhY2VtZW50Lid9fTt9LHNob3c6ZnVuY3Rpb24gc2hvdygpe3ZhciBfdGhpcz10aGlzO2lmKHRoaXMudHJpZ2dlckVsbS5kaXNhYmxlZClyZXR1cm47Y2xlYXJUaW1lb3V0KHRoaXMudGltZW91dCk7dGhpcy50aW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtfdGhpcy52aXNpYmxlPXRydWU7fSx0aGlzLnRyaWdnZXI9PT0nY2xpY2snPzA6dGhpcy5zaG93VGltZW91dCk7fSxoaWRlOmZ1bmN0aW9uIGhpZGUoKXt2YXIgX3RoaXMyPXRoaXM7aWYodGhpcy50cmlnZ2VyRWxtLmRpc2FibGVkKXJldHVybjt0aGlzLnJlbW92ZVRhYmluZGV4KCk7aWYodGhpcy50YWJpbmRleD49MCl7dGhpcy5yZXNldFRhYmluZGV4KHRoaXMudHJpZ2dlckVsbSk7fWNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXQpO3RoaXMudGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7X3RoaXMyLnZpc2libGU9ZmFsc2U7fSx0aGlzLnRyaWdnZXI9PT0nY2xpY2snPzA6dGhpcy5oaWRlVGltZW91dCk7fSxoYW5kbGVDbGljazpmdW5jdGlvbiBoYW5kbGVDbGljaygpe2lmKHRoaXMudHJpZ2dlckVsbS5kaXNhYmxlZClyZXR1cm47aWYodGhpcy52aXNpYmxlKXt0aGlzLmhpZGUoKTt9ZWxzZXt0aGlzLnNob3coKTt9fSxoYW5kbGVUcmlnZ2VyS2V5RG93bjpmdW5jdGlvbiBoYW5kbGVUcmlnZ2VyS2V5RG93bihldil7dmFyIGtleUNvZGU9ZXYua2V5Q29kZTtpZihbMzgsNDBdLmluZGV4T2Yoa2V5Q29kZSk+LTEpey8vIHVwL2Rvd24KdGhpcy5yZW1vdmVUYWJpbmRleCgpO3RoaXMucmVzZXRUYWJpbmRleCh0aGlzLm1lbnVJdGVtc1swXSk7dGhpcy5tZW51SXRlbXNbMF0uZm9jdXMoKTtldi5wcmV2ZW50RGVmYXVsdCgpO2V2LnN0b3BQcm9wYWdhdGlvbigpO31lbHNlIGlmKGtleUNvZGU9PT0xMyl7Ly8gc3BhY2UgZW50ZXLpgInkuK0KdGhpcy5oYW5kbGVDbGljaygpO31lbHNlIGlmKFs5LDI3XS5pbmRleE9mKGtleUNvZGUpPi0xKXsvLyB0YWIgfHwgZXNjCnRoaXMuaGlkZSgpO319LGhhbmRsZUl0ZW1LZXlEb3duOmZ1bmN0aW9uIGhhbmRsZUl0ZW1LZXlEb3duKGV2KXt2YXIga2V5Q29kZT1ldi5rZXlDb2RlO3ZhciB0YXJnZXQ9ZXYudGFyZ2V0O3ZhciBjdXJyZW50SW5kZXg9dGhpcy5tZW51SXRlbXNBcnJheS5pbmRleE9mKHRhcmdldCk7dmFyIG1heD10aGlzLm1lbnVJdGVtc0FycmF5Lmxlbmd0aC0xO3ZhciBuZXh0SW5kZXg9dm9pZCAwO2lmKFszOCw0MF0uaW5kZXhPZihrZXlDb2RlKT4tMSl7Ly8gdXAvZG93bgppZihrZXlDb2RlPT09Mzgpey8vIHVwCm5leHRJbmRleD1jdXJyZW50SW5kZXghPT0wP2N1cnJlbnRJbmRleC0xOjA7fWVsc2V7Ly8gZG93bgpuZXh0SW5kZXg9Y3VycmVudEluZGV4PG1heD9jdXJyZW50SW5kZXgrMTptYXg7fXRoaXMucmVtb3ZlVGFiaW5kZXgoKTt0aGlzLnJlc2V0VGFiaW5kZXgodGhpcy5tZW51SXRlbXNbbmV4dEluZGV4XSk7dGhpcy5tZW51SXRlbXNbbmV4dEluZGV4XS5mb2N1cygpO2V2LnByZXZlbnREZWZhdWx0KCk7ZXYuc3RvcFByb3BhZ2F0aW9uKCk7fWVsc2UgaWYoa2V5Q29kZT09PTEzKXsvLyBlbnRlcumAieS4rQp0aGlzLnRyaWdnZXJFbG1Gb2N1cygpO3RhcmdldC5jbGljaygpO2lmKHRoaXMuaGlkZU9uQ2xpY2spey8vIGNsaWNr5YWz6ZetCnRoaXMudmlzaWJsZT1mYWxzZTt9fWVsc2UgaWYoWzksMjddLmluZGV4T2Yoa2V5Q29kZSk+LTEpey8vIHRhYiAvLyBlc2MKdGhpcy5oaWRlKCk7dGhpcy50cmlnZ2VyRWxtRm9jdXMoKTt9fSxyZXNldFRhYmluZGV4OmZ1bmN0aW9uIHJlc2V0VGFiaW5kZXgoZWxlKXsvLyDkuIvmrKF0YWLml7bnu4Tku7bogZrnhKblhYPntKAKdGhpcy5yZW1vdmVUYWJpbmRleCgpO2VsZS5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywnMCcpOy8vIOS4i+asoeacn+acm+eahOiBmueEpuWFg+e0oAp9LHJlbW92ZVRhYmluZGV4OmZ1bmN0aW9uIHJlbW92ZVRhYmluZGV4KCl7dGhpcy50cmlnZ2VyRWxtLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCctMScpO3RoaXMubWVudUl0ZW1zQXJyYXkuZm9yRWFjaChmdW5jdGlvbihpdGVtKXtpdGVtLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCctMScpO30pO30saW5pdEFyaWE6ZnVuY3Rpb24gaW5pdEFyaWEoKXt0aGlzLmRyb3Bkb3duRWxtLnNldEF0dHJpYnV0ZSgnaWQnLHRoaXMubGlzdElkKTt0aGlzLnRyaWdnZXJFbG0uc2V0QXR0cmlidXRlKCdhcmlhLWhhc3BvcHVwJywnbGlzdCcpO3RoaXMudHJpZ2dlckVsbS5zZXRBdHRyaWJ1dGUoJ2FyaWEtY29udHJvbHMnLHRoaXMubGlzdElkKTtpZighdGhpcy5zcGxpdEJ1dHRvbil7Ly8g6Ieq5a6a5LmJCnRoaXMudHJpZ2dlckVsbS5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCdidXR0b24nKTt0aGlzLnRyaWdnZXJFbG0uc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsdGhpcy50YWJpbmRleCk7dGhpcy50cmlnZ2VyRWxtLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCh0aGlzLnRyaWdnZXJFbG0uZ2V0QXR0cmlidXRlKCdjbGFzcycpfHwnJykrJyBlbC1kcm9wZG93bi1zZWxmZGVmaW5lJyk7Ly8g5o6n5Yi2Cn19LGluaXRFdmVudDpmdW5jdGlvbiBpbml0RXZlbnQoKXt2YXIgX3RoaXMzPXRoaXM7dmFyIHRyaWdnZXI9dGhpcy50cmlnZ2VyLHNob3c9dGhpcy5zaG93LGhpZGU9dGhpcy5oaWRlLGhhbmRsZUNsaWNrPXRoaXMuaGFuZGxlQ2xpY2ssc3BsaXRCdXR0b249dGhpcy5zcGxpdEJ1dHRvbixoYW5kbGVUcmlnZ2VyS2V5RG93bj10aGlzLmhhbmRsZVRyaWdnZXJLZXlEb3duLGhhbmRsZUl0ZW1LZXlEb3duPXRoaXMuaGFuZGxlSXRlbUtleURvd247dGhpcy50cmlnZ2VyRWxtPXNwbGl0QnV0dG9uP3RoaXMuJHJlZnMudHJpZ2dlci4kZWw6dGhpcy4kc2xvdHMuZGVmYXVsdFswXS5lbG07dmFyIGRyb3Bkb3duRWxtPXRoaXMuZHJvcGRvd25FbG07dGhpcy50cmlnZ2VyRWxtLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLGhhbmRsZVRyaWdnZXJLZXlEb3duKTsvLyB0cmlnZ2VyRWxtIGtleWRvd24KZHJvcGRvd25FbG0uYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsaGFuZGxlSXRlbUtleURvd24sdHJ1ZSk7Ly8gaXRlbSBrZXlkb3duCi8vIOaOp+WItuiHquWumuS5ieWFg+e0oOeahOagt+W8jwppZighc3BsaXRCdXR0b24pe3RoaXMudHJpZ2dlckVsbS5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsZnVuY3Rpb24oKXtfdGhpczMuZm9jdXNpbmc9dHJ1ZTt9KTt0aGlzLnRyaWdnZXJFbG0uYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsZnVuY3Rpb24oKXtfdGhpczMuZm9jdXNpbmc9ZmFsc2U7fSk7dGhpcy50cmlnZ2VyRWxtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyxmdW5jdGlvbigpe190aGlzMy5mb2N1c2luZz1mYWxzZTt9KTt9aWYodHJpZ2dlcj09PSdob3Zlcicpe3RoaXMudHJpZ2dlckVsbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJyxzaG93KTt0aGlzLnRyaWdnZXJFbG0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsaGlkZSk7ZHJvcGRvd25FbG0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsc2hvdyk7ZHJvcGRvd25FbG0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsaGlkZSk7fWVsc2UgaWYodHJpZ2dlcj09PSdjbGljaycpe3RoaXMudHJpZ2dlckVsbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsaGFuZGxlQ2xpY2spO319LGhhbmRsZU1lbnVJdGVtQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlTWVudUl0ZW1DbGljayhjb21tYW5kLGluc3RhbmNlKXtpZih0aGlzLmhpZGVPbkNsaWNrKXt0aGlzLnZpc2libGU9ZmFsc2U7fXRoaXMuJGVtaXQoJ2NvbW1hbmQnLGNvbW1hbmQsaW5zdGFuY2UpO30sdHJpZ2dlckVsbUZvY3VzOmZ1bmN0aW9uIHRyaWdnZXJFbG1Gb2N1cygpe3RoaXMudHJpZ2dlckVsbS5mb2N1cyYmdGhpcy50cmlnZ2VyRWxtLmZvY3VzKCk7fSxpbml0RG9tT3BlcmF0aW9uOmZ1bmN0aW9uIGluaXREb21PcGVyYXRpb24oKXt0aGlzLmRyb3Bkb3duRWxtPXRoaXMucG9wcGVyRWxtO3RoaXMubWVudUl0ZW1zPXRoaXMuZHJvcGRvd25FbG0ucXVlcnlTZWxlY3RvckFsbCgiW3RhYmluZGV4PSctMSddIik7dGhpcy5tZW51SXRlbXNBcnJheT1bXS5zbGljZS5jYWxsKHRoaXMubWVudUl0ZW1zKTt0aGlzLmluaXRFdmVudCgpO3RoaXMuaW5pdEFyaWEoKTt9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBfdGhpczQ9dGhpczt2YXIgaGlkZT10aGlzLmhpZGUsc3BsaXRCdXR0b249dGhpcy5zcGxpdEJ1dHRvbix0eXBlPXRoaXMudHlwZSxkcm9wZG93blNpemU9dGhpcy5kcm9wZG93blNpemU7dmFyIGhhbmRsZU1haW5CdXR0b25DbGljaz1mdW5jdGlvbiBoYW5kbGVNYWluQnV0dG9uQ2xpY2soZXZlbnQpe190aGlzNC4kZW1pdCgnY2xpY2snLGV2ZW50KTtoaWRlKCk7fTt2YXIgdHJpZ2dlckVsbT0hc3BsaXRCdXR0b24/dGhpcy4kc2xvdHMuZGVmYXVsdDpoKCdlbC1idXR0b24tZ3JvdXAnLFtoKCdlbC1idXR0b24nLHthdHRyczp7dHlwZTp0eXBlLHNpemU6ZHJvcGRvd25TaXplfSxuYXRpdmVPbjp7J2NsaWNrJzpoYW5kbGVNYWluQnV0dG9uQ2xpY2t9fSxbdGhpcy4kc2xvdHMuZGVmYXVsdF0pLGgoJ2VsLWJ1dHRvbicse3JlZjondHJpZ2dlcicsYXR0cnM6e3R5cGU6dHlwZSxzaXplOmRyb3Bkb3duU2l6ZX0sJ2NsYXNzJzonZWwtZHJvcGRvd25fX2NhcmV0LWJ1dHRvbid9LFtoKCdpJyx7J2NsYXNzJzonZWwtZHJvcGRvd25fX2ljb24gZWwtaWNvbi1hcnJvdy1kb3duJ30pXSldKTtyZXR1cm4gaCgnZGl2Jyx7J2NsYXNzJzonZWwtZHJvcGRvd24nLGRpcmVjdGl2ZXM6W3tuYW1lOidjbGlja291dHNpZGUnLHZhbHVlOmhpZGV9XX0sW3RyaWdnZXJFbG0sdGhpcy4kc2xvdHMuZHJvcGRvd25dKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2Ryb3Bkb3duL3NyYy9kcm9wZG93bi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2Ryb3Bkb3dudnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWRyb3Bkb3dudnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZHJvcGRvd24vc3JjL2Ryb3Bkb3duLnZ1ZQp2YXIgZHJvcGRvd25fcmVuZGVyLGRyb3Bkb3duX3N0YXRpY1JlbmRlckZuczsvKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGRyb3Bkb3duX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2Ryb3Bkb3dudnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLGRyb3Bkb3duX3JlbmRlcixkcm9wZG93bl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGRyb3Bkb3duX2FwaTt9ZHJvcGRvd25fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9kcm9wZG93bi9zcmMvZHJvcGRvd24udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGRyb3Bkb3duPWRyb3Bkb3duX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZHJvcGRvd24vaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9kcm9wZG93bi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChkcm9wZG93bi5uYW1lLGRyb3Bkb3duKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfZHJvcGRvd249ZHJvcGRvd247Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kcm9wZG93bi9zcmMvZHJvcGRvd24tbWVudS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MGRhNmI3MTQmCnZhciBkcm9wZG93bl9tZW51dnVlX3R5cGVfdGVtcGxhdGVfaWRfMGRhNmI3MTRfcmVuZGVyPWZ1bmN0aW9uIGRyb3Bkb3duX21lbnV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wZGE2YjcxNF9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInRyYW5zaXRpb24iLHthdHRyczp7bmFtZToiZWwtem9vbS1pbi10b3AifSxvbjp7ImFmdGVyLWxlYXZlIjpfdm0uZG9EZXN0cm95fX0sW19jKCJ1bCIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5zaG93UG9wcGVyLGV4cHJlc3Npb246InNob3dQb3BwZXIifV0sc3RhdGljQ2xhc3M6ImVsLWRyb3Bkb3duLW1lbnUgZWwtcG9wcGVyIixjbGFzczpbX3ZtLnNpemUmJiJlbC1kcm9wZG93bi1tZW51LS0iK192bS5zaXplXX0sW192bS5fdCgiZGVmYXVsdCIpXSwyKV0pO307dmFyIGRyb3Bkb3duX21lbnV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wZGE2YjcxNF9zdGF0aWNSZW5kZXJGbnM9W107ZHJvcGRvd25fbWVudXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzBkYTZiNzE0X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kcm9wZG93bi9zcmMvZHJvcGRvd24tbWVudS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MGRhNmI3MTQmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2Ryb3Bkb3duL3NyYy9kcm9wZG93bi1tZW51LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBkcm9wZG93bl9tZW51dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbERyb3Bkb3duTWVudScsY29tcG9uZW50TmFtZTonRWxEcm9wZG93bk1lbnUnLG1peGluczpbdnVlX3BvcHBlcl9kZWZhdWx0LmFdLHByb3BzOnt2aXNpYmxlQXJyb3c6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGFycm93T2Zmc2V0Ont0eXBlOk51bWJlcixkZWZhdWx0OjB9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57c2l6ZTp0aGlzLmRyb3Bkb3duLmRyb3Bkb3duU2l6ZX07fSxpbmplY3Q6Wydkcm9wZG93biddLGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpe3ZhciBfdGhpcz10aGlzO3RoaXMuJG9uKCd1cGRhdGVQb3BwZXInLGZ1bmN0aW9uKCl7aWYoX3RoaXMuc2hvd1BvcHBlcilfdGhpcy51cGRhdGVQb3BwZXIoKTt9KTt0aGlzLiRvbigndmlzaWJsZScsZnVuY3Rpb24odmFsKXtfdGhpcy5zaG93UG9wcGVyPXZhbDt9KTt9LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3RoaXMuZHJvcGRvd24ucG9wcGVyRWxtPXRoaXMucG9wcGVyRWxtPXRoaXMuJGVsO3RoaXMucmVmZXJlbmNlRWxtPXRoaXMuZHJvcGRvd24uJGVsOy8vIGNvbXBhdGlibGUgd2l0aCAyLjYgbmV3IHYtc2xvdCBzeW50YXgKLy8gaXNzdWUgbGluayBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L2lzc3Vlcy8xNDM0NQp0aGlzLmRyb3Bkb3duLmluaXREb21PcGVyYXRpb24oKTt9LHdhdGNoOnsnZHJvcGRvd24ucGxhY2VtZW50Jzp7aW1tZWRpYXRlOnRydWUsaGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKHZhbCl7dGhpcy5jdXJyZW50UGxhY2VtZW50PXZhbDt9fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZHJvcGRvd24vc3JjL2Ryb3Bkb3duLW1lbnUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19kcm9wZG93bl9tZW51dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWRyb3Bkb3duX21lbnV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kcm9wZG93bi9zcmMvZHJvcGRvd24tbWVudS52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBkcm9wZG93bl9tZW51X2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2Ryb3Bkb3duX21lbnV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sZHJvcGRvd25fbWVudXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzBkYTZiNzE0X3JlbmRlcixkcm9wZG93bl9tZW51dnVlX3R5cGVfdGVtcGxhdGVfaWRfMGRhNmI3MTRfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBkcm9wZG93bl9tZW51X2FwaTt9ZHJvcGRvd25fbWVudV9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2Ryb3Bkb3duL3NyYy9kcm9wZG93bi1tZW51LnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBkcm9wZG93bl9tZW51PWRyb3Bkb3duX21lbnVfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kcm9wZG93bi1tZW51L2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovZHJvcGRvd25fbWVudS5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChkcm9wZG93bl9tZW51Lm5hbWUsZHJvcGRvd25fbWVudSk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2Ryb3Bkb3duX21lbnU9ZHJvcGRvd25fbWVudTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2Ryb3Bkb3duL3NyYy9kcm9wZG93bi1pdGVtLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02MzU5MTAyYSYKdmFyIGRyb3Bkb3duX2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF82MzU5MTAyYV9yZW5kZXI9ZnVuY3Rpb24gZHJvcGRvd25faXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzYzNTkxMDJhX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygibGkiLHtzdGF0aWNDbGFzczoiZWwtZHJvcGRvd24tbWVudV9faXRlbSIsY2xhc3M6eyJpcy1kaXNhYmxlZCI6X3ZtLmRpc2FibGVkLCJlbC1kcm9wZG93bi1tZW51X19pdGVtLS1kaXZpZGVkIjpfdm0uZGl2aWRlZH0sYXR0cnM6eyJhcmlhLWRpc2FibGVkIjpfdm0uZGlzYWJsZWQsdGFiaW5kZXg6X3ZtLmRpc2FibGVkP251bGw6LTF9LG9uOntjbGljazpfdm0uaGFuZGxlQ2xpY2t9fSxbX3ZtLmljb24/X2MoImkiLHtjbGFzczpfdm0uaWNvbn0pOl92bS5fZSgpLF92bS5fdCgiZGVmYXVsdCIpXSwyKTt9O3ZhciBkcm9wZG93bl9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfNjM1OTEwMmFfc3RhdGljUmVuZGVyRm5zPVtdO2Ryb3Bkb3duX2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF82MzU5MTAyYV9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZHJvcGRvd24vc3JjL2Ryb3Bkb3duLWl0ZW0udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTYzNTkxMDJhJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kcm9wZG93bi9zcmMvZHJvcGRvd24taXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZHJvcGRvd25faXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxEcm9wZG93bkl0ZW0nLG1peGluczpbZW1pdHRlcl9kZWZhdWx0LmFdLHByb3BzOntjb21tYW5kOnt9LGRpc2FibGVkOkJvb2xlYW4sZGl2aWRlZDpCb29sZWFuLGljb246U3RyaW5nfSxtZXRob2RzOntoYW5kbGVDbGljazpmdW5jdGlvbiBoYW5kbGVDbGljayhlKXt0aGlzLmRpc3BhdGNoKCdFbERyb3Bkb3duJywnbWVudS1pdGVtLWNsaWNrJyxbdGhpcy5jb21tYW5kLHRoaXNdKTt9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kcm9wZG93bi9zcmMvZHJvcGRvd24taXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2Ryb3Bkb3duX2l0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189ZHJvcGRvd25faXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2Ryb3Bkb3duL3NyYy9kcm9wZG93bi1pdGVtLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGRyb3Bkb3duX2l0ZW1fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfZHJvcGRvd25faXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxkcm9wZG93bl9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfNjM1OTEwMmFfcmVuZGVyLGRyb3Bkb3duX2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF82MzU5MTAyYV9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGRyb3Bkb3duX2l0ZW1fYXBpO31kcm9wZG93bl9pdGVtX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvZHJvcGRvd24vc3JjL2Ryb3Bkb3duLWl0ZW0udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGRyb3Bkb3duX2l0ZW09ZHJvcGRvd25faXRlbV9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2Ryb3Bkb3duLWl0ZW0vaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9kcm9wZG93bl9pdGVtLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGRyb3Bkb3duX2l0ZW0ubmFtZSxkcm9wZG93bl9pdGVtKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfZHJvcGRvd25faXRlbT1kcm9wZG93bl9pdGVtOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL3V0aWxzL2FyaWEtdXRpbHMuanMKdmFyIGFyaWE9YXJpYXx8e307YXJpYS5VdGlscz1hcmlhLlV0aWxzfHx7fTsvKioKICogQGRlc2MgU2V0IGZvY3VzIG9uIGRlc2NlbmRhbnQgbm9kZXMgdW50aWwgdGhlIGZpcnN0IGZvY3VzYWJsZSBlbGVtZW50IGlzCiAqICAgICAgIGZvdW5kLgogKiBAcGFyYW0gZWxlbWVudAogKiAgICAgICAgICBET00gbm9kZSBmb3Igd2hpY2ggdG8gZmluZCB0aGUgZmlyc3QgZm9jdXNhYmxlIGRlc2NlbmRhbnQuCiAqIEByZXR1cm5zCiAqICB0cnVlIGlmIGEgZm9jdXNhYmxlIGVsZW1lbnQgaXMgZm91bmQgYW5kIGZvY3VzIGlzIHNldC4KICovYXJpYS5VdGlscy5mb2N1c0ZpcnN0RGVzY2VuZGFudD1mdW5jdGlvbihlbGVtZW50KXtmb3IodmFyIGk9MDtpPGVsZW1lbnQuY2hpbGROb2Rlcy5sZW5ndGg7aSsrKXt2YXIgY2hpbGQ9ZWxlbWVudC5jaGlsZE5vZGVzW2ldO2lmKGFyaWEuVXRpbHMuYXR0ZW1wdEZvY3VzKGNoaWxkKXx8YXJpYS5VdGlscy5mb2N1c0ZpcnN0RGVzY2VuZGFudChjaGlsZCkpe3JldHVybiB0cnVlO319cmV0dXJuIGZhbHNlO307LyoqCiAqIEBkZXNjIEZpbmQgdGhlIGxhc3QgZGVzY2VuZGFudCBub2RlIHRoYXQgaXMgZm9jdXNhYmxlLgogKiBAcGFyYW0gZWxlbWVudAogKiAgICAgICAgICBET00gbm9kZSBmb3Igd2hpY2ggdG8gZmluZCB0aGUgbGFzdCBmb2N1c2FibGUgZGVzY2VuZGFudC4KICogQHJldHVybnMKICogIHRydWUgaWYgYSBmb2N1c2FibGUgZWxlbWVudCBpcyBmb3VuZCBhbmQgZm9jdXMgaXMgc2V0LgogKi9hcmlhLlV0aWxzLmZvY3VzTGFzdERlc2NlbmRhbnQ9ZnVuY3Rpb24oZWxlbWVudCl7Zm9yKHZhciBpPWVsZW1lbnQuY2hpbGROb2Rlcy5sZW5ndGgtMTtpPj0wO2ktLSl7dmFyIGNoaWxkPWVsZW1lbnQuY2hpbGROb2Rlc1tpXTtpZihhcmlhLlV0aWxzLmF0dGVtcHRGb2N1cyhjaGlsZCl8fGFyaWEuVXRpbHMuZm9jdXNMYXN0RGVzY2VuZGFudChjaGlsZCkpe3JldHVybiB0cnVlO319cmV0dXJuIGZhbHNlO307LyoqCiAqIEBkZXNjIFNldCBBdHRlbXB0IHRvIHNldCBmb2N1cyBvbiB0aGUgY3VycmVudCBub2RlLgogKiBAcGFyYW0gZWxlbWVudAogKiAgICAgICAgICBUaGUgbm9kZSB0byBhdHRlbXB0IHRvIGZvY3VzIG9uLgogKiBAcmV0dXJucwogKiAgdHJ1ZSBpZiBlbGVtZW50IGlzIGZvY3VzZWQuCiAqL2FyaWEuVXRpbHMuYXR0ZW1wdEZvY3VzPWZ1bmN0aW9uKGVsZW1lbnQpe2lmKCFhcmlhLlV0aWxzLmlzRm9jdXNhYmxlKGVsZW1lbnQpKXtyZXR1cm4gZmFsc2U7fWFyaWEuVXRpbHMuSWdub3JlVXRpbEZvY3VzQ2hhbmdlcz10cnVlO3RyeXtlbGVtZW50LmZvY3VzKCk7fWNhdGNoKGUpe31hcmlhLlV0aWxzLklnbm9yZVV0aWxGb2N1c0NoYW5nZXM9ZmFsc2U7cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ9PT1lbGVtZW50O307YXJpYS5VdGlscy5pc0ZvY3VzYWJsZT1mdW5jdGlvbihlbGVtZW50KXtpZihlbGVtZW50LnRhYkluZGV4PjB8fGVsZW1lbnQudGFiSW5kZXg9PT0wJiZlbGVtZW50LmdldEF0dHJpYnV0ZSgndGFiSW5kZXgnKSE9PW51bGwpe3JldHVybiB0cnVlO31pZihlbGVtZW50LmRpc2FibGVkKXtyZXR1cm4gZmFsc2U7fXN3aXRjaChlbGVtZW50Lm5vZGVOYW1lKXtjYXNlJ0EnOnJldHVybiEhZWxlbWVudC5ocmVmJiZlbGVtZW50LnJlbCE9PSdpZ25vcmUnO2Nhc2UnSU5QVVQnOnJldHVybiBlbGVtZW50LnR5cGUhPT0naGlkZGVuJyYmZWxlbWVudC50eXBlIT09J2ZpbGUnO2Nhc2UnQlVUVE9OJzpjYXNlJ1NFTEVDVCc6Y2FzZSdURVhUQVJFQSc6cmV0dXJuIHRydWU7ZGVmYXVsdDpyZXR1cm4gZmFsc2U7fX07LyoqCiAqIOinpuWPkeS4gOS4quS6i+S7tgogKiBtb3VzZWVudGVyLCBtb3VzZWxlYXZlLCBtb3VzZW92ZXIsIGtleXVwLCBjaGFuZ2UsIGNsaWNrIOetiQogKiBAcGFyYW0gIHtFbGVtZW50fSBlbG0KICogQHBhcmFtICB7U3RyaW5nfSBuYW1lCiAqIEBwYXJhbSAgeyp9IG9wdHMKICovYXJpYS5VdGlscy50cmlnZ2VyRXZlbnQ9ZnVuY3Rpb24oZWxtLG5hbWUpe3ZhciBldmVudE5hbWU9dm9pZCAwO2lmKC9ebW91c2V8Y2xpY2svLnRlc3QobmFtZSkpe2V2ZW50TmFtZT0nTW91c2VFdmVudHMnO31lbHNlIGlmKC9ea2V5Ly50ZXN0KG5hbWUpKXtldmVudE5hbWU9J0tleWJvYXJkRXZlbnQnO31lbHNle2V2ZW50TmFtZT0nSFRNTEV2ZW50cyc7fXZhciBldnQ9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoZXZlbnROYW1lKTtmb3IodmFyIF9sZW49YXJndW1lbnRzLmxlbmd0aCxvcHRzPUFycmF5KF9sZW4+Mj9fbGVuLTI6MCksX2tleT0yO19rZXk8X2xlbjtfa2V5Kyspe29wdHNbX2tleS0yXT1hcmd1bWVudHNbX2tleV07fWV2dC5pbml0RXZlbnQuYXBwbHkoZXZ0LFtuYW1lXS5jb25jYXQob3B0cykpO2VsbS5kaXNwYXRjaEV2ZW50P2VsbS5kaXNwYXRjaEV2ZW50KGV2dCk6ZWxtLmZpcmVFdmVudCgnb24nK25hbWUsZXZ0KTtyZXR1cm4gZWxtO307YXJpYS5VdGlscy5rZXlzPXt0YWI6OSxlbnRlcjoxMyxzcGFjZTozMixsZWZ0OjM3LHVwOjM4LHJpZ2h0OjM5LGRvd246NDAsZXNjOjI3fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGFyaWFfdXRpbHM9YXJpYS5VdGlsczsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy91dGlscy9tZW51L2FyaWEtc3VibWVudS5qcwp2YXIgU3ViTWVudT1mdW5jdGlvbiBTdWJNZW51KHBhcmVudCxkb21Ob2RlKXt0aGlzLmRvbU5vZGU9ZG9tTm9kZTt0aGlzLnBhcmVudD1wYXJlbnQ7dGhpcy5zdWJNZW51SXRlbXM9W107dGhpcy5zdWJJbmRleD0wO3RoaXMuaW5pdCgpO307U3ViTWVudS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3RoaXMuc3ViTWVudUl0ZW1zPXRoaXMuZG9tTm9kZS5xdWVyeVNlbGVjdG9yQWxsKCdsaScpO3RoaXMuYWRkTGlzdGVuZXJzKCk7fTtTdWJNZW51LnByb3RvdHlwZS5nb3RvU3ViSW5kZXg9ZnVuY3Rpb24oaWR4KXtpZihpZHg9PT10aGlzLnN1Yk1lbnVJdGVtcy5sZW5ndGgpe2lkeD0wO31lbHNlIGlmKGlkeDwwKXtpZHg9dGhpcy5zdWJNZW51SXRlbXMubGVuZ3RoLTE7fXRoaXMuc3ViTWVudUl0ZW1zW2lkeF0uZm9jdXMoKTt0aGlzLnN1YkluZGV4PWlkeDt9O1N1Yk1lbnUucHJvdG90eXBlLmFkZExpc3RlbmVycz1mdW5jdGlvbigpe3ZhciBfdGhpcz10aGlzO3ZhciBrZXlzPWFyaWFfdXRpbHMua2V5czt2YXIgcGFyZW50Tm9kZT10aGlzLnBhcmVudC5kb21Ob2RlO0FycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwodGhpcy5zdWJNZW51SXRlbXMsZnVuY3Rpb24oZWwpe2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLGZ1bmN0aW9uKGV2ZW50KXt2YXIgcHJldkRlZj1mYWxzZTtzd2l0Y2goZXZlbnQua2V5Q29kZSl7Y2FzZSBrZXlzLmRvd246X3RoaXMuZ290b1N1YkluZGV4KF90aGlzLnN1YkluZGV4KzEpO3ByZXZEZWY9dHJ1ZTticmVhaztjYXNlIGtleXMudXA6X3RoaXMuZ290b1N1YkluZGV4KF90aGlzLnN1YkluZGV4LTEpO3ByZXZEZWY9dHJ1ZTticmVhaztjYXNlIGtleXMudGFiOmFyaWFfdXRpbHMudHJpZ2dlckV2ZW50KHBhcmVudE5vZGUsJ21vdXNlbGVhdmUnKTticmVhaztjYXNlIGtleXMuZW50ZXI6Y2FzZSBrZXlzLnNwYWNlOnByZXZEZWY9dHJ1ZTtldmVudC5jdXJyZW50VGFyZ2V0LmNsaWNrKCk7YnJlYWs7fWlmKHByZXZEZWYpe2V2ZW50LnByZXZlbnREZWZhdWx0KCk7ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7fXJldHVybiBmYWxzZTt9KTt9KTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYXJpYV9zdWJtZW51PVN1Yk1lbnU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9zcmMvdXRpbHMvbWVudS9hcmlhLW1lbnVpdGVtLmpzCnZhciBNZW51SXRlbT1mdW5jdGlvbiBNZW51SXRlbShkb21Ob2RlKXt0aGlzLmRvbU5vZGU9ZG9tTm9kZTt0aGlzLnN1Ym1lbnU9bnVsbDt0aGlzLmluaXQoKTt9O01lbnVJdGVtLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5kb21Ob2RlLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCcwJyk7dmFyIG1lbnVDaGlsZD10aGlzLmRvbU5vZGUucXVlcnlTZWxlY3RvcignLmVsLW1lbnUnKTtpZihtZW51Q2hpbGQpe3RoaXMuc3VibWVudT1uZXcgYXJpYV9zdWJtZW51KHRoaXMsbWVudUNoaWxkKTt9dGhpcy5hZGRMaXN0ZW5lcnMoKTt9O01lbnVJdGVtLnByb3RvdHlwZS5hZGRMaXN0ZW5lcnM9ZnVuY3Rpb24oKXt2YXIgX3RoaXM9dGhpczt2YXIga2V5cz1hcmlhX3V0aWxzLmtleXM7dGhpcy5kb21Ob2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLGZ1bmN0aW9uKGV2ZW50KXt2YXIgcHJldkRlZj1mYWxzZTtzd2l0Y2goZXZlbnQua2V5Q29kZSl7Y2FzZSBrZXlzLmRvd246YXJpYV91dGlscy50cmlnZ2VyRXZlbnQoZXZlbnQuY3VycmVudFRhcmdldCwnbW91c2VlbnRlcicpO190aGlzLnN1Ym1lbnUmJl90aGlzLnN1Ym1lbnUuZ290b1N1YkluZGV4KDApO3ByZXZEZWY9dHJ1ZTticmVhaztjYXNlIGtleXMudXA6YXJpYV91dGlscy50cmlnZ2VyRXZlbnQoZXZlbnQuY3VycmVudFRhcmdldCwnbW91c2VlbnRlcicpO190aGlzLnN1Ym1lbnUmJl90aGlzLnN1Ym1lbnUuZ290b1N1YkluZGV4KF90aGlzLnN1Ym1lbnUuc3ViTWVudUl0ZW1zLmxlbmd0aC0xKTtwcmV2RGVmPXRydWU7YnJlYWs7Y2FzZSBrZXlzLnRhYjphcmlhX3V0aWxzLnRyaWdnZXJFdmVudChldmVudC5jdXJyZW50VGFyZ2V0LCdtb3VzZWxlYXZlJyk7YnJlYWs7Y2FzZSBrZXlzLmVudGVyOmNhc2Uga2V5cy5zcGFjZTpwcmV2RGVmPXRydWU7ZXZlbnQuY3VycmVudFRhcmdldC5jbGljaygpO2JyZWFrO31pZihwcmV2RGVmKXtldmVudC5wcmV2ZW50RGVmYXVsdCgpO319KTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYXJpYV9tZW51aXRlbT1NZW51SXRlbTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy91dGlscy9tZW51L2FyaWEtbWVudWJhci5qcwp2YXIgTWVudT1mdW5jdGlvbiBNZW51KGRvbU5vZGUpe3RoaXMuZG9tTm9kZT1kb21Ob2RlO3RoaXMuaW5pdCgpO307TWVudS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbigpe3ZhciBtZW51Q2hpbGRyZW49dGhpcy5kb21Ob2RlLmNoaWxkTm9kZXM7W10uZmlsdGVyLmNhbGwobWVudUNoaWxkcmVuLGZ1bmN0aW9uKGNoaWxkKXtyZXR1cm4gY2hpbGQubm9kZVR5cGU9PT0xO30pLmZvckVhY2goZnVuY3Rpb24oY2hpbGQpe25ldyBhcmlhX21lbnVpdGVtKGNoaWxkKTsvLyBlc2xpbnQtZGlzYWJsZS1saW5lCn0pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBhcmlhX21lbnViYXI9TWVudTsvLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi91dGlscy9kb20iCnZhciBkb21fPV9fd2VicGFja19yZXF1aXJlX18oMSk7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvbWVudS9zcmMvbWVudS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbWVudXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxNZW51JyxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBjb21wb25lbnQ9aCgndWwnLHthdHRyczp7cm9sZTonbWVudWJhcid9LGtleTordGhpcy5jb2xsYXBzZSxzdHlsZTp7YmFja2dyb3VuZENvbG9yOnRoaXMuYmFja2dyb3VuZENvbG9yfHwnJ30sJ2NsYXNzJzp7J2VsLW1lbnUtLWhvcml6b250YWwnOnRoaXMubW9kZT09PSdob3Jpem9udGFsJywnZWwtbWVudS0tY29sbGFwc2UnOnRoaXMuY29sbGFwc2UsImVsLW1lbnUiOnRydWV9fSxbdGhpcy4kc2xvdHMuZGVmYXVsdF0pO2lmKHRoaXMuY29sbGFwc2VUcmFuc2l0aW9uKXtyZXR1cm4gaCgnZWwtbWVudS1jb2xsYXBzZS10cmFuc2l0aW9uJyxbY29tcG9uZW50XSk7fWVsc2V7cmV0dXJuIGNvbXBvbmVudDt9fSxjb21wb25lbnROYW1lOidFbE1lbnUnLG1peGluczpbZW1pdHRlcl9kZWZhdWx0LmEsbWlncmF0aW5nX2RlZmF1bHQuYV0scHJvdmlkZTpmdW5jdGlvbiBwcm92aWRlKCl7cmV0dXJue3Jvb3RNZW51OnRoaXN9O30sY29tcG9uZW50czp7J2VsLW1lbnUtY29sbGFwc2UtdHJhbnNpdGlvbic6e2Z1bmN0aW9uYWw6dHJ1ZSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGNyZWF0ZUVsZW1lbnQsY29udGV4dCl7dmFyIGRhdGE9e3Byb3BzOnttb2RlOidvdXQtaW4nfSxvbjp7YmVmb3JlRW50ZXI6ZnVuY3Rpb24gYmVmb3JlRW50ZXIoZWwpe2VsLnN0eWxlLm9wYWNpdHk9MC4yO30sZW50ZXI6ZnVuY3Rpb24gZW50ZXIoZWwpe09iamVjdChkb21fWyJhZGRDbGFzcyJdKShlbCwnZWwtb3BhY2l0eS10cmFuc2l0aW9uJyk7ZWwuc3R5bGUub3BhY2l0eT0xO30sYWZ0ZXJFbnRlcjpmdW5jdGlvbiBhZnRlckVudGVyKGVsKXtPYmplY3QoZG9tX1sicmVtb3ZlQ2xhc3MiXSkoZWwsJ2VsLW9wYWNpdHktdHJhbnNpdGlvbicpO2VsLnN0eWxlLm9wYWNpdHk9Jyc7fSxiZWZvcmVMZWF2ZTpmdW5jdGlvbiBiZWZvcmVMZWF2ZShlbCl7aWYoIWVsLmRhdGFzZXQpZWwuZGF0YXNldD17fTtpZihPYmplY3QoZG9tX1siaGFzQ2xhc3MiXSkoZWwsJ2VsLW1lbnUtLWNvbGxhcHNlJykpe09iamVjdChkb21fWyJyZW1vdmVDbGFzcyJdKShlbCwnZWwtbWVudS0tY29sbGFwc2UnKTtlbC5kYXRhc2V0Lm9sZE92ZXJmbG93PWVsLnN0eWxlLm92ZXJmbG93O2VsLmRhdGFzZXQuc2Nyb2xsV2lkdGg9ZWwuY2xpZW50V2lkdGg7T2JqZWN0KGRvbV9bImFkZENsYXNzIl0pKGVsLCdlbC1tZW51LS1jb2xsYXBzZScpO31lbHNle09iamVjdChkb21fWyJhZGRDbGFzcyJdKShlbCwnZWwtbWVudS0tY29sbGFwc2UnKTtlbC5kYXRhc2V0Lm9sZE92ZXJmbG93PWVsLnN0eWxlLm92ZXJmbG93O2VsLmRhdGFzZXQuc2Nyb2xsV2lkdGg9ZWwuY2xpZW50V2lkdGg7T2JqZWN0KGRvbV9bInJlbW92ZUNsYXNzIl0pKGVsLCdlbC1tZW51LS1jb2xsYXBzZScpO31lbC5zdHlsZS53aWR0aD1lbC5zY3JvbGxXaWR0aCsncHgnO2VsLnN0eWxlLm92ZXJmbG93PSdoaWRkZW4nO30sbGVhdmU6ZnVuY3Rpb24gbGVhdmUoZWwpe09iamVjdChkb21fWyJhZGRDbGFzcyJdKShlbCwnaG9yaXpvbnRhbC1jb2xsYXBzZS10cmFuc2l0aW9uJyk7ZWwuc3R5bGUud2lkdGg9ZWwuZGF0YXNldC5zY3JvbGxXaWR0aCsncHgnO319fTtyZXR1cm4gY3JlYXRlRWxlbWVudCgndHJhbnNpdGlvbicsZGF0YSxjb250ZXh0LmNoaWxkcmVuKTt9fX0scHJvcHM6e21vZGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3ZlcnRpY2FsJ30sZGVmYXVsdEFjdGl2ZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30sZGVmYXVsdE9wZW5lZHM6QXJyYXksdW5pcXVlT3BlbmVkOkJvb2xlYW4scm91dGVyOkJvb2xlYW4sbWVudVRyaWdnZXI6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2hvdmVyJ30sY29sbGFwc2U6Qm9vbGVhbixiYWNrZ3JvdW5kQ29sb3I6U3RyaW5nLHRleHRDb2xvcjpTdHJpbmcsYWN0aXZlVGV4dENvbG9yOlN0cmluZyxjb2xsYXBzZVRyYW5zaXRpb246e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57YWN0aXZlSW5kZXg6dGhpcy5kZWZhdWx0QWN0aXZlLG9wZW5lZE1lbnVzOnRoaXMuZGVmYXVsdE9wZW5lZHMmJiF0aGlzLmNvbGxhcHNlP3RoaXMuZGVmYXVsdE9wZW5lZHMuc2xpY2UoMCk6W10saXRlbXM6e30sc3VibWVudXM6e319O30sY29tcHV0ZWQ6e2hvdmVyQmFja2dyb3VuZDpmdW5jdGlvbiBob3ZlckJhY2tncm91bmQoKXtyZXR1cm4gdGhpcy5iYWNrZ3JvdW5kQ29sb3I/dGhpcy5taXhDb2xvcih0aGlzLmJhY2tncm91bmRDb2xvciwwLjIpOicnO30saXNNZW51UG9wdXA6ZnVuY3Rpb24gaXNNZW51UG9wdXAoKXtyZXR1cm4gdGhpcy5tb2RlPT09J2hvcml6b250YWwnfHx0aGlzLm1vZGU9PT0ndmVydGljYWwnJiZ0aGlzLmNvbGxhcHNlO319LHdhdGNoOntkZWZhdWx0QWN0aXZlOmZ1bmN0aW9uIGRlZmF1bHRBY3RpdmUodmFsdWUpe2lmKCF0aGlzLml0ZW1zW3ZhbHVlXSl7dGhpcy5hY3RpdmVJbmRleD1udWxsO310aGlzLnVwZGF0ZUFjdGl2ZUluZGV4KHZhbHVlKTt9LGRlZmF1bHRPcGVuZWRzOmZ1bmN0aW9uIGRlZmF1bHRPcGVuZWRzKHZhbHVlKXtpZighdGhpcy5jb2xsYXBzZSl7dGhpcy5vcGVuZWRNZW51cz12YWx1ZTt9fSxjb2xsYXBzZTpmdW5jdGlvbiBjb2xsYXBzZSh2YWx1ZSl7aWYodmFsdWUpdGhpcy5vcGVuZWRNZW51cz1bXTt0aGlzLmJyb2FkY2FzdCgnRWxTdWJtZW51JywndG9nZ2xlLWNvbGxhcHNlJyx2YWx1ZSk7fX0sbWV0aG9kczp7dXBkYXRlQWN0aXZlSW5kZXg6ZnVuY3Rpb24gdXBkYXRlQWN0aXZlSW5kZXgodmFsKXt2YXIgaXRlbT10aGlzLml0ZW1zW3ZhbF18fHRoaXMuaXRlbXNbdGhpcy5hY3RpdmVJbmRleF18fHRoaXMuaXRlbXNbdGhpcy5kZWZhdWx0QWN0aXZlXTtpZihpdGVtKXt0aGlzLmFjdGl2ZUluZGV4PWl0ZW0uaW5kZXg7dGhpcy5pbml0T3BlbmVkTWVudSgpO31lbHNle3RoaXMuYWN0aXZlSW5kZXg9bnVsbDt9fSxnZXRNaWdyYXRpbmdDb25maWc6ZnVuY3Rpb24gZ2V0TWlncmF0aW5nQ29uZmlnKCl7cmV0dXJue3Byb3BzOnsndGhlbWUnOid0aGVtZSBpcyByZW1vdmVkLid9fTt9LGdldENvbG9yQ2hhbm5lbHM6ZnVuY3Rpb24gZ2V0Q29sb3JDaGFubmVscyhjb2xvcil7Y29sb3I9Y29sb3IucmVwbGFjZSgnIycsJycpO2lmKC9eWzAtOWEtZkEtRl17M30kLy50ZXN0KGNvbG9yKSl7Y29sb3I9Y29sb3Iuc3BsaXQoJycpO2Zvcih2YXIgaT0yO2k+PTA7aS0tKXtjb2xvci5zcGxpY2UoaSwwLGNvbG9yW2ldKTt9Y29sb3I9Y29sb3Iuam9pbignJyk7fWlmKC9eWzAtOWEtZkEtRl17Nn0kLy50ZXN0KGNvbG9yKSl7cmV0dXJue3JlZDpwYXJzZUludChjb2xvci5zbGljZSgwLDIpLDE2KSxncmVlbjpwYXJzZUludChjb2xvci5zbGljZSgyLDQpLDE2KSxibHVlOnBhcnNlSW50KGNvbG9yLnNsaWNlKDQsNiksMTYpfTt9ZWxzZXtyZXR1cm57cmVkOjI1NSxncmVlbjoyNTUsYmx1ZToyNTV9O319LG1peENvbG9yOmZ1bmN0aW9uIG1peENvbG9yKGNvbG9yLHBlcmNlbnQpe3ZhciBfZ2V0Q29sb3JDaGFubmVscz10aGlzLmdldENvbG9yQ2hhbm5lbHMoY29sb3IpLHJlZD1fZ2V0Q29sb3JDaGFubmVscy5yZWQsZ3JlZW49X2dldENvbG9yQ2hhbm5lbHMuZ3JlZW4sYmx1ZT1fZ2V0Q29sb3JDaGFubmVscy5ibHVlO2lmKHBlcmNlbnQ+MCl7Ly8gc2hhZGUgZ2l2ZW4gY29sb3IKcmVkKj0xLXBlcmNlbnQ7Z3JlZW4qPTEtcGVyY2VudDtibHVlKj0xLXBlcmNlbnQ7fWVsc2V7Ly8gdGludCBnaXZlbiBjb2xvcgpyZWQrPSgyNTUtcmVkKSpwZXJjZW50O2dyZWVuKz0oMjU1LWdyZWVuKSpwZXJjZW50O2JsdWUrPSgyNTUtYmx1ZSkqcGVyY2VudDt9cmV0dXJuJ3JnYignK01hdGgucm91bmQocmVkKSsnLCAnK01hdGgucm91bmQoZ3JlZW4pKycsICcrTWF0aC5yb3VuZChibHVlKSsnKSc7fSxhZGRJdGVtOmZ1bmN0aW9uIGFkZEl0ZW0oaXRlbSl7dGhpcy4kc2V0KHRoaXMuaXRlbXMsaXRlbS5pbmRleCxpdGVtKTt9LHJlbW92ZUl0ZW06ZnVuY3Rpb24gcmVtb3ZlSXRlbShpdGVtKXtkZWxldGUgdGhpcy5pdGVtc1tpdGVtLmluZGV4XTt9LGFkZFN1Ym1lbnU6ZnVuY3Rpb24gYWRkU3VibWVudShpdGVtKXt0aGlzLiRzZXQodGhpcy5zdWJtZW51cyxpdGVtLmluZGV4LGl0ZW0pO30scmVtb3ZlU3VibWVudTpmdW5jdGlvbiByZW1vdmVTdWJtZW51KGl0ZW0pe2RlbGV0ZSB0aGlzLnN1Ym1lbnVzW2l0ZW0uaW5kZXhdO30sb3Blbk1lbnU6ZnVuY3Rpb24gb3Blbk1lbnUoaW5kZXgsaW5kZXhQYXRoKXt2YXIgb3BlbmVkTWVudXM9dGhpcy5vcGVuZWRNZW51cztpZihvcGVuZWRNZW51cy5pbmRleE9mKGluZGV4KSE9PS0xKXJldHVybjsvLyDlsIbkuI3lnKjor6Xoj5zljZXot6/lvoTkuIvnmoTlhbbkvZnoj5zljZXmlLbotbcKLy8gY29sbGFwc2UgYWxsIG1lbnUgdGhhdCBhcmUgbm90IHVuZGVyIGN1cnJlbnQgbWVudSBpdGVtCmlmKHRoaXMudW5pcXVlT3BlbmVkKXt0aGlzLm9wZW5lZE1lbnVzPW9wZW5lZE1lbnVzLmZpbHRlcihmdW5jdGlvbihpbmRleCl7cmV0dXJuIGluZGV4UGF0aC5pbmRleE9mKGluZGV4KSE9PS0xO30pO310aGlzLm9wZW5lZE1lbnVzLnB1c2goaW5kZXgpO30sY2xvc2VNZW51OmZ1bmN0aW9uIGNsb3NlTWVudShpbmRleCl7dmFyIGk9dGhpcy5vcGVuZWRNZW51cy5pbmRleE9mKGluZGV4KTtpZihpIT09LTEpe3RoaXMub3BlbmVkTWVudXMuc3BsaWNlKGksMSk7fX0saGFuZGxlU3VibWVudUNsaWNrOmZ1bmN0aW9uIGhhbmRsZVN1Ym1lbnVDbGljayhzdWJtZW51KXt2YXIgaW5kZXg9c3VibWVudS5pbmRleCxpbmRleFBhdGg9c3VibWVudS5pbmRleFBhdGg7dmFyIGlzT3BlbmVkPXRoaXMub3BlbmVkTWVudXMuaW5kZXhPZihpbmRleCkhPT0tMTtpZihpc09wZW5lZCl7dGhpcy5jbG9zZU1lbnUoaW5kZXgpO3RoaXMuJGVtaXQoJ2Nsb3NlJyxpbmRleCxpbmRleFBhdGgpO31lbHNle3RoaXMub3Blbk1lbnUoaW5kZXgsaW5kZXhQYXRoKTt0aGlzLiRlbWl0KCdvcGVuJyxpbmRleCxpbmRleFBhdGgpO319LGhhbmRsZUl0ZW1DbGljazpmdW5jdGlvbiBoYW5kbGVJdGVtQ2xpY2soaXRlbSl7dmFyIF90aGlzPXRoaXM7dmFyIGluZGV4PWl0ZW0uaW5kZXgsaW5kZXhQYXRoPWl0ZW0uaW5kZXhQYXRoO3ZhciBvbGRBY3RpdmVJbmRleD10aGlzLmFjdGl2ZUluZGV4O3ZhciBoYXNJbmRleD1pdGVtLmluZGV4IT09bnVsbDtpZihoYXNJbmRleCl7dGhpcy5hY3RpdmVJbmRleD1pdGVtLmluZGV4O310aGlzLiRlbWl0KCdzZWxlY3QnLGluZGV4LGluZGV4UGF0aCxpdGVtKTtpZih0aGlzLm1vZGU9PT0naG9yaXpvbnRhbCd8fHRoaXMuY29sbGFwc2Upe3RoaXMub3BlbmVkTWVudXM9W107fWlmKHRoaXMucm91dGVyJiZoYXNJbmRleCl7dGhpcy5yb3V0ZVRvSXRlbShpdGVtLGZ1bmN0aW9uKGVycm9yKXtfdGhpcy5hY3RpdmVJbmRleD1vbGRBY3RpdmVJbmRleDtpZihlcnJvcil7Ly8gdnVlLXJvdXRlciAzLjEuMCsgcHVzaC9yZXBsYWNlIGNhdXNlIE5hdmlnYXRpb25EdXBsaWNhdGVkIGVycm9yIAovLyBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L2lzc3Vlcy8xNzA0NAppZihlcnJvci5uYW1lPT09J05hdmlnYXRpb25EdXBsaWNhdGVkJylyZXR1cm47Y29uc29sZS5lcnJvcihlcnJvcik7fX0pO319LC8vIOWIneWni+WMluWxleW8gOiPnOWNlQovLyBpbml0aWFsaXplIG9wZW5lZCBtZW51CmluaXRPcGVuZWRNZW51OmZ1bmN0aW9uIGluaXRPcGVuZWRNZW51KCl7dmFyIF90aGlzMj10aGlzO3ZhciBpbmRleD10aGlzLmFjdGl2ZUluZGV4O3ZhciBhY3RpdmVJdGVtPXRoaXMuaXRlbXNbaW5kZXhdO2lmKCFhY3RpdmVJdGVtfHx0aGlzLm1vZGU9PT0naG9yaXpvbnRhbCd8fHRoaXMuY29sbGFwc2UpcmV0dXJuO3ZhciBpbmRleFBhdGg9YWN0aXZlSXRlbS5pbmRleFBhdGg7Ly8g5bGV5byA6K+l6I+c5Y2V6aG555qE6Lev5b6E5LiK5omA5pyJ5a2Q6I+c5Y2VCi8vIGV4cGFuZCBhbGwgc3VibWVudXMgb2YgdGhlIG1lbnUgaXRlbQppbmRleFBhdGguZm9yRWFjaChmdW5jdGlvbihpbmRleCl7dmFyIHN1Ym1lbnU9X3RoaXMyLnN1Ym1lbnVzW2luZGV4XTtzdWJtZW51JiZfdGhpczIub3Blbk1lbnUoaW5kZXgsc3VibWVudS5pbmRleFBhdGgpO30pO30scm91dGVUb0l0ZW06ZnVuY3Rpb24gcm91dGVUb0l0ZW0oaXRlbSxvbkVycm9yKXt2YXIgcm91dGU9aXRlbS5yb3V0ZXx8aXRlbS5pbmRleDt0cnl7dGhpcy4kcm91dGVyLnB1c2gocm91dGUsZnVuY3Rpb24oKXt9LG9uRXJyb3IpO31jYXRjaChlKXtjb25zb2xlLmVycm9yKGUpO319LG9wZW46ZnVuY3Rpb24gb3BlbihpbmRleCl7dmFyIF90aGlzMz10aGlzO3ZhciBpbmRleFBhdGg9dGhpcy5zdWJtZW51c1tpbmRleC50b1N0cmluZygpXS5pbmRleFBhdGg7aW5kZXhQYXRoLmZvckVhY2goZnVuY3Rpb24oaSl7cmV0dXJuIF90aGlzMy5vcGVuTWVudShpLGluZGV4UGF0aCk7fSk7fSxjbG9zZTpmdW5jdGlvbiBjbG9zZShpbmRleCl7dGhpcy5jbG9zZU1lbnUoaW5kZXgpO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3RoaXMuaW5pdE9wZW5lZE1lbnUoKTt0aGlzLiRvbignaXRlbS1jbGljaycsdGhpcy5oYW5kbGVJdGVtQ2xpY2spO3RoaXMuJG9uKCdzdWJtZW51LWNsaWNrJyx0aGlzLmhhbmRsZVN1Ym1lbnVDbGljayk7aWYodGhpcy5tb2RlPT09J2hvcml6b250YWwnKXtuZXcgYXJpYV9tZW51YmFyKHRoaXMuJGVsKTsvLyBlc2xpbnQtZGlzYWJsZS1saW5lCn10aGlzLiR3YXRjaCgnaXRlbXMnLHRoaXMudXBkYXRlQWN0aXZlSW5kZXgpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVudS9zcmMvbWVudS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX21lbnV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bWVudXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21lbnUvc3JjL21lbnUudnVlCnZhciBtZW51X3JlbmRlcixtZW51X3N0YXRpY1JlbmRlckZuczsvKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIG1lbnVfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfbWVudXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxtZW51X3JlbmRlcixtZW51X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgbWVudV9hcGk7fW1lbnVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9tZW51L3NyYy9tZW51LnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfbWVudT1tZW51X2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVudS9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY19tZW51Lmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHNyY19tZW51Lm5hbWUsc3JjX21lbnUpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19tZW51PXNyY19tZW51Oy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3RyYW5zaXRpb25zL2NvbGxhcHNlLXRyYW5zaXRpb24iCnZhciBjb2xsYXBzZV90cmFuc2l0aW9uXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDIxKTt2YXIgY29sbGFwc2VfdHJhbnNpdGlvbl9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oY29sbGFwc2VfdHJhbnNpdGlvbl8pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVudS9zcmMvbWVudS1taXhpbi5qcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIG1lbnVfbWl4aW49e2luamVjdDpbJ3Jvb3RNZW51J10sY29tcHV0ZWQ6e2luZGV4UGF0aDpmdW5jdGlvbiBpbmRleFBhdGgoKXt2YXIgcGF0aD1bdGhpcy5pbmRleF07dmFyIHBhcmVudD10aGlzLiRwYXJlbnQ7d2hpbGUocGFyZW50LiRvcHRpb25zLmNvbXBvbmVudE5hbWUhPT0nRWxNZW51Jyl7aWYocGFyZW50LmluZGV4KXtwYXRoLnVuc2hpZnQocGFyZW50LmluZGV4KTt9cGFyZW50PXBhcmVudC4kcGFyZW50O31yZXR1cm4gcGF0aDt9LHBhcmVudE1lbnU6ZnVuY3Rpb24gcGFyZW50TWVudSgpe3ZhciBwYXJlbnQ9dGhpcy4kcGFyZW50O3doaWxlKHBhcmVudCYmWydFbE1lbnUnLCdFbFN1Ym1lbnUnXS5pbmRleE9mKHBhcmVudC4kb3B0aW9ucy5jb21wb25lbnROYW1lKT09PS0xKXtwYXJlbnQ9cGFyZW50LiRwYXJlbnQ7fXJldHVybiBwYXJlbnQ7fSxwYWRkaW5nU3R5bGU6ZnVuY3Rpb24gcGFkZGluZ1N0eWxlKCl7aWYodGhpcy5yb290TWVudS5tb2RlIT09J3ZlcnRpY2FsJylyZXR1cm57fTt2YXIgcGFkZGluZz0yMDt2YXIgcGFyZW50PXRoaXMuJHBhcmVudDtpZih0aGlzLnJvb3RNZW51LmNvbGxhcHNlKXtwYWRkaW5nPTIwO31lbHNle3doaWxlKHBhcmVudCYmcGFyZW50LiRvcHRpb25zLmNvbXBvbmVudE5hbWUhPT0nRWxNZW51Jyl7aWYocGFyZW50LiRvcHRpb25zLmNvbXBvbmVudE5hbWU9PT0nRWxTdWJtZW51Jyl7cGFkZGluZys9MjA7fXBhcmVudD1wYXJlbnQuJHBhcmVudDt9fXJldHVybntwYWRkaW5nTGVmdDpwYWRkaW5nKydweCd9O319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9tZW51L3NyYy9zdWJtZW51LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKdmFyIHBvcGVyTWl4aW5zPXtwcm9wczp7dHJhbnNmb3JtT3JpZ2luOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDpmYWxzZX0sb2Zmc2V0OnZ1ZV9wb3BwZXJfZGVmYXVsdC5hLnByb3BzLm9mZnNldCxib3VuZGFyaWVzUGFkZGluZzp2dWVfcG9wcGVyX2RlZmF1bHQuYS5wcm9wcy5ib3VuZGFyaWVzUGFkZGluZyxwb3BwZXJPcHRpb25zOnZ1ZV9wb3BwZXJfZGVmYXVsdC5hLnByb3BzLnBvcHBlck9wdGlvbnN9LGRhdGE6dnVlX3BvcHBlcl9kZWZhdWx0LmEuZGF0YSxtZXRob2RzOnZ1ZV9wb3BwZXJfZGVmYXVsdC5hLm1ldGhvZHMsYmVmb3JlRGVzdHJveTp2dWVfcG9wcGVyX2RlZmF1bHQuYS5iZWZvcmVEZXN0cm95LGRlYWN0aXZhdGVkOnZ1ZV9wb3BwZXJfZGVmYXVsdC5hLmRlYWN0aXZhdGVkfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHN1Ym1lbnV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsU3VibWVudScsY29tcG9uZW50TmFtZTonRWxTdWJtZW51JyxtaXhpbnM6W21lbnVfbWl4aW4sZW1pdHRlcl9kZWZhdWx0LmEscG9wZXJNaXhpbnNdLGNvbXBvbmVudHM6e0VsQ29sbGFwc2VUcmFuc2l0aW9uOmNvbGxhcHNlX3RyYW5zaXRpb25fZGVmYXVsdC5hfSxwcm9wczp7aW5kZXg6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOnRydWV9LHNob3dUaW1lb3V0Ont0eXBlOk51bWJlcixkZWZhdWx0OjMwMH0saGlkZVRpbWVvdXQ6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MzAwfSxwb3BwZXJDbGFzczpTdHJpbmcsZGlzYWJsZWQ6Qm9vbGVhbixwb3BwZXJBcHBlbmRUb0JvZHk6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnVuZGVmaW5lZH19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntwb3BwZXJKUzpudWxsLHRpbWVvdXQ6bnVsbCxpdGVtczp7fSxzdWJtZW51czp7fSxtb3VzZUluQ2hpbGQ6ZmFsc2V9O30sd2F0Y2g6e29wZW5lZDpmdW5jdGlvbiBvcGVuZWQodmFsKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLmlzTWVudVBvcHVwKXt0aGlzLiRuZXh0VGljayhmdW5jdGlvbihfKXtfdGhpcy51cGRhdGVQb3BwZXIoKTt9KTt9fX0sY29tcHV0ZWQ6ey8vIHBvcHBlciBvcHRpb24KYXBwZW5kVG9Cb2R5OmZ1bmN0aW9uIGFwcGVuZFRvQm9keSgpe3JldHVybiB0aGlzLnBvcHBlckFwcGVuZFRvQm9keT09PXVuZGVmaW5lZD90aGlzLmlzRmlyc3RMZXZlbDp0aGlzLnBvcHBlckFwcGVuZFRvQm9keTt9LG1lbnVUcmFuc2l0aW9uTmFtZTpmdW5jdGlvbiBtZW51VHJhbnNpdGlvbk5hbWUoKXtyZXR1cm4gdGhpcy5yb290TWVudS5jb2xsYXBzZT8nZWwtem9vbS1pbi1sZWZ0JzonZWwtem9vbS1pbi10b3AnO30sb3BlbmVkOmZ1bmN0aW9uIG9wZW5lZCgpe3JldHVybiB0aGlzLnJvb3RNZW51Lm9wZW5lZE1lbnVzLmluZGV4T2YodGhpcy5pbmRleCk+LTE7fSxhY3RpdmU6ZnVuY3Rpb24gYWN0aXZlKCl7dmFyIGlzQWN0aXZlPWZhbHNlO3ZhciBzdWJtZW51cz10aGlzLnN1Ym1lbnVzO3ZhciBpdGVtcz10aGlzLml0ZW1zO09iamVjdC5rZXlzKGl0ZW1zKS5mb3JFYWNoKGZ1bmN0aW9uKGluZGV4KXtpZihpdGVtc1tpbmRleF0uYWN0aXZlKXtpc0FjdGl2ZT10cnVlO319KTtPYmplY3Qua2V5cyhzdWJtZW51cykuZm9yRWFjaChmdW5jdGlvbihpbmRleCl7aWYoc3VibWVudXNbaW5kZXhdLmFjdGl2ZSl7aXNBY3RpdmU9dHJ1ZTt9fSk7cmV0dXJuIGlzQWN0aXZlO30saG92ZXJCYWNrZ3JvdW5kOmZ1bmN0aW9uIGhvdmVyQmFja2dyb3VuZCgpe3JldHVybiB0aGlzLnJvb3RNZW51LmhvdmVyQmFja2dyb3VuZDt9LGJhY2tncm91bmRDb2xvcjpmdW5jdGlvbiBiYWNrZ3JvdW5kQ29sb3IoKXtyZXR1cm4gdGhpcy5yb290TWVudS5iYWNrZ3JvdW5kQ29sb3J8fCcnO30sYWN0aXZlVGV4dENvbG9yOmZ1bmN0aW9uIGFjdGl2ZVRleHRDb2xvcigpe3JldHVybiB0aGlzLnJvb3RNZW51LmFjdGl2ZVRleHRDb2xvcnx8Jyc7fSx0ZXh0Q29sb3I6ZnVuY3Rpb24gdGV4dENvbG9yKCl7cmV0dXJuIHRoaXMucm9vdE1lbnUudGV4dENvbG9yfHwnJzt9LG1vZGU6ZnVuY3Rpb24gbW9kZSgpe3JldHVybiB0aGlzLnJvb3RNZW51Lm1vZGU7fSxpc01lbnVQb3B1cDpmdW5jdGlvbiBpc01lbnVQb3B1cCgpe3JldHVybiB0aGlzLnJvb3RNZW51LmlzTWVudVBvcHVwO30sdGl0bGVTdHlsZTpmdW5jdGlvbiB0aXRsZVN0eWxlKCl7aWYodGhpcy5tb2RlIT09J2hvcml6b250YWwnKXtyZXR1cm57Y29sb3I6dGhpcy50ZXh0Q29sb3J9O31yZXR1cm57Ym9yZGVyQm90dG9tQ29sb3I6dGhpcy5hY3RpdmU/dGhpcy5yb290TWVudS5hY3RpdmVUZXh0Q29sb3I/dGhpcy5hY3RpdmVUZXh0Q29sb3I6Jyc6J3RyYW5zcGFyZW50Jyxjb2xvcjp0aGlzLmFjdGl2ZT90aGlzLmFjdGl2ZVRleHRDb2xvcjp0aGlzLnRleHRDb2xvcn07fSxpc0ZpcnN0TGV2ZWw6ZnVuY3Rpb24gaXNGaXJzdExldmVsKCl7dmFyIGlzRmlyc3RMZXZlbD10cnVlO3ZhciBwYXJlbnQ9dGhpcy4kcGFyZW50O3doaWxlKHBhcmVudCYmcGFyZW50IT09dGhpcy5yb290TWVudSl7aWYoWydFbFN1Ym1lbnUnLCdFbE1lbnVJdGVtR3JvdXAnXS5pbmRleE9mKHBhcmVudC4kb3B0aW9ucy5jb21wb25lbnROYW1lKT4tMSl7aXNGaXJzdExldmVsPWZhbHNlO2JyZWFrO31lbHNle3BhcmVudD1wYXJlbnQuJHBhcmVudDt9fXJldHVybiBpc0ZpcnN0TGV2ZWw7fX0sbWV0aG9kczp7aGFuZGxlQ29sbGFwc2VUb2dnbGU6ZnVuY3Rpb24gaGFuZGxlQ29sbGFwc2VUb2dnbGUodmFsdWUpe2lmKHZhbHVlKXt0aGlzLmluaXRQb3BwZXIoKTt9ZWxzZXt0aGlzLmRvRGVzdHJveSgpO319LGFkZEl0ZW06ZnVuY3Rpb24gYWRkSXRlbShpdGVtKXt0aGlzLiRzZXQodGhpcy5pdGVtcyxpdGVtLmluZGV4LGl0ZW0pO30scmVtb3ZlSXRlbTpmdW5jdGlvbiByZW1vdmVJdGVtKGl0ZW0pe2RlbGV0ZSB0aGlzLml0ZW1zW2l0ZW0uaW5kZXhdO30sYWRkU3VibWVudTpmdW5jdGlvbiBhZGRTdWJtZW51KGl0ZW0pe3RoaXMuJHNldCh0aGlzLnN1Ym1lbnVzLGl0ZW0uaW5kZXgsaXRlbSk7fSxyZW1vdmVTdWJtZW51OmZ1bmN0aW9uIHJlbW92ZVN1Ym1lbnUoaXRlbSl7ZGVsZXRlIHRoaXMuc3VibWVudXNbaXRlbS5pbmRleF07fSxoYW5kbGVDbGljazpmdW5jdGlvbiBoYW5kbGVDbGljaygpe3ZhciByb290TWVudT10aGlzLnJvb3RNZW51LGRpc2FibGVkPXRoaXMuZGlzYWJsZWQ7aWYocm9vdE1lbnUubWVudVRyaWdnZXI9PT0naG92ZXInJiZyb290TWVudS5tb2RlPT09J2hvcml6b250YWwnfHxyb290TWVudS5jb2xsYXBzZSYmcm9vdE1lbnUubW9kZT09PSd2ZXJ0aWNhbCd8fGRpc2FibGVkKXtyZXR1cm47fXRoaXMuZGlzcGF0Y2goJ0VsTWVudScsJ3N1Ym1lbnUtY2xpY2snLHRoaXMpO30saGFuZGxlTW91c2VlbnRlcjpmdW5jdGlvbiBoYW5kbGVNb3VzZWVudGVyKGV2ZW50KXt2YXIgX3RoaXMyPXRoaXM7dmFyIHNob3dUaW1lb3V0PWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1sxXTp0aGlzLnNob3dUaW1lb3V0O2lmKCEoJ0FjdGl2ZVhPYmplY3QnaW4gd2luZG93KSYmZXZlbnQudHlwZT09PSdmb2N1cycmJiFldmVudC5yZWxhdGVkVGFyZ2V0KXtyZXR1cm47fXZhciByb290TWVudT10aGlzLnJvb3RNZW51LGRpc2FibGVkPXRoaXMuZGlzYWJsZWQ7aWYocm9vdE1lbnUubWVudVRyaWdnZXI9PT0nY2xpY2snJiZyb290TWVudS5tb2RlPT09J2hvcml6b250YWwnfHwhcm9vdE1lbnUuY29sbGFwc2UmJnJvb3RNZW51Lm1vZGU9PT0ndmVydGljYWwnfHxkaXNhYmxlZCl7cmV0dXJuO310aGlzLmRpc3BhdGNoKCdFbFN1Ym1lbnUnLCdtb3VzZS1lbnRlci1jaGlsZCcpO2NsZWFyVGltZW91dCh0aGlzLnRpbWVvdXQpO3RoaXMudGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7X3RoaXMyLnJvb3RNZW51Lm9wZW5NZW51KF90aGlzMi5pbmRleCxfdGhpczIuaW5kZXhQYXRoKTt9LHNob3dUaW1lb3V0KTtpZih0aGlzLmFwcGVuZFRvQm9keSl7dGhpcy4kcGFyZW50LiRlbC5kaXNwYXRjaEV2ZW50KG5ldyBNb3VzZUV2ZW50KCdtb3VzZWVudGVyJykpO319LGhhbmRsZU1vdXNlbGVhdmU6ZnVuY3Rpb24gaGFuZGxlTW91c2VsZWF2ZSgpe3ZhciBfdGhpczM9dGhpczt2YXIgZGVlcERpc3BhdGNoPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1swXTpmYWxzZTt2YXIgcm9vdE1lbnU9dGhpcy5yb290TWVudTtpZihyb290TWVudS5tZW51VHJpZ2dlcj09PSdjbGljaycmJnJvb3RNZW51Lm1vZGU9PT0naG9yaXpvbnRhbCd8fCFyb290TWVudS5jb2xsYXBzZSYmcm9vdE1lbnUubW9kZT09PSd2ZXJ0aWNhbCcpe3JldHVybjt9dGhpcy5kaXNwYXRjaCgnRWxTdWJtZW51JywnbW91c2UtbGVhdmUtY2hpbGQnKTtjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0KTt0aGlzLnRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpeyFfdGhpczMubW91c2VJbkNoaWxkJiZfdGhpczMucm9vdE1lbnUuY2xvc2VNZW51KF90aGlzMy5pbmRleCk7fSx0aGlzLmhpZGVUaW1lb3V0KTtpZih0aGlzLmFwcGVuZFRvQm9keSYmZGVlcERpc3BhdGNoKXtpZih0aGlzLiRwYXJlbnQuJG9wdGlvbnMubmFtZT09PSdFbFN1Ym1lbnUnKXt0aGlzLiRwYXJlbnQuaGFuZGxlTW91c2VsZWF2ZSh0cnVlKTt9fX0saGFuZGxlVGl0bGVNb3VzZWVudGVyOmZ1bmN0aW9uIGhhbmRsZVRpdGxlTW91c2VlbnRlcigpe2lmKHRoaXMubW9kZT09PSdob3Jpem9udGFsJyYmIXRoaXMucm9vdE1lbnUuYmFja2dyb3VuZENvbG9yKXJldHVybjt2YXIgdGl0bGU9dGhpcy4kcmVmc1snc3VibWVudS10aXRsZSddO3RpdGxlJiYodGl0bGUuc3R5bGUuYmFja2dyb3VuZENvbG9yPXRoaXMucm9vdE1lbnUuaG92ZXJCYWNrZ3JvdW5kKTt9LGhhbmRsZVRpdGxlTW91c2VsZWF2ZTpmdW5jdGlvbiBoYW5kbGVUaXRsZU1vdXNlbGVhdmUoKXtpZih0aGlzLm1vZGU9PT0naG9yaXpvbnRhbCcmJiF0aGlzLnJvb3RNZW51LmJhY2tncm91bmRDb2xvcilyZXR1cm47dmFyIHRpdGxlPXRoaXMuJHJlZnNbJ3N1Ym1lbnUtdGl0bGUnXTt0aXRsZSYmKHRpdGxlLnN0eWxlLmJhY2tncm91bmRDb2xvcj10aGlzLnJvb3RNZW51LmJhY2tncm91bmRDb2xvcnx8JycpO30sdXBkYXRlUGxhY2VtZW50OmZ1bmN0aW9uIHVwZGF0ZVBsYWNlbWVudCgpe3RoaXMuY3VycmVudFBsYWNlbWVudD10aGlzLm1vZGU9PT0naG9yaXpvbnRhbCcmJnRoaXMuaXNGaXJzdExldmVsPydib3R0b20tc3RhcnQnOidyaWdodC1zdGFydCc7fSxpbml0UG9wcGVyOmZ1bmN0aW9uIGluaXRQb3BwZXIoKXt0aGlzLnJlZmVyZW5jZUVsbT10aGlzLiRlbDt0aGlzLnBvcHBlckVsbT10aGlzLiRyZWZzLm1lbnU7dGhpcy51cGRhdGVQbGFjZW1lbnQoKTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt2YXIgX3RoaXM0PXRoaXM7dGhpcy4kb24oJ3RvZ2dsZS1jb2xsYXBzZScsdGhpcy5oYW5kbGVDb2xsYXBzZVRvZ2dsZSk7dGhpcy4kb24oJ21vdXNlLWVudGVyLWNoaWxkJyxmdW5jdGlvbigpe190aGlzNC5tb3VzZUluQ2hpbGQ9dHJ1ZTtjbGVhclRpbWVvdXQoX3RoaXM0LnRpbWVvdXQpO30pO3RoaXMuJG9uKCdtb3VzZS1sZWF2ZS1jaGlsZCcsZnVuY3Rpb24oKXtfdGhpczQubW91c2VJbkNoaWxkPWZhbHNlO2NsZWFyVGltZW91dChfdGhpczQudGltZW91dCk7fSk7fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLnBhcmVudE1lbnUuYWRkU3VibWVudSh0aGlzKTt0aGlzLnJvb3RNZW51LmFkZFN1Ym1lbnUodGhpcyk7dGhpcy5pbml0UG9wcGVyKCk7fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXt0aGlzLnBhcmVudE1lbnUucmVtb3ZlU3VibWVudSh0aGlzKTt0aGlzLnJvb3RNZW51LnJlbW92ZVN1Ym1lbnUodGhpcyk7fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBfdGhpczU9dGhpczt2YXIgYWN0aXZlPXRoaXMuYWN0aXZlLG9wZW5lZD10aGlzLm9wZW5lZCxwYWRkaW5nU3R5bGU9dGhpcy5wYWRkaW5nU3R5bGUsdGl0bGVTdHlsZT10aGlzLnRpdGxlU3R5bGUsYmFja2dyb3VuZENvbG9yPXRoaXMuYmFja2dyb3VuZENvbG9yLHJvb3RNZW51PXRoaXMucm9vdE1lbnUsY3VycmVudFBsYWNlbWVudD10aGlzLmN1cnJlbnRQbGFjZW1lbnQsbWVudVRyYW5zaXRpb25OYW1lPXRoaXMubWVudVRyYW5zaXRpb25OYW1lLG1vZGU9dGhpcy5tb2RlLGRpc2FibGVkPXRoaXMuZGlzYWJsZWQscG9wcGVyQ2xhc3M9dGhpcy5wb3BwZXJDbGFzcywkc2xvdHM9dGhpcy4kc2xvdHMsaXNGaXJzdExldmVsPXRoaXMuaXNGaXJzdExldmVsO3ZhciBwb3B1cE1lbnU9aCgndHJhbnNpdGlvbicse2F0dHJzOntuYW1lOm1lbnVUcmFuc2l0aW9uTmFtZX19LFtoKCdkaXYnLHtyZWY6J21lbnUnLGRpcmVjdGl2ZXM6W3tuYW1lOidzaG93Jyx2YWx1ZTpvcGVuZWR9XSwnY2xhc3MnOlsnZWwtbWVudS0tJyttb2RlLHBvcHBlckNsYXNzXSxvbjp7J21vdXNlZW50ZXInOmZ1bmN0aW9uIG1vdXNlZW50ZXIoJGV2ZW50KXtyZXR1cm4gX3RoaXM1LmhhbmRsZU1vdXNlZW50ZXIoJGV2ZW50LDEwMCk7fSwnbW91c2VsZWF2ZSc6ZnVuY3Rpb24gbW91c2VsZWF2ZSgpe3JldHVybiBfdGhpczUuaGFuZGxlTW91c2VsZWF2ZSh0cnVlKTt9LCdmb2N1cyc6ZnVuY3Rpb24gZm9jdXMoJGV2ZW50KXtyZXR1cm4gX3RoaXM1LmhhbmRsZU1vdXNlZW50ZXIoJGV2ZW50LDEwMCk7fX19LFtoKCd1bCcse2F0dHJzOntyb2xlOidtZW51J30sJ2NsYXNzJzpbJ2VsLW1lbnUgZWwtbWVudS0tcG9wdXAnLCdlbC1tZW51LS1wb3B1cC0nK2N1cnJlbnRQbGFjZW1lbnRdLHN0eWxlOntiYWNrZ3JvdW5kQ29sb3I6cm9vdE1lbnUuYmFja2dyb3VuZENvbG9yfHwnJ319LFskc2xvdHMuZGVmYXVsdF0pXSldKTt2YXIgaW5saW5lTWVudT1oKCdlbC1jb2xsYXBzZS10cmFuc2l0aW9uJyxbaCgndWwnLHthdHRyczp7cm9sZTonbWVudSd9LCdjbGFzcyc6J2VsLW1lbnUgZWwtbWVudS0taW5saW5lJyxkaXJlY3RpdmVzOlt7bmFtZTonc2hvdycsdmFsdWU6b3BlbmVkfV0sc3R5bGU6e2JhY2tncm91bmRDb2xvcjpyb290TWVudS5iYWNrZ3JvdW5kQ29sb3J8fCcnfX0sWyRzbG90cy5kZWZhdWx0XSldKTt2YXIgc3VibWVudVRpdGxlSWNvbj1yb290TWVudS5tb2RlPT09J2hvcml6b250YWwnJiZpc0ZpcnN0TGV2ZWx8fHJvb3RNZW51Lm1vZGU9PT0ndmVydGljYWwnJiYhcm9vdE1lbnUuY29sbGFwc2U/J2VsLWljb24tYXJyb3ctZG93bic6J2VsLWljb24tYXJyb3ctcmlnaHQnO3JldHVybiBoKCdsaScseydjbGFzcyc6eydlbC1zdWJtZW51Jzp0cnVlLCdpcy1hY3RpdmUnOmFjdGl2ZSwnaXMtb3BlbmVkJzpvcGVuZWQsJ2lzLWRpc2FibGVkJzpkaXNhYmxlZH0sYXR0cnM6e3JvbGU6J21lbnVpdGVtJywnYXJpYS1oYXNwb3B1cCc6J3RydWUnLCdhcmlhLWV4cGFuZGVkJzpvcGVuZWR9LG9uOnsnbW91c2VlbnRlcic6dGhpcy5oYW5kbGVNb3VzZWVudGVyLCdtb3VzZWxlYXZlJzpmdW5jdGlvbiBtb3VzZWxlYXZlKCl7cmV0dXJuIF90aGlzNS5oYW5kbGVNb3VzZWxlYXZlKGZhbHNlKTt9LCdmb2N1cyc6dGhpcy5oYW5kbGVNb3VzZWVudGVyfX0sW2goJ2RpdicseydjbGFzcyc6J2VsLXN1Ym1lbnVfX3RpdGxlJyxyZWY6J3N1Ym1lbnUtdGl0bGUnLG9uOnsnY2xpY2snOnRoaXMuaGFuZGxlQ2xpY2ssJ21vdXNlZW50ZXInOnRoaXMuaGFuZGxlVGl0bGVNb3VzZWVudGVyLCdtb3VzZWxlYXZlJzp0aGlzLmhhbmRsZVRpdGxlTW91c2VsZWF2ZX0sc3R5bGU6W3BhZGRpbmdTdHlsZSx0aXRsZVN0eWxlLHtiYWNrZ3JvdW5kQ29sb3I6YmFja2dyb3VuZENvbG9yfV19LFskc2xvdHMudGl0bGUsaCgnaScseydjbGFzcyc6WydlbC1zdWJtZW51X19pY29uLWFycm93JyxzdWJtZW51VGl0bGVJY29uXX0pXSksdGhpcy5pc01lbnVQb3B1cD9wb3B1cE1lbnU6aW5saW5lTWVudV0pO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVudS9zcmMvc3VibWVudS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3N1Ym1lbnV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189c3VibWVudXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21lbnUvc3JjL3N1Ym1lbnUudnVlCnZhciBzdWJtZW51X3JlbmRlcixzdWJtZW51X3N0YXRpY1JlbmRlckZuczsvKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHN1Ym1lbnVfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfc3VibWVudXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxzdWJtZW51X3JlbmRlcixzdWJtZW51X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgc3VibWVudV9hcGk7fXN1Ym1lbnVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9tZW51L3NyYy9zdWJtZW51LnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzdWJtZW51PXN1Ym1lbnVfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zdWJtZW51L2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovc3VibWVudS5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChzdWJtZW51Lm5hbWUsc3VibWVudSk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX3N1Ym1lbnU9c3VibWVudTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL21lbnUvc3JjL21lbnUtaXRlbS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MmE1ZGJmZWEmCnZhciBtZW51X2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF8yYTVkYmZlYV9yZW5kZXI9ZnVuY3Rpb24gbWVudV9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfMmE1ZGJmZWFfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJsaSIse3N0YXRpY0NsYXNzOiJlbC1tZW51LWl0ZW0iLGNsYXNzOnsiaXMtYWN0aXZlIjpfdm0uYWN0aXZlLCJpcy1kaXNhYmxlZCI6X3ZtLmRpc2FibGVkfSxzdHlsZTpbX3ZtLnBhZGRpbmdTdHlsZSxfdm0uaXRlbVN0eWxlLHtiYWNrZ3JvdW5kQ29sb3I6X3ZtLmJhY2tncm91bmRDb2xvcn1dLGF0dHJzOntyb2xlOiJtZW51aXRlbSIsdGFiaW5kZXg6Ii0xIn0sb246e2NsaWNrOl92bS5oYW5kbGVDbGljayxtb3VzZWVudGVyOl92bS5vbk1vdXNlRW50ZXIsZm9jdXM6X3ZtLm9uTW91c2VFbnRlcixibHVyOl92bS5vbk1vdXNlTGVhdmUsbW91c2VsZWF2ZTpfdm0ub25Nb3VzZUxlYXZlfX0sW192bS5wYXJlbnRNZW51LiRvcHRpb25zLmNvbXBvbmVudE5hbWU9PT0iRWxNZW51IiYmX3ZtLnJvb3RNZW51LmNvbGxhcHNlJiZfdm0uJHNsb3RzLnRpdGxlP19jKCJlbC10b29sdGlwIix7YXR0cnM6e2VmZmVjdDoiZGFyayIscGxhY2VtZW50OiJyaWdodCJ9fSxbX2MoImRpdiIse2F0dHJzOntzbG90OiJjb250ZW50In0sc2xvdDoiY29udGVudCJ9LFtfdm0uX3QoInRpdGxlIildLDIpLF9jKCJkaXYiLHtzdGF0aWNTdHlsZTp7cG9zaXRpb246ImFic29sdXRlIixsZWZ0OiIwIix0b3A6IjAiLGhlaWdodDoiMTAwJSIsd2lkdGg6IjEwMCUiLGRpc3BsYXk6ImlubGluZS1ibG9jayIsImJveC1zaXppbmciOiJib3JkZXItYm94IixwYWRkaW5nOiIwIDIwcHgifX0sW192bS5fdCgiZGVmYXVsdCIpXSwyKV0pOltfdm0uX3QoImRlZmF1bHQiKSxfdm0uX3QoInRpdGxlIildXSwyKTt9O3ZhciBtZW51X2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF8yYTVkYmZlYV9zdGF0aWNSZW5kZXJGbnM9W107bWVudV9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfMmE1ZGJmZWFfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21lbnUvc3JjL21lbnUtaXRlbS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MmE1ZGJmZWEmCi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3Rvb2x0aXAiCnZhciB0b29sdGlwXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDI2KTt2YXIgdG9vbHRpcF9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odG9vbHRpcF8pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL21lbnUvc3JjL21lbnUtaXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbWVudV9pdGVtdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbE1lbnVJdGVtJyxjb21wb25lbnROYW1lOidFbE1lbnVJdGVtJyxtaXhpbnM6W21lbnVfbWl4aW4sZW1pdHRlcl9kZWZhdWx0LmFdLGNvbXBvbmVudHM6e0VsVG9vbHRpcDp0b29sdGlwX2RlZmF1bHQuYX0scHJvcHM6e2luZGV4OntkZWZhdWx0Om51bGwsdmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpe3JldHVybiB0eXBlb2YgdmFsPT09J3N0cmluZyd8fHZhbD09PW51bGw7fX0scm91dGU6W1N0cmluZyxPYmplY3RdLGRpc2FibGVkOkJvb2xlYW59LGNvbXB1dGVkOnthY3RpdmU6ZnVuY3Rpb24gYWN0aXZlKCl7cmV0dXJuIHRoaXMuaW5kZXg9PT10aGlzLnJvb3RNZW51LmFjdGl2ZUluZGV4O30saG92ZXJCYWNrZ3JvdW5kOmZ1bmN0aW9uIGhvdmVyQmFja2dyb3VuZCgpe3JldHVybiB0aGlzLnJvb3RNZW51LmhvdmVyQmFja2dyb3VuZDt9LGJhY2tncm91bmRDb2xvcjpmdW5jdGlvbiBiYWNrZ3JvdW5kQ29sb3IoKXtyZXR1cm4gdGhpcy5yb290TWVudS5iYWNrZ3JvdW5kQ29sb3J8fCcnO30sYWN0aXZlVGV4dENvbG9yOmZ1bmN0aW9uIGFjdGl2ZVRleHRDb2xvcigpe3JldHVybiB0aGlzLnJvb3RNZW51LmFjdGl2ZVRleHRDb2xvcnx8Jyc7fSx0ZXh0Q29sb3I6ZnVuY3Rpb24gdGV4dENvbG9yKCl7cmV0dXJuIHRoaXMucm9vdE1lbnUudGV4dENvbG9yfHwnJzt9LG1vZGU6ZnVuY3Rpb24gbW9kZSgpe3JldHVybiB0aGlzLnJvb3RNZW51Lm1vZGU7fSxpdGVtU3R5bGU6ZnVuY3Rpb24gaXRlbVN0eWxlKCl7dmFyIHN0eWxlPXtjb2xvcjp0aGlzLmFjdGl2ZT90aGlzLmFjdGl2ZVRleHRDb2xvcjp0aGlzLnRleHRDb2xvcn07aWYodGhpcy5tb2RlPT09J2hvcml6b250YWwnJiYhdGhpcy5pc05lc3RlZCl7c3R5bGUuYm9yZGVyQm90dG9tQ29sb3I9dGhpcy5hY3RpdmU/dGhpcy5yb290TWVudS5hY3RpdmVUZXh0Q29sb3I/dGhpcy5hY3RpdmVUZXh0Q29sb3I6Jyc6J3RyYW5zcGFyZW50Jzt9cmV0dXJuIHN0eWxlO30saXNOZXN0ZWQ6ZnVuY3Rpb24gaXNOZXN0ZWQoKXtyZXR1cm4gdGhpcy5wYXJlbnRNZW51IT09dGhpcy5yb290TWVudTt9fSxtZXRob2RzOntvbk1vdXNlRW50ZXI6ZnVuY3Rpb24gb25Nb3VzZUVudGVyKCl7aWYodGhpcy5tb2RlPT09J2hvcml6b250YWwnJiYhdGhpcy5yb290TWVudS5iYWNrZ3JvdW5kQ29sb3IpcmV0dXJuO3RoaXMuJGVsLnN0eWxlLmJhY2tncm91bmRDb2xvcj10aGlzLmhvdmVyQmFja2dyb3VuZDt9LG9uTW91c2VMZWF2ZTpmdW5jdGlvbiBvbk1vdXNlTGVhdmUoKXtpZih0aGlzLm1vZGU9PT0naG9yaXpvbnRhbCcmJiF0aGlzLnJvb3RNZW51LmJhY2tncm91bmRDb2xvcilyZXR1cm47dGhpcy4kZWwuc3R5bGUuYmFja2dyb3VuZENvbG9yPXRoaXMuYmFja2dyb3VuZENvbG9yO30saGFuZGxlQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlQ2xpY2soKXtpZighdGhpcy5kaXNhYmxlZCl7dGhpcy5kaXNwYXRjaCgnRWxNZW51JywnaXRlbS1jbGljaycsdGhpcyk7dGhpcy4kZW1pdCgnY2xpY2snLHRoaXMpO319fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLnBhcmVudE1lbnUuYWRkSXRlbSh0aGlzKTt0aGlzLnJvb3RNZW51LmFkZEl0ZW0odGhpcyk7fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXt0aGlzLnBhcmVudE1lbnUucmVtb3ZlSXRlbSh0aGlzKTt0aGlzLnJvb3RNZW51LnJlbW92ZUl0ZW0odGhpcyk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9tZW51L3NyYy9tZW51LWl0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19tZW51X2l0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bWVudV9pdGVtdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVudS9zcmMvbWVudS1pdGVtLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIG1lbnVfaXRlbV9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19tZW51X2l0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWVudV9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfMmE1ZGJmZWFfcmVuZGVyLG1lbnVfaXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzJhNWRiZmVhX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgbWVudV9pdGVtX2FwaTt9bWVudV9pdGVtX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvbWVudS9zcmMvbWVudS1pdGVtLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBtZW51X2l0ZW09bWVudV9pdGVtX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVudS1pdGVtL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovbWVudV9pdGVtLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KG1lbnVfaXRlbS5uYW1lLG1lbnVfaXRlbSk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX21lbnVfaXRlbT1tZW51X2l0ZW07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9tZW51L3NyYy9tZW51LWl0ZW0tZ3JvdXAudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTU0M2I3YmRjJgp2YXIgbWVudV9pdGVtX2dyb3VwdnVlX3R5cGVfdGVtcGxhdGVfaWRfNTQzYjdiZGNfcmVuZGVyPWZ1bmN0aW9uIG1lbnVfaXRlbV9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzU0M2I3YmRjX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygibGkiLHtzdGF0aWNDbGFzczoiZWwtbWVudS1pdGVtLWdyb3VwIn0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtbWVudS1pdGVtLWdyb3VwX190aXRsZSIsc3R5bGU6e3BhZGRpbmdMZWZ0Ol92bS5sZXZlbFBhZGRpbmcrInB4In19LFshX3ZtLiRzbG90cy50aXRsZT9bX3ZtLl92KF92bS5fcyhfdm0udGl0bGUpKV06X3ZtLl90KCJ0aXRsZSIpXSwyKSxfYygidWwiLFtfdm0uX3QoImRlZmF1bHQiKV0sMildKTt9O3ZhciBtZW51X2l0ZW1fZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF81NDNiN2JkY19zdGF0aWNSZW5kZXJGbnM9W107bWVudV9pdGVtX2dyb3VwdnVlX3R5cGVfdGVtcGxhdGVfaWRfNTQzYjdiZGNfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21lbnUvc3JjL21lbnUtaXRlbS1ncm91cC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NTQzYjdiZGMmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL21lbnUvc3JjL21lbnUtaXRlbS1ncm91cC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbWVudV9pdGVtX2dyb3VwdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbE1lbnVJdGVtR3JvdXAnLGNvbXBvbmVudE5hbWU6J0VsTWVudUl0ZW1Hcm91cCcsaW5qZWN0Olsncm9vdE1lbnUnXSxwcm9wczp7dGl0bGU6e3R5cGU6U3RyaW5nfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3BhZGRpbmdMZWZ0OjIwfTt9LGNvbXB1dGVkOntsZXZlbFBhZGRpbmc6ZnVuY3Rpb24gbGV2ZWxQYWRkaW5nKCl7dmFyIHBhZGRpbmc9MjA7dmFyIHBhcmVudD10aGlzLiRwYXJlbnQ7aWYodGhpcy5yb290TWVudS5jb2xsYXBzZSlyZXR1cm4gMjA7d2hpbGUocGFyZW50JiZwYXJlbnQuJG9wdGlvbnMuY29tcG9uZW50TmFtZSE9PSdFbE1lbnUnKXtpZihwYXJlbnQuJG9wdGlvbnMuY29tcG9uZW50TmFtZT09PSdFbFN1Ym1lbnUnKXtwYWRkaW5nKz0yMDt9cGFyZW50PXBhcmVudC4kcGFyZW50O31yZXR1cm4gcGFkZGluZzt9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9tZW51L3NyYy9tZW51LWl0ZW0tZ3JvdXAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19tZW51X2l0ZW1fZ3JvdXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bWVudV9pdGVtX2dyb3VwdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVudS9zcmMvbWVudS1pdGVtLWdyb3VwLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIG1lbnVfaXRlbV9ncm91cF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19tZW51X2l0ZW1fZ3JvdXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWVudV9pdGVtX2dyb3VwdnVlX3R5cGVfdGVtcGxhdGVfaWRfNTQzYjdiZGNfcmVuZGVyLG1lbnVfaXRlbV9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzU0M2I3YmRjX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgbWVudV9pdGVtX2dyb3VwX2FwaTt9bWVudV9pdGVtX2dyb3VwX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvbWVudS9zcmMvbWVudS1pdGVtLWdyb3VwLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBtZW51X2l0ZW1fZ3JvdXA9bWVudV9pdGVtX2dyb3VwX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVudS1pdGVtLWdyb3VwL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovbWVudV9pdGVtX2dyb3VwLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KG1lbnVfaXRlbV9ncm91cC5uYW1lLG1lbnVfaXRlbV9ncm91cCk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX21lbnVfaXRlbV9ncm91cD1tZW51X2l0ZW1fZ3JvdXA7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9pbnB1dC9zcmMvaW5wdXQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTM0M2RkNzc0Jgp2YXIgaW5wdXR2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zNDNkZDc3NF9yZW5kZXI9ZnVuY3Rpb24gaW5wdXR2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zNDNkZDc3NF9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse2NsYXNzOltfdm0udHlwZT09PSJ0ZXh0YXJlYSI/ImVsLXRleHRhcmVhIjoiZWwtaW5wdXQiLF92bS5pbnB1dFNpemU/ImVsLWlucHV0LS0iK192bS5pbnB1dFNpemU6IiIseyJpcy1kaXNhYmxlZCI6X3ZtLmlucHV0RGlzYWJsZWQsImlzLWV4Y2VlZCI6X3ZtLmlucHV0RXhjZWVkLCJlbC1pbnB1dC1ncm91cCI6X3ZtLiRzbG90cy5wcmVwZW5kfHxfdm0uJHNsb3RzLmFwcGVuZCwiZWwtaW5wdXQtZ3JvdXAtLWFwcGVuZCI6X3ZtLiRzbG90cy5hcHBlbmQsImVsLWlucHV0LWdyb3VwLS1wcmVwZW5kIjpfdm0uJHNsb3RzLnByZXBlbmQsImVsLWlucHV0LS1wcmVmaXgiOl92bS4kc2xvdHMucHJlZml4fHxfdm0ucHJlZml4SWNvbiwiZWwtaW5wdXQtLXN1ZmZpeCI6X3ZtLiRzbG90cy5zdWZmaXh8fF92bS5zdWZmaXhJY29ufHxfdm0uY2xlYXJhYmxlfHxfdm0uc2hvd1Bhc3N3b3JkfV0sb246e21vdXNlZW50ZXI6ZnVuY3Rpb24gbW91c2VlbnRlcigkZXZlbnQpe192bS5ob3ZlcmluZz10cnVlO30sbW91c2VsZWF2ZTpmdW5jdGlvbiBtb3VzZWxlYXZlKCRldmVudCl7X3ZtLmhvdmVyaW5nPWZhbHNlO319fSxbX3ZtLnR5cGUhPT0idGV4dGFyZWEiP1tfdm0uJHNsb3RzLnByZXBlbmQ/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1pbnB1dC1ncm91cF9fcHJlcGVuZCJ9LFtfdm0uX3QoInByZXBlbmQiKV0sMik6X3ZtLl9lKCksX3ZtLnR5cGUhPT0idGV4dGFyZWEiP19jKCJpbnB1dCIsX3ZtLl9iKHtyZWY6ImlucHV0IixzdGF0aWNDbGFzczoiZWwtaW5wdXRfX2lubmVyIixhdHRyczp7dGFiaW5kZXg6X3ZtLnRhYmluZGV4LHR5cGU6X3ZtLnNob3dQYXNzd29yZD9fdm0ucGFzc3dvcmRWaXNpYmxlPyJ0ZXh0IjoicGFzc3dvcmQiOl92bS50eXBlLGRpc2FibGVkOl92bS5pbnB1dERpc2FibGVkLHJlYWRvbmx5Ol92bS5yZWFkb25seSxhdXRvY29tcGxldGU6X3ZtLmF1dG9Db21wbGV0ZXx8X3ZtLmF1dG9jb21wbGV0ZSwiYXJpYS1sYWJlbCI6X3ZtLmxhYmVsfSxvbjp7Y29tcG9zaXRpb25zdGFydDpfdm0uaGFuZGxlQ29tcG9zaXRpb25TdGFydCxjb21wb3NpdGlvbnVwZGF0ZTpfdm0uaGFuZGxlQ29tcG9zaXRpb25VcGRhdGUsY29tcG9zaXRpb25lbmQ6X3ZtLmhhbmRsZUNvbXBvc2l0aW9uRW5kLGlucHV0Ol92bS5oYW5kbGVJbnB1dCxmb2N1czpfdm0uaGFuZGxlRm9jdXMsYmx1cjpfdm0uaGFuZGxlQmx1cixjaGFuZ2U6X3ZtLmhhbmRsZUNoYW5nZX19LCJpbnB1dCIsX3ZtLiRhdHRycyxmYWxzZSkpOl92bS5fZSgpLF92bS4kc2xvdHMucHJlZml4fHxfdm0ucHJlZml4SWNvbj9fYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1pbnB1dF9fcHJlZml4In0sW192bS5fdCgicHJlZml4IiksX3ZtLnByZWZpeEljb24/X2MoImkiLHtzdGF0aWNDbGFzczoiZWwtaW5wdXRfX2ljb24iLGNsYXNzOl92bS5wcmVmaXhJY29ufSk6X3ZtLl9lKCldLDIpOl92bS5fZSgpLF92bS5nZXRTdWZmaXhWaXNpYmxlKCk/X2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtaW5wdXRfX3N1ZmZpeCJ9LFtfYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1pbnB1dF9fc3VmZml4LWlubmVyIn0sWyFfdm0uc2hvd0NsZWFyfHwhX3ZtLnNob3dQd2RWaXNpYmxlfHwhX3ZtLmlzV29yZExpbWl0VmlzaWJsZT9bX3ZtLl90KCJzdWZmaXgiKSxfdm0uc3VmZml4SWNvbj9fYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pbnB1dF9faWNvbiIsY2xhc3M6X3ZtLnN1ZmZpeEljb259KTpfdm0uX2UoKV06X3ZtLl9lKCksX3ZtLnNob3dDbGVhcj9fYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pbnB1dF9faWNvbiBlbC1pY29uLWNpcmNsZS1jbG9zZSBlbC1pbnB1dF9fY2xlYXIiLG9uOnttb3VzZWRvd246ZnVuY3Rpb24gbW91c2Vkb3duKCRldmVudCl7JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7fSxjbGljazpfdm0uY2xlYXJ9fSk6X3ZtLl9lKCksX3ZtLnNob3dQd2RWaXNpYmxlP19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWlucHV0X19pY29uIGVsLWljb24tdmlldyBlbC1pbnB1dF9fY2xlYXIiLG9uOntjbGljazpfdm0uaGFuZGxlUGFzc3dvcmRWaXNpYmxlfX0pOl92bS5fZSgpLF92bS5pc1dvcmRMaW1pdFZpc2libGU/X2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtaW5wdXRfX2NvdW50In0sW19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWlucHV0X19jb3VudC1pbm5lciJ9LFtfdm0uX3YoIlxuICAgICAgICAgICAgIitfdm0uX3MoX3ZtLnRleHRMZW5ndGgpKyIvIitfdm0uX3MoX3ZtLnVwcGVyTGltaXQpKyJcbiAgICAgICAgICAiKV0pXSk6X3ZtLl9lKCldLDIpLF92bS52YWxpZGF0ZVN0YXRlP19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWlucHV0X19pY29uIixjbGFzczpbImVsLWlucHV0X192YWxpZGF0ZUljb24iLF92bS52YWxpZGF0ZUljb25dfSk6X3ZtLl9lKCldKTpfdm0uX2UoKSxfdm0uJHNsb3RzLmFwcGVuZD9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWlucHV0LWdyb3VwX19hcHBlbmQifSxbX3ZtLl90KCJhcHBlbmQiKV0sMik6X3ZtLl9lKCldOl9jKCJ0ZXh0YXJlYSIsX3ZtLl9iKHtyZWY6InRleHRhcmVhIixzdGF0aWNDbGFzczoiZWwtdGV4dGFyZWFfX2lubmVyIixzdHlsZTpfdm0udGV4dGFyZWFTdHlsZSxhdHRyczp7dGFiaW5kZXg6X3ZtLnRhYmluZGV4LGRpc2FibGVkOl92bS5pbnB1dERpc2FibGVkLHJlYWRvbmx5Ol92bS5yZWFkb25seSxhdXRvY29tcGxldGU6X3ZtLmF1dG9Db21wbGV0ZXx8X3ZtLmF1dG9jb21wbGV0ZSwiYXJpYS1sYWJlbCI6X3ZtLmxhYmVsfSxvbjp7Y29tcG9zaXRpb25zdGFydDpfdm0uaGFuZGxlQ29tcG9zaXRpb25TdGFydCxjb21wb3NpdGlvbnVwZGF0ZTpfdm0uaGFuZGxlQ29tcG9zaXRpb25VcGRhdGUsY29tcG9zaXRpb25lbmQ6X3ZtLmhhbmRsZUNvbXBvc2l0aW9uRW5kLGlucHV0Ol92bS5oYW5kbGVJbnB1dCxmb2N1czpfdm0uaGFuZGxlRm9jdXMsYmx1cjpfdm0uaGFuZGxlQmx1cixjaGFuZ2U6X3ZtLmhhbmRsZUNoYW5nZX19LCJ0ZXh0YXJlYSIsX3ZtLiRhdHRycyxmYWxzZSkpLF92bS5pc1dvcmRMaW1pdFZpc2libGUmJl92bS50eXBlPT09InRleHRhcmVhIj9fYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1pbnB1dF9fY291bnQifSxbX3ZtLl92KF92bS5fcyhfdm0udGV4dExlbmd0aCkrIi8iK192bS5fcyhfdm0udXBwZXJMaW1pdCkpXSk6X3ZtLl9lKCldLDIpO307dmFyIGlucHV0dnVlX3R5cGVfdGVtcGxhdGVfaWRfMzQzZGQ3NzRfc3RhdGljUmVuZGVyRm5zPVtdO2lucHV0dnVlX3R5cGVfdGVtcGxhdGVfaWRfMzQzZGQ3NzRfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2lucHV0L3NyYy9pbnB1dC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MzQzZGQ3NzQmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvaW5wdXQvc3JjL2NhbGNUZXh0YXJlYUhlaWdodC5qcwp2YXIgaGlkZGVuVGV4dGFyZWE9dm9pZCAwO3ZhciBISURERU5fU1RZTEU9J1xuICBoZWlnaHQ6MCAhaW1wb3J0YW50O1xuICB2aXNpYmlsaXR5OmhpZGRlbiAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzpoaWRkZW4gIWltcG9ydGFudDtcbiAgcG9zaXRpb246YWJzb2x1dGUgIWltcG9ydGFudDtcbiAgei1pbmRleDotMTAwMCAhaW1wb3J0YW50O1xuICB0b3A6MCAhaW1wb3J0YW50O1xuICByaWdodDowICFpbXBvcnRhbnRcbic7dmFyIENPTlRFWFRfU1RZTEU9WydsZXR0ZXItc3BhY2luZycsJ2xpbmUtaGVpZ2h0JywncGFkZGluZy10b3AnLCdwYWRkaW5nLWJvdHRvbScsJ2ZvbnQtZmFtaWx5JywnZm9udC13ZWlnaHQnLCdmb250LXNpemUnLCd0ZXh0LXJlbmRlcmluZycsJ3RleHQtdHJhbnNmb3JtJywnd2lkdGgnLCd0ZXh0LWluZGVudCcsJ3BhZGRpbmctbGVmdCcsJ3BhZGRpbmctcmlnaHQnLCdib3JkZXItd2lkdGgnLCdib3gtc2l6aW5nJ107ZnVuY3Rpb24gY2FsY3VsYXRlTm9kZVN0eWxpbmcodGFyZ2V0RWxlbWVudCl7dmFyIHN0eWxlPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRhcmdldEVsZW1lbnQpO3ZhciBib3hTaXppbmc9c3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnYm94LXNpemluZycpO3ZhciBwYWRkaW5nU2l6ZT1wYXJzZUZsb2F0KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ3BhZGRpbmctYm90dG9tJykpK3BhcnNlRmxvYXQoc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgncGFkZGluZy10b3AnKSk7dmFyIGJvcmRlclNpemU9cGFyc2VGbG9hdChzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCdib3JkZXItYm90dG9tLXdpZHRoJykpK3BhcnNlRmxvYXQoc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnYm9yZGVyLXRvcC13aWR0aCcpKTt2YXIgY29udGV4dFN0eWxlPUNPTlRFWFRfU1RZTEUubWFwKGZ1bmN0aW9uKG5hbWUpe3JldHVybiBuYW1lKyc6JytzdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpO30pLmpvaW4oJzsnKTtyZXR1cm57Y29udGV4dFN0eWxlOmNvbnRleHRTdHlsZSxwYWRkaW5nU2l6ZTpwYWRkaW5nU2l6ZSxib3JkZXJTaXplOmJvcmRlclNpemUsYm94U2l6aW5nOmJveFNpemluZ307fWZ1bmN0aW9uIGNhbGNUZXh0YXJlYUhlaWdodCh0YXJnZXRFbGVtZW50KXt2YXIgbWluUm93cz1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMV06MTt2YXIgbWF4Um93cz1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMl06bnVsbDtpZighaGlkZGVuVGV4dGFyZWEpe2hpZGRlblRleHRhcmVhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChoaWRkZW5UZXh0YXJlYSk7fXZhciBfY2FsY3VsYXRlTm9kZVN0eWxpbmc9Y2FsY3VsYXRlTm9kZVN0eWxpbmcodGFyZ2V0RWxlbWVudCkscGFkZGluZ1NpemU9X2NhbGN1bGF0ZU5vZGVTdHlsaW5nLnBhZGRpbmdTaXplLGJvcmRlclNpemU9X2NhbGN1bGF0ZU5vZGVTdHlsaW5nLmJvcmRlclNpemUsYm94U2l6aW5nPV9jYWxjdWxhdGVOb2RlU3R5bGluZy5ib3hTaXppbmcsY29udGV4dFN0eWxlPV9jYWxjdWxhdGVOb2RlU3R5bGluZy5jb250ZXh0U3R5bGU7aGlkZGVuVGV4dGFyZWEuc2V0QXR0cmlidXRlKCdzdHlsZScsY29udGV4dFN0eWxlKyc7JytISURERU5fU1RZTEUpO2hpZGRlblRleHRhcmVhLnZhbHVlPXRhcmdldEVsZW1lbnQudmFsdWV8fHRhcmdldEVsZW1lbnQucGxhY2Vob2xkZXJ8fCcnO3ZhciBoZWlnaHQ9aGlkZGVuVGV4dGFyZWEuc2Nyb2xsSGVpZ2h0O3ZhciByZXN1bHQ9e307aWYoYm94U2l6aW5nPT09J2JvcmRlci1ib3gnKXtoZWlnaHQ9aGVpZ2h0K2JvcmRlclNpemU7fWVsc2UgaWYoYm94U2l6aW5nPT09J2NvbnRlbnQtYm94Jyl7aGVpZ2h0PWhlaWdodC1wYWRkaW5nU2l6ZTt9aGlkZGVuVGV4dGFyZWEudmFsdWU9Jyc7dmFyIHNpbmdsZVJvd0hlaWdodD1oaWRkZW5UZXh0YXJlYS5zY3JvbGxIZWlnaHQtcGFkZGluZ1NpemU7aWYobWluUm93cyE9PW51bGwpe3ZhciBtaW5IZWlnaHQ9c2luZ2xlUm93SGVpZ2h0Km1pblJvd3M7aWYoYm94U2l6aW5nPT09J2JvcmRlci1ib3gnKXttaW5IZWlnaHQ9bWluSGVpZ2h0K3BhZGRpbmdTaXplK2JvcmRlclNpemU7fWhlaWdodD1NYXRoLm1heChtaW5IZWlnaHQsaGVpZ2h0KTtyZXN1bHQubWluSGVpZ2h0PW1pbkhlaWdodCsncHgnO31pZihtYXhSb3dzIT09bnVsbCl7dmFyIG1heEhlaWdodD1zaW5nbGVSb3dIZWlnaHQqbWF4Um93cztpZihib3hTaXppbmc9PT0nYm9yZGVyLWJveCcpe21heEhlaWdodD1tYXhIZWlnaHQrcGFkZGluZ1NpemUrYm9yZGVyU2l6ZTt9aGVpZ2h0PU1hdGgubWluKG1heEhlaWdodCxoZWlnaHQpO31yZXN1bHQuaGVpZ2h0PWhlaWdodCsncHgnO2hpZGRlblRleHRhcmVhLnBhcmVudE5vZGUmJmhpZGRlblRleHRhcmVhLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaGlkZGVuVGV4dGFyZWEpO2hpZGRlblRleHRhcmVhPW51bGw7cmV0dXJuIHJlc3VsdDt9Oy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3V0aWxzL21lcmdlIgp2YXIgbWVyZ2VfPV9fd2VicGFja19yZXF1aXJlX18oNyk7dmFyIG1lcmdlX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihtZXJnZV8pOy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3V0aWxzL3NoYXJlZCIKdmFyIHNoYXJlZF89X193ZWJwYWNrX3JlcXVpcmVfXygxOSk7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvaW5wdXQvc3JjL2lucHV0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBpbnB1dHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxJbnB1dCcsY29tcG9uZW50TmFtZTonRWxJbnB1dCcsbWl4aW5zOltlbWl0dGVyX2RlZmF1bHQuYSxtaWdyYXRpbmdfZGVmYXVsdC5hXSxpbmhlcml0QXR0cnM6ZmFsc2UsaW5qZWN0OntlbEZvcm06e2RlZmF1bHQ6Jyd9LGVsRm9ybUl0ZW06e2RlZmF1bHQ6Jyd9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57dGV4dGFyZWFDYWxjU3R5bGU6e30saG92ZXJpbmc6ZmFsc2UsZm9jdXNlZDpmYWxzZSxpc0NvbXBvc2luZzpmYWxzZSxwYXNzd29yZFZpc2libGU6ZmFsc2V9O30scHJvcHM6e3ZhbHVlOltTdHJpbmcsTnVtYmVyXSxzaXplOlN0cmluZyxyZXNpemU6U3RyaW5nLGZvcm06U3RyaW5nLGRpc2FibGVkOkJvb2xlYW4scmVhZG9ubHk6Qm9vbGVhbix0eXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0Oid0ZXh0J30sYXV0b3NpemU6e3R5cGU6W0Jvb2xlYW4sT2JqZWN0XSxkZWZhdWx0OmZhbHNlfSxhdXRvY29tcGxldGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J29mZid9LC8qKiBARGVwcmVjYXRlZCBpbiBuZXh0IG1ham9yIHZlcnNpb24gKi9hdXRvQ29tcGxldGU6e3R5cGU6U3RyaW5nLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtmYWxzZSYmZmFsc2U7cmV0dXJuIHRydWU7fX0sdmFsaWRhdGVFdmVudDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sc3VmZml4SWNvbjpTdHJpbmcscHJlZml4SWNvbjpTdHJpbmcsbGFiZWw6U3RyaW5nLGNsZWFyYWJsZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LHNob3dQYXNzd29yZDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LHNob3dXb3JkTGltaXQ6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSx0YWJpbmRleDpTdHJpbmd9LGNvbXB1dGVkOntfZWxGb3JtSXRlbVNpemU6ZnVuY3Rpb24gX2VsRm9ybUl0ZW1TaXplKCl7cmV0dXJuKHRoaXMuZWxGb3JtSXRlbXx8e30pLmVsRm9ybUl0ZW1TaXplO30sdmFsaWRhdGVTdGF0ZTpmdW5jdGlvbiB2YWxpZGF0ZVN0YXRlKCl7cmV0dXJuIHRoaXMuZWxGb3JtSXRlbT90aGlzLmVsRm9ybUl0ZW0udmFsaWRhdGVTdGF0ZTonJzt9LG5lZWRTdGF0dXNJY29uOmZ1bmN0aW9uIG5lZWRTdGF0dXNJY29uKCl7cmV0dXJuIHRoaXMuZWxGb3JtP3RoaXMuZWxGb3JtLnN0YXR1c0ljb246ZmFsc2U7fSx2YWxpZGF0ZUljb246ZnVuY3Rpb24gdmFsaWRhdGVJY29uKCl7cmV0dXJue3ZhbGlkYXRpbmc6J2VsLWljb24tbG9hZGluZycsc3VjY2VzczonZWwtaWNvbi1jaXJjbGUtY2hlY2snLGVycm9yOidlbC1pY29uLWNpcmNsZS1jbG9zZSd9W3RoaXMudmFsaWRhdGVTdGF0ZV07fSx0ZXh0YXJlYVN0eWxlOmZ1bmN0aW9uIHRleHRhcmVhU3R5bGUoKXtyZXR1cm4gbWVyZ2VfZGVmYXVsdCgpKHt9LHRoaXMudGV4dGFyZWFDYWxjU3R5bGUse3Jlc2l6ZTp0aGlzLnJlc2l6ZX0pO30saW5wdXRTaXplOmZ1bmN0aW9uIGlucHV0U2l6ZSgpe3JldHVybiB0aGlzLnNpemV8fHRoaXMuX2VsRm9ybUl0ZW1TaXplfHwodGhpcy4kRUxFTUVOVHx8e30pLnNpemU7fSxpbnB1dERpc2FibGVkOmZ1bmN0aW9uIGlucHV0RGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5kaXNhYmxlZHx8KHRoaXMuZWxGb3JtfHx7fSkuZGlzYWJsZWQ7fSxuYXRpdmVJbnB1dFZhbHVlOmZ1bmN0aW9uIG5hdGl2ZUlucHV0VmFsdWUoKXtyZXR1cm4gdGhpcy52YWx1ZT09PW51bGx8fHRoaXMudmFsdWU9PT11bmRlZmluZWQ/Jyc6U3RyaW5nKHRoaXMudmFsdWUpO30sc2hvd0NsZWFyOmZ1bmN0aW9uIHNob3dDbGVhcigpe3JldHVybiB0aGlzLmNsZWFyYWJsZSYmIXRoaXMuaW5wdXREaXNhYmxlZCYmIXRoaXMucmVhZG9ubHkmJnRoaXMubmF0aXZlSW5wdXRWYWx1ZSYmKHRoaXMuZm9jdXNlZHx8dGhpcy5ob3ZlcmluZyk7fSxzaG93UHdkVmlzaWJsZTpmdW5jdGlvbiBzaG93UHdkVmlzaWJsZSgpe3JldHVybiB0aGlzLnNob3dQYXNzd29yZCYmIXRoaXMuaW5wdXREaXNhYmxlZCYmIXRoaXMucmVhZG9ubHkmJighIXRoaXMubmF0aXZlSW5wdXRWYWx1ZXx8dGhpcy5mb2N1c2VkKTt9LGlzV29yZExpbWl0VmlzaWJsZTpmdW5jdGlvbiBpc1dvcmRMaW1pdFZpc2libGUoKXtyZXR1cm4gdGhpcy5zaG93V29yZExpbWl0JiZ0aGlzLiRhdHRycy5tYXhsZW5ndGgmJih0aGlzLnR5cGU9PT0ndGV4dCd8fHRoaXMudHlwZT09PSd0ZXh0YXJlYScpJiYhdGhpcy5pbnB1dERpc2FibGVkJiYhdGhpcy5yZWFkb25seSYmIXRoaXMuc2hvd1Bhc3N3b3JkO30sdXBwZXJMaW1pdDpmdW5jdGlvbiB1cHBlckxpbWl0KCl7cmV0dXJuIHRoaXMuJGF0dHJzLm1heGxlbmd0aDt9LHRleHRMZW5ndGg6ZnVuY3Rpb24gdGV4dExlbmd0aCgpe2lmKHR5cGVvZiB0aGlzLnZhbHVlPT09J251bWJlcicpe3JldHVybiBTdHJpbmcodGhpcy52YWx1ZSkubGVuZ3RoO31yZXR1cm4odGhpcy52YWx1ZXx8JycpLmxlbmd0aDt9LGlucHV0RXhjZWVkOmZ1bmN0aW9uIGlucHV0RXhjZWVkKCl7Ly8gc2hvdyBleGNlZWQgc3R5bGUgaWYgbGVuZ3RoIG9mIGluaXRpYWwgdmFsdWUgZ3JlYXRlciB0aGVuIG1heGxlbmd0aApyZXR1cm4gdGhpcy5pc1dvcmRMaW1pdFZpc2libGUmJnRoaXMudGV4dExlbmd0aD50aGlzLnVwcGVyTGltaXQ7fX0sd2F0Y2g6e3ZhbHVlOmZ1bmN0aW9uIHZhbHVlKHZhbCl7dGhpcy4kbmV4dFRpY2sodGhpcy5yZXNpemVUZXh0YXJlYSk7aWYodGhpcy52YWxpZGF0ZUV2ZW50KXt0aGlzLmRpc3BhdGNoKCdFbEZvcm1JdGVtJywnZWwuZm9ybS5jaGFuZ2UnLFt2YWxdKTt9fSwvLyBuYXRpdmUgaW5wdXQgdmFsdWUgaXMgc2V0IGV4cGxpY2l0bHkKLy8gZG8gbm90IHVzZSB2LW1vZGVsIC8gOnZhbHVlIGluIHRlbXBsYXRlCi8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudC9pc3N1ZXMvMTQ1MjEKbmF0aXZlSW5wdXRWYWx1ZTpmdW5jdGlvbiBuYXRpdmVJbnB1dFZhbHVlKCl7dGhpcy5zZXROYXRpdmVJbnB1dFZhbHVlKCk7fSwvLyB3aGVuIGNoYW5nZSBiZXR3ZWVuIDxpbnB1dD4gYW5kIDx0ZXh0YXJlYT4sCi8vIHVwZGF0ZSBET00gZGVwZW5kZW50IHZhbHVlIGFuZCBzdHlsZXMKLy8gaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudC9pc3N1ZXMvMTQ4NTcKdHlwZTpmdW5jdGlvbiB0eXBlKCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpcy5zZXROYXRpdmVJbnB1dFZhbHVlKCk7X3RoaXMucmVzaXplVGV4dGFyZWEoKTtfdGhpcy51cGRhdGVJY29uT2Zmc2V0KCk7fSk7fX0sbWV0aG9kczp7Zm9jdXM6ZnVuY3Rpb24gZm9jdXMoKXt0aGlzLmdldElucHV0KCkuZm9jdXMoKTt9LGJsdXI6ZnVuY3Rpb24gYmx1cigpe3RoaXMuZ2V0SW5wdXQoKS5ibHVyKCk7fSxnZXRNaWdyYXRpbmdDb25maWc6ZnVuY3Rpb24gZ2V0TWlncmF0aW5nQ29uZmlnKCl7cmV0dXJue3Byb3BzOnsnaWNvbic6J2ljb24gaXMgcmVtb3ZlZCwgdXNlIHN1ZmZpeC1pY29uIC8gcHJlZml4LWljb24gaW5zdGVhZC4nLCdvbi1pY29uLWNsaWNrJzonb24taWNvbi1jbGljayBpcyByZW1vdmVkLid9LGV2ZW50czp7J2NsaWNrJzonY2xpY2sgaXMgcmVtb3ZlZC4nfX07fSxoYW5kbGVCbHVyOmZ1bmN0aW9uIGhhbmRsZUJsdXIoZXZlbnQpe3RoaXMuZm9jdXNlZD1mYWxzZTt0aGlzLiRlbWl0KCdibHVyJyxldmVudCk7aWYodGhpcy52YWxpZGF0ZUV2ZW50KXt0aGlzLmRpc3BhdGNoKCdFbEZvcm1JdGVtJywnZWwuZm9ybS5ibHVyJyxbdGhpcy52YWx1ZV0pO319LHNlbGVjdDpmdW5jdGlvbiBzZWxlY3QoKXt0aGlzLmdldElucHV0KCkuc2VsZWN0KCk7fSxyZXNpemVUZXh0YXJlYTpmdW5jdGlvbiByZXNpemVUZXh0YXJlYSgpe2lmKHRoaXMuJGlzU2VydmVyKXJldHVybjt2YXIgYXV0b3NpemU9dGhpcy5hdXRvc2l6ZSx0eXBlPXRoaXMudHlwZTtpZih0eXBlIT09J3RleHRhcmVhJylyZXR1cm47aWYoIWF1dG9zaXplKXt0aGlzLnRleHRhcmVhQ2FsY1N0eWxlPXttaW5IZWlnaHQ6Y2FsY1RleHRhcmVhSGVpZ2h0KHRoaXMuJHJlZnMudGV4dGFyZWEpLm1pbkhlaWdodH07cmV0dXJuO312YXIgbWluUm93cz1hdXRvc2l6ZS5taW5Sb3dzO3ZhciBtYXhSb3dzPWF1dG9zaXplLm1heFJvd3M7dGhpcy50ZXh0YXJlYUNhbGNTdHlsZT1jYWxjVGV4dGFyZWFIZWlnaHQodGhpcy4kcmVmcy50ZXh0YXJlYSxtaW5Sb3dzLG1heFJvd3MpO30sc2V0TmF0aXZlSW5wdXRWYWx1ZTpmdW5jdGlvbiBzZXROYXRpdmVJbnB1dFZhbHVlKCl7dmFyIGlucHV0PXRoaXMuZ2V0SW5wdXQoKTtpZighaW5wdXQpcmV0dXJuO2lmKGlucHV0LnZhbHVlPT09dGhpcy5uYXRpdmVJbnB1dFZhbHVlKXJldHVybjtpbnB1dC52YWx1ZT10aGlzLm5hdGl2ZUlucHV0VmFsdWU7fSxoYW5kbGVGb2N1czpmdW5jdGlvbiBoYW5kbGVGb2N1cyhldmVudCl7dGhpcy5mb2N1c2VkPXRydWU7dGhpcy4kZW1pdCgnZm9jdXMnLGV2ZW50KTt9LGhhbmRsZUNvbXBvc2l0aW9uU3RhcnQ6ZnVuY3Rpb24gaGFuZGxlQ29tcG9zaXRpb25TdGFydCgpe3RoaXMuaXNDb21wb3Npbmc9dHJ1ZTt9LGhhbmRsZUNvbXBvc2l0aW9uVXBkYXRlOmZ1bmN0aW9uIGhhbmRsZUNvbXBvc2l0aW9uVXBkYXRlKGV2ZW50KXt2YXIgdGV4dD1ldmVudC50YXJnZXQudmFsdWU7dmFyIGxhc3RDaGFyYWN0ZXI9dGV4dFt0ZXh0Lmxlbmd0aC0xXXx8Jyc7dGhpcy5pc0NvbXBvc2luZz0hT2JqZWN0KHNoYXJlZF9bImlzS29yZWFuIl0pKGxhc3RDaGFyYWN0ZXIpO30saGFuZGxlQ29tcG9zaXRpb25FbmQ6ZnVuY3Rpb24gaGFuZGxlQ29tcG9zaXRpb25FbmQoZXZlbnQpe2lmKHRoaXMuaXNDb21wb3Npbmcpe3RoaXMuaXNDb21wb3Npbmc9ZmFsc2U7dGhpcy5oYW5kbGVJbnB1dChldmVudCk7fX0saGFuZGxlSW5wdXQ6ZnVuY3Rpb24gaGFuZGxlSW5wdXQoZXZlbnQpey8vIHNob3VsZCBub3QgZW1pdCBpbnB1dCBkdXJpbmcgY29tcG9zaXRpb24KLy8gc2VlOiBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L2lzc3Vlcy8xMDUxNgppZih0aGlzLmlzQ29tcG9zaW5nKXJldHVybjsvLyBoYWNrIGZvciBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L2lzc3Vlcy84NTQ4Ci8vIHNob3VsZCByZW1vdmUgdGhlIGZvbGxvd2luZyBsaW5lIHdoZW4gd2UgZG9uJ3Qgc3VwcG9ydCBJRQppZihldmVudC50YXJnZXQudmFsdWU9PT10aGlzLm5hdGl2ZUlucHV0VmFsdWUpcmV0dXJuO3RoaXMuJGVtaXQoJ2lucHV0JyxldmVudC50YXJnZXQudmFsdWUpOy8vIGVuc3VyZSBuYXRpdmUgaW5wdXQgdmFsdWUgaXMgY29udHJvbGxlZAovLyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL2VsZW1lbnQvaXNzdWVzLzEyODUwCnRoaXMuJG5leHRUaWNrKHRoaXMuc2V0TmF0aXZlSW5wdXRWYWx1ZSk7fSxoYW5kbGVDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKGV2ZW50KXt0aGlzLiRlbWl0KCdjaGFuZ2UnLGV2ZW50LnRhcmdldC52YWx1ZSk7fSxjYWxjSWNvbk9mZnNldDpmdW5jdGlvbiBjYWxjSWNvbk9mZnNldChwbGFjZSl7dmFyIGVsTGlzdD1bXS5zbGljZS5jYWxsKHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5lbC1pbnB1dF9fJytwbGFjZSl8fFtdKTtpZighZWxMaXN0Lmxlbmd0aClyZXR1cm47dmFyIGVsPW51bGw7Zm9yKHZhciBpPTA7aTxlbExpc3QubGVuZ3RoO2krKyl7aWYoZWxMaXN0W2ldLnBhcmVudE5vZGU9PT10aGlzLiRlbCl7ZWw9ZWxMaXN0W2ldO2JyZWFrO319aWYoIWVsKXJldHVybjt2YXIgcGVuZGFudE1hcD17c3VmZml4OidhcHBlbmQnLHByZWZpeDoncHJlcGVuZCd9O3ZhciBwZW5kYW50PXBlbmRhbnRNYXBbcGxhY2VdO2lmKHRoaXMuJHNsb3RzW3BlbmRhbnRdKXtlbC5zdHlsZS50cmFuc2Zvcm09J3RyYW5zbGF0ZVgoJysocGxhY2U9PT0nc3VmZml4Jz8nLSc6JycpK3RoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoJy5lbC1pbnB1dC1ncm91cF9fJytwZW5kYW50KS5vZmZzZXRXaWR0aCsncHgpJzt9ZWxzZXtlbC5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7fX0sdXBkYXRlSWNvbk9mZnNldDpmdW5jdGlvbiB1cGRhdGVJY29uT2Zmc2V0KCl7dGhpcy5jYWxjSWNvbk9mZnNldCgncHJlZml4Jyk7dGhpcy5jYWxjSWNvbk9mZnNldCgnc3VmZml4Jyk7fSxjbGVhcjpmdW5jdGlvbiBjbGVhcigpe3RoaXMuJGVtaXQoJ2lucHV0JywnJyk7dGhpcy4kZW1pdCgnY2hhbmdlJywnJyk7dGhpcy4kZW1pdCgnY2xlYXInKTt9LGhhbmRsZVBhc3N3b3JkVmlzaWJsZTpmdW5jdGlvbiBoYW5kbGVQYXNzd29yZFZpc2libGUoKXt2YXIgX3RoaXMyPXRoaXM7dGhpcy5wYXNzd29yZFZpc2libGU9IXRoaXMucGFzc3dvcmRWaXNpYmxlO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7X3RoaXMyLmZvY3VzKCk7fSk7fSxnZXRJbnB1dDpmdW5jdGlvbiBnZXRJbnB1dCgpe3JldHVybiB0aGlzLiRyZWZzLmlucHV0fHx0aGlzLiRyZWZzLnRleHRhcmVhO30sZ2V0U3VmZml4VmlzaWJsZTpmdW5jdGlvbiBnZXRTdWZmaXhWaXNpYmxlKCl7cmV0dXJuIHRoaXMuJHNsb3RzLnN1ZmZpeHx8dGhpcy5zdWZmaXhJY29ufHx0aGlzLnNob3dDbGVhcnx8dGhpcy5zaG93UGFzc3dvcmR8fHRoaXMuaXNXb3JkTGltaXRWaXNpYmxlfHx0aGlzLnZhbGlkYXRlU3RhdGUmJnRoaXMubmVlZFN0YXR1c0ljb247fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy4kb24oJ2lucHV0U2VsZWN0Jyx0aGlzLnNlbGVjdCk7fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLnNldE5hdGl2ZUlucHV0VmFsdWUoKTt0aGlzLnJlc2l6ZVRleHRhcmVhKCk7dGhpcy51cGRhdGVJY29uT2Zmc2V0KCk7fSx1cGRhdGVkOmZ1bmN0aW9uIHVwZGF0ZWQoKXt0aGlzLiRuZXh0VGljayh0aGlzLnVwZGF0ZUljb25PZmZzZXQpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvaW5wdXQvc3JjL2lucHV0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfaW5wdXR2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189aW5wdXR2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9pbnB1dC9zcmMvaW5wdXQudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgaW5wdXRfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfaW5wdXR2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18saW5wdXR2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zNDNkZDc3NF9yZW5kZXIsaW5wdXR2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zNDNkZDc3NF9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGlucHV0X2FwaTt9aW5wdXRfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9pbnB1dC9zcmMvaW5wdXQudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19pbnB1dD1pbnB1dF9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2lucHV0L2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovc3JjX2lucHV0Lmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHNyY19pbnB1dC5uYW1lLHNyY19pbnB1dCk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2lucHV0PXNyY19pbnB1dDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2lucHV0LW51bWJlci9zcmMvaW5wdXQtbnVtYmVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00MmY4Y2Y2NiYKdmFyIGlucHV0X251bWJlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQyZjhjZjY2X3JlbmRlcj1mdW5jdGlvbiBpbnB1dF9udW1iZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF80MmY4Y2Y2Nl9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse2NsYXNzOlsiZWwtaW5wdXQtbnVtYmVyIixfdm0uaW5wdXROdW1iZXJTaXplPyJlbC1pbnB1dC1udW1iZXItLSIrX3ZtLmlucHV0TnVtYmVyU2l6ZToiIix7ImlzLWRpc2FibGVkIjpfdm0uaW5wdXROdW1iZXJEaXNhYmxlZH0seyJpcy13aXRob3V0LWNvbnRyb2xzIjohX3ZtLmNvbnRyb2xzfSx7ImlzLWNvbnRyb2xzLXJpZ2h0Ijpfdm0uY29udHJvbHNBdFJpZ2h0fV0sb246e2RyYWdzdGFydDpmdW5jdGlvbiBkcmFnc3RhcnQoJGV2ZW50KXskZXZlbnQucHJldmVudERlZmF1bHQoKTt9fX0sW192bS5jb250cm9scz9fYygic3BhbiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJyZXBlYXQtY2xpY2siLHJhd05hbWU6InYtcmVwZWF0LWNsaWNrIix2YWx1ZTpfdm0uZGVjcmVhc2UsZXhwcmVzc2lvbjoiZGVjcmVhc2UifV0sc3RhdGljQ2xhc3M6ImVsLWlucHV0LW51bWJlcl9fZGVjcmVhc2UiLGNsYXNzOnsiaXMtZGlzYWJsZWQiOl92bS5taW5EaXNhYmxlZH0sYXR0cnM6e3JvbGU6ImJ1dHRvbiJ9LG9uOntrZXlkb3duOmZ1bmN0aW9uIGtleWRvd24oJGV2ZW50KXtpZighKCJidXR0b24iaW4gJGV2ZW50KSYmX3ZtLl9rKCRldmVudC5rZXlDb2RlLCJlbnRlciIsMTMsJGV2ZW50LmtleSwiRW50ZXIiKSl7cmV0dXJuIG51bGw7fXJldHVybiBfdm0uZGVjcmVhc2UoJGV2ZW50KTt9fX0sW19jKCJpIix7Y2xhc3M6ImVsLWljb24tIisoX3ZtLmNvbnRyb2xzQXRSaWdodD8iYXJyb3ctZG93biI6Im1pbnVzIil9KV0pOl92bS5fZSgpLF92bS5jb250cm9scz9fYygic3BhbiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJyZXBlYXQtY2xpY2siLHJhd05hbWU6InYtcmVwZWF0LWNsaWNrIix2YWx1ZTpfdm0uaW5jcmVhc2UsZXhwcmVzc2lvbjoiaW5jcmVhc2UifV0sc3RhdGljQ2xhc3M6ImVsLWlucHV0LW51bWJlcl9faW5jcmVhc2UiLGNsYXNzOnsiaXMtZGlzYWJsZWQiOl92bS5tYXhEaXNhYmxlZH0sYXR0cnM6e3JvbGU6ImJ1dHRvbiJ9LG9uOntrZXlkb3duOmZ1bmN0aW9uIGtleWRvd24oJGV2ZW50KXtpZighKCJidXR0b24iaW4gJGV2ZW50KSYmX3ZtLl9rKCRldmVudC5rZXlDb2RlLCJlbnRlciIsMTMsJGV2ZW50LmtleSwiRW50ZXIiKSl7cmV0dXJuIG51bGw7fXJldHVybiBfdm0uaW5jcmVhc2UoJGV2ZW50KTt9fX0sW19jKCJpIix7Y2xhc3M6ImVsLWljb24tIisoX3ZtLmNvbnRyb2xzQXRSaWdodD8iYXJyb3ctdXAiOiJwbHVzIil9KV0pOl92bS5fZSgpLF9jKCJlbC1pbnB1dCIse3JlZjoiaW5wdXQiLGF0dHJzOnt2YWx1ZTpfdm0uZGlzcGxheVZhbHVlLHBsYWNlaG9sZGVyOl92bS5wbGFjZWhvbGRlcixkaXNhYmxlZDpfdm0uaW5wdXROdW1iZXJEaXNhYmxlZCxzaXplOl92bS5pbnB1dE51bWJlclNpemUsbWF4Ol92bS5tYXgsbWluOl92bS5taW4sbmFtZTpfdm0ubmFtZSxsYWJlbDpfdm0ubGFiZWx9LG9uOntibHVyOl92bS5oYW5kbGVCbHVyLGZvY3VzOl92bS5oYW5kbGVGb2N1cyxpbnB1dDpfdm0uaGFuZGxlSW5wdXQsY2hhbmdlOl92bS5oYW5kbGVJbnB1dENoYW5nZX0sbmF0aXZlT246e2tleWRvd246W2Z1bmN0aW9uKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwidXAiLDM4LCRldmVudC5rZXksWyJVcCIsIkFycm93VXAiXSkpe3JldHVybiBudWxsO30kZXZlbnQucHJldmVudERlZmF1bHQoKTtyZXR1cm4gX3ZtLmluY3JlYXNlKCRldmVudCk7fSxmdW5jdGlvbigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsImRvd24iLDQwLCRldmVudC5rZXksWyJEb3duIiwiQXJyb3dEb3duIl0pKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIF92bS5kZWNyZWFzZSgkZXZlbnQpO31dfX0pXSwxKTt9O3ZhciBpbnB1dF9udW1iZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF80MmY4Y2Y2Nl9zdGF0aWNSZW5kZXJGbnM9W107aW5wdXRfbnVtYmVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNDJmOGNmNjZfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2lucHV0LW51bWJlci9zcmMvaW5wdXQtbnVtYmVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00MmY4Y2Y2NiYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9zcmMvZGlyZWN0aXZlcy9yZXBlYXQtY2xpY2suanMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciByZXBlYXRfY2xpY2s9e2JpbmQ6ZnVuY3Rpb24gYmluZChlbCxiaW5kaW5nLHZub2RlKXt2YXIgaW50ZXJ2YWw9bnVsbDt2YXIgc3RhcnRUaW1lPXZvaWQgMDt2YXIgaGFuZGxlcj1mdW5jdGlvbiBoYW5kbGVyKCl7cmV0dXJuIHZub2RlLmNvbnRleHRbYmluZGluZy5leHByZXNzaW9uXS5hcHBseSgpO307dmFyIGNsZWFyPWZ1bmN0aW9uIGNsZWFyKCl7aWYoRGF0ZS5ub3coKS1zdGFydFRpbWU8MTAwKXtoYW5kbGVyKCk7fWNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO2ludGVydmFsPW51bGw7fTtPYmplY3QoZG9tX1sib24iXSkoZWwsJ21vdXNlZG93bicsZnVuY3Rpb24oZSl7aWYoZS5idXR0b24hPT0wKXJldHVybjtzdGFydFRpbWU9RGF0ZS5ub3coKTtPYmplY3QoZG9tX1sib25jZSJdKShkb2N1bWVudCwnbW91c2V1cCcsY2xlYXIpO2NsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO2ludGVydmFsPXNldEludGVydmFsKGhhbmRsZXIsMTAwKTt9KTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9pbnB1dC1udW1iZXIvc3JjL2lucHV0LW51bWJlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgaW5wdXRfbnVtYmVydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbElucHV0TnVtYmVyJyxtaXhpbnM6W2ZvY3VzX2RlZmF1bHQoKSgnaW5wdXQnKV0saW5qZWN0OntlbEZvcm06e2RlZmF1bHQ6Jyd9LGVsRm9ybUl0ZW06e2RlZmF1bHQ6Jyd9fSxkaXJlY3RpdmVzOntyZXBlYXRDbGljazpyZXBlYXRfY2xpY2t9LGNvbXBvbmVudHM6e0VsSW5wdXQ6aW5wdXRfZGVmYXVsdC5hfSxwcm9wczp7c3RlcDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxfSxzdGVwU3RyaWN0bHk6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxtYXg6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6SW5maW5pdHl9LG1pbjp7dHlwZTpOdW1iZXIsZGVmYXVsdDotSW5maW5pdHl9LHZhbHVlOnt9LGRpc2FibGVkOkJvb2xlYW4sc2l6ZTpTdHJpbmcsY29udHJvbHM6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGNvbnRyb2xzUG9zaXRpb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Jyd9LG5hbWU6U3RyaW5nLGxhYmVsOlN0cmluZyxwbGFjZWhvbGRlcjpTdHJpbmcscHJlY2lzaW9uOnt0eXBlOk51bWJlcix2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7cmV0dXJuIHZhbD49MCYmdmFsPT09cGFyc2VJbnQodmFsLDEwKTt9fX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2N1cnJlbnRWYWx1ZTowLHVzZXJJbnB1dDpudWxsfTt9LHdhdGNoOnt2YWx1ZTp7aW1tZWRpYXRlOnRydWUsaGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKHZhbHVlKXt2YXIgbmV3VmFsPXZhbHVlPT09dW5kZWZpbmVkP3ZhbHVlOk51bWJlcih2YWx1ZSk7aWYobmV3VmFsIT09dW5kZWZpbmVkKXtpZihpc05hTihuZXdWYWwpKXtyZXR1cm47fWlmKHRoaXMuc3RlcFN0cmljdGx5KXt2YXIgc3RlcFByZWNpc2lvbj10aGlzLmdldFByZWNpc2lvbih0aGlzLnN0ZXApO3ZhciBwcmVjaXNpb25GYWN0b3I9TWF0aC5wb3coMTAsc3RlcFByZWNpc2lvbik7bmV3VmFsPU1hdGgucm91bmQobmV3VmFsL3RoaXMuc3RlcCkqcHJlY2lzaW9uRmFjdG9yKnRoaXMuc3RlcC9wcmVjaXNpb25GYWN0b3I7fWlmKHRoaXMucHJlY2lzaW9uIT09dW5kZWZpbmVkKXtuZXdWYWw9dGhpcy50b1ByZWNpc2lvbihuZXdWYWwsdGhpcy5wcmVjaXNpb24pO319aWYobmV3VmFsPj10aGlzLm1heCluZXdWYWw9dGhpcy5tYXg7aWYobmV3VmFsPD10aGlzLm1pbiluZXdWYWw9dGhpcy5taW47dGhpcy5jdXJyZW50VmFsdWU9bmV3VmFsO3RoaXMudXNlcklucHV0PW51bGw7dGhpcy4kZW1pdCgnaW5wdXQnLG5ld1ZhbCk7fX19LGNvbXB1dGVkOnttaW5EaXNhYmxlZDpmdW5jdGlvbiBtaW5EaXNhYmxlZCgpe3JldHVybiB0aGlzLl9kZWNyZWFzZSh0aGlzLnZhbHVlLHRoaXMuc3RlcCk8dGhpcy5taW47fSxtYXhEaXNhYmxlZDpmdW5jdGlvbiBtYXhEaXNhYmxlZCgpe3JldHVybiB0aGlzLl9pbmNyZWFzZSh0aGlzLnZhbHVlLHRoaXMuc3RlcCk+dGhpcy5tYXg7fSxudW1QcmVjaXNpb246ZnVuY3Rpb24gbnVtUHJlY2lzaW9uKCl7dmFyIHZhbHVlPXRoaXMudmFsdWUsc3RlcD10aGlzLnN0ZXAsZ2V0UHJlY2lzaW9uPXRoaXMuZ2V0UHJlY2lzaW9uLHByZWNpc2lvbj10aGlzLnByZWNpc2lvbjt2YXIgc3RlcFByZWNpc2lvbj1nZXRQcmVjaXNpb24oc3RlcCk7aWYocHJlY2lzaW9uIT09dW5kZWZpbmVkKXtpZihzdGVwUHJlY2lzaW9uPnByZWNpc2lvbil7Y29uc29sZS53YXJuKCdbRWxlbWVudCBXYXJuXVtJbnB1dE51bWJlcl1wcmVjaXNpb24gc2hvdWxkIG5vdCBiZSBsZXNzIHRoYW4gdGhlIGRlY2ltYWwgcGxhY2VzIG9mIHN0ZXAnKTt9cmV0dXJuIHByZWNpc2lvbjt9ZWxzZXtyZXR1cm4gTWF0aC5tYXgoZ2V0UHJlY2lzaW9uKHZhbHVlKSxzdGVwUHJlY2lzaW9uKTt9fSxjb250cm9sc0F0UmlnaHQ6ZnVuY3Rpb24gY29udHJvbHNBdFJpZ2h0KCl7cmV0dXJuIHRoaXMuY29udHJvbHMmJnRoaXMuY29udHJvbHNQb3NpdGlvbj09PSdyaWdodCc7fSxfZWxGb3JtSXRlbVNpemU6ZnVuY3Rpb24gX2VsRm9ybUl0ZW1TaXplKCl7cmV0dXJuKHRoaXMuZWxGb3JtSXRlbXx8e30pLmVsRm9ybUl0ZW1TaXplO30saW5wdXROdW1iZXJTaXplOmZ1bmN0aW9uIGlucHV0TnVtYmVyU2l6ZSgpe3JldHVybiB0aGlzLnNpemV8fHRoaXMuX2VsRm9ybUl0ZW1TaXplfHwodGhpcy4kRUxFTUVOVHx8e30pLnNpemU7fSxpbnB1dE51bWJlckRpc2FibGVkOmZ1bmN0aW9uIGlucHV0TnVtYmVyRGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5kaXNhYmxlZHx8ISEodGhpcy5lbEZvcm18fHt9KS5kaXNhYmxlZDt9LGRpc3BsYXlWYWx1ZTpmdW5jdGlvbiBkaXNwbGF5VmFsdWUoKXtpZih0aGlzLnVzZXJJbnB1dCE9PW51bGwpe3JldHVybiB0aGlzLnVzZXJJbnB1dDt9dmFyIGN1cnJlbnRWYWx1ZT10aGlzLmN1cnJlbnRWYWx1ZTtpZih0eXBlb2YgY3VycmVudFZhbHVlPT09J251bWJlcicpe2lmKHRoaXMuc3RlcFN0cmljdGx5KXt2YXIgc3RlcFByZWNpc2lvbj10aGlzLmdldFByZWNpc2lvbih0aGlzLnN0ZXApO3ZhciBwcmVjaXNpb25GYWN0b3I9TWF0aC5wb3coMTAsc3RlcFByZWNpc2lvbik7Y3VycmVudFZhbHVlPU1hdGgucm91bmQoY3VycmVudFZhbHVlL3RoaXMuc3RlcCkqcHJlY2lzaW9uRmFjdG9yKnRoaXMuc3RlcC9wcmVjaXNpb25GYWN0b3I7fWlmKHRoaXMucHJlY2lzaW9uIT09dW5kZWZpbmVkKXtjdXJyZW50VmFsdWU9Y3VycmVudFZhbHVlLnRvRml4ZWQodGhpcy5wcmVjaXNpb24pO319cmV0dXJuIGN1cnJlbnRWYWx1ZTt9fSxtZXRob2RzOnt0b1ByZWNpc2lvbjpmdW5jdGlvbiB0b1ByZWNpc2lvbihudW0scHJlY2lzaW9uKXtpZihwcmVjaXNpb249PT11bmRlZmluZWQpcHJlY2lzaW9uPXRoaXMubnVtUHJlY2lzaW9uO3JldHVybiBwYXJzZUZsb2F0KE1hdGgucm91bmQobnVtKk1hdGgucG93KDEwLHByZWNpc2lvbikpL01hdGgucG93KDEwLHByZWNpc2lvbikpO30sZ2V0UHJlY2lzaW9uOmZ1bmN0aW9uIGdldFByZWNpc2lvbih2YWx1ZSl7aWYodmFsdWU9PT11bmRlZmluZWQpcmV0dXJuIDA7dmFyIHZhbHVlU3RyaW5nPXZhbHVlLnRvU3RyaW5nKCk7dmFyIGRvdFBvc2l0aW9uPXZhbHVlU3RyaW5nLmluZGV4T2YoJy4nKTt2YXIgcHJlY2lzaW9uPTA7aWYoZG90UG9zaXRpb24hPT0tMSl7cHJlY2lzaW9uPXZhbHVlU3RyaW5nLmxlbmd0aC1kb3RQb3NpdGlvbi0xO31yZXR1cm4gcHJlY2lzaW9uO30sX2luY3JlYXNlOmZ1bmN0aW9uIF9pbmNyZWFzZSh2YWwsc3RlcCl7aWYodHlwZW9mIHZhbCE9PSdudW1iZXInJiZ2YWwhPT11bmRlZmluZWQpcmV0dXJuIHRoaXMuY3VycmVudFZhbHVlO3ZhciBwcmVjaXNpb25GYWN0b3I9TWF0aC5wb3coMTAsdGhpcy5udW1QcmVjaXNpb24pOy8vIFNvbHZlIHRoZSBhY2N1cmFjeSBwcm9ibGVtIG9mIEpTIGRlY2ltYWwgY2FsY3VsYXRpb24gYnkgY29udmVydGluZyB0aGUgdmFsdWUgdG8gaW50ZWdlci4KcmV0dXJuIHRoaXMudG9QcmVjaXNpb24oKHByZWNpc2lvbkZhY3Rvcip2YWwrcHJlY2lzaW9uRmFjdG9yKnN0ZXApL3ByZWNpc2lvbkZhY3Rvcik7fSxfZGVjcmVhc2U6ZnVuY3Rpb24gX2RlY3JlYXNlKHZhbCxzdGVwKXtpZih0eXBlb2YgdmFsIT09J251bWJlcicmJnZhbCE9PXVuZGVmaW5lZClyZXR1cm4gdGhpcy5jdXJyZW50VmFsdWU7dmFyIHByZWNpc2lvbkZhY3Rvcj1NYXRoLnBvdygxMCx0aGlzLm51bVByZWNpc2lvbik7cmV0dXJuIHRoaXMudG9QcmVjaXNpb24oKHByZWNpc2lvbkZhY3Rvcip2YWwtcHJlY2lzaW9uRmFjdG9yKnN0ZXApL3ByZWNpc2lvbkZhY3Rvcik7fSxpbmNyZWFzZTpmdW5jdGlvbiBpbmNyZWFzZSgpe2lmKHRoaXMuaW5wdXROdW1iZXJEaXNhYmxlZHx8dGhpcy5tYXhEaXNhYmxlZClyZXR1cm47dmFyIHZhbHVlPXRoaXMudmFsdWV8fDA7dmFyIG5ld1ZhbD10aGlzLl9pbmNyZWFzZSh2YWx1ZSx0aGlzLnN0ZXApO3RoaXMuc2V0Q3VycmVudFZhbHVlKG5ld1ZhbCk7fSxkZWNyZWFzZTpmdW5jdGlvbiBkZWNyZWFzZSgpe2lmKHRoaXMuaW5wdXROdW1iZXJEaXNhYmxlZHx8dGhpcy5taW5EaXNhYmxlZClyZXR1cm47dmFyIHZhbHVlPXRoaXMudmFsdWV8fDA7dmFyIG5ld1ZhbD10aGlzLl9kZWNyZWFzZSh2YWx1ZSx0aGlzLnN0ZXApO3RoaXMuc2V0Q3VycmVudFZhbHVlKG5ld1ZhbCk7fSxoYW5kbGVCbHVyOmZ1bmN0aW9uIGhhbmRsZUJsdXIoZXZlbnQpe3RoaXMuJGVtaXQoJ2JsdXInLGV2ZW50KTt9LGhhbmRsZUZvY3VzOmZ1bmN0aW9uIGhhbmRsZUZvY3VzKGV2ZW50KXt0aGlzLiRlbWl0KCdmb2N1cycsZXZlbnQpO30sc2V0Q3VycmVudFZhbHVlOmZ1bmN0aW9uIHNldEN1cnJlbnRWYWx1ZShuZXdWYWwpe3ZhciBvbGRWYWw9dGhpcy5jdXJyZW50VmFsdWU7aWYodHlwZW9mIG5ld1ZhbD09PSdudW1iZXInJiZ0aGlzLnByZWNpc2lvbiE9PXVuZGVmaW5lZCl7bmV3VmFsPXRoaXMudG9QcmVjaXNpb24obmV3VmFsLHRoaXMucHJlY2lzaW9uKTt9aWYobmV3VmFsPj10aGlzLm1heCluZXdWYWw9dGhpcy5tYXg7aWYobmV3VmFsPD10aGlzLm1pbiluZXdWYWw9dGhpcy5taW47aWYob2xkVmFsPT09bmV3VmFsKXJldHVybjt0aGlzLnVzZXJJbnB1dD1udWxsO3RoaXMuJGVtaXQoJ2lucHV0JyxuZXdWYWwpO3RoaXMuJGVtaXQoJ2NoYW5nZScsbmV3VmFsLG9sZFZhbCk7dGhpcy5jdXJyZW50VmFsdWU9bmV3VmFsO30saGFuZGxlSW5wdXQ6ZnVuY3Rpb24gaGFuZGxlSW5wdXQodmFsdWUpe3RoaXMudXNlcklucHV0PXZhbHVlO30saGFuZGxlSW5wdXRDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlSW5wdXRDaGFuZ2UodmFsdWUpe3ZhciBuZXdWYWw9dmFsdWU9PT0nJz91bmRlZmluZWQ6TnVtYmVyKHZhbHVlKTtpZighaXNOYU4obmV3VmFsKXx8dmFsdWU9PT0nJyl7dGhpcy5zZXRDdXJyZW50VmFsdWUobmV3VmFsKTt9dGhpcy51c2VySW5wdXQ9bnVsbDt9LHNlbGVjdDpmdW5jdGlvbiBzZWxlY3QoKXt0aGlzLiRyZWZzLmlucHV0LnNlbGVjdCgpO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciBpbm5lcklucHV0PXRoaXMuJHJlZnMuaW5wdXQuJHJlZnMuaW5wdXQ7aW5uZXJJbnB1dC5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCdzcGluYnV0dG9uJyk7aW5uZXJJbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtdmFsdWVtYXgnLHRoaXMubWF4KTtpbm5lcklucHV0LnNldEF0dHJpYnV0ZSgnYXJpYS12YWx1ZW1pbicsdGhpcy5taW4pO2lubmVySW5wdXQuc2V0QXR0cmlidXRlKCdhcmlhLXZhbHVlbm93Jyx0aGlzLmN1cnJlbnRWYWx1ZSk7aW5uZXJJbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtZGlzYWJsZWQnLHRoaXMuaW5wdXROdW1iZXJEaXNhYmxlZCk7fSx1cGRhdGVkOmZ1bmN0aW9uIHVwZGF0ZWQoKXtpZighdGhpcy4kcmVmc3x8IXRoaXMuJHJlZnMuaW5wdXQpcmV0dXJuO3ZhciBpbm5lcklucHV0PXRoaXMuJHJlZnMuaW5wdXQuJHJlZnMuaW5wdXQ7aW5uZXJJbnB1dC5zZXRBdHRyaWJ1dGUoJ2FyaWEtdmFsdWVub3cnLHRoaXMuY3VycmVudFZhbHVlKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2lucHV0LW51bWJlci9zcmMvaW5wdXQtbnVtYmVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfaW5wdXRfbnVtYmVydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWlucHV0X251bWJlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2lucHV0LW51bWJlci9zcmMvaW5wdXQtbnVtYmVyLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGlucHV0X251bWJlcl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19pbnB1dF9udW1iZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18saW5wdXRfbnVtYmVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNDJmOGNmNjZfcmVuZGVyLGlucHV0X251bWJlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQyZjhjZjY2X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgaW5wdXRfbnVtYmVyX2FwaTt9aW5wdXRfbnVtYmVyX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvaW5wdXQtbnVtYmVyL3NyYy9pbnB1dC1udW1iZXIudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGlucHV0X251bWJlcj1pbnB1dF9udW1iZXJfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9pbnB1dC1udW1iZXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9pbnB1dF9udW1iZXIuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoaW5wdXRfbnVtYmVyLm5hbWUsaW5wdXRfbnVtYmVyKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfaW5wdXRfbnVtYmVyPWlucHV0X251bWJlcjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3JhZGlvL3NyYy9yYWRpby52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjljZDYyNjgmCnZhciByYWRpb3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzY5Y2Q2MjY4X3JlbmRlcj1mdW5jdGlvbiByYWRpb3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzY5Y2Q2MjY4X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygibGFiZWwiLHtzdGF0aWNDbGFzczoiZWwtcmFkaW8iLGNsYXNzOltfdm0uYm9yZGVyJiZfdm0ucmFkaW9TaXplPyJlbC1yYWRpby0tIitfdm0ucmFkaW9TaXplOiIiLHsiaXMtZGlzYWJsZWQiOl92bS5pc0Rpc2FibGVkfSx7ImlzLWZvY3VzIjpfdm0uZm9jdXN9LHsiaXMtYm9yZGVyZWQiOl92bS5ib3JkZXJ9LHsiaXMtY2hlY2tlZCI6X3ZtLm1vZGVsPT09X3ZtLmxhYmVsfV0sYXR0cnM6e3JvbGU6InJhZGlvIiwiYXJpYS1jaGVja2VkIjpfdm0ubW9kZWw9PT1fdm0ubGFiZWwsImFyaWEtZGlzYWJsZWQiOl92bS5pc0Rpc2FibGVkLHRhYmluZGV4Ol92bS50YWJJbmRleH0sb246e2tleWRvd246ZnVuY3Rpb24ga2V5ZG93bigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsInNwYWNlIiwzMiwkZXZlbnQua2V5LFsiICIsIlNwYWNlYmFyIl0pKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOyRldmVudC5wcmV2ZW50RGVmYXVsdCgpO192bS5tb2RlbD1fdm0uaXNEaXNhYmxlZD9fdm0ubW9kZWw6X3ZtLmxhYmVsO319fSxbX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtcmFkaW9fX2lucHV0IixjbGFzczp7ImlzLWRpc2FibGVkIjpfdm0uaXNEaXNhYmxlZCwiaXMtY2hlY2tlZCI6X3ZtLm1vZGVsPT09X3ZtLmxhYmVsfX0sW19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLXJhZGlvX19pbm5lciJ9KSxfYygiaW5wdXQiLHtkaXJlY3RpdmVzOlt7bmFtZToibW9kZWwiLHJhd05hbWU6InYtbW9kZWwiLHZhbHVlOl92bS5tb2RlbCxleHByZXNzaW9uOiJtb2RlbCJ9XSxyZWY6InJhZGlvIixzdGF0aWNDbGFzczoiZWwtcmFkaW9fX29yaWdpbmFsIixhdHRyczp7dHlwZToicmFkaW8iLCJhcmlhLWhpZGRlbiI6InRydWUiLG5hbWU6X3ZtLm5hbWUsZGlzYWJsZWQ6X3ZtLmlzRGlzYWJsZWQsdGFiaW5kZXg6Ii0xIn0sZG9tUHJvcHM6e3ZhbHVlOl92bS5sYWJlbCxjaGVja2VkOl92bS5fcShfdm0ubW9kZWwsX3ZtLmxhYmVsKX0sb246e2ZvY3VzOmZ1bmN0aW9uIGZvY3VzKCRldmVudCl7X3ZtLmZvY3VzPXRydWU7fSxibHVyOmZ1bmN0aW9uIGJsdXIoJGV2ZW50KXtfdm0uZm9jdXM9ZmFsc2U7fSxjaGFuZ2U6W2Z1bmN0aW9uKCRldmVudCl7X3ZtLm1vZGVsPV92bS5sYWJlbDt9LF92bS5oYW5kbGVDaGFuZ2VdfX0pXSksX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtcmFkaW9fX2xhYmVsIixvbjp7a2V5ZG93bjpmdW5jdGlvbiBrZXlkb3duKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO319fSxbX3ZtLl90KCJkZWZhdWx0IiksIV92bS4kc2xvdHMuZGVmYXVsdD9bX3ZtLl92KF92bS5fcyhfdm0ubGFiZWwpKV06X3ZtLl9lKCldLDIpXSk7fTt2YXIgcmFkaW92dWVfdHlwZV90ZW1wbGF0ZV9pZF82OWNkNjI2OF9zdGF0aWNSZW5kZXJGbnM9W107cmFkaW92dWVfdHlwZV90ZW1wbGF0ZV9pZF82OWNkNjI2OF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcmFkaW8vc3JjL3JhZGlvLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02OWNkNjI2OCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvcmFkaW8vc3JjL3JhZGlvLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciByYWRpb3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxSYWRpbycsbWl4aW5zOltlbWl0dGVyX2RlZmF1bHQuYV0saW5qZWN0OntlbEZvcm06e2RlZmF1bHQ6Jyd9LGVsRm9ybUl0ZW06e2RlZmF1bHQ6Jyd9fSxjb21wb25lbnROYW1lOidFbFJhZGlvJyxwcm9wczp7dmFsdWU6e30sbGFiZWw6e30sZGlzYWJsZWQ6Qm9vbGVhbixuYW1lOlN0cmluZyxib3JkZXI6Qm9vbGVhbixzaXplOlN0cmluZ30sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2ZvY3VzOmZhbHNlfTt9LGNvbXB1dGVkOntpc0dyb3VwOmZ1bmN0aW9uIGlzR3JvdXAoKXt2YXIgcGFyZW50PXRoaXMuJHBhcmVudDt3aGlsZShwYXJlbnQpe2lmKHBhcmVudC4kb3B0aW9ucy5jb21wb25lbnROYW1lIT09J0VsUmFkaW9Hcm91cCcpe3BhcmVudD1wYXJlbnQuJHBhcmVudDt9ZWxzZXt0aGlzLl9yYWRpb0dyb3VwPXBhcmVudDtyZXR1cm4gdHJ1ZTt9fXJldHVybiBmYWxzZTt9LG1vZGVsOntnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuaXNHcm91cD90aGlzLl9yYWRpb0dyb3VwLnZhbHVlOnRoaXMudmFsdWU7fSxzZXQ6ZnVuY3Rpb24gc2V0KHZhbCl7aWYodGhpcy5pc0dyb3VwKXt0aGlzLmRpc3BhdGNoKCdFbFJhZGlvR3JvdXAnLCdpbnB1dCcsW3ZhbF0pO31lbHNle3RoaXMuJGVtaXQoJ2lucHV0Jyx2YWwpO310aGlzLiRyZWZzLnJhZGlvJiYodGhpcy4kcmVmcy5yYWRpby5jaGVja2VkPXRoaXMubW9kZWw9PT10aGlzLmxhYmVsKTt9fSxfZWxGb3JtSXRlbVNpemU6ZnVuY3Rpb24gX2VsRm9ybUl0ZW1TaXplKCl7cmV0dXJuKHRoaXMuZWxGb3JtSXRlbXx8e30pLmVsRm9ybUl0ZW1TaXplO30scmFkaW9TaXplOmZ1bmN0aW9uIHJhZGlvU2l6ZSgpe3ZhciB0ZW1SYWRpb1NpemU9dGhpcy5zaXplfHx0aGlzLl9lbEZvcm1JdGVtU2l6ZXx8KHRoaXMuJEVMRU1FTlR8fHt9KS5zaXplO3JldHVybiB0aGlzLmlzR3JvdXA/dGhpcy5fcmFkaW9Hcm91cC5yYWRpb0dyb3VwU2l6ZXx8dGVtUmFkaW9TaXplOnRlbVJhZGlvU2l6ZTt9LGlzRGlzYWJsZWQ6ZnVuY3Rpb24gaXNEaXNhYmxlZCgpe3JldHVybiB0aGlzLmlzR3JvdXA/dGhpcy5fcmFkaW9Hcm91cC5kaXNhYmxlZHx8dGhpcy5kaXNhYmxlZHx8KHRoaXMuZWxGb3JtfHx7fSkuZGlzYWJsZWQ6dGhpcy5kaXNhYmxlZHx8KHRoaXMuZWxGb3JtfHx7fSkuZGlzYWJsZWQ7fSx0YWJJbmRleDpmdW5jdGlvbiB0YWJJbmRleCgpe3JldHVybiB0aGlzLmlzRGlzYWJsZWR8fHRoaXMuaXNHcm91cCYmdGhpcy5tb2RlbCE9PXRoaXMubGFiZWw/LTE6MDt9fSxtZXRob2RzOntoYW5kbGVDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpcy4kZW1pdCgnY2hhbmdlJyxfdGhpcy5tb2RlbCk7X3RoaXMuaXNHcm91cCYmX3RoaXMuZGlzcGF0Y2goJ0VsUmFkaW9Hcm91cCcsJ2hhbmRsZUNoYW5nZScsX3RoaXMubW9kZWwpO30pO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3JhZGlvL3NyYy9yYWRpby52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3JhZGlvdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXJhZGlvdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcmFkaW8vc3JjL3JhZGlvLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHJhZGlvX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3JhZGlvdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLHJhZGlvdnVlX3R5cGVfdGVtcGxhdGVfaWRfNjljZDYyNjhfcmVuZGVyLHJhZGlvdnVlX3R5cGVfdGVtcGxhdGVfaWRfNjljZDYyNjhfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciByYWRpb19hcGk7fXJhZGlvX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvcmFkaW8vc3JjL3JhZGlvLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfcmFkaW89cmFkaW9fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9yYWRpby9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY19yYWRpby5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChzcmNfcmFkaW8ubmFtZSxzcmNfcmFkaW8pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19yYWRpbz1zcmNfcmFkaW87Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9yYWRpby9zcmMvcmFkaW8tZ3JvdXAudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTgxOGE3MDRjJgp2YXIgcmFkaW9fZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF84MThhNzA0Y19yZW5kZXI9ZnVuY3Rpb24gcmFkaW9fZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF84MThhNzA0Y19yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoX3ZtLl9lbFRhZyx7dGFnOiJjb21wb25lbnQiLHN0YXRpY0NsYXNzOiJlbC1yYWRpby1ncm91cCIsYXR0cnM6e3JvbGU6InJhZGlvZ3JvdXAifSxvbjp7a2V5ZG93bjpfdm0uaGFuZGxlS2V5ZG93bn19LFtfdm0uX3QoImRlZmF1bHQiKV0sMik7fTt2YXIgcmFkaW9fZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF84MThhNzA0Y19zdGF0aWNSZW5kZXJGbnM9W107cmFkaW9fZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF84MThhNzA0Y19yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcmFkaW8vc3JjL3JhZGlvLWdyb3VwLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD04MThhNzA0YyYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvcmFkaW8vc3JjL3JhZGlvLWdyb3VwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIGtleUNvZGU9T2JqZWN0LmZyZWV6ZSh7TEVGVDozNyxVUDozOCxSSUdIVDozOSxET1dOOjQwfSk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciByYWRpb19ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxSYWRpb0dyb3VwJyxjb21wb25lbnROYW1lOidFbFJhZGlvR3JvdXAnLGluamVjdDp7ZWxGb3JtSXRlbTp7ZGVmYXVsdDonJ319LG1peGluczpbZW1pdHRlcl9kZWZhdWx0LmFdLHByb3BzOnt2YWx1ZTp7fSxzaXplOlN0cmluZyxmaWxsOlN0cmluZyx0ZXh0Q29sb3I6U3RyaW5nLGRpc2FibGVkOkJvb2xlYW59LGNvbXB1dGVkOntfZWxGb3JtSXRlbVNpemU6ZnVuY3Rpb24gX2VsRm9ybUl0ZW1TaXplKCl7cmV0dXJuKHRoaXMuZWxGb3JtSXRlbXx8e30pLmVsRm9ybUl0ZW1TaXplO30sX2VsVGFnOmZ1bmN0aW9uIF9lbFRhZygpe3JldHVybih0aGlzLiR2bm9kZS5kYXRhfHx7fSkudGFnfHwnZGl2Jzt9LHJhZGlvR3JvdXBTaXplOmZ1bmN0aW9uIHJhZGlvR3JvdXBTaXplKCl7cmV0dXJuIHRoaXMuc2l6ZXx8dGhpcy5fZWxGb3JtSXRlbVNpemV8fCh0aGlzLiRFTEVNRU5UfHx7fSkuc2l6ZTt9fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt2YXIgX3RoaXM9dGhpczt0aGlzLiRvbignaGFuZGxlQ2hhbmdlJyxmdW5jdGlvbih2YWx1ZSl7X3RoaXMuJGVtaXQoJ2NoYW5nZScsdmFsdWUpO30pO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7Ly8g5b2TcmFkaW9Hcm91cOayoeaciem7mOiupOmAiemhueaXtu+8jOesrOS4gOS4quWPr+S7pemAieS4rVRhYuWvvOiIqgp2YXIgcmFkaW9zPXRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ1t0eXBlPXJhZGlvXScpO3ZhciBmaXJzdExhYmVsPXRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tyb2xlPXJhZGlvXScpWzBdO2lmKCFbXS5zb21lLmNhbGwocmFkaW9zLGZ1bmN0aW9uKHJhZGlvKXtyZXR1cm4gcmFkaW8uY2hlY2tlZDt9KSYmZmlyc3RMYWJlbCl7Zmlyc3RMYWJlbC50YWJJbmRleD0wO319LG1ldGhvZHM6e2hhbmRsZUtleWRvd246ZnVuY3Rpb24gaGFuZGxlS2V5ZG93bihlKXsvLyDlt6blj7PkuIrkuIvmjInplK4g5Y+v5Lul5ZyocmFkaW/nu4TlhoXliIfmjaLkuI3lkIzpgInpobkKdmFyIHRhcmdldD1lLnRhcmdldDt2YXIgY2xhc3NOYW1lPXRhcmdldC5ub2RlTmFtZT09PSdJTlBVVCc/J1t0eXBlPXJhZGlvXSc6J1tyb2xlPXJhZGlvXSc7dmFyIHJhZGlvcz10aGlzLiRlbC5xdWVyeVNlbGVjdG9yQWxsKGNsYXNzTmFtZSk7dmFyIGxlbmd0aD1yYWRpb3MubGVuZ3RoO3ZhciBpbmRleD1bXS5pbmRleE9mLmNhbGwocmFkaW9zLHRhcmdldCk7dmFyIHJvbGVSYWRpb3M9dGhpcy4kZWwucXVlcnlTZWxlY3RvckFsbCgnW3JvbGU9cmFkaW9dJyk7c3dpdGNoKGUua2V5Q29kZSl7Y2FzZSBrZXlDb2RlLkxFRlQ6Y2FzZSBrZXlDb2RlLlVQOmUuc3RvcFByb3BhZ2F0aW9uKCk7ZS5wcmV2ZW50RGVmYXVsdCgpO2lmKGluZGV4PT09MCl7cm9sZVJhZGlvc1tsZW5ndGgtMV0uY2xpY2soKTtyb2xlUmFkaW9zW2xlbmd0aC0xXS5mb2N1cygpO31lbHNle3JvbGVSYWRpb3NbaW5kZXgtMV0uY2xpY2soKTtyb2xlUmFkaW9zW2luZGV4LTFdLmZvY3VzKCk7fWJyZWFrO2Nhc2Uga2V5Q29kZS5SSUdIVDpjYXNlIGtleUNvZGUuRE9XTjppZihpbmRleD09PWxlbmd0aC0xKXtlLnN0b3BQcm9wYWdhdGlvbigpO2UucHJldmVudERlZmF1bHQoKTtyb2xlUmFkaW9zWzBdLmNsaWNrKCk7cm9sZVJhZGlvc1swXS5mb2N1cygpO31lbHNle3JvbGVSYWRpb3NbaW5kZXgrMV0uY2xpY2soKTtyb2xlUmFkaW9zW2luZGV4KzFdLmZvY3VzKCk7fWJyZWFrO2RlZmF1bHQ6YnJlYWs7fX19LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZShfdmFsdWUpe3RoaXMuZGlzcGF0Y2goJ0VsRm9ybUl0ZW0nLCdlbC5mb3JtLmNoYW5nZScsW3RoaXMudmFsdWVdKTt9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9yYWRpby9zcmMvcmFkaW8tZ3JvdXAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19yYWRpb19ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1yYWRpb19ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3JhZGlvL3NyYy9yYWRpby1ncm91cC52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciByYWRpb19ncm91cF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19yYWRpb19ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxyYWRpb19ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzgxOGE3MDRjX3JlbmRlcixyYWRpb19ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzgxOGE3MDRjX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgcmFkaW9fZ3JvdXBfYXBpO31yYWRpb19ncm91cF9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3JhZGlvL3NyYy9yYWRpby1ncm91cC52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcmFkaW9fZ3JvdXA9cmFkaW9fZ3JvdXBfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9yYWRpby1ncm91cC9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3JhZGlvX2dyb3VwLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHJhZGlvX2dyb3VwLm5hbWUscmFkaW9fZ3JvdXApO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19yYWRpb19ncm91cD1yYWRpb19ncm91cDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3JhZGlvL3NyYy9yYWRpby1idXR0b24udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE4YTc3YTMyJgp2YXIgcmFkaW9fYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfMThhNzdhMzJfcmVuZGVyPWZ1bmN0aW9uIHJhZGlvX2J1dHRvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzE4YTc3YTMyX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygibGFiZWwiLHtzdGF0aWNDbGFzczoiZWwtcmFkaW8tYnV0dG9uIixjbGFzczpbX3ZtLnNpemU/ImVsLXJhZGlvLWJ1dHRvbi0tIitfdm0uc2l6ZToiIix7ImlzLWFjdGl2ZSI6X3ZtLnZhbHVlPT09X3ZtLmxhYmVsfSx7ImlzLWRpc2FibGVkIjpfdm0uaXNEaXNhYmxlZH0seyJpcy1mb2N1cyI6X3ZtLmZvY3VzfV0sYXR0cnM6e3JvbGU6InJhZGlvIiwiYXJpYS1jaGVja2VkIjpfdm0udmFsdWU9PT1fdm0ubGFiZWwsImFyaWEtZGlzYWJsZWQiOl92bS5pc0Rpc2FibGVkLHRhYmluZGV4Ol92bS50YWJJbmRleH0sb246e2tleWRvd246ZnVuY3Rpb24ga2V5ZG93bigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsInNwYWNlIiwzMiwkZXZlbnQua2V5LFsiICIsIlNwYWNlYmFyIl0pKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOyRldmVudC5wcmV2ZW50RGVmYXVsdCgpO192bS52YWx1ZT1fdm0uaXNEaXNhYmxlZD9fdm0udmFsdWU6X3ZtLmxhYmVsO319fSxbX2MoImlucHV0Iix7ZGlyZWN0aXZlczpbe25hbWU6Im1vZGVsIixyYXdOYW1lOiJ2LW1vZGVsIix2YWx1ZTpfdm0udmFsdWUsZXhwcmVzc2lvbjoidmFsdWUifV0sc3RhdGljQ2xhc3M6ImVsLXJhZGlvLWJ1dHRvbl9fb3JpZy1yYWRpbyIsYXR0cnM6e3R5cGU6InJhZGlvIixuYW1lOl92bS5uYW1lLGRpc2FibGVkOl92bS5pc0Rpc2FibGVkLHRhYmluZGV4OiItMSJ9LGRvbVByb3BzOnt2YWx1ZTpfdm0ubGFiZWwsY2hlY2tlZDpfdm0uX3EoX3ZtLnZhbHVlLF92bS5sYWJlbCl9LG9uOntjaGFuZ2U6W2Z1bmN0aW9uKCRldmVudCl7X3ZtLnZhbHVlPV92bS5sYWJlbDt9LF92bS5oYW5kbGVDaGFuZ2VdLGZvY3VzOmZ1bmN0aW9uIGZvY3VzKCRldmVudCl7X3ZtLmZvY3VzPXRydWU7fSxibHVyOmZ1bmN0aW9uIGJsdXIoJGV2ZW50KXtfdm0uZm9jdXM9ZmFsc2U7fX19KSxfYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1yYWRpby1idXR0b25fX2lubmVyIixzdHlsZTpfdm0udmFsdWU9PT1fdm0ubGFiZWw/X3ZtLmFjdGl2ZVN0eWxlOm51bGwsb246e2tleWRvd246ZnVuY3Rpb24ga2V5ZG93bigkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTt9fX0sW192bS5fdCgiZGVmYXVsdCIpLCFfdm0uJHNsb3RzLmRlZmF1bHQ/W192bS5fdihfdm0uX3MoX3ZtLmxhYmVsKSldOl92bS5fZSgpXSwyKV0pO307dmFyIHJhZGlvX2J1dHRvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzE4YTc3YTMyX3N0YXRpY1JlbmRlckZucz1bXTtyYWRpb19idXR0b252dWVfdHlwZV90ZW1wbGF0ZV9pZF8xOGE3N2EzMl9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcmFkaW8vc3JjL3JhZGlvLWJ1dHRvbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MThhNzdhMzImCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3JhZGlvL3NyYy9yYWRpby1idXR0b24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHJhZGlvX2J1dHRvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxSYWRpb0J1dHRvbicsbWl4aW5zOltlbWl0dGVyX2RlZmF1bHQuYV0saW5qZWN0OntlbEZvcm06e2RlZmF1bHQ6Jyd9LGVsRm9ybUl0ZW06e2RlZmF1bHQ6Jyd9fSxwcm9wczp7bGFiZWw6e30sZGlzYWJsZWQ6Qm9vbGVhbixuYW1lOlN0cmluZ30sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2ZvY3VzOmZhbHNlfTt9LGNvbXB1dGVkOnt2YWx1ZTp7Z2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl9yYWRpb0dyb3VwLnZhbHVlO30sc2V0OmZ1bmN0aW9uIHNldCh2YWx1ZSl7dGhpcy5fcmFkaW9Hcm91cC4kZW1pdCgnaW5wdXQnLHZhbHVlKTt9fSxfcmFkaW9Hcm91cDpmdW5jdGlvbiBfcmFkaW9Hcm91cCgpe3ZhciBwYXJlbnQ9dGhpcy4kcGFyZW50O3doaWxlKHBhcmVudCl7aWYocGFyZW50LiRvcHRpb25zLmNvbXBvbmVudE5hbWUhPT0nRWxSYWRpb0dyb3VwJyl7cGFyZW50PXBhcmVudC4kcGFyZW50O31lbHNle3JldHVybiBwYXJlbnQ7fX1yZXR1cm4gZmFsc2U7fSxhY3RpdmVTdHlsZTpmdW5jdGlvbiBhY3RpdmVTdHlsZSgpe3JldHVybntiYWNrZ3JvdW5kQ29sb3I6dGhpcy5fcmFkaW9Hcm91cC5maWxsfHwnJyxib3JkZXJDb2xvcjp0aGlzLl9yYWRpb0dyb3VwLmZpbGx8fCcnLGJveFNoYWRvdzp0aGlzLl9yYWRpb0dyb3VwLmZpbGw/Jy0xcHggMCAwIDAgJyt0aGlzLl9yYWRpb0dyb3VwLmZpbGw6JycsY29sb3I6dGhpcy5fcmFkaW9Hcm91cC50ZXh0Q29sb3J8fCcnfTt9LF9lbEZvcm1JdGVtU2l6ZTpmdW5jdGlvbiBfZWxGb3JtSXRlbVNpemUoKXtyZXR1cm4odGhpcy5lbEZvcm1JdGVtfHx7fSkuZWxGb3JtSXRlbVNpemU7fSxzaXplOmZ1bmN0aW9uIHNpemUoKXtyZXR1cm4gdGhpcy5fcmFkaW9Hcm91cC5yYWRpb0dyb3VwU2l6ZXx8dGhpcy5fZWxGb3JtSXRlbVNpemV8fCh0aGlzLiRFTEVNRU5UfHx7fSkuc2l6ZTt9LGlzRGlzYWJsZWQ6ZnVuY3Rpb24gaXNEaXNhYmxlZCgpe3JldHVybiB0aGlzLmRpc2FibGVkfHx0aGlzLl9yYWRpb0dyb3VwLmRpc2FibGVkfHwodGhpcy5lbEZvcm18fHt9KS5kaXNhYmxlZDt9LHRhYkluZGV4OmZ1bmN0aW9uIHRhYkluZGV4KCl7cmV0dXJuIHRoaXMuaXNEaXNhYmxlZHx8dGhpcy5fcmFkaW9Hcm91cCYmdGhpcy52YWx1ZSE9PXRoaXMubGFiZWw/LTE6MDt9fSxtZXRob2RzOntoYW5kbGVDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpcy5kaXNwYXRjaCgnRWxSYWRpb0dyb3VwJywnaGFuZGxlQ2hhbmdlJyxfdGhpcy52YWx1ZSk7fSk7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcmFkaW8vc3JjL3JhZGlvLWJ1dHRvbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3JhZGlvX2J1dHRvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1yYWRpb19idXR0b252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9yYWRpby9zcmMvcmFkaW8tYnV0dG9uLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHJhZGlvX2J1dHRvbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19yYWRpb19idXR0b252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18scmFkaW9fYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfMThhNzdhMzJfcmVuZGVyLHJhZGlvX2J1dHRvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzE4YTc3YTMyX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgcmFkaW9fYnV0dG9uX2FwaTt9cmFkaW9fYnV0dG9uX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvcmFkaW8vc3JjL3JhZGlvLWJ1dHRvbi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcmFkaW9fYnV0dG9uPXJhZGlvX2J1dHRvbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3JhZGlvLWJ1dHRvbi9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3JhZGlvX2J1dHRvbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChyYWRpb19idXR0b24ubmFtZSxyYWRpb19idXR0b24pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19yYWRpb19idXR0b249cmFkaW9fYnV0dG9uOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY2hlY2tib3gvc3JjL2NoZWNrYm94LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kMDM4NzA3NCYKdmFyIGNoZWNrYm94dnVlX3R5cGVfdGVtcGxhdGVfaWRfZDAzODcwNzRfcmVuZGVyPWZ1bmN0aW9uIGNoZWNrYm94dnVlX3R5cGVfdGVtcGxhdGVfaWRfZDAzODcwNzRfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJsYWJlbCIse3N0YXRpY0NsYXNzOiJlbC1jaGVja2JveCIsY2xhc3M6W192bS5ib3JkZXImJl92bS5jaGVja2JveFNpemU/ImVsLWNoZWNrYm94LS0iK192bS5jaGVja2JveFNpemU6IiIseyJpcy1kaXNhYmxlZCI6X3ZtLmlzRGlzYWJsZWR9LHsiaXMtYm9yZGVyZWQiOl92bS5ib3JkZXJ9LHsiaXMtY2hlY2tlZCI6X3ZtLmlzQ2hlY2tlZH1dLGF0dHJzOntpZDpfdm0uaWR9fSxbX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtY2hlY2tib3hfX2lucHV0IixjbGFzczp7ImlzLWRpc2FibGVkIjpfdm0uaXNEaXNhYmxlZCwiaXMtY2hlY2tlZCI6X3ZtLmlzQ2hlY2tlZCwiaXMtaW5kZXRlcm1pbmF0ZSI6X3ZtLmluZGV0ZXJtaW5hdGUsImlzLWZvY3VzIjpfdm0uZm9jdXN9LGF0dHJzOnt0YWJpbmRleDpfdm0uaW5kZXRlcm1pbmF0ZT8wOmZhbHNlLHJvbGU6X3ZtLmluZGV0ZXJtaW5hdGU/ImNoZWNrYm94IjpmYWxzZSwiYXJpYS1jaGVja2VkIjpfdm0uaW5kZXRlcm1pbmF0ZT8ibWl4ZWQiOmZhbHNlfX0sW19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWNoZWNrYm94X19pbm5lciJ9KSxfdm0udHJ1ZUxhYmVsfHxfdm0uZmFsc2VMYWJlbD9fYygiaW5wdXQiLHtkaXJlY3RpdmVzOlt7bmFtZToibW9kZWwiLHJhd05hbWU6InYtbW9kZWwiLHZhbHVlOl92bS5tb2RlbCxleHByZXNzaW9uOiJtb2RlbCJ9XSxzdGF0aWNDbGFzczoiZWwtY2hlY2tib3hfX29yaWdpbmFsIixhdHRyczp7dHlwZToiY2hlY2tib3giLCJhcmlhLWhpZGRlbiI6X3ZtLmluZGV0ZXJtaW5hdGU/InRydWUiOiJmYWxzZSIsbmFtZTpfdm0ubmFtZSxkaXNhYmxlZDpfdm0uaXNEaXNhYmxlZCwidHJ1ZS12YWx1ZSI6X3ZtLnRydWVMYWJlbCwiZmFsc2UtdmFsdWUiOl92bS5mYWxzZUxhYmVsfSxkb21Qcm9wczp7Y2hlY2tlZDpBcnJheS5pc0FycmF5KF92bS5tb2RlbCk/X3ZtLl9pKF92bS5tb2RlbCxudWxsKT4tMTpfdm0uX3EoX3ZtLm1vZGVsLF92bS50cnVlTGFiZWwpfSxvbjp7Y2hhbmdlOltmdW5jdGlvbigkZXZlbnQpe3ZhciAkJGE9X3ZtLm1vZGVsLCQkZWw9JGV2ZW50LnRhcmdldCwkJGM9JCRlbC5jaGVja2VkP192bS50cnVlTGFiZWw6X3ZtLmZhbHNlTGFiZWw7aWYoQXJyYXkuaXNBcnJheSgkJGEpKXt2YXIgJCR2PW51bGwsJCRpPV92bS5faSgkJGEsJCR2KTtpZigkJGVsLmNoZWNrZWQpeyQkaTwwJiYoX3ZtLm1vZGVsPSQkYS5jb25jYXQoWyQkdl0pKTt9ZWxzZXskJGk+LTEmJihfdm0ubW9kZWw9JCRhLnNsaWNlKDAsJCRpKS5jb25jYXQoJCRhLnNsaWNlKCQkaSsxKSkpO319ZWxzZXtfdm0ubW9kZWw9JCRjO319LF92bS5oYW5kbGVDaGFuZ2VdLGZvY3VzOmZ1bmN0aW9uIGZvY3VzKCRldmVudCl7X3ZtLmZvY3VzPXRydWU7fSxibHVyOmZ1bmN0aW9uIGJsdXIoJGV2ZW50KXtfdm0uZm9jdXM9ZmFsc2U7fX19KTpfYygiaW5wdXQiLHtkaXJlY3RpdmVzOlt7bmFtZToibW9kZWwiLHJhd05hbWU6InYtbW9kZWwiLHZhbHVlOl92bS5tb2RlbCxleHByZXNzaW9uOiJtb2RlbCJ9XSxzdGF0aWNDbGFzczoiZWwtY2hlY2tib3hfX29yaWdpbmFsIixhdHRyczp7dHlwZToiY2hlY2tib3giLCJhcmlhLWhpZGRlbiI6X3ZtLmluZGV0ZXJtaW5hdGU/InRydWUiOiJmYWxzZSIsZGlzYWJsZWQ6X3ZtLmlzRGlzYWJsZWQsbmFtZTpfdm0ubmFtZX0sZG9tUHJvcHM6e3ZhbHVlOl92bS5sYWJlbCxjaGVja2VkOkFycmF5LmlzQXJyYXkoX3ZtLm1vZGVsKT9fdm0uX2koX3ZtLm1vZGVsLF92bS5sYWJlbCk+LTE6X3ZtLm1vZGVsfSxvbjp7Y2hhbmdlOltmdW5jdGlvbigkZXZlbnQpe3ZhciAkJGE9X3ZtLm1vZGVsLCQkZWw9JGV2ZW50LnRhcmdldCwkJGM9JCRlbC5jaGVja2VkP3RydWU6ZmFsc2U7aWYoQXJyYXkuaXNBcnJheSgkJGEpKXt2YXIgJCR2PV92bS5sYWJlbCwkJGk9X3ZtLl9pKCQkYSwkJHYpO2lmKCQkZWwuY2hlY2tlZCl7JCRpPDAmJihfdm0ubW9kZWw9JCRhLmNvbmNhdChbJCR2XSkpO31lbHNleyQkaT4tMSYmKF92bS5tb2RlbD0kJGEuc2xpY2UoMCwkJGkpLmNvbmNhdCgkJGEuc2xpY2UoJCRpKzEpKSk7fX1lbHNle192bS5tb2RlbD0kJGM7fX0sX3ZtLmhhbmRsZUNoYW5nZV0sZm9jdXM6ZnVuY3Rpb24gZm9jdXMoJGV2ZW50KXtfdm0uZm9jdXM9dHJ1ZTt9LGJsdXI6ZnVuY3Rpb24gYmx1cigkZXZlbnQpe192bS5mb2N1cz1mYWxzZTt9fX0pXSksX3ZtLiRzbG90cy5kZWZhdWx0fHxfdm0ubGFiZWw/X2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtY2hlY2tib3hfX2xhYmVsIn0sW192bS5fdCgiZGVmYXVsdCIpLCFfdm0uJHNsb3RzLmRlZmF1bHQ/W192bS5fdihfdm0uX3MoX3ZtLmxhYmVsKSldOl92bS5fZSgpXSwyKTpfdm0uX2UoKV0pO307dmFyIGNoZWNrYm94dnVlX3R5cGVfdGVtcGxhdGVfaWRfZDAzODcwNzRfc3RhdGljUmVuZGVyRm5zPVtdO2NoZWNrYm94dnVlX3R5cGVfdGVtcGxhdGVfaWRfZDAzODcwNzRfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NoZWNrYm94L3NyYy9jaGVja2JveC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZDAzODcwNzQmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NoZWNrYm94L3NyYy9jaGVja2JveC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY2hlY2tib3h2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQ2hlY2tib3gnLG1peGluczpbZW1pdHRlcl9kZWZhdWx0LmFdLGluamVjdDp7ZWxGb3JtOntkZWZhdWx0OicnfSxlbEZvcm1JdGVtOntkZWZhdWx0OicnfX0sY29tcG9uZW50TmFtZTonRWxDaGVja2JveCcsZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3NlbGZNb2RlbDpmYWxzZSxmb2N1czpmYWxzZSxpc0xpbWl0RXhjZWVkZWQ6ZmFsc2V9O30sY29tcHV0ZWQ6e21vZGVsOntnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuaXNHcm91cD90aGlzLnN0b3JlOnRoaXMudmFsdWUhPT11bmRlZmluZWQ/dGhpcy52YWx1ZTp0aGlzLnNlbGZNb2RlbDt9LHNldDpmdW5jdGlvbiBzZXQodmFsKXtpZih0aGlzLmlzR3JvdXApe3RoaXMuaXNMaW1pdEV4Y2VlZGVkPWZhbHNlO3RoaXMuX2NoZWNrYm94R3JvdXAubWluIT09dW5kZWZpbmVkJiZ2YWwubGVuZ3RoPHRoaXMuX2NoZWNrYm94R3JvdXAubWluJiYodGhpcy5pc0xpbWl0RXhjZWVkZWQ9dHJ1ZSk7dGhpcy5fY2hlY2tib3hHcm91cC5tYXghPT11bmRlZmluZWQmJnZhbC5sZW5ndGg+dGhpcy5fY2hlY2tib3hHcm91cC5tYXgmJih0aGlzLmlzTGltaXRFeGNlZWRlZD10cnVlKTt0aGlzLmlzTGltaXRFeGNlZWRlZD09PWZhbHNlJiZ0aGlzLmRpc3BhdGNoKCdFbENoZWNrYm94R3JvdXAnLCdpbnB1dCcsW3ZhbF0pO31lbHNle3RoaXMuJGVtaXQoJ2lucHV0Jyx2YWwpO3RoaXMuc2VsZk1vZGVsPXZhbDt9fX0saXNDaGVja2VkOmZ1bmN0aW9uIGlzQ2hlY2tlZCgpe2lmKHt9LnRvU3RyaW5nLmNhbGwodGhpcy5tb2RlbCk9PT0nW29iamVjdCBCb29sZWFuXScpe3JldHVybiB0aGlzLm1vZGVsO31lbHNlIGlmKEFycmF5LmlzQXJyYXkodGhpcy5tb2RlbCkpe3JldHVybiB0aGlzLm1vZGVsLmluZGV4T2YodGhpcy5sYWJlbCk+LTE7fWVsc2UgaWYodGhpcy5tb2RlbCE9PW51bGwmJnRoaXMubW9kZWwhPT11bmRlZmluZWQpe3JldHVybiB0aGlzLm1vZGVsPT09dGhpcy50cnVlTGFiZWw7fX0saXNHcm91cDpmdW5jdGlvbiBpc0dyb3VwKCl7dmFyIHBhcmVudD10aGlzLiRwYXJlbnQ7d2hpbGUocGFyZW50KXtpZihwYXJlbnQuJG9wdGlvbnMuY29tcG9uZW50TmFtZSE9PSdFbENoZWNrYm94R3JvdXAnKXtwYXJlbnQ9cGFyZW50LiRwYXJlbnQ7fWVsc2V7dGhpcy5fY2hlY2tib3hHcm91cD1wYXJlbnQ7cmV0dXJuIHRydWU7fX1yZXR1cm4gZmFsc2U7fSxzdG9yZTpmdW5jdGlvbiBzdG9yZSgpe3JldHVybiB0aGlzLl9jaGVja2JveEdyb3VwP3RoaXMuX2NoZWNrYm94R3JvdXAudmFsdWU6dGhpcy52YWx1ZTt9LC8qIHVzZWQgdG8gbWFrZSB0aGUgaXNEaXNhYmxlZCBqdWRnbWVudCB1bmRlciBtYXgvbWluIHByb3BzICovaXNMaW1pdERpc2FibGVkOmZ1bmN0aW9uIGlzTGltaXREaXNhYmxlZCgpe3ZhciBfY2hlY2tib3hHcm91cD10aGlzLl9jaGVja2JveEdyb3VwLG1heD1fY2hlY2tib3hHcm91cC5tYXgsbWluPV9jaGVja2JveEdyb3VwLm1pbjtyZXR1cm4hIShtYXh8fG1pbikmJnRoaXMubW9kZWwubGVuZ3RoPj1tYXgmJiF0aGlzLmlzQ2hlY2tlZHx8dGhpcy5tb2RlbC5sZW5ndGg8PW1pbiYmdGhpcy5pc0NoZWNrZWQ7fSxpc0Rpc2FibGVkOmZ1bmN0aW9uIGlzRGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5pc0dyb3VwP3RoaXMuX2NoZWNrYm94R3JvdXAuZGlzYWJsZWR8fHRoaXMuZGlzYWJsZWR8fCh0aGlzLmVsRm9ybXx8e30pLmRpc2FibGVkfHx0aGlzLmlzTGltaXREaXNhYmxlZDp0aGlzLmRpc2FibGVkfHwodGhpcy5lbEZvcm18fHt9KS5kaXNhYmxlZDt9LF9lbEZvcm1JdGVtU2l6ZTpmdW5jdGlvbiBfZWxGb3JtSXRlbVNpemUoKXtyZXR1cm4odGhpcy5lbEZvcm1JdGVtfHx7fSkuZWxGb3JtSXRlbVNpemU7fSxjaGVja2JveFNpemU6ZnVuY3Rpb24gY2hlY2tib3hTaXplKCl7dmFyIHRlbUNoZWNrYm94U2l6ZT10aGlzLnNpemV8fHRoaXMuX2VsRm9ybUl0ZW1TaXplfHwodGhpcy4kRUxFTUVOVHx8e30pLnNpemU7cmV0dXJuIHRoaXMuaXNHcm91cD90aGlzLl9jaGVja2JveEdyb3VwLmNoZWNrYm94R3JvdXBTaXplfHx0ZW1DaGVja2JveFNpemU6dGVtQ2hlY2tib3hTaXplO319LHByb3BzOnt2YWx1ZTp7fSxsYWJlbDp7fSxpbmRldGVybWluYXRlOkJvb2xlYW4sZGlzYWJsZWQ6Qm9vbGVhbixjaGVja2VkOkJvb2xlYW4sbmFtZTpTdHJpbmcsdHJ1ZUxhYmVsOltTdHJpbmcsTnVtYmVyXSxmYWxzZUxhYmVsOltTdHJpbmcsTnVtYmVyXSxpZDpTdHJpbmcsLyog5b2TaW5kZXRlcm1pbmF0ZeS4uuecn+aXtu+8jOS4umNvbnRyb2xz5o+Q5L6b55u45YWz6L+e55qEY2hlY2tib3jnmoRpZO+8jOihqOaYjuWFg+e0oOmXtOeahOaOp+WItuWFs+ezuyovY29udHJvbHM6U3RyaW5nLC8qIOW9k2luZGV0ZXJtaW5hdGXkuLrnnJ/ml7bvvIzkuLpjb250cm9sc+aPkOS+m+ebuOWFs+i/nueahGNoZWNrYm9455qEaWTvvIzooajmmI7lhYPntKDpl7TnmoTmjqfliLblhbPns7sqL2JvcmRlcjpCb29sZWFuLHNpemU6U3RyaW5nfSxtZXRob2RzOnthZGRUb1N0b3JlOmZ1bmN0aW9uIGFkZFRvU3RvcmUoKXtpZihBcnJheS5pc0FycmF5KHRoaXMubW9kZWwpJiZ0aGlzLm1vZGVsLmluZGV4T2YodGhpcy5sYWJlbCk9PT0tMSl7dGhpcy5tb2RlbC5wdXNoKHRoaXMubGFiZWwpO31lbHNle3RoaXMubW9kZWw9dGhpcy50cnVlTGFiZWx8fHRydWU7fX0saGFuZGxlQ2hhbmdlOmZ1bmN0aW9uIGhhbmRsZUNoYW5nZShldil7dmFyIF90aGlzPXRoaXM7aWYodGhpcy5pc0xpbWl0RXhjZWVkZWQpcmV0dXJuO3ZhciB2YWx1ZT12b2lkIDA7aWYoZXYudGFyZ2V0LmNoZWNrZWQpe3ZhbHVlPXRoaXMudHJ1ZUxhYmVsPT09dW5kZWZpbmVkP3RydWU6dGhpcy50cnVlTGFiZWw7fWVsc2V7dmFsdWU9dGhpcy5mYWxzZUxhYmVsPT09dW5kZWZpbmVkP2ZhbHNlOnRoaXMuZmFsc2VMYWJlbDt9dGhpcy4kZW1pdCgnY2hhbmdlJyx2YWx1ZSxldik7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZihfdGhpcy5pc0dyb3VwKXtfdGhpcy5kaXNwYXRjaCgnRWxDaGVja2JveEdyb3VwJywnY2hhbmdlJyxbX3RoaXMuX2NoZWNrYm94R3JvdXAudmFsdWVdKTt9fSk7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy5jaGVja2VkJiZ0aGlzLmFkZFRvU3RvcmUoKTt9LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpey8vIOS4umluZGV0ZXJtaW5hdGXlhYPntKAg5re75YqgYXJpYS1jb250cm9scyDlsZ7mgKcKaWYodGhpcy5pbmRldGVybWluYXRlKXt0aGlzLiRlbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtY29udHJvbHMnLHRoaXMuY29udHJvbHMpO319LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZShfdmFsdWUpe3RoaXMuZGlzcGF0Y2goJ0VsRm9ybUl0ZW0nLCdlbC5mb3JtLmNoYW5nZScsX3ZhbHVlKTt9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jaGVja2JveC9zcmMvY2hlY2tib3gudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19jaGVja2JveHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1jaGVja2JveHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NoZWNrYm94L3NyYy9jaGVja2JveC52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBjaGVja2JveF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19jaGVja2JveHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxjaGVja2JveHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2QwMzg3MDc0X3JlbmRlcixjaGVja2JveHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2QwMzg3MDc0X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgY2hlY2tib3hfYXBpO31jaGVja2JveF9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2NoZWNrYm94L3NyYy9jaGVja2JveC52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2NoZWNrYm94PWNoZWNrYm94X2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2hlY2tib3gvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9zcmNfY2hlY2tib3guaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoc3JjX2NoZWNrYm94Lm5hbWUsc3JjX2NoZWNrYm94KTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfY2hlY2tib3g9c3JjX2NoZWNrYm94Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY2hlY2tib3gvc3JjL2NoZWNrYm94LWJ1dHRvbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDc4ZTkwNmUmCnZhciBjaGVja2JveF9idXR0b252dWVfdHlwZV90ZW1wbGF0ZV9pZF80NzhlOTA2ZV9yZW5kZXI9ZnVuY3Rpb24gY2hlY2tib3hfYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfNDc4ZTkwNmVfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJsYWJlbCIse3N0YXRpY0NsYXNzOiJlbC1jaGVja2JveC1idXR0b24iLGNsYXNzOltfdm0uc2l6ZT8iZWwtY2hlY2tib3gtYnV0dG9uLS0iK192bS5zaXplOiIiLHsiaXMtZGlzYWJsZWQiOl92bS5pc0Rpc2FibGVkfSx7ImlzLWNoZWNrZWQiOl92bS5pc0NoZWNrZWR9LHsiaXMtZm9jdXMiOl92bS5mb2N1c31dLGF0dHJzOntyb2xlOiJjaGVja2JveCIsImFyaWEtY2hlY2tlZCI6X3ZtLmlzQ2hlY2tlZCwiYXJpYS1kaXNhYmxlZCI6X3ZtLmlzRGlzYWJsZWR9fSxbX3ZtLnRydWVMYWJlbHx8X3ZtLmZhbHNlTGFiZWw/X2MoImlucHV0Iix7ZGlyZWN0aXZlczpbe25hbWU6Im1vZGVsIixyYXdOYW1lOiJ2LW1vZGVsIix2YWx1ZTpfdm0ubW9kZWwsZXhwcmVzc2lvbjoibW9kZWwifV0sc3RhdGljQ2xhc3M6ImVsLWNoZWNrYm94LWJ1dHRvbl9fb3JpZ2luYWwiLGF0dHJzOnt0eXBlOiJjaGVja2JveCIsbmFtZTpfdm0ubmFtZSxkaXNhYmxlZDpfdm0uaXNEaXNhYmxlZCwidHJ1ZS12YWx1ZSI6X3ZtLnRydWVMYWJlbCwiZmFsc2UtdmFsdWUiOl92bS5mYWxzZUxhYmVsfSxkb21Qcm9wczp7Y2hlY2tlZDpBcnJheS5pc0FycmF5KF92bS5tb2RlbCk/X3ZtLl9pKF92bS5tb2RlbCxudWxsKT4tMTpfdm0uX3EoX3ZtLm1vZGVsLF92bS50cnVlTGFiZWwpfSxvbjp7Y2hhbmdlOltmdW5jdGlvbigkZXZlbnQpe3ZhciAkJGE9X3ZtLm1vZGVsLCQkZWw9JGV2ZW50LnRhcmdldCwkJGM9JCRlbC5jaGVja2VkP192bS50cnVlTGFiZWw6X3ZtLmZhbHNlTGFiZWw7aWYoQXJyYXkuaXNBcnJheSgkJGEpKXt2YXIgJCR2PW51bGwsJCRpPV92bS5faSgkJGEsJCR2KTtpZigkJGVsLmNoZWNrZWQpeyQkaTwwJiYoX3ZtLm1vZGVsPSQkYS5jb25jYXQoWyQkdl0pKTt9ZWxzZXskJGk+LTEmJihfdm0ubW9kZWw9JCRhLnNsaWNlKDAsJCRpKS5jb25jYXQoJCRhLnNsaWNlKCQkaSsxKSkpO319ZWxzZXtfdm0ubW9kZWw9JCRjO319LF92bS5oYW5kbGVDaGFuZ2VdLGZvY3VzOmZ1bmN0aW9uIGZvY3VzKCRldmVudCl7X3ZtLmZvY3VzPXRydWU7fSxibHVyOmZ1bmN0aW9uIGJsdXIoJGV2ZW50KXtfdm0uZm9jdXM9ZmFsc2U7fX19KTpfYygiaW5wdXQiLHtkaXJlY3RpdmVzOlt7bmFtZToibW9kZWwiLHJhd05hbWU6InYtbW9kZWwiLHZhbHVlOl92bS5tb2RlbCxleHByZXNzaW9uOiJtb2RlbCJ9XSxzdGF0aWNDbGFzczoiZWwtY2hlY2tib3gtYnV0dG9uX19vcmlnaW5hbCIsYXR0cnM6e3R5cGU6ImNoZWNrYm94IixuYW1lOl92bS5uYW1lLGRpc2FibGVkOl92bS5pc0Rpc2FibGVkfSxkb21Qcm9wczp7dmFsdWU6X3ZtLmxhYmVsLGNoZWNrZWQ6QXJyYXkuaXNBcnJheShfdm0ubW9kZWwpP192bS5faShfdm0ubW9kZWwsX3ZtLmxhYmVsKT4tMTpfdm0ubW9kZWx9LG9uOntjaGFuZ2U6W2Z1bmN0aW9uKCRldmVudCl7dmFyICQkYT1fdm0ubW9kZWwsJCRlbD0kZXZlbnQudGFyZ2V0LCQkYz0kJGVsLmNoZWNrZWQ/dHJ1ZTpmYWxzZTtpZihBcnJheS5pc0FycmF5KCQkYSkpe3ZhciAkJHY9X3ZtLmxhYmVsLCQkaT1fdm0uX2koJCRhLCQkdik7aWYoJCRlbC5jaGVja2VkKXskJGk8MCYmKF92bS5tb2RlbD0kJGEuY29uY2F0KFskJHZdKSk7fWVsc2V7JCRpPi0xJiYoX3ZtLm1vZGVsPSQkYS5zbGljZSgwLCQkaSkuY29uY2F0KCQkYS5zbGljZSgkJGkrMSkpKTt9fWVsc2V7X3ZtLm1vZGVsPSQkYzt9fSxfdm0uaGFuZGxlQ2hhbmdlXSxmb2N1czpmdW5jdGlvbiBmb2N1cygkZXZlbnQpe192bS5mb2N1cz10cnVlO30sYmx1cjpmdW5jdGlvbiBibHVyKCRldmVudCl7X3ZtLmZvY3VzPWZhbHNlO319fSksX3ZtLiRzbG90cy5kZWZhdWx0fHxfdm0ubGFiZWw/X2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtY2hlY2tib3gtYnV0dG9uX19pbm5lciIsc3R5bGU6X3ZtLmlzQ2hlY2tlZD9fdm0uYWN0aXZlU3R5bGU6bnVsbH0sW192bS5fdCgiZGVmYXVsdCIsW192bS5fdihfdm0uX3MoX3ZtLmxhYmVsKSldKV0sMik6X3ZtLl9lKCldKTt9O3ZhciBjaGVja2JveF9idXR0b252dWVfdHlwZV90ZW1wbGF0ZV9pZF80NzhlOTA2ZV9zdGF0aWNSZW5kZXJGbnM9W107Y2hlY2tib3hfYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfNDc4ZTkwNmVfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NoZWNrYm94L3NyYy9jaGVja2JveC1idXR0b24udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTQ3OGU5MDZlJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jaGVja2JveC9zcmMvY2hlY2tib3gtYnV0dG9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjaGVja2JveF9idXR0b252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQ2hlY2tib3hCdXR0b24nLG1peGluczpbZW1pdHRlcl9kZWZhdWx0LmFdLGluamVjdDp7ZWxGb3JtOntkZWZhdWx0OicnfSxlbEZvcm1JdGVtOntkZWZhdWx0OicnfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3NlbGZNb2RlbDpmYWxzZSxmb2N1czpmYWxzZSxpc0xpbWl0RXhjZWVkZWQ6ZmFsc2V9O30scHJvcHM6e3ZhbHVlOnt9LGxhYmVsOnt9LGRpc2FibGVkOkJvb2xlYW4sY2hlY2tlZDpCb29sZWFuLG5hbWU6U3RyaW5nLHRydWVMYWJlbDpbU3RyaW5nLE51bWJlcl0sZmFsc2VMYWJlbDpbU3RyaW5nLE51bWJlcl19LGNvbXB1dGVkOnttb2RlbDp7Z2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl9jaGVja2JveEdyb3VwP3RoaXMuc3RvcmU6dGhpcy52YWx1ZSE9PXVuZGVmaW5lZD90aGlzLnZhbHVlOnRoaXMuc2VsZk1vZGVsO30sc2V0OmZ1bmN0aW9uIHNldCh2YWwpe2lmKHRoaXMuX2NoZWNrYm94R3JvdXApe3RoaXMuaXNMaW1pdEV4Y2VlZGVkPWZhbHNlO3RoaXMuX2NoZWNrYm94R3JvdXAubWluIT09dW5kZWZpbmVkJiZ2YWwubGVuZ3RoPHRoaXMuX2NoZWNrYm94R3JvdXAubWluJiYodGhpcy5pc0xpbWl0RXhjZWVkZWQ9dHJ1ZSk7dGhpcy5fY2hlY2tib3hHcm91cC5tYXghPT11bmRlZmluZWQmJnZhbC5sZW5ndGg+dGhpcy5fY2hlY2tib3hHcm91cC5tYXgmJih0aGlzLmlzTGltaXRFeGNlZWRlZD10cnVlKTt0aGlzLmlzTGltaXRFeGNlZWRlZD09PWZhbHNlJiZ0aGlzLmRpc3BhdGNoKCdFbENoZWNrYm94R3JvdXAnLCdpbnB1dCcsW3ZhbF0pO31lbHNlIGlmKHRoaXMudmFsdWUhPT11bmRlZmluZWQpe3RoaXMuJGVtaXQoJ2lucHV0Jyx2YWwpO31lbHNle3RoaXMuc2VsZk1vZGVsPXZhbDt9fX0saXNDaGVja2VkOmZ1bmN0aW9uIGlzQ2hlY2tlZCgpe2lmKHt9LnRvU3RyaW5nLmNhbGwodGhpcy5tb2RlbCk9PT0nW29iamVjdCBCb29sZWFuXScpe3JldHVybiB0aGlzLm1vZGVsO31lbHNlIGlmKEFycmF5LmlzQXJyYXkodGhpcy5tb2RlbCkpe3JldHVybiB0aGlzLm1vZGVsLmluZGV4T2YodGhpcy5sYWJlbCk+LTE7fWVsc2UgaWYodGhpcy5tb2RlbCE9PW51bGwmJnRoaXMubW9kZWwhPT11bmRlZmluZWQpe3JldHVybiB0aGlzLm1vZGVsPT09dGhpcy50cnVlTGFiZWw7fX0sX2NoZWNrYm94R3JvdXA6ZnVuY3Rpb24gX2NoZWNrYm94R3JvdXAoKXt2YXIgcGFyZW50PXRoaXMuJHBhcmVudDt3aGlsZShwYXJlbnQpe2lmKHBhcmVudC4kb3B0aW9ucy5jb21wb25lbnROYW1lIT09J0VsQ2hlY2tib3hHcm91cCcpe3BhcmVudD1wYXJlbnQuJHBhcmVudDt9ZWxzZXtyZXR1cm4gcGFyZW50O319cmV0dXJuIGZhbHNlO30sc3RvcmU6ZnVuY3Rpb24gc3RvcmUoKXtyZXR1cm4gdGhpcy5fY2hlY2tib3hHcm91cD90aGlzLl9jaGVja2JveEdyb3VwLnZhbHVlOnRoaXMudmFsdWU7fSxhY3RpdmVTdHlsZTpmdW5jdGlvbiBhY3RpdmVTdHlsZSgpe3JldHVybntiYWNrZ3JvdW5kQ29sb3I6dGhpcy5fY2hlY2tib3hHcm91cC5maWxsfHwnJyxib3JkZXJDb2xvcjp0aGlzLl9jaGVja2JveEdyb3VwLmZpbGx8fCcnLGNvbG9yOnRoaXMuX2NoZWNrYm94R3JvdXAudGV4dENvbG9yfHwnJywnYm94LXNoYWRvdyc6Jy0xcHggMCAwIDAgJyt0aGlzLl9jaGVja2JveEdyb3VwLmZpbGx9O30sX2VsRm9ybUl0ZW1TaXplOmZ1bmN0aW9uIF9lbEZvcm1JdGVtU2l6ZSgpe3JldHVybih0aGlzLmVsRm9ybUl0ZW18fHt9KS5lbEZvcm1JdGVtU2l6ZTt9LHNpemU6ZnVuY3Rpb24gc2l6ZSgpe3JldHVybiB0aGlzLl9jaGVja2JveEdyb3VwLmNoZWNrYm94R3JvdXBTaXplfHx0aGlzLl9lbEZvcm1JdGVtU2l6ZXx8KHRoaXMuJEVMRU1FTlR8fHt9KS5zaXplO30sLyogdXNlZCB0byBtYWtlIHRoZSBpc0Rpc2FibGVkIGp1ZGdtZW50IHVuZGVyIG1heC9taW4gcHJvcHMgKi9pc0xpbWl0RGlzYWJsZWQ6ZnVuY3Rpb24gaXNMaW1pdERpc2FibGVkKCl7dmFyIF9jaGVja2JveEdyb3VwMj10aGlzLl9jaGVja2JveEdyb3VwLG1heD1fY2hlY2tib3hHcm91cDIubWF4LG1pbj1fY2hlY2tib3hHcm91cDIubWluO3JldHVybiEhKG1heHx8bWluKSYmdGhpcy5tb2RlbC5sZW5ndGg+PW1heCYmIXRoaXMuaXNDaGVja2VkfHx0aGlzLm1vZGVsLmxlbmd0aDw9bWluJiZ0aGlzLmlzQ2hlY2tlZDt9LGlzRGlzYWJsZWQ6ZnVuY3Rpb24gaXNEaXNhYmxlZCgpe3JldHVybiB0aGlzLl9jaGVja2JveEdyb3VwP3RoaXMuX2NoZWNrYm94R3JvdXAuZGlzYWJsZWR8fHRoaXMuZGlzYWJsZWR8fCh0aGlzLmVsRm9ybXx8e30pLmRpc2FibGVkfHx0aGlzLmlzTGltaXREaXNhYmxlZDp0aGlzLmRpc2FibGVkfHwodGhpcy5lbEZvcm18fHt9KS5kaXNhYmxlZDt9fSxtZXRob2RzOnthZGRUb1N0b3JlOmZ1bmN0aW9uIGFkZFRvU3RvcmUoKXtpZihBcnJheS5pc0FycmF5KHRoaXMubW9kZWwpJiZ0aGlzLm1vZGVsLmluZGV4T2YodGhpcy5sYWJlbCk9PT0tMSl7dGhpcy5tb2RlbC5wdXNoKHRoaXMubGFiZWwpO31lbHNle3RoaXMubW9kZWw9dGhpcy50cnVlTGFiZWx8fHRydWU7fX0saGFuZGxlQ2hhbmdlOmZ1bmN0aW9uIGhhbmRsZUNoYW5nZShldil7dmFyIF90aGlzPXRoaXM7aWYodGhpcy5pc0xpbWl0RXhjZWVkZWQpcmV0dXJuO3ZhciB2YWx1ZT12b2lkIDA7aWYoZXYudGFyZ2V0LmNoZWNrZWQpe3ZhbHVlPXRoaXMudHJ1ZUxhYmVsPT09dW5kZWZpbmVkP3RydWU6dGhpcy50cnVlTGFiZWw7fWVsc2V7dmFsdWU9dGhpcy5mYWxzZUxhYmVsPT09dW5kZWZpbmVkP2ZhbHNlOnRoaXMuZmFsc2VMYWJlbDt9dGhpcy4kZW1pdCgnY2hhbmdlJyx2YWx1ZSxldik7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZihfdGhpcy5fY2hlY2tib3hHcm91cCl7X3RoaXMuZGlzcGF0Y2goJ0VsQ2hlY2tib3hHcm91cCcsJ2NoYW5nZScsW190aGlzLl9jaGVja2JveEdyb3VwLnZhbHVlXSk7fX0pO319LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpe3RoaXMuY2hlY2tlZCYmdGhpcy5hZGRUb1N0b3JlKCk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jaGVja2JveC9zcmMvY2hlY2tib3gtYnV0dG9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfY2hlY2tib3hfYnV0dG9udnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWNoZWNrYm94X2J1dHRvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NoZWNrYm94L3NyYy9jaGVja2JveC1idXR0b24udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgY2hlY2tib3hfYnV0dG9uX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2NoZWNrYm94X2J1dHRvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxjaGVja2JveF9idXR0b252dWVfdHlwZV90ZW1wbGF0ZV9pZF80NzhlOTA2ZV9yZW5kZXIsY2hlY2tib3hfYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfNDc4ZTkwNmVfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBjaGVja2JveF9idXR0b25fYXBpO31jaGVja2JveF9idXR0b25fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9jaGVja2JveC9zcmMvY2hlY2tib3gtYnV0dG9uLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjaGVja2JveF9idXR0b249Y2hlY2tib3hfYnV0dG9uX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2hlY2tib3gtYnV0dG9uL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovY2hlY2tib3hfYnV0dG9uLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGNoZWNrYm94X2J1dHRvbi5uYW1lLGNoZWNrYm94X2J1dHRvbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2NoZWNrYm94X2J1dHRvbj1jaGVja2JveF9idXR0b247Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jaGVja2JveC9zcmMvY2hlY2tib3gtZ3JvdXAudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTcyODlhMjkwJgp2YXIgY2hlY2tib3hfZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF83Mjg5YTI5MF9yZW5kZXI9ZnVuY3Rpb24gY2hlY2tib3hfZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF83Mjg5YTI5MF9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jaGVja2JveC1ncm91cCIsYXR0cnM6e3JvbGU6Imdyb3VwIiwiYXJpYS1sYWJlbCI6ImNoZWNrYm94LWdyb3VwIn19LFtfdm0uX3QoImRlZmF1bHQiKV0sMik7fTt2YXIgY2hlY2tib3hfZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF83Mjg5YTI5MF9zdGF0aWNSZW5kZXJGbnM9W107Y2hlY2tib3hfZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF83Mjg5YTI5MF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2hlY2tib3gvc3JjL2NoZWNrYm94LWdyb3VwLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03Mjg5YTI5MCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY2hlY2tib3gvc3JjL2NoZWNrYm94LWdyb3VwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjaGVja2JveF9ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxDaGVja2JveEdyb3VwJyxjb21wb25lbnROYW1lOidFbENoZWNrYm94R3JvdXAnLG1peGluczpbZW1pdHRlcl9kZWZhdWx0LmFdLGluamVjdDp7ZWxGb3JtSXRlbTp7ZGVmYXVsdDonJ319LHByb3BzOnt2YWx1ZTp7fSxkaXNhYmxlZDpCb29sZWFuLG1pbjpOdW1iZXIsbWF4Ok51bWJlcixzaXplOlN0cmluZyxmaWxsOlN0cmluZyx0ZXh0Q29sb3I6U3RyaW5nfSxjb21wdXRlZDp7X2VsRm9ybUl0ZW1TaXplOmZ1bmN0aW9uIF9lbEZvcm1JdGVtU2l6ZSgpe3JldHVybih0aGlzLmVsRm9ybUl0ZW18fHt9KS5lbEZvcm1JdGVtU2l6ZTt9LGNoZWNrYm94R3JvdXBTaXplOmZ1bmN0aW9uIGNoZWNrYm94R3JvdXBTaXplKCl7cmV0dXJuIHRoaXMuc2l6ZXx8dGhpcy5fZWxGb3JtSXRlbVNpemV8fCh0aGlzLiRFTEVNRU5UfHx7fSkuc2l6ZTt9fSx3YXRjaDp7dmFsdWU6ZnVuY3Rpb24gdmFsdWUoX3ZhbHVlKXt0aGlzLmRpc3BhdGNoKCdFbEZvcm1JdGVtJywnZWwuZm9ybS5jaGFuZ2UnLFtfdmFsdWVdKTt9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jaGVja2JveC9zcmMvY2hlY2tib3gtZ3JvdXAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19jaGVja2JveF9ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1jaGVja2JveF9ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NoZWNrYm94L3NyYy9jaGVja2JveC1ncm91cC52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBjaGVja2JveF9ncm91cF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19jaGVja2JveF9ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxjaGVja2JveF9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzcyODlhMjkwX3JlbmRlcixjaGVja2JveF9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzcyODlhMjkwX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgY2hlY2tib3hfZ3JvdXBfYXBpO31jaGVja2JveF9ncm91cF9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2NoZWNrYm94L3NyYy9jaGVja2JveC1ncm91cC52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY2hlY2tib3hfZ3JvdXA9Y2hlY2tib3hfZ3JvdXBfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jaGVja2JveC1ncm91cC9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2NoZWNrYm94X2dyb3VwLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGNoZWNrYm94X2dyb3VwLm5hbWUsY2hlY2tib3hfZ3JvdXApO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19jaGVja2JveF9ncm91cD1jaGVja2JveF9ncm91cDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3N3aXRjaC9zcmMvY29tcG9uZW50LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yZGNkOGZiYiYKdmFyIGNvbXBvbmVudHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzJkY2Q4ZmJiX3JlbmRlcj1mdW5jdGlvbiBjb21wb25lbnR2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yZGNkOGZiYl9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1zd2l0Y2giLGNsYXNzOnsiaXMtZGlzYWJsZWQiOl92bS5zd2l0Y2hEaXNhYmxlZCwiaXMtY2hlY2tlZCI6X3ZtLmNoZWNrZWR9LGF0dHJzOntyb2xlOiJzd2l0Y2giLCJhcmlhLWNoZWNrZWQiOl92bS5jaGVja2VkLCJhcmlhLWRpc2FibGVkIjpfdm0uc3dpdGNoRGlzYWJsZWR9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpeyRldmVudC5wcmV2ZW50RGVmYXVsdCgpO3JldHVybiBfdm0uc3dpdGNoVmFsdWUoJGV2ZW50KTt9fX0sW19jKCJpbnB1dCIse3JlZjoiaW5wdXQiLHN0YXRpY0NsYXNzOiJlbC1zd2l0Y2hfX2lucHV0IixhdHRyczp7dHlwZToiY2hlY2tib3giLGlkOl92bS5pZCxuYW1lOl92bS5uYW1lLCJ0cnVlLXZhbHVlIjpfdm0uYWN0aXZlVmFsdWUsImZhbHNlLXZhbHVlIjpfdm0uaW5hY3RpdmVWYWx1ZSxkaXNhYmxlZDpfdm0uc3dpdGNoRGlzYWJsZWR9LG9uOntjaGFuZ2U6X3ZtLmhhbmRsZUNoYW5nZSxrZXlkb3duOmZ1bmN0aW9uIGtleWRvd24oJGV2ZW50KXtpZighKCJidXR0b24iaW4gJGV2ZW50KSYmX3ZtLl9rKCRldmVudC5rZXlDb2RlLCJlbnRlciIsMTMsJGV2ZW50LmtleSwiRW50ZXIiKSl7cmV0dXJuIG51bGw7fXJldHVybiBfdm0uc3dpdGNoVmFsdWUoJGV2ZW50KTt9fX0pLF92bS5pbmFjdGl2ZUljb25DbGFzc3x8X3ZtLmluYWN0aXZlVGV4dD9fYygic3BhbiIse2NsYXNzOlsiZWwtc3dpdGNoX19sYWJlbCIsImVsLXN3aXRjaF9fbGFiZWwtLWxlZnQiLCFfdm0uY2hlY2tlZD8iaXMtYWN0aXZlIjoiIl19LFtfdm0uaW5hY3RpdmVJY29uQ2xhc3M/X2MoImkiLHtjbGFzczpbX3ZtLmluYWN0aXZlSWNvbkNsYXNzXX0pOl92bS5fZSgpLCFfdm0uaW5hY3RpdmVJY29uQ2xhc3MmJl92bS5pbmFjdGl2ZVRleHQ/X2MoInNwYW4iLHthdHRyczp7ImFyaWEtaGlkZGVuIjpfdm0uY2hlY2tlZH19LFtfdm0uX3YoX3ZtLl9zKF92bS5pbmFjdGl2ZVRleHQpKV0pOl92bS5fZSgpXSk6X3ZtLl9lKCksX2MoInNwYW4iLHtyZWY6ImNvcmUiLHN0YXRpY0NsYXNzOiJlbC1zd2l0Y2hfX2NvcmUiLHN0eWxlOnt3aWR0aDpfdm0uY29yZVdpZHRoKyJweCJ9fSksX3ZtLmFjdGl2ZUljb25DbGFzc3x8X3ZtLmFjdGl2ZVRleHQ/X2MoInNwYW4iLHtjbGFzczpbImVsLXN3aXRjaF9fbGFiZWwiLCJlbC1zd2l0Y2hfX2xhYmVsLS1yaWdodCIsX3ZtLmNoZWNrZWQ/ImlzLWFjdGl2ZSI6IiJdfSxbX3ZtLmFjdGl2ZUljb25DbGFzcz9fYygiaSIse2NsYXNzOltfdm0uYWN0aXZlSWNvbkNsYXNzXX0pOl92bS5fZSgpLCFfdm0uYWN0aXZlSWNvbkNsYXNzJiZfdm0uYWN0aXZlVGV4dD9fYygic3BhbiIse2F0dHJzOnsiYXJpYS1oaWRkZW4iOiFfdm0uY2hlY2tlZH19LFtfdm0uX3YoX3ZtLl9zKF92bS5hY3RpdmVUZXh0KSldKTpfdm0uX2UoKV0pOl92bS5fZSgpXSk7fTt2YXIgY29tcG9uZW50dnVlX3R5cGVfdGVtcGxhdGVfaWRfMmRjZDhmYmJfc3RhdGljUmVuZGVyRm5zPVtdO2NvbXBvbmVudHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzJkY2Q4ZmJiX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zd2l0Y2gvc3JjL2NvbXBvbmVudC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MmRjZDhmYmImCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3N3aXRjaC9zcmMvY29tcG9uZW50LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzd2l0Y2hfc3JjX2NvbXBvbmVudHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxTd2l0Y2gnLG1peGluczpbZm9jdXNfZGVmYXVsdCgpKCdpbnB1dCcpLG1pZ3JhdGluZ19kZWZhdWx0LmEsZW1pdHRlcl9kZWZhdWx0LmFdLGluamVjdDp7ZWxGb3JtOntkZWZhdWx0OicnfX0scHJvcHM6e3ZhbHVlOnt0eXBlOltCb29sZWFuLFN0cmluZyxOdW1iZXJdLGRlZmF1bHQ6ZmFsc2V9LGRpc2FibGVkOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0sd2lkdGg6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6NDB9LGFjdGl2ZUljb25DbGFzczp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30saW5hY3RpdmVJY29uQ2xhc3M6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Jyd9LGFjdGl2ZVRleHQ6U3RyaW5nLGluYWN0aXZlVGV4dDpTdHJpbmcsYWN0aXZlQ29sb3I6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Jyd9LGluYWN0aXZlQ29sb3I6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Jyd9LGFjdGl2ZVZhbHVlOnt0eXBlOltCb29sZWFuLFN0cmluZyxOdW1iZXJdLGRlZmF1bHQ6dHJ1ZX0saW5hY3RpdmVWYWx1ZTp7dHlwZTpbQm9vbGVhbixTdHJpbmcsTnVtYmVyXSxkZWZhdWx0OmZhbHNlfSxuYW1lOnt0eXBlOlN0cmluZyxkZWZhdWx0OicnfSx2YWxpZGF0ZUV2ZW50Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxpZDpTdHJpbmd9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntjb3JlV2lkdGg6dGhpcy53aWR0aH07fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXtpZighflt0aGlzLmFjdGl2ZVZhbHVlLHRoaXMuaW5hY3RpdmVWYWx1ZV0uaW5kZXhPZih0aGlzLnZhbHVlKSl7dGhpcy4kZW1pdCgnaW5wdXQnLHRoaXMuaW5hY3RpdmVWYWx1ZSk7fX0sY29tcHV0ZWQ6e2NoZWNrZWQ6ZnVuY3Rpb24gY2hlY2tlZCgpe3JldHVybiB0aGlzLnZhbHVlPT09dGhpcy5hY3RpdmVWYWx1ZTt9LHN3aXRjaERpc2FibGVkOmZ1bmN0aW9uIHN3aXRjaERpc2FibGVkKCl7cmV0dXJuIHRoaXMuZGlzYWJsZWR8fCh0aGlzLmVsRm9ybXx8e30pLmRpc2FibGVkO319LHdhdGNoOntjaGVja2VkOmZ1bmN0aW9uIGNoZWNrZWQoKXt0aGlzLiRyZWZzLmlucHV0LmNoZWNrZWQ9dGhpcy5jaGVja2VkO2lmKHRoaXMuYWN0aXZlQ29sb3J8fHRoaXMuaW5hY3RpdmVDb2xvcil7dGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IoKTt9aWYodGhpcy52YWxpZGF0ZUV2ZW50KXt0aGlzLmRpc3BhdGNoKCdFbEZvcm1JdGVtJywnZWwuZm9ybS5jaGFuZ2UnLFt0aGlzLnZhbHVlXSk7fX19LG1ldGhvZHM6e2hhbmRsZUNoYW5nZTpmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoZXZlbnQpe3ZhciBfdGhpcz10aGlzO3ZhciB2YWw9dGhpcy5jaGVja2VkP3RoaXMuaW5hY3RpdmVWYWx1ZTp0aGlzLmFjdGl2ZVZhbHVlO3RoaXMuJGVtaXQoJ2lucHV0Jyx2YWwpO3RoaXMuJGVtaXQoJ2NoYW5nZScsdmFsKTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpey8vIHNldCBpbnB1dCdzIGNoZWNrZWQgcHJvcGVydHkKLy8gaW4gY2FzZSBwYXJlbnQgcmVmdXNlcyB0byBjaGFuZ2UgY29tcG9uZW50J3MgdmFsdWUKX3RoaXMuJHJlZnMuaW5wdXQuY2hlY2tlZD1fdGhpcy5jaGVja2VkO30pO30sc2V0QmFja2dyb3VuZENvbG9yOmZ1bmN0aW9uIHNldEJhY2tncm91bmRDb2xvcigpe3ZhciBuZXdDb2xvcj10aGlzLmNoZWNrZWQ/dGhpcy5hY3RpdmVDb2xvcjp0aGlzLmluYWN0aXZlQ29sb3I7dGhpcy4kcmVmcy5jb3JlLnN0eWxlLmJvcmRlckNvbG9yPW5ld0NvbG9yO3RoaXMuJHJlZnMuY29yZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I9bmV3Q29sb3I7fSxzd2l0Y2hWYWx1ZTpmdW5jdGlvbiBzd2l0Y2hWYWx1ZSgpeyF0aGlzLnN3aXRjaERpc2FibGVkJiZ0aGlzLmhhbmRsZUNoYW5nZSgpO30sZ2V0TWlncmF0aW5nQ29uZmlnOmZ1bmN0aW9uIGdldE1pZ3JhdGluZ0NvbmZpZygpe3JldHVybntwcm9wczp7J29uLWNvbG9yJzonb24tY29sb3IgaXMgcmVuYW1lZCB0byBhY3RpdmUtY29sb3IuJywnb2ZmLWNvbG9yJzonb2ZmLWNvbG9yIGlzIHJlbmFtZWQgdG8gaW5hY3RpdmUtY29sb3IuJywnb24tdGV4dCc6J29uLXRleHQgaXMgcmVuYW1lZCB0byBhY3RpdmUtdGV4dC4nLCdvZmYtdGV4dCc6J29mZi10ZXh0IGlzIHJlbmFtZWQgdG8gaW5hY3RpdmUtdGV4dC4nLCdvbi12YWx1ZSc6J29uLXZhbHVlIGlzIHJlbmFtZWQgdG8gYWN0aXZlLXZhbHVlLicsJ29mZi12YWx1ZSc6J29mZi12YWx1ZSBpcyByZW5hbWVkIHRvIGluYWN0aXZlLXZhbHVlLicsJ29uLWljb24tY2xhc3MnOidvbi1pY29uLWNsYXNzIGlzIHJlbmFtZWQgdG8gYWN0aXZlLWljb24tY2xhc3MuJywnb2ZmLWljb24tY2xhc3MnOidvZmYtaWNvbi1jbGFzcyBpcyByZW5hbWVkIHRvIGluYWN0aXZlLWljb24tY2xhc3MuJ319O319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpey8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL3RoaXMuY29yZVdpZHRoPXRoaXMud2lkdGh8fDQwO2lmKHRoaXMuYWN0aXZlQ29sb3J8fHRoaXMuaW5hY3RpdmVDb2xvcil7dGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IoKTt9dGhpcy4kcmVmcy5pbnB1dC5jaGVja2VkPXRoaXMuY2hlY2tlZDt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3N3aXRjaC9zcmMvY29tcG9uZW50LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19zd2l0Y2hfc3JjX2NvbXBvbmVudHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1zd2l0Y2hfc3JjX2NvbXBvbmVudHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3N3aXRjaC9zcmMvY29tcG9uZW50LnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHNyY19jb21wb25lbnRfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19zd2l0Y2hfc3JjX2NvbXBvbmVudHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxjb21wb25lbnR2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yZGNkOGZiYl9yZW5kZXIsY29tcG9uZW50dnVlX3R5cGVfdGVtcGxhdGVfaWRfMmRjZDhmYmJfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBzcmNfY29tcG9uZW50X2FwaTt9c3JjX2NvbXBvbmVudF9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3N3aXRjaC9zcmMvY29tcG9uZW50LnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzd2l0Y2hfc3JjX2NvbXBvbmVudD1zcmNfY29tcG9uZW50X2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc3dpdGNoL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovc3dpdGNoX3NyY19jb21wb25lbnQuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoc3dpdGNoX3NyY19jb21wb25lbnQubmFtZSxzd2l0Y2hfc3JjX2NvbXBvbmVudCk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX3N3aXRjaD1zd2l0Y2hfc3JjX2NvbXBvbmVudDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NlbGVjdC9zcmMvc2VsZWN0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wZTRhYWRlNiYKdmFyIHNlbGVjdHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzBlNGFhZGU2X3JlbmRlcj1mdW5jdGlvbiBzZWxlY3R2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wZTRhYWRlNl9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJjbGlja291dHNpZGUiLHJhd05hbWU6InYtY2xpY2tvdXRzaWRlIix2YWx1ZTpfdm0uaGFuZGxlQ2xvc2UsZXhwcmVzc2lvbjoiaGFuZGxlQ2xvc2UifV0sc3RhdGljQ2xhc3M6ImVsLXNlbGVjdCIsY2xhc3M6W192bS5zZWxlY3RTaXplPyJlbC1zZWxlY3QtLSIrX3ZtLnNlbGVjdFNpemU6IiJdLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLnRvZ2dsZU1lbnUoJGV2ZW50KTt9fX0sW192bS5tdWx0aXBsZT9fYygiZGl2Iix7cmVmOiJ0YWdzIixzdGF0aWNDbGFzczoiZWwtc2VsZWN0X190YWdzIixzdHlsZTp7Im1heC13aWR0aCI6X3ZtLmlucHV0V2lkdGgtMzIrInB4Iix3aWR0aDoiMTAwJSJ9fSxbX3ZtLmNvbGxhcHNlVGFncyYmX3ZtLnNlbGVjdGVkLmxlbmd0aD9fYygic3BhbiIsW19jKCJlbC10YWciLHthdHRyczp7Y2xvc2FibGU6IV92bS5zZWxlY3REaXNhYmxlZCxzaXplOl92bS5jb2xsYXBzZVRhZ1NpemUsaGl0Ol92bS5zZWxlY3RlZFswXS5oaXRTdGF0ZSx0eXBlOiJpbmZvIiwiZGlzYWJsZS10cmFuc2l0aW9ucyI6IiJ9LG9uOntjbG9zZTpmdW5jdGlvbiBjbG9zZSgkZXZlbnQpe192bS5kZWxldGVUYWcoJGV2ZW50LF92bS5zZWxlY3RlZFswXSk7fX19LFtfYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1zZWxlY3RfX3RhZ3MtdGV4dCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5zZWxlY3RlZFswXS5jdXJyZW50TGFiZWwpKV0pXSksX3ZtLnNlbGVjdGVkLmxlbmd0aD4xP19jKCJlbC10YWciLHthdHRyczp7Y2xvc2FibGU6ZmFsc2Usc2l6ZTpfdm0uY29sbGFwc2VUYWdTaXplLHR5cGU6ImluZm8iLCJkaXNhYmxlLXRyYW5zaXRpb25zIjoiIn19LFtfYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1zZWxlY3RfX3RhZ3MtdGV4dCJ9LFtfdm0uX3YoIisgIitfdm0uX3MoX3ZtLnNlbGVjdGVkLmxlbmd0aC0xKSldKV0pOl92bS5fZSgpXSwxKTpfdm0uX2UoKSwhX3ZtLmNvbGxhcHNlVGFncz9fYygidHJhbnNpdGlvbi1ncm91cCIse29uOnsiYWZ0ZXItbGVhdmUiOl92bS5yZXNldElucHV0SGVpZ2h0fX0sX3ZtLl9sKF92bS5zZWxlY3RlZCxmdW5jdGlvbihpdGVtKXtyZXR1cm4gX2MoImVsLXRhZyIse2tleTpfdm0uZ2V0VmFsdWVLZXkoaXRlbSksYXR0cnM6e2Nsb3NhYmxlOiFfdm0uc2VsZWN0RGlzYWJsZWQsc2l6ZTpfdm0uY29sbGFwc2VUYWdTaXplLGhpdDppdGVtLmhpdFN0YXRlLHR5cGU6ImluZm8iLCJkaXNhYmxlLXRyYW5zaXRpb25zIjoiIn0sb246e2Nsb3NlOmZ1bmN0aW9uIGNsb3NlKCRldmVudCl7X3ZtLmRlbGV0ZVRhZygkZXZlbnQsaXRlbSk7fX19LFtfYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1zZWxlY3RfX3RhZ3MtdGV4dCJ9LFtfdm0uX3YoX3ZtLl9zKGl0ZW0uY3VycmVudExhYmVsKSldKV0pO30pLDEpOl92bS5fZSgpLF92bS5maWx0ZXJhYmxlP19jKCJpbnB1dCIse2RpcmVjdGl2ZXM6W3tuYW1lOiJtb2RlbCIscmF3TmFtZToidi1tb2RlbCIsdmFsdWU6X3ZtLnF1ZXJ5LGV4cHJlc3Npb246InF1ZXJ5In1dLHJlZjoiaW5wdXQiLHN0YXRpY0NsYXNzOiJlbC1zZWxlY3RfX2lucHV0IixjbGFzczpbX3ZtLnNlbGVjdFNpemU/ImlzLSIrX3ZtLnNlbGVjdFNpemU6IiJdLHN0eWxlOnsiZmxleC1ncm93IjoiMSIsd2lkdGg6X3ZtLmlucHV0TGVuZ3RoLyhfdm0uaW5wdXRXaWR0aC0zMikrIiUiLCJtYXgtd2lkdGgiOl92bS5pbnB1dFdpZHRoLTQyKyJweCJ9LGF0dHJzOnt0eXBlOiJ0ZXh0IixkaXNhYmxlZDpfdm0uc2VsZWN0RGlzYWJsZWQsYXV0b2NvbXBsZXRlOl92bS5hdXRvQ29tcGxldGV8fF92bS5hdXRvY29tcGxldGV9LGRvbVByb3BzOnt2YWx1ZTpfdm0ucXVlcnl9LG9uOntmb2N1czpfdm0uaGFuZGxlRm9jdXMsYmx1cjpmdW5jdGlvbiBibHVyKCRldmVudCl7X3ZtLnNvZnRGb2N1cz1mYWxzZTt9LGtleXVwOl92bS5tYW5hZ2VQbGFjZWhvbGRlcixrZXlkb3duOltfdm0ucmVzZXRJbnB1dFN0YXRlLGZ1bmN0aW9uKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwiZG93biIsNDAsJGV2ZW50LmtleSxbIkRvd24iLCJBcnJvd0Rvd24iXSkpe3JldHVybiBudWxsO30kZXZlbnQucHJldmVudERlZmF1bHQoKTtfdm0ubmF2aWdhdGVPcHRpb25zKCJuZXh0Iik7fSxmdW5jdGlvbigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsInVwIiwzOCwkZXZlbnQua2V5LFsiVXAiLCJBcnJvd1VwIl0pKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7X3ZtLm5hdmlnYXRlT3B0aW9ucygicHJldiIpO30sZnVuY3Rpb24oJGV2ZW50KXtpZighKCJidXR0b24iaW4gJGV2ZW50KSYmX3ZtLl9rKCRldmVudC5rZXlDb2RlLCJlbnRlciIsMTMsJGV2ZW50LmtleSwiRW50ZXIiKSl7cmV0dXJuIG51bGw7fSRldmVudC5wcmV2ZW50RGVmYXVsdCgpO3JldHVybiBfdm0uc2VsZWN0T3B0aW9uKCRldmVudCk7fSxmdW5jdGlvbigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsImVzYyIsMjcsJGV2ZW50LmtleSxbIkVzYyIsIkVzY2FwZSJdKSl7cmV0dXJuIG51bGw7fSRldmVudC5zdG9wUHJvcGFnYXRpb24oKTskZXZlbnQucHJldmVudERlZmF1bHQoKTtfdm0udmlzaWJsZT1mYWxzZTt9LGZ1bmN0aW9uKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwiZGVsZXRlIixbOCw0Nl0sJGV2ZW50LmtleSxbIkJhY2tzcGFjZSIsIkRlbGV0ZSIsIkRlbCJdKSl7cmV0dXJuIG51bGw7fXJldHVybiBfdm0uZGVsZXRlUHJldlRhZygkZXZlbnQpO30sZnVuY3Rpb24oJGV2ZW50KXtpZighKCJidXR0b24iaW4gJGV2ZW50KSYmX3ZtLl9rKCRldmVudC5rZXlDb2RlLCJ0YWIiLDksJGV2ZW50LmtleSwiVGFiIikpe3JldHVybiBudWxsO31fdm0udmlzaWJsZT1mYWxzZTt9XSxjb21wb3NpdGlvbnN0YXJ0Ol92bS5oYW5kbGVDb21wb3NpdGlvbixjb21wb3NpdGlvbnVwZGF0ZTpfdm0uaGFuZGxlQ29tcG9zaXRpb24sY29tcG9zaXRpb25lbmQ6X3ZtLmhhbmRsZUNvbXBvc2l0aW9uLGlucHV0OltmdW5jdGlvbigkZXZlbnQpe2lmKCRldmVudC50YXJnZXQuY29tcG9zaW5nKXtyZXR1cm47fV92bS5xdWVyeT0kZXZlbnQudGFyZ2V0LnZhbHVlO30sX3ZtLmRlYm91bmNlZFF1ZXJ5Q2hhbmdlXX19KTpfdm0uX2UoKV0sMSk6X3ZtLl9lKCksX2MoImVsLWlucHV0Iix7cmVmOiJyZWZlcmVuY2UiLGNsYXNzOnsiaXMtZm9jdXMiOl92bS52aXNpYmxlfSxhdHRyczp7dHlwZToidGV4dCIscGxhY2Vob2xkZXI6X3ZtLmN1cnJlbnRQbGFjZWhvbGRlcixuYW1lOl92bS5uYW1lLGlkOl92bS5pZCxhdXRvY29tcGxldGU6X3ZtLmF1dG9Db21wbGV0ZXx8X3ZtLmF1dG9jb21wbGV0ZSxzaXplOl92bS5zZWxlY3RTaXplLGRpc2FibGVkOl92bS5zZWxlY3REaXNhYmxlZCxyZWFkb25seTpfdm0ucmVhZG9ubHksInZhbGlkYXRlLWV2ZW50IjpmYWxzZSx0YWJpbmRleDpfdm0ubXVsdGlwbGUmJl92bS5maWx0ZXJhYmxlPyItMSI6bnVsbH0sb246e2ZvY3VzOl92bS5oYW5kbGVGb2N1cyxibHVyOl92bS5oYW5kbGVCbHVyfSxuYXRpdmVPbjp7a2V5dXA6ZnVuY3Rpb24ga2V5dXAoJGV2ZW50KXtyZXR1cm4gX3ZtLmRlYm91bmNlZE9uSW5wdXRDaGFuZ2UoJGV2ZW50KTt9LGtleWRvd246W2Z1bmN0aW9uKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwiZG93biIsNDAsJGV2ZW50LmtleSxbIkRvd24iLCJBcnJvd0Rvd24iXSkpe3JldHVybiBudWxsO30kZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7X3ZtLm5hdmlnYXRlT3B0aW9ucygibmV4dCIpO30sZnVuY3Rpb24oJGV2ZW50KXtpZighKCJidXR0b24iaW4gJGV2ZW50KSYmX3ZtLl9rKCRldmVudC5rZXlDb2RlLCJ1cCIsMzgsJGV2ZW50LmtleSxbIlVwIiwiQXJyb3dVcCJdKSl7cmV0dXJuIG51bGw7fSRldmVudC5zdG9wUHJvcGFnYXRpb24oKTskZXZlbnQucHJldmVudERlZmF1bHQoKTtfdm0ubmF2aWdhdGVPcHRpb25zKCJwcmV2Iik7fSxmdW5jdGlvbigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsImVudGVyIiwxMywkZXZlbnQua2V5LCJFbnRlciIpKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIF92bS5zZWxlY3RPcHRpb24oJGV2ZW50KTt9LGZ1bmN0aW9uKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwiZXNjIiwyNywkZXZlbnQua2V5LFsiRXNjIiwiRXNjYXBlIl0pKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOyRldmVudC5wcmV2ZW50RGVmYXVsdCgpO192bS52aXNpYmxlPWZhbHNlO30sZnVuY3Rpb24oJGV2ZW50KXtpZighKCJidXR0b24iaW4gJGV2ZW50KSYmX3ZtLl9rKCRldmVudC5rZXlDb2RlLCJ0YWIiLDksJGV2ZW50LmtleSwiVGFiIikpe3JldHVybiBudWxsO31fdm0udmlzaWJsZT1mYWxzZTt9XSxwYXN0ZTpmdW5jdGlvbiBwYXN0ZSgkZXZlbnQpe3JldHVybiBfdm0uZGVib3VuY2VkT25JbnB1dENoYW5nZSgkZXZlbnQpO30sbW91c2VlbnRlcjpmdW5jdGlvbiBtb3VzZWVudGVyKCRldmVudCl7X3ZtLmlucHV0SG92ZXJpbmc9dHJ1ZTt9LG1vdXNlbGVhdmU6ZnVuY3Rpb24gbW91c2VsZWF2ZSgkZXZlbnQpe192bS5pbnB1dEhvdmVyaW5nPWZhbHNlO319LG1vZGVsOnt2YWx1ZTpfdm0uc2VsZWN0ZWRMYWJlbCxjYWxsYmFjazpmdW5jdGlvbiBjYWxsYmFjaygkJHYpe192bS5zZWxlY3RlZExhYmVsPSQkdjt9LGV4cHJlc3Npb246InNlbGVjdGVkTGFiZWwifX0sW192bS4kc2xvdHMucHJlZml4P19jKCJ0ZW1wbGF0ZSIse3Nsb3Q6InByZWZpeCJ9LFtfdm0uX3QoInByZWZpeCIpXSwyKTpfdm0uX2UoKSxfYygidGVtcGxhdGUiLHtzbG90OiJzdWZmaXgifSxbX2MoImkiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTohX3ZtLnNob3dDbG9zZSxleHByZXNzaW9uOiIhc2hvd0Nsb3NlIn1dLGNsYXNzOlsiZWwtc2VsZWN0X19jYXJldCIsImVsLWlucHV0X19pY29uIiwiZWwtaWNvbi0iK192bS5pY29uQ2xhc3NdfSksX3ZtLnNob3dDbG9zZT9fYygiaSIse3N0YXRpY0NsYXNzOiJlbC1zZWxlY3RfX2NhcmV0IGVsLWlucHV0X19pY29uIGVsLWljb24tY2lyY2xlLWNsb3NlIixvbjp7Y2xpY2s6X3ZtLmhhbmRsZUNsZWFyQ2xpY2t9fSk6X3ZtLl9lKCldKV0sMiksX2MoInRyYW5zaXRpb24iLHthdHRyczp7bmFtZToiZWwtem9vbS1pbi10b3AifSxvbjp7ImJlZm9yZS1lbnRlciI6X3ZtLmhhbmRsZU1lbnVFbnRlciwiYWZ0ZXItbGVhdmUiOl92bS5kb0Rlc3Ryb3l9fSxbX2MoImVsLXNlbGVjdC1tZW51Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUmJl92bS5lbXB0eVRleHQhPT1mYWxzZSxleHByZXNzaW9uOiJ2aXNpYmxlICYmIGVtcHR5VGV4dCAhPT0gZmFsc2UifV0scmVmOiJwb3BwZXIiLGF0dHJzOnsiYXBwZW5kLXRvLWJvZHkiOl92bS5wb3BwZXJBcHBlbmRUb0JvZHl9fSxbX2MoImVsLXNjcm9sbGJhciIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5vcHRpb25zLmxlbmd0aD4wJiYhX3ZtLmxvYWRpbmcsZXhwcmVzc2lvbjoib3B0aW9ucy5sZW5ndGggPiAwICYmICFsb2FkaW5nIn1dLHJlZjoic2Nyb2xsYmFyIixjbGFzczp7ImlzLWVtcHR5IjohX3ZtLmFsbG93Q3JlYXRlJiZfdm0ucXVlcnkmJl92bS5maWx0ZXJlZE9wdGlvbnNDb3VudD09PTB9LGF0dHJzOnt0YWc6InVsIiwid3JhcC1jbGFzcyI6ImVsLXNlbGVjdC1kcm9wZG93bl9fd3JhcCIsInZpZXctY2xhc3MiOiJlbC1zZWxlY3QtZHJvcGRvd25fX2xpc3QifX0sW192bS5zaG93TmV3T3B0aW9uP19jKCJlbC1vcHRpb24iLHthdHRyczp7dmFsdWU6X3ZtLnF1ZXJ5LGNyZWF0ZWQ6IiJ9fSk6X3ZtLl9lKCksX3ZtLl90KCJkZWZhdWx0IildLDIpLF92bS5lbXB0eVRleHQmJighX3ZtLmFsbG93Q3JlYXRlfHxfdm0ubG9hZGluZ3x8X3ZtLmFsbG93Q3JlYXRlJiZfdm0ub3B0aW9ucy5sZW5ndGg9PT0wKT9bX3ZtLiRzbG90cy5lbXB0eT9fdm0uX3QoImVtcHR5Iik6X2MoInAiLHtzdGF0aWNDbGFzczoiZWwtc2VsZWN0LWRyb3Bkb3duX19lbXB0eSJ9LFtfdm0uX3YoIlxuICAgICAgICAgICIrX3ZtLl9zKF92bS5lbXB0eVRleHQpKyJcbiAgICAgICAgIildKV06X3ZtLl9lKCldLDIpXSwxKV0sMSk7fTt2YXIgc2VsZWN0dnVlX3R5cGVfdGVtcGxhdGVfaWRfMGU0YWFkZTZfc3RhdGljUmVuZGVyRm5zPVtdO3NlbGVjdHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzBlNGFhZGU2X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MGU0YWFkZTYmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvc2VsZWN0L3NyYy9zZWxlY3QtZHJvcGRvd24udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA2ODI4NzQ4Jgp2YXIgc2VsZWN0X2Ryb3Bkb3dudnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY4Mjg3NDhfcmVuZGVyPWZ1bmN0aW9uIHNlbGVjdF9kcm9wZG93bnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2ODI4NzQ4X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXNlbGVjdC1kcm9wZG93biBlbC1wb3BwZXIiLGNsYXNzOlt7ImlzLW11bHRpcGxlIjpfdm0uJHBhcmVudC5tdWx0aXBsZX0sX3ZtLnBvcHBlckNsYXNzXSxzdHlsZTp7bWluV2lkdGg6X3ZtLm1pbldpZHRofX0sW192bS5fdCgiZGVmYXVsdCIpXSwyKTt9O3ZhciBzZWxlY3RfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjgyODc0OF9zdGF0aWNSZW5kZXJGbnM9W107c2VsZWN0X2Ryb3Bkb3dudnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY4Mjg3NDhfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvc2VsZWN0LWRyb3Bkb3duLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNjgyODc0OCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvc2VsZWN0L3NyYy9zZWxlY3QtZHJvcGRvd24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNlbGVjdF9kcm9wZG93bnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxTZWxlY3REcm9wZG93bicsY29tcG9uZW50TmFtZTonRWxTZWxlY3REcm9wZG93bicsbWl4aW5zOlt2dWVfcG9wcGVyX2RlZmF1bHQuYV0scHJvcHM6e3BsYWNlbWVudDp7ZGVmYXVsdDonYm90dG9tLXN0YXJ0J30sYm91bmRhcmllc1BhZGRpbmc6e2RlZmF1bHQ6MH0scG9wcGVyT3B0aW9uczp7ZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybntncHVBY2NlbGVyYXRpb246ZmFsc2V9O319LHZpc2libGVBcnJvdzp7ZGVmYXVsdDp0cnVlfSxhcHBlbmRUb0JvZHk6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57bWluV2lkdGg6Jyd9O30sY29tcHV0ZWQ6e3BvcHBlckNsYXNzOmZ1bmN0aW9uIHBvcHBlckNsYXNzKCl7cmV0dXJuIHRoaXMuJHBhcmVudC5wb3BwZXJDbGFzczt9fSx3YXRjaDp7JyRwYXJlbnQuaW5wdXRXaWR0aCc6ZnVuY3Rpb24gJHBhcmVudElucHV0V2lkdGgoKXt0aGlzLm1pbldpZHRoPXRoaXMuJHBhcmVudC4kZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGgrJ3B4Jzt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXM9dGhpczt0aGlzLnJlZmVyZW5jZUVsbT10aGlzLiRwYXJlbnQuJHJlZnMucmVmZXJlbmNlLiRlbDt0aGlzLiRwYXJlbnQucG9wcGVyRWxtPXRoaXMucG9wcGVyRWxtPXRoaXMuJGVsO3RoaXMuJG9uKCd1cGRhdGVQb3BwZXInLGZ1bmN0aW9uKCl7aWYoX3RoaXMuJHBhcmVudC52aXNpYmxlKV90aGlzLnVwZGF0ZVBvcHBlcigpO30pO3RoaXMuJG9uKCdkZXN0cm95UG9wcGVyJyx0aGlzLmRlc3Ryb3lQb3BwZXIpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc2VsZWN0L3NyYy9zZWxlY3QtZHJvcGRvd24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19zZWxlY3RfZHJvcGRvd252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189c2VsZWN0X2Ryb3Bkb3dudnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc2VsZWN0L3NyYy9zZWxlY3QtZHJvcGRvd24udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgc2VsZWN0X2Ryb3Bkb3duX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3NlbGVjdF9kcm9wZG93bnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxzZWxlY3RfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjgyODc0OF9yZW5kZXIsc2VsZWN0X2Ryb3Bkb3dudnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY4Mjg3NDhfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBzZWxlY3RfZHJvcGRvd25fYXBpO31zZWxlY3RfZHJvcGRvd25fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC1kcm9wZG93bi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc2VsZWN0X2Ryb3Bkb3duPXNlbGVjdF9kcm9wZG93bl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03YTQ0YzY0MiYKdmFyIG9wdGlvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdhNDRjNjQyX3JlbmRlcj1mdW5jdGlvbiBvcHRpb252dWVfdHlwZV90ZW1wbGF0ZV9pZF83YTQ0YzY0Ml9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImxpIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUsZXhwcmVzc2lvbjoidmlzaWJsZSJ9XSxzdGF0aWNDbGFzczoiZWwtc2VsZWN0LWRyb3Bkb3duX19pdGVtIixjbGFzczp7c2VsZWN0ZWQ6X3ZtLml0ZW1TZWxlY3RlZCwiaXMtZGlzYWJsZWQiOl92bS5kaXNhYmxlZHx8X3ZtLmdyb3VwRGlzYWJsZWR8fF92bS5saW1pdFJlYWNoZWQsaG92ZXI6X3ZtLmhvdmVyfSxvbjp7bW91c2VlbnRlcjpfdm0uaG92ZXJJdGVtLGNsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uc2VsZWN0T3B0aW9uQ2xpY2soJGV2ZW50KTt9fX0sW192bS5fdCgiZGVmYXVsdCIsW19jKCJzcGFuIixbX3ZtLl92KF92bS5fcyhfdm0uY3VycmVudExhYmVsKSldKV0pXSwyKTt9O3ZhciBvcHRpb252dWVfdHlwZV90ZW1wbGF0ZV9pZF83YTQ0YzY0Ml9zdGF0aWNSZW5kZXJGbnM9W107b3B0aW9udnVlX3R5cGVfdGVtcGxhdGVfaWRfN2E0NGM2NDJfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03YTQ0YzY0MiYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvc2VsZWN0L3NyYy9vcHRpb24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgp2YXIgX3R5cGVvZj10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmX3R5cGVvZjIoU3ltYm9sLml0ZXJhdG9yKT09PSJzeW1ib2wiP2Z1bmN0aW9uKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTpmdW5jdGlvbihvYmope3JldHVybiBvYmomJnR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6X3R5cGVvZjIob2JqKTt9Oy8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgb3B0aW9udnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXttaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hXSxuYW1lOidFbE9wdGlvbicsY29tcG9uZW50TmFtZTonRWxPcHRpb24nLGluamVjdDpbJ3NlbGVjdCddLHByb3BzOnt2YWx1ZTp7cmVxdWlyZWQ6dHJ1ZX0sbGFiZWw6W1N0cmluZyxOdW1iZXJdLGNyZWF0ZWQ6Qm9vbGVhbixkaXNhYmxlZDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aW5kZXg6LTEsZ3JvdXBEaXNhYmxlZDpmYWxzZSx2aXNpYmxlOnRydWUsaGl0U3RhdGU6ZmFsc2UsaG92ZXI6ZmFsc2V9O30sY29tcHV0ZWQ6e2lzT2JqZWN0OmZ1bmN0aW9uIGlzT2JqZWN0KCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0aGlzLnZhbHVlKS50b0xvd2VyQ2FzZSgpPT09J1tvYmplY3Qgb2JqZWN0XSc7fSxjdXJyZW50TGFiZWw6ZnVuY3Rpb24gY3VycmVudExhYmVsKCl7cmV0dXJuIHRoaXMubGFiZWx8fCh0aGlzLmlzT2JqZWN0PycnOnRoaXMudmFsdWUpO30sY3VycmVudFZhbHVlOmZ1bmN0aW9uIGN1cnJlbnRWYWx1ZSgpe3JldHVybiB0aGlzLnZhbHVlfHx0aGlzLmxhYmVsfHwnJzt9LGl0ZW1TZWxlY3RlZDpmdW5jdGlvbiBpdGVtU2VsZWN0ZWQoKXtpZighdGhpcy5zZWxlY3QubXVsdGlwbGUpe3JldHVybiB0aGlzLmlzRXF1YWwodGhpcy52YWx1ZSx0aGlzLnNlbGVjdC52YWx1ZSk7fWVsc2V7cmV0dXJuIHRoaXMuY29udGFpbnModGhpcy5zZWxlY3QudmFsdWUsdGhpcy52YWx1ZSk7fX0sbGltaXRSZWFjaGVkOmZ1bmN0aW9uIGxpbWl0UmVhY2hlZCgpe2lmKHRoaXMuc2VsZWN0Lm11bHRpcGxlKXtyZXR1cm4hdGhpcy5pdGVtU2VsZWN0ZWQmJih0aGlzLnNlbGVjdC52YWx1ZXx8W10pLmxlbmd0aD49dGhpcy5zZWxlY3QubXVsdGlwbGVMaW1pdCYmdGhpcy5zZWxlY3QubXVsdGlwbGVMaW1pdD4wO31lbHNle3JldHVybiBmYWxzZTt9fX0sd2F0Y2g6e2N1cnJlbnRMYWJlbDpmdW5jdGlvbiBjdXJyZW50TGFiZWwoKXtpZighdGhpcy5jcmVhdGVkJiYhdGhpcy5zZWxlY3QucmVtb3RlKXRoaXMuZGlzcGF0Y2goJ0VsU2VsZWN0Jywnc2V0U2VsZWN0ZWQnKTt9LHZhbHVlOmZ1bmN0aW9uIHZhbHVlKHZhbCxvbGRWYWwpe3ZhciBfc2VsZWN0PXRoaXMuc2VsZWN0LHJlbW90ZT1fc2VsZWN0LnJlbW90ZSx2YWx1ZUtleT1fc2VsZWN0LnZhbHVlS2V5O2lmKCF0aGlzLmNyZWF0ZWQmJiFyZW1vdGUpe2lmKHZhbHVlS2V5JiYodHlwZW9mIHZhbD09PSd1bmRlZmluZWQnPyd1bmRlZmluZWQnOl90eXBlb2YodmFsKSk9PT0nb2JqZWN0JyYmKHR5cGVvZiBvbGRWYWw9PT0ndW5kZWZpbmVkJz8ndW5kZWZpbmVkJzpfdHlwZW9mKG9sZFZhbCkpPT09J29iamVjdCcmJnZhbFt2YWx1ZUtleV09PT1vbGRWYWxbdmFsdWVLZXldKXtyZXR1cm47fXRoaXMuZGlzcGF0Y2goJ0VsU2VsZWN0Jywnc2V0U2VsZWN0ZWQnKTt9fX0sbWV0aG9kczp7aXNFcXVhbDpmdW5jdGlvbiBpc0VxdWFsKGEsYil7aWYoIXRoaXMuaXNPYmplY3Qpe3JldHVybiBhPT09Yjt9ZWxzZXt2YXIgdmFsdWVLZXk9dGhpcy5zZWxlY3QudmFsdWVLZXk7cmV0dXJuIE9iamVjdCh1dGlsX1siZ2V0VmFsdWVCeVBhdGgiXSkoYSx2YWx1ZUtleSk9PT1PYmplY3QodXRpbF9bImdldFZhbHVlQnlQYXRoIl0pKGIsdmFsdWVLZXkpO319LGNvbnRhaW5zOmZ1bmN0aW9uIGNvbnRhaW5zKCl7dmFyIGFycj1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMF06W107dmFyIHRhcmdldD1hcmd1bWVudHNbMV07aWYoIXRoaXMuaXNPYmplY3Qpe3JldHVybiBhcnImJmFyci5pbmRleE9mKHRhcmdldCk+LTE7fWVsc2V7dmFyIHZhbHVlS2V5PXRoaXMuc2VsZWN0LnZhbHVlS2V5O3JldHVybiBhcnImJmFyci5zb21lKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBPYmplY3QodXRpbF9bImdldFZhbHVlQnlQYXRoIl0pKGl0ZW0sdmFsdWVLZXkpPT09T2JqZWN0KHV0aWxfWyJnZXRWYWx1ZUJ5UGF0aCJdKSh0YXJnZXQsdmFsdWVLZXkpO30pO319LGhhbmRsZUdyb3VwRGlzYWJsZWQ6ZnVuY3Rpb24gaGFuZGxlR3JvdXBEaXNhYmxlZCh2YWwpe3RoaXMuZ3JvdXBEaXNhYmxlZD12YWw7fSxob3Zlckl0ZW06ZnVuY3Rpb24gaG92ZXJJdGVtKCl7aWYoIXRoaXMuZGlzYWJsZWQmJiF0aGlzLmdyb3VwRGlzYWJsZWQpe3RoaXMuc2VsZWN0LmhvdmVySW5kZXg9dGhpcy5zZWxlY3Qub3B0aW9ucy5pbmRleE9mKHRoaXMpO319LHNlbGVjdE9wdGlvbkNsaWNrOmZ1bmN0aW9uIHNlbGVjdE9wdGlvbkNsaWNrKCl7aWYodGhpcy5kaXNhYmxlZCE9PXRydWUmJnRoaXMuZ3JvdXBEaXNhYmxlZCE9PXRydWUpe3RoaXMuZGlzcGF0Y2goJ0VsU2VsZWN0JywnaGFuZGxlT3B0aW9uQ2xpY2snLFt0aGlzLHRydWVdKTt9fSxxdWVyeUNoYW5nZTpmdW5jdGlvbiBxdWVyeUNoYW5nZShxdWVyeSl7dGhpcy52aXNpYmxlPW5ldyBSZWdFeHAoT2JqZWN0KHV0aWxfWyJlc2NhcGVSZWdleHBTdHJpbmciXSkocXVlcnkpLCdpJykudGVzdCh0aGlzLmN1cnJlbnRMYWJlbCl8fHRoaXMuY3JlYXRlZDtpZighdGhpcy52aXNpYmxlKXt0aGlzLnNlbGVjdC5maWx0ZXJlZE9wdGlvbnNDb3VudC0tO319fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt0aGlzLnNlbGVjdC5vcHRpb25zLnB1c2godGhpcyk7dGhpcy5zZWxlY3QuY2FjaGVkT3B0aW9ucy5wdXNoKHRoaXMpO3RoaXMuc2VsZWN0Lm9wdGlvbnNDb3VudCsrO3RoaXMuc2VsZWN0LmZpbHRlcmVkT3B0aW9uc0NvdW50Kys7dGhpcy4kb24oJ3F1ZXJ5Q2hhbmdlJyx0aGlzLnF1ZXJ5Q2hhbmdlKTt0aGlzLiRvbignaGFuZGxlR3JvdXBEaXNhYmxlZCcsdGhpcy5oYW5kbGVHcm91cERpc2FibGVkKTt9LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpe3ZhciBfc2VsZWN0Mj10aGlzLnNlbGVjdCxzZWxlY3RlZD1fc2VsZWN0Mi5zZWxlY3RlZCxtdWx0aXBsZT1fc2VsZWN0Mi5tdWx0aXBsZTt2YXIgc2VsZWN0ZWRPcHRpb25zPW11bHRpcGxlP3NlbGVjdGVkOltzZWxlY3RlZF07dmFyIGluZGV4PXRoaXMuc2VsZWN0LmNhY2hlZE9wdGlvbnMuaW5kZXhPZih0aGlzKTt2YXIgc2VsZWN0ZWRJbmRleD1zZWxlY3RlZE9wdGlvbnMuaW5kZXhPZih0aGlzKTsvLyBpZiBvcHRpb24gaXMgbm90IHNlbGVjdGVkLCByZW1vdmUgaXQgZnJvbSBjYWNoZQppZihpbmRleD4tMSYmc2VsZWN0ZWRJbmRleDwwKXt0aGlzLnNlbGVjdC5jYWNoZWRPcHRpb25zLnNwbGljZShpbmRleCwxKTt9dGhpcy5zZWxlY3Qub25PcHRpb25EZXN0cm95KHRoaXMuc2VsZWN0Lm9wdGlvbnMuaW5kZXhPZih0aGlzKSk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL29wdGlvbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX29wdGlvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1vcHRpb252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL29wdGlvbi52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBvcHRpb25fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfb3B0aW9udnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLG9wdGlvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdhNDRjNjQyX3JlbmRlcixvcHRpb252dWVfdHlwZV90ZW1wbGF0ZV9pZF83YTQ0YzY0Ml9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIG9wdGlvbl9hcGk7fW9wdGlvbl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfb3B0aW9uPW9wdGlvbl9jb21wb25lbnQuZXhwb3J0czsvLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi90YWciCnZhciB0YWdfPV9fd2VicGFja19yZXF1aXJlX18oMjkpO3ZhciB0YWdfZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKHRhZ18pOy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3V0aWxzL3Jlc2l6ZS1ldmVudCIKdmFyIHJlc2l6ZV9ldmVudF89X193ZWJwYWNrX3JlcXVpcmVfXygxMyk7Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvdXRpbHMvc2Nyb2xsLWludG8tdmlldyIKdmFyIHNjcm9sbF9pbnRvX3ZpZXdfPV9fd2VicGFja19yZXF1aXJlX18oMjcpO3ZhciBzY3JvbGxfaW50b192aWV3X2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihzY3JvbGxfaW50b192aWV3Xyk7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL25hdmlnYXRpb24tbWl4aW4uanMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBuYXZpZ2F0aW9uX21peGluPXtkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aG92ZXJPcHRpb246LTF9O30sY29tcHV0ZWQ6e29wdGlvbnNBbGxEaXNhYmxlZDpmdW5jdGlvbiBvcHRpb25zQWxsRGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5vcHRpb25zLmZpbHRlcihmdW5jdGlvbihvcHRpb24pe3JldHVybiBvcHRpb24udmlzaWJsZTt9KS5ldmVyeShmdW5jdGlvbihvcHRpb24pe3JldHVybiBvcHRpb24uZGlzYWJsZWQ7fSk7fX0sd2F0Y2g6e2hvdmVySW5kZXg6ZnVuY3Rpb24gaG92ZXJJbmRleCh2YWwpe3ZhciBfdGhpcz10aGlzO2lmKHR5cGVvZiB2YWw9PT0nbnVtYmVyJyYmdmFsPi0xKXt0aGlzLmhvdmVyT3B0aW9uPXRoaXMub3B0aW9uc1t2YWxdfHx7fTt9dGhpcy5vcHRpb25zLmZvckVhY2goZnVuY3Rpb24ob3B0aW9uKXtvcHRpb24uaG92ZXI9X3RoaXMuaG92ZXJPcHRpb249PT1vcHRpb247fSk7fX0sbWV0aG9kczp7bmF2aWdhdGVPcHRpb25zOmZ1bmN0aW9uIG5hdmlnYXRlT3B0aW9ucyhkaXJlY3Rpb24pe3ZhciBfdGhpczI9dGhpcztpZighdGhpcy52aXNpYmxlKXt0aGlzLnZpc2libGU9dHJ1ZTtyZXR1cm47fWlmKHRoaXMub3B0aW9ucy5sZW5ndGg9PT0wfHx0aGlzLmZpbHRlcmVkT3B0aW9uc0NvdW50PT09MClyZXR1cm47aWYoIXRoaXMub3B0aW9uc0FsbERpc2FibGVkKXtpZihkaXJlY3Rpb249PT0nbmV4dCcpe3RoaXMuaG92ZXJJbmRleCsrO2lmKHRoaXMuaG92ZXJJbmRleD09PXRoaXMub3B0aW9ucy5sZW5ndGgpe3RoaXMuaG92ZXJJbmRleD0wO319ZWxzZSBpZihkaXJlY3Rpb249PT0ncHJldicpe3RoaXMuaG92ZXJJbmRleC0tO2lmKHRoaXMuaG92ZXJJbmRleDwwKXt0aGlzLmhvdmVySW5kZXg9dGhpcy5vcHRpb25zLmxlbmd0aC0xO319dmFyIG9wdGlvbj10aGlzLm9wdGlvbnNbdGhpcy5ob3ZlckluZGV4XTtpZihvcHRpb24uZGlzYWJsZWQ9PT10cnVlfHxvcHRpb24uZ3JvdXBEaXNhYmxlZD09PXRydWV8fCFvcHRpb24udmlzaWJsZSl7dGhpcy5uYXZpZ2F0ZU9wdGlvbnMoZGlyZWN0aW9uKTt9dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMyLnNjcm9sbFRvT3B0aW9uKF90aGlzMi5ob3Zlck9wdGlvbik7fSk7fX19fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc2VsZWN0dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXttaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hLGxvY2FsZV9kZWZhdWx0LmEsZm9jdXNfZGVmYXVsdCgpKCdyZWZlcmVuY2UnKSxuYXZpZ2F0aW9uX21peGluXSxuYW1lOidFbFNlbGVjdCcsY29tcG9uZW50TmFtZTonRWxTZWxlY3QnLGluamVjdDp7ZWxGb3JtOntkZWZhdWx0OicnfSxlbEZvcm1JdGVtOntkZWZhdWx0OicnfX0scHJvdmlkZTpmdW5jdGlvbiBwcm92aWRlKCl7cmV0dXJueydzZWxlY3QnOnRoaXN9O30sY29tcHV0ZWQ6e19lbEZvcm1JdGVtU2l6ZTpmdW5jdGlvbiBfZWxGb3JtSXRlbVNpemUoKXtyZXR1cm4odGhpcy5lbEZvcm1JdGVtfHx7fSkuZWxGb3JtSXRlbVNpemU7fSxyZWFkb25seTpmdW5jdGlvbiByZWFkb25seSgpe3JldHVybiF0aGlzLmZpbHRlcmFibGV8fHRoaXMubXVsdGlwbGV8fCFPYmplY3QodXRpbF9bImlzSUUiXSkoKSYmIU9iamVjdCh1dGlsX1siaXNFZGdlIl0pKCkmJiF0aGlzLnZpc2libGU7fSxzaG93Q2xvc2U6ZnVuY3Rpb24gc2hvd0Nsb3NlKCl7dmFyIGhhc1ZhbHVlPXRoaXMubXVsdGlwbGU/QXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSYmdGhpcy52YWx1ZS5sZW5ndGg+MDp0aGlzLnZhbHVlIT09dW5kZWZpbmVkJiZ0aGlzLnZhbHVlIT09bnVsbCYmdGhpcy52YWx1ZSE9PScnO3ZhciBjcml0ZXJpYT10aGlzLmNsZWFyYWJsZSYmIXRoaXMuc2VsZWN0RGlzYWJsZWQmJnRoaXMuaW5wdXRIb3ZlcmluZyYmaGFzVmFsdWU7cmV0dXJuIGNyaXRlcmlhO30saWNvbkNsYXNzOmZ1bmN0aW9uIGljb25DbGFzcygpe3JldHVybiB0aGlzLnJlbW90ZSYmdGhpcy5maWx0ZXJhYmxlPycnOnRoaXMudmlzaWJsZT8nYXJyb3ctdXAgaXMtcmV2ZXJzZSc6J2Fycm93LXVwJzt9LGRlYm91bmNlOmZ1bmN0aW9uIGRlYm91bmNlKCl7cmV0dXJuIHRoaXMucmVtb3RlPzMwMDowO30sZW1wdHlUZXh0OmZ1bmN0aW9uIGVtcHR5VGV4dCgpe2lmKHRoaXMubG9hZGluZyl7cmV0dXJuIHRoaXMubG9hZGluZ1RleHR8fHRoaXMudCgnZWwuc2VsZWN0LmxvYWRpbmcnKTt9ZWxzZXtpZih0aGlzLnJlbW90ZSYmdGhpcy5xdWVyeT09PScnJiZ0aGlzLm9wdGlvbnMubGVuZ3RoPT09MClyZXR1cm4gZmFsc2U7aWYodGhpcy5maWx0ZXJhYmxlJiZ0aGlzLnF1ZXJ5JiZ0aGlzLm9wdGlvbnMubGVuZ3RoPjAmJnRoaXMuZmlsdGVyZWRPcHRpb25zQ291bnQ9PT0wKXtyZXR1cm4gdGhpcy5ub01hdGNoVGV4dHx8dGhpcy50KCdlbC5zZWxlY3Qubm9NYXRjaCcpO31pZih0aGlzLm9wdGlvbnMubGVuZ3RoPT09MCl7cmV0dXJuIHRoaXMubm9EYXRhVGV4dHx8dGhpcy50KCdlbC5zZWxlY3Qubm9EYXRhJyk7fX1yZXR1cm4gbnVsbDt9LHNob3dOZXdPcHRpb246ZnVuY3Rpb24gc2hvd05ld09wdGlvbigpe3ZhciBfdGhpcz10aGlzO3ZhciBoYXNFeGlzdGluZ09wdGlvbj10aGlzLm9wdGlvbnMuZmlsdGVyKGZ1bmN0aW9uKG9wdGlvbil7cmV0dXJuIW9wdGlvbi5jcmVhdGVkO30pLnNvbWUoZnVuY3Rpb24ob3B0aW9uKXtyZXR1cm4gb3B0aW9uLmN1cnJlbnRMYWJlbD09PV90aGlzLnF1ZXJ5O30pO3JldHVybiB0aGlzLmZpbHRlcmFibGUmJnRoaXMuYWxsb3dDcmVhdGUmJnRoaXMucXVlcnkhPT0nJyYmIWhhc0V4aXN0aW5nT3B0aW9uO30sc2VsZWN0U2l6ZTpmdW5jdGlvbiBzZWxlY3RTaXplKCl7cmV0dXJuIHRoaXMuc2l6ZXx8dGhpcy5fZWxGb3JtSXRlbVNpemV8fCh0aGlzLiRFTEVNRU5UfHx7fSkuc2l6ZTt9LHNlbGVjdERpc2FibGVkOmZ1bmN0aW9uIHNlbGVjdERpc2FibGVkKCl7cmV0dXJuIHRoaXMuZGlzYWJsZWR8fCh0aGlzLmVsRm9ybXx8e30pLmRpc2FibGVkO30sY29sbGFwc2VUYWdTaXplOmZ1bmN0aW9uIGNvbGxhcHNlVGFnU2l6ZSgpe3JldHVyblsnc21hbGwnLCdtaW5pJ10uaW5kZXhPZih0aGlzLnNlbGVjdFNpemUpPi0xPydtaW5pJzonc21hbGwnO30scHJvcFBsYWNlaG9sZGVyOmZ1bmN0aW9uIHByb3BQbGFjZWhvbGRlcigpe3JldHVybiB0eXBlb2YgdGhpcy5wbGFjZWhvbGRlciE9PSd1bmRlZmluZWQnP3RoaXMucGxhY2Vob2xkZXI6dGhpcy50KCdlbC5zZWxlY3QucGxhY2Vob2xkZXInKTt9fSxjb21wb25lbnRzOntFbElucHV0OmlucHV0X2RlZmF1bHQuYSxFbFNlbGVjdE1lbnU6c2VsZWN0X2Ryb3Bkb3duLEVsT3B0aW9uOnNyY19vcHRpb24sRWxUYWc6dGFnX2RlZmF1bHQuYSxFbFNjcm9sbGJhcjpzY3JvbGxiYXJfZGVmYXVsdC5hfSxkaXJlY3RpdmVzOntDbGlja291dHNpZGU6Y2xpY2tvdXRzaWRlX2RlZmF1bHQuYX0scHJvcHM6e25hbWU6U3RyaW5nLGlkOlN0cmluZyx2YWx1ZTp7cmVxdWlyZWQ6dHJ1ZX0sYXV0b2NvbXBsZXRlOnt0eXBlOlN0cmluZyxkZWZhdWx0OidvZmYnfSwvKiogQERlcHJlY2F0ZWQgaW4gbmV4dCBtYWpvciB2ZXJzaW9uICovYXV0b0NvbXBsZXRlOnt0eXBlOlN0cmluZyx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7ZmFsc2UmJmZhbHNlO3JldHVybiB0cnVlO319LGF1dG9tYXRpY0Ryb3Bkb3duOkJvb2xlYW4sc2l6ZTpTdHJpbmcsZGlzYWJsZWQ6Qm9vbGVhbixjbGVhcmFibGU6Qm9vbGVhbixmaWx0ZXJhYmxlOkJvb2xlYW4sYWxsb3dDcmVhdGU6Qm9vbGVhbixsb2FkaW5nOkJvb2xlYW4scG9wcGVyQ2xhc3M6U3RyaW5nLHJlbW90ZTpCb29sZWFuLGxvYWRpbmdUZXh0OlN0cmluZyxub01hdGNoVGV4dDpTdHJpbmcsbm9EYXRhVGV4dDpTdHJpbmcscmVtb3RlTWV0aG9kOkZ1bmN0aW9uLGZpbHRlck1ldGhvZDpGdW5jdGlvbixtdWx0aXBsZTpCb29sZWFuLG11bHRpcGxlTGltaXQ6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MH0scGxhY2Vob2xkZXI6e3R5cGU6U3RyaW5nLHJlcXVpcmVkOmZhbHNlfSxkZWZhdWx0Rmlyc3RPcHRpb246Qm9vbGVhbixyZXNlcnZlS2V5d29yZDpCb29sZWFuLHZhbHVlS2V5Ont0eXBlOlN0cmluZyxkZWZhdWx0Oid2YWx1ZSd9LGNvbGxhcHNlVGFnczpCb29sZWFuLHBvcHBlckFwcGVuZFRvQm9keTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntvcHRpb25zOltdLGNhY2hlZE9wdGlvbnM6W10sY3JlYXRlZExhYmVsOm51bGwsY3JlYXRlZFNlbGVjdGVkOmZhbHNlLHNlbGVjdGVkOnRoaXMubXVsdGlwbGU/W106e30saW5wdXRMZW5ndGg6MjAsaW5wdXRXaWR0aDowLGluaXRpYWxJbnB1dEhlaWdodDowLGNhY2hlZFBsYWNlSG9sZGVyOicnLG9wdGlvbnNDb3VudDowLGZpbHRlcmVkT3B0aW9uc0NvdW50OjAsdmlzaWJsZTpmYWxzZSxzb2Z0Rm9jdXM6ZmFsc2Usc2VsZWN0ZWRMYWJlbDonJyxob3ZlckluZGV4Oi0xLHF1ZXJ5OicnLHByZXZpb3VzUXVlcnk6bnVsbCxpbnB1dEhvdmVyaW5nOmZhbHNlLGN1cnJlbnRQbGFjZWhvbGRlcjonJyxtZW51VmlzaWJsZU9uRm9jdXM6ZmFsc2UsaXNPbkNvbXBvc2l0aW9uOmZhbHNlLGlzU2lsZW50Qmx1cjpmYWxzZX07fSx3YXRjaDp7c2VsZWN0RGlzYWJsZWQ6ZnVuY3Rpb24gc2VsZWN0RGlzYWJsZWQoKXt2YXIgX3RoaXMyPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpczIucmVzZXRJbnB1dEhlaWdodCgpO30pO30scHJvcFBsYWNlaG9sZGVyOmZ1bmN0aW9uIHByb3BQbGFjZWhvbGRlcih2YWwpe3RoaXMuY2FjaGVkUGxhY2VIb2xkZXI9dGhpcy5jdXJyZW50UGxhY2Vob2xkZXI9dmFsO30sdmFsdWU6ZnVuY3Rpb24gdmFsdWUodmFsLG9sZFZhbCl7aWYodGhpcy5tdWx0aXBsZSl7dGhpcy5yZXNldElucHV0SGVpZ2h0KCk7aWYodmFsJiZ2YWwubGVuZ3RoPjB8fHRoaXMuJHJlZnMuaW5wdXQmJnRoaXMucXVlcnkhPT0nJyl7dGhpcy5jdXJyZW50UGxhY2Vob2xkZXI9Jyc7fWVsc2V7dGhpcy5jdXJyZW50UGxhY2Vob2xkZXI9dGhpcy5jYWNoZWRQbGFjZUhvbGRlcjt9aWYodGhpcy5maWx0ZXJhYmxlJiYhdGhpcy5yZXNlcnZlS2V5d29yZCl7dGhpcy5xdWVyeT0nJzt0aGlzLmhhbmRsZVF1ZXJ5Q2hhbmdlKHRoaXMucXVlcnkpO319dGhpcy5zZXRTZWxlY3RlZCgpO2lmKHRoaXMuZmlsdGVyYWJsZSYmIXRoaXMubXVsdGlwbGUpe3RoaXMuaW5wdXRMZW5ndGg9MjA7fWlmKCFPYmplY3QodXRpbF9bInZhbHVlRXF1YWxzIl0pKHZhbCxvbGRWYWwpKXt0aGlzLmRpc3BhdGNoKCdFbEZvcm1JdGVtJywnZWwuZm9ybS5jaGFuZ2UnLHZhbCk7fX0sdmlzaWJsZTpmdW5jdGlvbiB2aXNpYmxlKHZhbCl7dmFyIF90aGlzMz10aGlzO2lmKCF2YWwpe3RoaXMuYnJvYWRjYXN0KCdFbFNlbGVjdERyb3Bkb3duJywnZGVzdHJveVBvcHBlcicpO2lmKHRoaXMuJHJlZnMuaW5wdXQpe3RoaXMuJHJlZnMuaW5wdXQuYmx1cigpO310aGlzLnF1ZXJ5PScnO3RoaXMucHJldmlvdXNRdWVyeT1udWxsO3RoaXMuc2VsZWN0ZWRMYWJlbD0nJzt0aGlzLmlucHV0TGVuZ3RoPTIwO3RoaXMubWVudVZpc2libGVPbkZvY3VzPWZhbHNlO3RoaXMucmVzZXRIb3ZlckluZGV4KCk7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZihfdGhpczMuJHJlZnMuaW5wdXQmJl90aGlzMy4kcmVmcy5pbnB1dC52YWx1ZT09PScnJiZfdGhpczMuc2VsZWN0ZWQubGVuZ3RoPT09MCl7X3RoaXMzLmN1cnJlbnRQbGFjZWhvbGRlcj1fdGhpczMuY2FjaGVkUGxhY2VIb2xkZXI7fX0pO2lmKCF0aGlzLm11bHRpcGxlKXtpZih0aGlzLnNlbGVjdGVkKXtpZih0aGlzLmZpbHRlcmFibGUmJnRoaXMuYWxsb3dDcmVhdGUmJnRoaXMuY3JlYXRlZFNlbGVjdGVkJiZ0aGlzLmNyZWF0ZWRMYWJlbCl7dGhpcy5zZWxlY3RlZExhYmVsPXRoaXMuY3JlYXRlZExhYmVsO31lbHNle3RoaXMuc2VsZWN0ZWRMYWJlbD10aGlzLnNlbGVjdGVkLmN1cnJlbnRMYWJlbDt9aWYodGhpcy5maWx0ZXJhYmxlKXRoaXMucXVlcnk9dGhpcy5zZWxlY3RlZExhYmVsO31pZih0aGlzLmZpbHRlcmFibGUpe3RoaXMuY3VycmVudFBsYWNlaG9sZGVyPXRoaXMuY2FjaGVkUGxhY2VIb2xkZXI7fX19ZWxzZXt0aGlzLmJyb2FkY2FzdCgnRWxTZWxlY3REcm9wZG93bicsJ3VwZGF0ZVBvcHBlcicpO2lmKHRoaXMuZmlsdGVyYWJsZSl7dGhpcy5xdWVyeT10aGlzLnJlbW90ZT8nJzp0aGlzLnNlbGVjdGVkTGFiZWw7dGhpcy5oYW5kbGVRdWVyeUNoYW5nZSh0aGlzLnF1ZXJ5KTtpZih0aGlzLm11bHRpcGxlKXt0aGlzLiRyZWZzLmlucHV0LmZvY3VzKCk7fWVsc2V7aWYoIXRoaXMucmVtb3RlKXt0aGlzLmJyb2FkY2FzdCgnRWxPcHRpb24nLCdxdWVyeUNoYW5nZScsJycpO3RoaXMuYnJvYWRjYXN0KCdFbE9wdGlvbkdyb3VwJywncXVlcnlDaGFuZ2UnKTt9aWYodGhpcy5zZWxlY3RlZExhYmVsKXt0aGlzLmN1cnJlbnRQbGFjZWhvbGRlcj10aGlzLnNlbGVjdGVkTGFiZWw7dGhpcy5zZWxlY3RlZExhYmVsPScnO319fX10aGlzLiRlbWl0KCd2aXNpYmxlLWNoYW5nZScsdmFsKTt9LG9wdGlvbnM6ZnVuY3Rpb24gb3B0aW9ucygpe3ZhciBfdGhpczQ9dGhpcztpZih0aGlzLiRpc1NlcnZlcilyZXR1cm47dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpczQuYnJvYWRjYXN0KCdFbFNlbGVjdERyb3Bkb3duJywndXBkYXRlUG9wcGVyJyk7fSk7aWYodGhpcy5tdWx0aXBsZSl7dGhpcy5yZXNldElucHV0SGVpZ2h0KCk7fXZhciBpbnB1dHM9dGhpcy4kZWwucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQnKTtpZihbXS5pbmRleE9mLmNhbGwoaW5wdXRzLGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpPT09LTEpe3RoaXMuc2V0U2VsZWN0ZWQoKTt9aWYodGhpcy5kZWZhdWx0Rmlyc3RPcHRpb24mJih0aGlzLmZpbHRlcmFibGV8fHRoaXMucmVtb3RlKSYmdGhpcy5maWx0ZXJlZE9wdGlvbnNDb3VudCl7dGhpcy5jaGVja0RlZmF1bHRGaXJzdE9wdGlvbigpO319fSxtZXRob2RzOntoYW5kbGVDb21wb3NpdGlvbjpmdW5jdGlvbiBoYW5kbGVDb21wb3NpdGlvbihldmVudCl7dmFyIF90aGlzNT10aGlzO3ZhciB0ZXh0PWV2ZW50LnRhcmdldC52YWx1ZTtpZihldmVudC50eXBlPT09J2NvbXBvc2l0aW9uZW5kJyl7dGhpcy5pc09uQ29tcG9zaXRpb249ZmFsc2U7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oXyl7cmV0dXJuIF90aGlzNS5oYW5kbGVRdWVyeUNoYW5nZSh0ZXh0KTt9KTt9ZWxzZXt2YXIgbGFzdENoYXJhY3Rlcj10ZXh0W3RleHQubGVuZ3RoLTFdfHwnJzt0aGlzLmlzT25Db21wb3NpdGlvbj0hT2JqZWN0KHNoYXJlZF9bImlzS29yZWFuIl0pKGxhc3RDaGFyYWN0ZXIpO319LGhhbmRsZVF1ZXJ5Q2hhbmdlOmZ1bmN0aW9uIGhhbmRsZVF1ZXJ5Q2hhbmdlKHZhbCl7dmFyIF90aGlzNj10aGlzO2lmKHRoaXMucHJldmlvdXNRdWVyeT09PXZhbHx8dGhpcy5pc09uQ29tcG9zaXRpb24pcmV0dXJuO2lmKHRoaXMucHJldmlvdXNRdWVyeT09PW51bGwmJih0eXBlb2YgdGhpcy5maWx0ZXJNZXRob2Q9PT0nZnVuY3Rpb24nfHx0eXBlb2YgdGhpcy5yZW1vdGVNZXRob2Q9PT0nZnVuY3Rpb24nKSl7dGhpcy5wcmV2aW91c1F1ZXJ5PXZhbDtyZXR1cm47fXRoaXMucHJldmlvdXNRdWVyeT12YWw7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZihfdGhpczYudmlzaWJsZSlfdGhpczYuYnJvYWRjYXN0KCdFbFNlbGVjdERyb3Bkb3duJywndXBkYXRlUG9wcGVyJyk7fSk7dGhpcy5ob3ZlckluZGV4PS0xO2lmKHRoaXMubXVsdGlwbGUmJnRoaXMuZmlsdGVyYWJsZSl7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXt2YXIgbGVuZ3RoPV90aGlzNi4kcmVmcy5pbnB1dC52YWx1ZS5sZW5ndGgqMTUrMjA7X3RoaXM2LmlucHV0TGVuZ3RoPV90aGlzNi5jb2xsYXBzZVRhZ3M/TWF0aC5taW4oNTAsbGVuZ3RoKTpsZW5ndGg7X3RoaXM2Lm1hbmFnZVBsYWNlaG9sZGVyKCk7X3RoaXM2LnJlc2V0SW5wdXRIZWlnaHQoKTt9KTt9aWYodGhpcy5yZW1vdGUmJnR5cGVvZiB0aGlzLnJlbW90ZU1ldGhvZD09PSdmdW5jdGlvbicpe3RoaXMuaG92ZXJJbmRleD0tMTt0aGlzLnJlbW90ZU1ldGhvZCh2YWwpO31lbHNlIGlmKHR5cGVvZiB0aGlzLmZpbHRlck1ldGhvZD09PSdmdW5jdGlvbicpe3RoaXMuZmlsdGVyTWV0aG9kKHZhbCk7dGhpcy5icm9hZGNhc3QoJ0VsT3B0aW9uR3JvdXAnLCdxdWVyeUNoYW5nZScpO31lbHNle3RoaXMuZmlsdGVyZWRPcHRpb25zQ291bnQ9dGhpcy5vcHRpb25zQ291bnQ7dGhpcy5icm9hZGNhc3QoJ0VsT3B0aW9uJywncXVlcnlDaGFuZ2UnLHZhbCk7dGhpcy5icm9hZGNhc3QoJ0VsT3B0aW9uR3JvdXAnLCdxdWVyeUNoYW5nZScpO31pZih0aGlzLmRlZmF1bHRGaXJzdE9wdGlvbiYmKHRoaXMuZmlsdGVyYWJsZXx8dGhpcy5yZW1vdGUpJiZ0aGlzLmZpbHRlcmVkT3B0aW9uc0NvdW50KXt0aGlzLmNoZWNrRGVmYXVsdEZpcnN0T3B0aW9uKCk7fX0sc2Nyb2xsVG9PcHRpb246ZnVuY3Rpb24gc2Nyb2xsVG9PcHRpb24ob3B0aW9uKXt2YXIgdGFyZ2V0PUFycmF5LmlzQXJyYXkob3B0aW9uKSYmb3B0aW9uWzBdP29wdGlvblswXS4kZWw6b3B0aW9uLiRlbDtpZih0aGlzLiRyZWZzLnBvcHBlciYmdGFyZ2V0KXt2YXIgbWVudT10aGlzLiRyZWZzLnBvcHBlci4kZWwucXVlcnlTZWxlY3RvcignLmVsLXNlbGVjdC1kcm9wZG93bl9fd3JhcCcpO3Njcm9sbF9pbnRvX3ZpZXdfZGVmYXVsdCgpKG1lbnUsdGFyZ2V0KTt9dGhpcy4kcmVmcy5zY3JvbGxiYXImJnRoaXMuJHJlZnMuc2Nyb2xsYmFyLmhhbmRsZVNjcm9sbCgpO30saGFuZGxlTWVudUVudGVyOmZ1bmN0aW9uIGhhbmRsZU1lbnVFbnRlcigpe3ZhciBfdGhpczc9dGhpczt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe3JldHVybiBfdGhpczcuc2Nyb2xsVG9PcHRpb24oX3RoaXM3LnNlbGVjdGVkKTt9KTt9LGVtaXRDaGFuZ2U6ZnVuY3Rpb24gZW1pdENoYW5nZSh2YWwpe2lmKCFPYmplY3QodXRpbF9bInZhbHVlRXF1YWxzIl0pKHRoaXMudmFsdWUsdmFsKSl7dGhpcy4kZW1pdCgnY2hhbmdlJyx2YWwpO319LGdldE9wdGlvbjpmdW5jdGlvbiBnZXRPcHRpb24odmFsdWUpe3ZhciBvcHRpb249dm9pZCAwO3ZhciBpc09iamVjdD1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLnRvTG93ZXJDYXNlKCk9PT0nW29iamVjdCBvYmplY3RdJzt2YXIgaXNOdWxsPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkudG9Mb3dlckNhc2UoKT09PSdbb2JqZWN0IG51bGxdJzt2YXIgaXNVbmRlZmluZWQ9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKS50b0xvd2VyQ2FzZSgpPT09J1tvYmplY3QgdW5kZWZpbmVkXSc7Zm9yKHZhciBpPXRoaXMuY2FjaGVkT3B0aW9ucy5sZW5ndGgtMTtpPj0wO2ktLSl7dmFyIGNhY2hlZE9wdGlvbj10aGlzLmNhY2hlZE9wdGlvbnNbaV07dmFyIGlzRXF1YWw9aXNPYmplY3Q/T2JqZWN0KHV0aWxfWyJnZXRWYWx1ZUJ5UGF0aCJdKShjYWNoZWRPcHRpb24udmFsdWUsdGhpcy52YWx1ZUtleSk9PT1PYmplY3QodXRpbF9bImdldFZhbHVlQnlQYXRoIl0pKHZhbHVlLHRoaXMudmFsdWVLZXkpOmNhY2hlZE9wdGlvbi52YWx1ZT09PXZhbHVlO2lmKGlzRXF1YWwpe29wdGlvbj1jYWNoZWRPcHRpb247YnJlYWs7fX1pZihvcHRpb24pcmV0dXJuIG9wdGlvbjt2YXIgbGFiZWw9IWlzT2JqZWN0JiYhaXNOdWxsJiYhaXNVbmRlZmluZWQ/dmFsdWU6Jyc7dmFyIG5ld09wdGlvbj17dmFsdWU6dmFsdWUsY3VycmVudExhYmVsOmxhYmVsfTtpZih0aGlzLm11bHRpcGxlKXtuZXdPcHRpb24uaGl0U3RhdGU9ZmFsc2U7fXJldHVybiBuZXdPcHRpb247fSxzZXRTZWxlY3RlZDpmdW5jdGlvbiBzZXRTZWxlY3RlZCgpe3ZhciBfdGhpczg9dGhpcztpZighdGhpcy5tdWx0aXBsZSl7dmFyIG9wdGlvbj10aGlzLmdldE9wdGlvbih0aGlzLnZhbHVlKTtpZihvcHRpb24uY3JlYXRlZCl7dGhpcy5jcmVhdGVkTGFiZWw9b3B0aW9uLmN1cnJlbnRMYWJlbDt0aGlzLmNyZWF0ZWRTZWxlY3RlZD10cnVlO31lbHNle3RoaXMuY3JlYXRlZFNlbGVjdGVkPWZhbHNlO310aGlzLnNlbGVjdGVkTGFiZWw9b3B0aW9uLmN1cnJlbnRMYWJlbDt0aGlzLnNlbGVjdGVkPW9wdGlvbjtpZih0aGlzLmZpbHRlcmFibGUpdGhpcy5xdWVyeT10aGlzLnNlbGVjdGVkTGFiZWw7cmV0dXJuO312YXIgcmVzdWx0PVtdO2lmKEFycmF5LmlzQXJyYXkodGhpcy52YWx1ZSkpe3RoaXMudmFsdWUuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSl7cmVzdWx0LnB1c2goX3RoaXM4LmdldE9wdGlvbih2YWx1ZSkpO30pO310aGlzLnNlbGVjdGVkPXJlc3VsdDt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzOC5yZXNldElucHV0SGVpZ2h0KCk7fSk7fSxoYW5kbGVGb2N1czpmdW5jdGlvbiBoYW5kbGVGb2N1cyhldmVudCl7aWYoIXRoaXMuc29mdEZvY3VzKXtpZih0aGlzLmF1dG9tYXRpY0Ryb3Bkb3dufHx0aGlzLmZpbHRlcmFibGUpe3RoaXMudmlzaWJsZT10cnVlO2lmKHRoaXMuZmlsdGVyYWJsZSl7dGhpcy5tZW51VmlzaWJsZU9uRm9jdXM9dHJ1ZTt9fXRoaXMuJGVtaXQoJ2ZvY3VzJyxldmVudCk7fWVsc2V7dGhpcy5zb2Z0Rm9jdXM9ZmFsc2U7fX0sYmx1cjpmdW5jdGlvbiBibHVyKCl7dGhpcy52aXNpYmxlPWZhbHNlO3RoaXMuJHJlZnMucmVmZXJlbmNlLmJsdXIoKTt9LGhhbmRsZUJsdXI6ZnVuY3Rpb24gaGFuZGxlQmx1cihldmVudCl7dmFyIF90aGlzOT10aGlzO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtpZihfdGhpczkuaXNTaWxlbnRCbHVyKXtfdGhpczkuaXNTaWxlbnRCbHVyPWZhbHNlO31lbHNle190aGlzOS4kZW1pdCgnYmx1cicsZXZlbnQpO319LDUwKTt0aGlzLnNvZnRGb2N1cz1mYWxzZTt9LGhhbmRsZUNsZWFyQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlQ2xlYXJDbGljayhldmVudCl7dGhpcy5kZWxldGVTZWxlY3RlZChldmVudCk7fSxkb0Rlc3Ryb3k6ZnVuY3Rpb24gZG9EZXN0cm95KCl7dGhpcy4kcmVmcy5wb3BwZXImJnRoaXMuJHJlZnMucG9wcGVyLmRvRGVzdHJveSgpO30saGFuZGxlQ2xvc2U6ZnVuY3Rpb24gaGFuZGxlQ2xvc2UoKXt0aGlzLnZpc2libGU9ZmFsc2U7fSx0b2dnbGVMYXN0T3B0aW9uSGl0U3RhdGU6ZnVuY3Rpb24gdG9nZ2xlTGFzdE9wdGlvbkhpdFN0YXRlKGhpdCl7aWYoIUFycmF5LmlzQXJyYXkodGhpcy5zZWxlY3RlZCkpcmV0dXJuO3ZhciBvcHRpb249dGhpcy5zZWxlY3RlZFt0aGlzLnNlbGVjdGVkLmxlbmd0aC0xXTtpZighb3B0aW9uKXJldHVybjtpZihoaXQ9PT10cnVlfHxoaXQ9PT1mYWxzZSl7b3B0aW9uLmhpdFN0YXRlPWhpdDtyZXR1cm4gaGl0O31vcHRpb24uaGl0U3RhdGU9IW9wdGlvbi5oaXRTdGF0ZTtyZXR1cm4gb3B0aW9uLmhpdFN0YXRlO30sZGVsZXRlUHJldlRhZzpmdW5jdGlvbiBkZWxldGVQcmV2VGFnKGUpe2lmKGUudGFyZ2V0LnZhbHVlLmxlbmd0aDw9MCYmIXRoaXMudG9nZ2xlTGFzdE9wdGlvbkhpdFN0YXRlKCkpe3ZhciB2YWx1ZT10aGlzLnZhbHVlLnNsaWNlKCk7dmFsdWUucG9wKCk7dGhpcy4kZW1pdCgnaW5wdXQnLHZhbHVlKTt0aGlzLmVtaXRDaGFuZ2UodmFsdWUpO319LG1hbmFnZVBsYWNlaG9sZGVyOmZ1bmN0aW9uIG1hbmFnZVBsYWNlaG9sZGVyKCl7aWYodGhpcy5jdXJyZW50UGxhY2Vob2xkZXIhPT0nJyl7dGhpcy5jdXJyZW50UGxhY2Vob2xkZXI9dGhpcy4kcmVmcy5pbnB1dC52YWx1ZT8nJzp0aGlzLmNhY2hlZFBsYWNlSG9sZGVyO319LHJlc2V0SW5wdXRTdGF0ZTpmdW5jdGlvbiByZXNldElucHV0U3RhdGUoZSl7aWYoZS5rZXlDb2RlIT09OCl0aGlzLnRvZ2dsZUxhc3RPcHRpb25IaXRTdGF0ZShmYWxzZSk7dGhpcy5pbnB1dExlbmd0aD10aGlzLiRyZWZzLmlucHV0LnZhbHVlLmxlbmd0aCoxNSsyMDt0aGlzLnJlc2V0SW5wdXRIZWlnaHQoKTt9LHJlc2V0SW5wdXRIZWlnaHQ6ZnVuY3Rpb24gcmVzZXRJbnB1dEhlaWdodCgpe3ZhciBfdGhpczEwPXRoaXM7aWYodGhpcy5jb2xsYXBzZVRhZ3MmJiF0aGlzLmZpbHRlcmFibGUpcmV0dXJuO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7aWYoIV90aGlzMTAuJHJlZnMucmVmZXJlbmNlKXJldHVybjt2YXIgaW5wdXRDaGlsZE5vZGVzPV90aGlzMTAuJHJlZnMucmVmZXJlbmNlLiRlbC5jaGlsZE5vZGVzO3ZhciBpbnB1dD1bXS5maWx0ZXIuY2FsbChpbnB1dENoaWxkTm9kZXMsZnVuY3Rpb24oaXRlbSl7cmV0dXJuIGl0ZW0udGFnTmFtZT09PSdJTlBVVCc7fSlbMF07dmFyIHRhZ3M9X3RoaXMxMC4kcmVmcy50YWdzO3ZhciBzaXplSW5NYXA9X3RoaXMxMC5pbml0aWFsSW5wdXRIZWlnaHR8fDQwO2lucHV0LnN0eWxlLmhlaWdodD1fdGhpczEwLnNlbGVjdGVkLmxlbmd0aD09PTA/c2l6ZUluTWFwKydweCc6TWF0aC5tYXgodGFncz90YWdzLmNsaWVudEhlaWdodCsodGFncy5jbGllbnRIZWlnaHQ+c2l6ZUluTWFwPzY6MCk6MCxzaXplSW5NYXApKydweCc7aWYoX3RoaXMxMC52aXNpYmxlJiZfdGhpczEwLmVtcHR5VGV4dCE9PWZhbHNlKXtfdGhpczEwLmJyb2FkY2FzdCgnRWxTZWxlY3REcm9wZG93bicsJ3VwZGF0ZVBvcHBlcicpO319KTt9LHJlc2V0SG92ZXJJbmRleDpmdW5jdGlvbiByZXNldEhvdmVySW5kZXgoKXt2YXIgX3RoaXMxMT10aGlzO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtpZighX3RoaXMxMS5tdWx0aXBsZSl7X3RoaXMxMS5ob3ZlckluZGV4PV90aGlzMTEub3B0aW9ucy5pbmRleE9mKF90aGlzMTEuc2VsZWN0ZWQpO31lbHNle2lmKF90aGlzMTEuc2VsZWN0ZWQubGVuZ3RoPjApe190aGlzMTEuaG92ZXJJbmRleD1NYXRoLm1pbi5hcHBseShudWxsLF90aGlzMTEuc2VsZWN0ZWQubWFwKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBfdGhpczExLm9wdGlvbnMuaW5kZXhPZihpdGVtKTt9KSk7fWVsc2V7X3RoaXMxMS5ob3ZlckluZGV4PS0xO319fSwzMDApO30saGFuZGxlT3B0aW9uU2VsZWN0OmZ1bmN0aW9uIGhhbmRsZU9wdGlvblNlbGVjdChvcHRpb24sYnlDbGljayl7dmFyIF90aGlzMTI9dGhpcztpZih0aGlzLm11bHRpcGxlKXt2YXIgdmFsdWU9KHRoaXMudmFsdWV8fFtdKS5zbGljZSgpO3ZhciBvcHRpb25JbmRleD10aGlzLmdldFZhbHVlSW5kZXgodmFsdWUsb3B0aW9uLnZhbHVlKTtpZihvcHRpb25JbmRleD4tMSl7dmFsdWUuc3BsaWNlKG9wdGlvbkluZGV4LDEpO31lbHNlIGlmKHRoaXMubXVsdGlwbGVMaW1pdDw9MHx8dmFsdWUubGVuZ3RoPHRoaXMubXVsdGlwbGVMaW1pdCl7dmFsdWUucHVzaChvcHRpb24udmFsdWUpO310aGlzLiRlbWl0KCdpbnB1dCcsdmFsdWUpO3RoaXMuZW1pdENoYW5nZSh2YWx1ZSk7aWYob3B0aW9uLmNyZWF0ZWQpe3RoaXMucXVlcnk9Jyc7dGhpcy5oYW5kbGVRdWVyeUNoYW5nZSgnJyk7dGhpcy5pbnB1dExlbmd0aD0yMDt9aWYodGhpcy5maWx0ZXJhYmxlKXRoaXMuJHJlZnMuaW5wdXQuZm9jdXMoKTt9ZWxzZXt0aGlzLiRlbWl0KCdpbnB1dCcsb3B0aW9uLnZhbHVlKTt0aGlzLmVtaXRDaGFuZ2Uob3B0aW9uLnZhbHVlKTt0aGlzLnZpc2libGU9ZmFsc2U7fXRoaXMuaXNTaWxlbnRCbHVyPWJ5Q2xpY2s7dGhpcy5zZXRTb2Z0Rm9jdXMoKTtpZih0aGlzLnZpc2libGUpcmV0dXJuO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7X3RoaXMxMi5zY3JvbGxUb09wdGlvbihvcHRpb24pO30pO30sc2V0U29mdEZvY3VzOmZ1bmN0aW9uIHNldFNvZnRGb2N1cygpe3RoaXMuc29mdEZvY3VzPXRydWU7dmFyIGlucHV0PXRoaXMuJHJlZnMuaW5wdXR8fHRoaXMuJHJlZnMucmVmZXJlbmNlO2lmKGlucHV0KXtpbnB1dC5mb2N1cygpO319LGdldFZhbHVlSW5kZXg6ZnVuY3Rpb24gZ2V0VmFsdWVJbmRleCgpe3ZhciBhcnI9YXJndW1lbnRzLmxlbmd0aD4wJiZhcmd1bWVudHNbMF0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzBdOltdO3ZhciB2YWx1ZT1hcmd1bWVudHNbMV07dmFyIGlzT2JqZWN0PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkudG9Mb3dlckNhc2UoKT09PSdbb2JqZWN0IG9iamVjdF0nO2lmKCFpc09iamVjdCl7cmV0dXJuIGFyci5pbmRleE9mKHZhbHVlKTt9ZWxzZXt2YXIgdmFsdWVLZXk9dGhpcy52YWx1ZUtleTt2YXIgaW5kZXg9LTE7YXJyLnNvbWUoZnVuY3Rpb24oaXRlbSxpKXtpZihPYmplY3QodXRpbF9bImdldFZhbHVlQnlQYXRoIl0pKGl0ZW0sdmFsdWVLZXkpPT09T2JqZWN0KHV0aWxfWyJnZXRWYWx1ZUJ5UGF0aCJdKSh2YWx1ZSx2YWx1ZUtleSkpe2luZGV4PWk7cmV0dXJuIHRydWU7fXJldHVybiBmYWxzZTt9KTtyZXR1cm4gaW5kZXg7fX0sdG9nZ2xlTWVudTpmdW5jdGlvbiB0b2dnbGVNZW51KCl7aWYoIXRoaXMuc2VsZWN0RGlzYWJsZWQpe2lmKHRoaXMubWVudVZpc2libGVPbkZvY3VzKXt0aGlzLm1lbnVWaXNpYmxlT25Gb2N1cz1mYWxzZTt9ZWxzZXt0aGlzLnZpc2libGU9IXRoaXMudmlzaWJsZTt9aWYodGhpcy52aXNpYmxlKXsodGhpcy4kcmVmcy5pbnB1dHx8dGhpcy4kcmVmcy5yZWZlcmVuY2UpLmZvY3VzKCk7fX19LHNlbGVjdE9wdGlvbjpmdW5jdGlvbiBzZWxlY3RPcHRpb24oKXtpZighdGhpcy52aXNpYmxlKXt0aGlzLnRvZ2dsZU1lbnUoKTt9ZWxzZXtpZih0aGlzLm9wdGlvbnNbdGhpcy5ob3ZlckluZGV4XSl7dGhpcy5oYW5kbGVPcHRpb25TZWxlY3QodGhpcy5vcHRpb25zW3RoaXMuaG92ZXJJbmRleF0pO319fSxkZWxldGVTZWxlY3RlZDpmdW5jdGlvbiBkZWxldGVTZWxlY3RlZChldmVudCl7ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7dmFyIHZhbHVlPXRoaXMubXVsdGlwbGU/W106Jyc7dGhpcy4kZW1pdCgnaW5wdXQnLHZhbHVlKTt0aGlzLmVtaXRDaGFuZ2UodmFsdWUpO3RoaXMudmlzaWJsZT1mYWxzZTt0aGlzLiRlbWl0KCdjbGVhcicpO30sZGVsZXRlVGFnOmZ1bmN0aW9uIGRlbGV0ZVRhZyhldmVudCx0YWcpe3ZhciBpbmRleD10aGlzLnNlbGVjdGVkLmluZGV4T2YodGFnKTtpZihpbmRleD4tMSYmIXRoaXMuc2VsZWN0RGlzYWJsZWQpe3ZhciB2YWx1ZT10aGlzLnZhbHVlLnNsaWNlKCk7dmFsdWUuc3BsaWNlKGluZGV4LDEpO3RoaXMuJGVtaXQoJ2lucHV0Jyx2YWx1ZSk7dGhpcy5lbWl0Q2hhbmdlKHZhbHVlKTt0aGlzLiRlbWl0KCdyZW1vdmUtdGFnJyx0YWcudmFsdWUpO31ldmVudC5zdG9wUHJvcGFnYXRpb24oKTt9LG9uSW5wdXRDaGFuZ2U6ZnVuY3Rpb24gb25JbnB1dENoYW5nZSgpe2lmKHRoaXMuZmlsdGVyYWJsZSYmdGhpcy5xdWVyeSE9PXRoaXMuc2VsZWN0ZWRMYWJlbCl7dGhpcy5xdWVyeT10aGlzLnNlbGVjdGVkTGFiZWw7dGhpcy5oYW5kbGVRdWVyeUNoYW5nZSh0aGlzLnF1ZXJ5KTt9fSxvbk9wdGlvbkRlc3Ryb3k6ZnVuY3Rpb24gb25PcHRpb25EZXN0cm95KGluZGV4KXtpZihpbmRleD4tMSl7dGhpcy5vcHRpb25zQ291bnQtLTt0aGlzLmZpbHRlcmVkT3B0aW9uc0NvdW50LS07dGhpcy5vcHRpb25zLnNwbGljZShpbmRleCwxKTt9fSxyZXNldElucHV0V2lkdGg6ZnVuY3Rpb24gcmVzZXRJbnB1dFdpZHRoKCl7dGhpcy5pbnB1dFdpZHRoPXRoaXMuJHJlZnMucmVmZXJlbmNlLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDt9LGhhbmRsZVJlc2l6ZTpmdW5jdGlvbiBoYW5kbGVSZXNpemUoKXt0aGlzLnJlc2V0SW5wdXRXaWR0aCgpO2lmKHRoaXMubXVsdGlwbGUpdGhpcy5yZXNldElucHV0SGVpZ2h0KCk7fSxjaGVja0RlZmF1bHRGaXJzdE9wdGlvbjpmdW5jdGlvbiBjaGVja0RlZmF1bHRGaXJzdE9wdGlvbigpe3RoaXMuaG92ZXJJbmRleD0tMTsvLyBoaWdobGlnaHQgdGhlIGNyZWF0ZWQgb3B0aW9uCnZhciBoYXNDcmVhdGVkPWZhbHNlO2Zvcih2YXIgaT10aGlzLm9wdGlvbnMubGVuZ3RoLTE7aT49MDtpLS0pe2lmKHRoaXMub3B0aW9uc1tpXS5jcmVhdGVkKXtoYXNDcmVhdGVkPXRydWU7dGhpcy5ob3ZlckluZGV4PWk7YnJlYWs7fX1pZihoYXNDcmVhdGVkKXJldHVybjtmb3IodmFyIF9pPTA7X2khPT10aGlzLm9wdGlvbnMubGVuZ3RoOysrX2kpe3ZhciBvcHRpb249dGhpcy5vcHRpb25zW19pXTtpZih0aGlzLnF1ZXJ5KXsvLyBoaWdobGlnaHQgZmlyc3Qgb3B0aW9ucyB0aGF0IHBhc3NlcyB0aGUgZmlsdGVyCmlmKCFvcHRpb24uZGlzYWJsZWQmJiFvcHRpb24uZ3JvdXBEaXNhYmxlZCYmb3B0aW9uLnZpc2libGUpe3RoaXMuaG92ZXJJbmRleD1faTticmVhazt9fWVsc2V7Ly8gaGlnaGxpZ2h0IGN1cnJlbnRseSBzZWxlY3RlZCBvcHRpb24KaWYob3B0aW9uLml0ZW1TZWxlY3RlZCl7dGhpcy5ob3ZlckluZGV4PV9pO2JyZWFrO319fX0sZ2V0VmFsdWVLZXk6ZnVuY3Rpb24gZ2V0VmFsdWVLZXkoaXRlbSl7aWYoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZW0udmFsdWUpLnRvTG93ZXJDYXNlKCkhPT0nW29iamVjdCBvYmplY3RdJyl7cmV0dXJuIGl0ZW0udmFsdWU7fWVsc2V7cmV0dXJuIE9iamVjdCh1dGlsX1siZ2V0VmFsdWVCeVBhdGgiXSkoaXRlbS52YWx1ZSx0aGlzLnZhbHVlS2V5KTt9fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dmFyIF90aGlzMTM9dGhpczt0aGlzLmNhY2hlZFBsYWNlSG9sZGVyPXRoaXMuY3VycmVudFBsYWNlaG9sZGVyPXRoaXMucHJvcFBsYWNlaG9sZGVyO2lmKHRoaXMubXVsdGlwbGUmJiFBcnJheS5pc0FycmF5KHRoaXMudmFsdWUpKXt0aGlzLiRlbWl0KCdpbnB1dCcsW10pO31pZighdGhpcy5tdWx0aXBsZSYmQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSl7dGhpcy4kZW1pdCgnaW5wdXQnLCcnKTt9dGhpcy5kZWJvdW5jZWRPbklucHV0Q2hhbmdlPWRlYm91bmNlX2RlZmF1bHQoKSh0aGlzLmRlYm91bmNlLGZ1bmN0aW9uKCl7X3RoaXMxMy5vbklucHV0Q2hhbmdlKCk7fSk7dGhpcy5kZWJvdW5jZWRRdWVyeUNoYW5nZT1kZWJvdW5jZV9kZWZhdWx0KCkodGhpcy5kZWJvdW5jZSxmdW5jdGlvbihlKXtfdGhpczEzLmhhbmRsZVF1ZXJ5Q2hhbmdlKGUudGFyZ2V0LnZhbHVlKTt9KTt0aGlzLiRvbignaGFuZGxlT3B0aW9uQ2xpY2snLHRoaXMuaGFuZGxlT3B0aW9uU2VsZWN0KTt0aGlzLiRvbignc2V0U2VsZWN0ZWQnLHRoaXMuc2V0U2VsZWN0ZWQpO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIF90aGlzMTQ9dGhpcztpZih0aGlzLm11bHRpcGxlJiZBcnJheS5pc0FycmF5KHRoaXMudmFsdWUpJiZ0aGlzLnZhbHVlLmxlbmd0aD4wKXt0aGlzLmN1cnJlbnRQbGFjZWhvbGRlcj0nJzt9T2JqZWN0KHJlc2l6ZV9ldmVudF9bImFkZFJlc2l6ZUxpc3RlbmVyIl0pKHRoaXMuJGVsLHRoaXMuaGFuZGxlUmVzaXplKTt2YXIgcmVmZXJlbmNlPXRoaXMuJHJlZnMucmVmZXJlbmNlO2lmKHJlZmVyZW5jZSYmcmVmZXJlbmNlLiRlbCl7dmFyIHNpemVNYXA9e21lZGl1bTozNixzbWFsbDozMixtaW5pOjI4fTt2YXIgaW5wdXQ9cmVmZXJlbmNlLiRlbC5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpO3RoaXMuaW5pdGlhbElucHV0SGVpZ2h0PWlucHV0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodHx8c2l6ZU1hcFt0aGlzLnNlbGVjdFNpemVdO31pZih0aGlzLnJlbW90ZSYmdGhpcy5tdWx0aXBsZSl7dGhpcy5yZXNldElucHV0SGVpZ2h0KCk7fXRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7aWYocmVmZXJlbmNlJiZyZWZlcmVuY2UuJGVsKXtfdGhpczE0LmlucHV0V2lkdGg9cmVmZXJlbmNlLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDt9fSk7dGhpcy5zZXRTZWxlY3RlZCgpO30sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7aWYodGhpcy4kZWwmJnRoaXMuaGFuZGxlUmVzaXplKU9iamVjdChyZXNpemVfZXZlbnRfWyJyZW1vdmVSZXNpemVMaXN0ZW5lciJdKSh0aGlzLiRlbCx0aGlzLmhhbmRsZVJlc2l6ZSk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3NlbGVjdHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1zZWxlY3R2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL3NlbGVjdC52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBzZWxlY3RfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfc2VsZWN0dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLHNlbGVjdHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzBlNGFhZGU2X3JlbmRlcixzZWxlY3R2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wZTRhYWRlNl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHNlbGVjdF9hcGk7fXNlbGVjdF9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3NlbGVjdC9zcmMvc2VsZWN0LnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfc2VsZWN0PXNlbGVjdF9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY19zZWxlY3QuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoc3JjX3NlbGVjdC5uYW1lLHNyY19zZWxlY3QpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19zZWxlY3Q9c3JjX3NlbGVjdDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL29wdGlvbi9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY19vcHRpb24uaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoc3JjX29wdGlvbi5uYW1lLHNyY19vcHRpb24pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19vcHRpb249c3JjX29wdGlvbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLWdyb3VwLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02Njg1ZTVkZSYKdmFyIG9wdGlvbl9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzY2ODVlNWRlX3JlbmRlcj1mdW5jdGlvbiBvcHRpb25fZ3JvdXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF82Njg1ZTVkZV9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInVsIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUsZXhwcmVzc2lvbjoidmlzaWJsZSJ9XSxzdGF0aWNDbGFzczoiZWwtc2VsZWN0LWdyb3VwX193cmFwIn0sW19jKCJsaSIse3N0YXRpY0NsYXNzOiJlbC1zZWxlY3QtZ3JvdXBfX3RpdGxlIn0sW192bS5fdihfdm0uX3MoX3ZtLmxhYmVsKSldKSxfYygibGkiLFtfYygidWwiLHtzdGF0aWNDbGFzczoiZWwtc2VsZWN0LWdyb3VwIn0sW192bS5fdCgiZGVmYXVsdCIpXSwyKV0pXSk7fTt2YXIgb3B0aW9uX2dyb3VwdnVlX3R5cGVfdGVtcGxhdGVfaWRfNjY4NWU1ZGVfc3RhdGljUmVuZGVyRm5zPVtdO29wdGlvbl9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzY2ODVlNWRlX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zZWxlY3Qvc3JjL29wdGlvbi1ncm91cC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjY4NWU1ZGUmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLWdyb3VwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBvcHRpb25fZ3JvdXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e21peGluczpbZW1pdHRlcl9kZWZhdWx0LmFdLG5hbWU6J0VsT3B0aW9uR3JvdXAnLGNvbXBvbmVudE5hbWU6J0VsT3B0aW9uR3JvdXAnLHByb3BzOntsYWJlbDpTdHJpbmcsZGlzYWJsZWQ6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3Zpc2libGU6dHJ1ZX07fSx3YXRjaDp7ZGlzYWJsZWQ6ZnVuY3Rpb24gZGlzYWJsZWQodmFsKXt0aGlzLmJyb2FkY2FzdCgnRWxPcHRpb24nLCdoYW5kbGVHcm91cERpc2FibGVkJyx2YWwpO319LG1ldGhvZHM6e3F1ZXJ5Q2hhbmdlOmZ1bmN0aW9uIHF1ZXJ5Q2hhbmdlKCl7dGhpcy52aXNpYmxlPXRoaXMuJGNoaWxkcmVuJiZBcnJheS5pc0FycmF5KHRoaXMuJGNoaWxkcmVuKSYmdGhpcy4kY2hpbGRyZW4uc29tZShmdW5jdGlvbihvcHRpb24pe3JldHVybiBvcHRpb24udmlzaWJsZT09PXRydWU7fSk7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy4kb24oJ3F1ZXJ5Q2hhbmdlJyx0aGlzLnF1ZXJ5Q2hhbmdlKTt9LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe2lmKHRoaXMuZGlzYWJsZWQpe3RoaXMuYnJvYWRjYXN0KCdFbE9wdGlvbicsJ2hhbmRsZUdyb3VwRGlzYWJsZWQnLHRoaXMuZGlzYWJsZWQpO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLWdyb3VwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfb3B0aW9uX2dyb3VwdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPW9wdGlvbl9ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NlbGVjdC9zcmMvb3B0aW9uLWdyb3VwLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIG9wdGlvbl9ncm91cF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19vcHRpb25fZ3JvdXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sb3B0aW9uX2dyb3VwdnVlX3R5cGVfdGVtcGxhdGVfaWRfNjY4NWU1ZGVfcmVuZGVyLG9wdGlvbl9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzY2ODVlNWRlX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgb3B0aW9uX2dyb3VwX2FwaTt9b3B0aW9uX2dyb3VwX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvc2VsZWN0L3NyYy9vcHRpb24tZ3JvdXAudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIG9wdGlvbl9ncm91cD1vcHRpb25fZ3JvdXBfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9vcHRpb24tZ3JvdXAvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9vcHRpb25fZ3JvdXAuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQob3B0aW9uX2dyb3VwLm5hbWUsb3B0aW9uX2dyb3VwKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfb3B0aW9uX2dyb3VwPW9wdGlvbl9ncm91cDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2J1dHRvbi9zcmMvYnV0dG9uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jYTg1OWZiNCYKdmFyIGJ1dHRvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2NhODU5ZmI0X3JlbmRlcj1mdW5jdGlvbiBidXR0b252dWVfdHlwZV90ZW1wbGF0ZV9pZF9jYTg1OWZiNF9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC1idXR0b24iLGNsYXNzOltfdm0udHlwZT8iZWwtYnV0dG9uLS0iK192bS50eXBlOiIiLF92bS5idXR0b25TaXplPyJlbC1idXR0b24tLSIrX3ZtLmJ1dHRvblNpemU6IiIseyJpcy1kaXNhYmxlZCI6X3ZtLmJ1dHRvbkRpc2FibGVkLCJpcy1sb2FkaW5nIjpfdm0ubG9hZGluZywiaXMtcGxhaW4iOl92bS5wbGFpbiwiaXMtcm91bmQiOl92bS5yb3VuZCwiaXMtY2lyY2xlIjpfdm0uY2lyY2xlfV0sYXR0cnM6e2Rpc2FibGVkOl92bS5idXR0b25EaXNhYmxlZHx8X3ZtLmxvYWRpbmcsYXV0b2ZvY3VzOl92bS5hdXRvZm9jdXMsdHlwZTpfdm0ubmF0aXZlVHlwZX0sb246e2NsaWNrOl92bS5oYW5kbGVDbGlja319LFtfdm0ubG9hZGluZz9fYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pY29uLWxvYWRpbmcifSk6X3ZtLl9lKCksX3ZtLmljb24mJiFfdm0ubG9hZGluZz9fYygiaSIse2NsYXNzOl92bS5pY29ufSk6X3ZtLl9lKCksX3ZtLiRzbG90cy5kZWZhdWx0P19jKCJzcGFuIixbX3ZtLl90KCJkZWZhdWx0IildLDIpOl92bS5fZSgpXSk7fTt2YXIgYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfY2E4NTlmYjRfc3RhdGljUmVuZGVyRm5zPVtdO2J1dHRvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2NhODU5ZmI0X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9idXR0b24vc3JjL2J1dHRvbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Y2E4NTlmYjQmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2J1dHRvbi9zcmMvYnV0dG9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBidXR0b252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQnV0dG9uJyxpbmplY3Q6e2VsRm9ybTp7ZGVmYXVsdDonJ30sZWxGb3JtSXRlbTp7ZGVmYXVsdDonJ319LHByb3BzOnt0eXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0OidkZWZhdWx0J30sc2l6ZTpTdHJpbmcsaWNvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30sbmF0aXZlVHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonYnV0dG9uJ30sbG9hZGluZzpCb29sZWFuLGRpc2FibGVkOkJvb2xlYW4scGxhaW46Qm9vbGVhbixhdXRvZm9jdXM6Qm9vbGVhbixyb3VuZDpCb29sZWFuLGNpcmNsZTpCb29sZWFufSxjb21wdXRlZDp7X2VsRm9ybUl0ZW1TaXplOmZ1bmN0aW9uIF9lbEZvcm1JdGVtU2l6ZSgpe3JldHVybih0aGlzLmVsRm9ybUl0ZW18fHt9KS5lbEZvcm1JdGVtU2l6ZTt9LGJ1dHRvblNpemU6ZnVuY3Rpb24gYnV0dG9uU2l6ZSgpe3JldHVybiB0aGlzLnNpemV8fHRoaXMuX2VsRm9ybUl0ZW1TaXplfHwodGhpcy4kRUxFTUVOVHx8e30pLnNpemU7fSxidXR0b25EaXNhYmxlZDpmdW5jdGlvbiBidXR0b25EaXNhYmxlZCgpe3JldHVybiB0aGlzLmRpc2FibGVkfHwodGhpcy5lbEZvcm18fHt9KS5kaXNhYmxlZDt9fSxtZXRob2RzOntoYW5kbGVDbGljazpmdW5jdGlvbiBoYW5kbGVDbGljayhldnQpe3RoaXMuJGVtaXQoJ2NsaWNrJyxldnQpO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2J1dHRvbi9zcmMvYnV0dG9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfYnV0dG9udnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWJ1dHRvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2J1dHRvbi9zcmMvYnV0dG9uLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGJ1dHRvbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19idXR0b252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfY2E4NTlmYjRfcmVuZGVyLGJ1dHRvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2NhODU5ZmI0X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgYnV0dG9uX2FwaTt9YnV0dG9uX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvYnV0dG9uL3NyYy9idXR0b24udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19idXR0b249YnV0dG9uX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYnV0dG9uL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovc3JjX2J1dHRvbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChzcmNfYnV0dG9uLm5hbWUsc3JjX2J1dHRvbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2J1dHRvbj1zcmNfYnV0dG9uOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvYnV0dG9uL3NyYy9idXR0b24tZ3JvdXAudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNkODY2MWQwJgp2YXIgYnV0dG9uX2dyb3VwdnVlX3R5cGVfdGVtcGxhdGVfaWRfM2Q4NjYxZDBfcmVuZGVyPWZ1bmN0aW9uIGJ1dHRvbl9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzNkODY2MWQwX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWJ1dHRvbi1ncm91cCJ9LFtfdm0uX3QoImRlZmF1bHQiKV0sMik7fTt2YXIgYnV0dG9uX2dyb3VwdnVlX3R5cGVfdGVtcGxhdGVfaWRfM2Q4NjYxZDBfc3RhdGljUmVuZGVyRm5zPVtdO2J1dHRvbl9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzNkODY2MWQwX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9idXR0b24vc3JjL2J1dHRvbi1ncm91cC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9M2Q4NjYxZDAmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2J1dHRvbi9zcmMvYnV0dG9uLWdyb3VwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBidXR0b25fZ3JvdXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQnV0dG9uR3JvdXAnfTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2J1dHRvbi9zcmMvYnV0dG9uLWdyb3VwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfYnV0dG9uX2dyb3VwdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWJ1dHRvbl9ncm91cHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2J1dHRvbi9zcmMvYnV0dG9uLWdyb3VwLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGJ1dHRvbl9ncm91cF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19idXR0b25fZ3JvdXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sYnV0dG9uX2dyb3VwdnVlX3R5cGVfdGVtcGxhdGVfaWRfM2Q4NjYxZDBfcmVuZGVyLGJ1dHRvbl9ncm91cHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzNkODY2MWQwX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgYnV0dG9uX2dyb3VwX2FwaTt9YnV0dG9uX2dyb3VwX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvYnV0dG9uL3NyYy9idXR0b24tZ3JvdXAudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGJ1dHRvbl9ncm91cD1idXR0b25fZ3JvdXBfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9idXR0b24tZ3JvdXAvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9idXR0b25fZ3JvdXAuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoYnV0dG9uX2dyb3VwLm5hbWUsYnV0dG9uX2dyb3VwKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfYnV0dG9uX2dyb3VwPWJ1dHRvbl9ncm91cDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RhYmxlL3NyYy90YWJsZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDkzZmUzNGUmCnZhciB0YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ5M2ZlMzRlX3JlbmRlcj1mdW5jdGlvbiB0YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ5M2ZlMzRlX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRhYmxlIixjbGFzczpbeyJlbC10YWJsZS0tZml0Ijpfdm0uZml0LCJlbC10YWJsZS0tc3RyaXBlZCI6X3ZtLnN0cmlwZSwiZWwtdGFibGUtLWJvcmRlciI6X3ZtLmJvcmRlcnx8X3ZtLmlzR3JvdXAsImVsLXRhYmxlLS1oaWRkZW4iOl92bS5pc0hpZGRlbiwiZWwtdGFibGUtLWdyb3VwIjpfdm0uaXNHcm91cCwiZWwtdGFibGUtLWZsdWlkLWhlaWdodCI6X3ZtLm1heEhlaWdodCwiZWwtdGFibGUtLXNjcm9sbGFibGUteCI6X3ZtLmxheW91dC5zY3JvbGxYLCJlbC10YWJsZS0tc2Nyb2xsYWJsZS15Ijpfdm0ubGF5b3V0LnNjcm9sbFksImVsLXRhYmxlLS1lbmFibGUtcm93LWhvdmVyIjohX3ZtLnN0b3JlLnN0YXRlcy5pc0NvbXBsZXgsImVsLXRhYmxlLS1lbmFibGUtcm93LXRyYW5zaXRpb24iOihfdm0uc3RvcmUuc3RhdGVzLmRhdGF8fFtdKS5sZW5ndGghPT0wJiYoX3ZtLnN0b3JlLnN0YXRlcy5kYXRhfHxbXSkubGVuZ3RoPDEwMH0sX3ZtLnRhYmxlU2l6ZT8iZWwtdGFibGUtLSIrX3ZtLnRhYmxlU2l6ZToiIl0sb246e21vdXNlbGVhdmU6ZnVuY3Rpb24gbW91c2VsZWF2ZSgkZXZlbnQpe192bS5oYW5kbGVNb3VzZUxlYXZlKCRldmVudCk7fX19LFtfYygiZGl2Iix7cmVmOiJoaWRkZW5Db2x1bW5zIixzdGF0aWNDbGFzczoiaGlkZGVuLWNvbHVtbnMifSxbX3ZtLl90KCJkZWZhdWx0IildLDIpLF92bS5zaG93SGVhZGVyP19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToibW91c2V3aGVlbCIscmF3TmFtZToidi1tb3VzZXdoZWVsIix2YWx1ZTpfdm0uaGFuZGxlSGVhZGVyRm9vdGVyTW91c2V3aGVlbCxleHByZXNzaW9uOiJoYW5kbGVIZWFkZXJGb290ZXJNb3VzZXdoZWVsIn1dLHJlZjoiaGVhZGVyV3JhcHBlciIsc3RhdGljQ2xhc3M6ImVsLXRhYmxlX19oZWFkZXItd3JhcHBlciJ9LFtfYygidGFibGUtaGVhZGVyIix7cmVmOiJ0YWJsZUhlYWRlciIsc3R5bGU6e3dpZHRoOl92bS5sYXlvdXQuYm9keVdpZHRoP192bS5sYXlvdXQuYm9keVdpZHRoKyJweCI6IiJ9LGF0dHJzOntzdG9yZTpfdm0uc3RvcmUsYm9yZGVyOl92bS5ib3JkZXIsImRlZmF1bHQtc29ydCI6X3ZtLmRlZmF1bHRTb3J0fX0pXSwxKTpfdm0uX2UoKSxfYygiZGl2Iix7cmVmOiJib2R5V3JhcHBlciIsc3RhdGljQ2xhc3M6ImVsLXRhYmxlX19ib2R5LXdyYXBwZXIiLGNsYXNzOltfdm0ubGF5b3V0LnNjcm9sbFg/ImlzLXNjcm9sbGluZy0iK192bS5zY3JvbGxQb3NpdGlvbjoiaXMtc2Nyb2xsaW5nLW5vbmUiXSxzdHlsZTpbX3ZtLmJvZHlIZWlnaHRdfSxbX2MoInRhYmxlLWJvZHkiLHtzdHlsZTp7d2lkdGg6X3ZtLmJvZHlXaWR0aH0sYXR0cnM6e2NvbnRleHQ6X3ZtLmNvbnRleHQsc3RvcmU6X3ZtLnN0b3JlLHN0cmlwZTpfdm0uc3RyaXBlLCJyb3ctY2xhc3MtbmFtZSI6X3ZtLnJvd0NsYXNzTmFtZSwicm93LXN0eWxlIjpfdm0ucm93U3R5bGUsaGlnaGxpZ2h0Ol92bS5oaWdobGlnaHRDdXJyZW50Um93fX0pLCFfdm0uZGF0YXx8X3ZtLmRhdGEubGVuZ3RoPT09MD9fYygiZGl2Iix7cmVmOiJlbXB0eUJsb2NrIixzdGF0aWNDbGFzczoiZWwtdGFibGVfX2VtcHR5LWJsb2NrIixzdHlsZTpfdm0uZW1wdHlCbG9ja1N0eWxlfSxbX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtdGFibGVfX2VtcHR5LXRleHQifSxbX3ZtLl90KCJlbXB0eSIsW192bS5fdihfdm0uX3MoX3ZtLmVtcHR5VGV4dHx8X3ZtLnQoImVsLnRhYmxlLmVtcHR5VGV4dCIpKSldKV0sMildKTpfdm0uX2UoKSxfdm0uJHNsb3RzLmFwcGVuZD9fYygiZGl2Iix7cmVmOiJhcHBlbmRXcmFwcGVyIixzdGF0aWNDbGFzczoiZWwtdGFibGVfX2FwcGVuZC13cmFwcGVyIn0sW192bS5fdCgiYXBwZW5kIildLDIpOl92bS5fZSgpXSwxKSxfdm0uc2hvd1N1bW1hcnk/X2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5kYXRhJiZfdm0uZGF0YS5sZW5ndGg+MCxleHByZXNzaW9uOiJkYXRhICYmIGRhdGEubGVuZ3RoID4gMCJ9LHtuYW1lOiJtb3VzZXdoZWVsIixyYXdOYW1lOiJ2LW1vdXNld2hlZWwiLHZhbHVlOl92bS5oYW5kbGVIZWFkZXJGb290ZXJNb3VzZXdoZWVsLGV4cHJlc3Npb246ImhhbmRsZUhlYWRlckZvb3Rlck1vdXNld2hlZWwifV0scmVmOiJmb290ZXJXcmFwcGVyIixzdGF0aWNDbGFzczoiZWwtdGFibGVfX2Zvb3Rlci13cmFwcGVyIn0sW19jKCJ0YWJsZS1mb290ZXIiLHtzdHlsZTp7d2lkdGg6X3ZtLmxheW91dC5ib2R5V2lkdGg/X3ZtLmxheW91dC5ib2R5V2lkdGgrInB4IjoiIn0sYXR0cnM6e3N0b3JlOl92bS5zdG9yZSxib3JkZXI6X3ZtLmJvcmRlciwic3VtLXRleHQiOl92bS5zdW1UZXh0fHxfdm0udCgiZWwudGFibGUuc3VtVGV4dCIpLCJzdW1tYXJ5LW1ldGhvZCI6X3ZtLnN1bW1hcnlNZXRob2QsImRlZmF1bHQtc29ydCI6X3ZtLmRlZmF1bHRTb3J0fX0pXSwxKTpfdm0uX2UoKSxfdm0uZml4ZWRDb2x1bW5zLmxlbmd0aD4wP19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToibW91c2V3aGVlbCIscmF3TmFtZToidi1tb3VzZXdoZWVsIix2YWx1ZTpfdm0uaGFuZGxlRml4ZWRNb3VzZXdoZWVsLGV4cHJlc3Npb246ImhhbmRsZUZpeGVkTW91c2V3aGVlbCJ9XSxyZWY6ImZpeGVkV3JhcHBlciIsc3RhdGljQ2xhc3M6ImVsLXRhYmxlX19maXhlZCIsc3R5bGU6W3t3aWR0aDpfdm0ubGF5b3V0LmZpeGVkV2lkdGg/X3ZtLmxheW91dC5maXhlZFdpZHRoKyJweCI6IiJ9LF92bS5maXhlZEhlaWdodF19LFtfdm0uc2hvd0hlYWRlcj9fYygiZGl2Iix7cmVmOiJmaXhlZEhlYWRlcldyYXBwZXIiLHN0YXRpY0NsYXNzOiJlbC10YWJsZV9fZml4ZWQtaGVhZGVyLXdyYXBwZXIifSxbX2MoInRhYmxlLWhlYWRlciIse3JlZjoiZml4ZWRUYWJsZUhlYWRlciIsc3R5bGU6e3dpZHRoOl92bS5ib2R5V2lkdGh9LGF0dHJzOntmaXhlZDoibGVmdCIsYm9yZGVyOl92bS5ib3JkZXIsc3RvcmU6X3ZtLnN0b3JlfX0pXSwxKTpfdm0uX2UoKSxfYygiZGl2Iix7cmVmOiJmaXhlZEJvZHlXcmFwcGVyIixzdGF0aWNDbGFzczoiZWwtdGFibGVfX2ZpeGVkLWJvZHktd3JhcHBlciIsc3R5bGU6W3t0b3A6X3ZtLmxheW91dC5oZWFkZXJIZWlnaHQrInB4In0sX3ZtLmZpeGVkQm9keUhlaWdodF19LFtfYygidGFibGUtYm9keSIse3N0eWxlOnt3aWR0aDpfdm0uYm9keVdpZHRofSxhdHRyczp7Zml4ZWQ6ImxlZnQiLHN0b3JlOl92bS5zdG9yZSxzdHJpcGU6X3ZtLnN0cmlwZSxoaWdobGlnaHQ6X3ZtLmhpZ2hsaWdodEN1cnJlbnRSb3csInJvdy1jbGFzcy1uYW1lIjpfdm0ucm93Q2xhc3NOYW1lLCJyb3ctc3R5bGUiOl92bS5yb3dTdHlsZX19KSxfdm0uJHNsb3RzLmFwcGVuZD9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRhYmxlX19hcHBlbmQtZ3V0dGVyIixzdHlsZTp7aGVpZ2h0Ol92bS5sYXlvdXQuYXBwZW5kSGVpZ2h0KyJweCJ9fSk6X3ZtLl9lKCldLDEpLF92bS5zaG93U3VtbWFyeT9fYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLmRhdGEmJl92bS5kYXRhLmxlbmd0aD4wLGV4cHJlc3Npb246ImRhdGEgJiYgZGF0YS5sZW5ndGggPiAwIn1dLHJlZjoiZml4ZWRGb290ZXJXcmFwcGVyIixzdGF0aWNDbGFzczoiZWwtdGFibGVfX2ZpeGVkLWZvb3Rlci13cmFwcGVyIn0sW19jKCJ0YWJsZS1mb290ZXIiLHtzdHlsZTp7d2lkdGg6X3ZtLmJvZHlXaWR0aH0sYXR0cnM6e2ZpeGVkOiJsZWZ0Iixib3JkZXI6X3ZtLmJvcmRlciwic3VtLXRleHQiOl92bS5zdW1UZXh0fHxfdm0udCgiZWwudGFibGUuc3VtVGV4dCIpLCJzdW1tYXJ5LW1ldGhvZCI6X3ZtLnN1bW1hcnlNZXRob2Qsc3RvcmU6X3ZtLnN0b3JlfX0pXSwxKTpfdm0uX2UoKV0pOl92bS5fZSgpLF92bS5yaWdodEZpeGVkQ29sdW1ucy5sZW5ndGg+MD9fYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6Im1vdXNld2hlZWwiLHJhd05hbWU6InYtbW91c2V3aGVlbCIsdmFsdWU6X3ZtLmhhbmRsZUZpeGVkTW91c2V3aGVlbCxleHByZXNzaW9uOiJoYW5kbGVGaXhlZE1vdXNld2hlZWwifV0scmVmOiJyaWdodEZpeGVkV3JhcHBlciIsc3RhdGljQ2xhc3M6ImVsLXRhYmxlX19maXhlZC1yaWdodCIsc3R5bGU6W3t3aWR0aDpfdm0ubGF5b3V0LnJpZ2h0Rml4ZWRXaWR0aD9fdm0ubGF5b3V0LnJpZ2h0Rml4ZWRXaWR0aCsicHgiOiIiLHJpZ2h0Ol92bS5sYXlvdXQuc2Nyb2xsWT8oX3ZtLmJvcmRlcj9fdm0ubGF5b3V0Lmd1dHRlcldpZHRoOl92bS5sYXlvdXQuZ3V0dGVyV2lkdGh8fDApKyJweCI6IiJ9LF92bS5maXhlZEhlaWdodF19LFtfdm0uc2hvd0hlYWRlcj9fYygiZGl2Iix7cmVmOiJyaWdodEZpeGVkSGVhZGVyV3JhcHBlciIsc3RhdGljQ2xhc3M6ImVsLXRhYmxlX19maXhlZC1oZWFkZXItd3JhcHBlciJ9LFtfYygidGFibGUtaGVhZGVyIix7cmVmOiJyaWdodEZpeGVkVGFibGVIZWFkZXIiLHN0eWxlOnt3aWR0aDpfdm0uYm9keVdpZHRofSxhdHRyczp7Zml4ZWQ6InJpZ2h0Iixib3JkZXI6X3ZtLmJvcmRlcixzdG9yZTpfdm0uc3RvcmV9fSldLDEpOl92bS5fZSgpLF9jKCJkaXYiLHtyZWY6InJpZ2h0Rml4ZWRCb2R5V3JhcHBlciIsc3RhdGljQ2xhc3M6ImVsLXRhYmxlX19maXhlZC1ib2R5LXdyYXBwZXIiLHN0eWxlOlt7dG9wOl92bS5sYXlvdXQuaGVhZGVySGVpZ2h0KyJweCJ9LF92bS5maXhlZEJvZHlIZWlnaHRdfSxbX2MoInRhYmxlLWJvZHkiLHtzdHlsZTp7d2lkdGg6X3ZtLmJvZHlXaWR0aH0sYXR0cnM6e2ZpeGVkOiJyaWdodCIsc3RvcmU6X3ZtLnN0b3JlLHN0cmlwZTpfdm0uc3RyaXBlLCJyb3ctY2xhc3MtbmFtZSI6X3ZtLnJvd0NsYXNzTmFtZSwicm93LXN0eWxlIjpfdm0ucm93U3R5bGUsaGlnaGxpZ2h0Ol92bS5oaWdobGlnaHRDdXJyZW50Um93fX0pLF92bS4kc2xvdHMuYXBwZW5kP19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdGFibGVfX2FwcGVuZC1ndXR0ZXIiLHN0eWxlOntoZWlnaHQ6X3ZtLmxheW91dC5hcHBlbmRIZWlnaHQrInB4In19KTpfdm0uX2UoKV0sMSksX3ZtLnNob3dTdW1tYXJ5P19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0uZGF0YSYmX3ZtLmRhdGEubGVuZ3RoPjAsZXhwcmVzc2lvbjoiZGF0YSAmJiBkYXRhLmxlbmd0aCA+IDAifV0scmVmOiJyaWdodEZpeGVkRm9vdGVyV3JhcHBlciIsc3RhdGljQ2xhc3M6ImVsLXRhYmxlX19maXhlZC1mb290ZXItd3JhcHBlciJ9LFtfYygidGFibGUtZm9vdGVyIix7c3R5bGU6e3dpZHRoOl92bS5ib2R5V2lkdGh9LGF0dHJzOntmaXhlZDoicmlnaHQiLGJvcmRlcjpfdm0uYm9yZGVyLCJzdW0tdGV4dCI6X3ZtLnN1bVRleHR8fF92bS50KCJlbC50YWJsZS5zdW1UZXh0IiksInN1bW1hcnktbWV0aG9kIjpfdm0uc3VtbWFyeU1ldGhvZCxzdG9yZTpfdm0uc3RvcmV9fSldLDEpOl92bS5fZSgpXSk6X3ZtLl9lKCksX3ZtLnJpZ2h0Rml4ZWRDb2x1bW5zLmxlbmd0aD4wP19jKCJkaXYiLHtyZWY6InJpZ2h0Rml4ZWRQYXRjaCIsc3RhdGljQ2xhc3M6ImVsLXRhYmxlX19maXhlZC1yaWdodC1wYXRjaCIsc3R5bGU6e3dpZHRoOl92bS5sYXlvdXQuc2Nyb2xsWT9fdm0ubGF5b3V0Lmd1dHRlcldpZHRoKyJweCI6IjAiLGhlaWdodDpfdm0ubGF5b3V0LmhlYWRlckhlaWdodCsicHgifX0pOl92bS5fZSgpLF9jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0ucmVzaXplUHJveHlWaXNpYmxlLGV4cHJlc3Npb246InJlc2l6ZVByb3h5VmlzaWJsZSJ9XSxyZWY6InJlc2l6ZVByb3h5IixzdGF0aWNDbGFzczoiZWwtdGFibGVfX2NvbHVtbi1yZXNpemUtcHJveHkifSldKTt9O3ZhciB0YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ5M2ZlMzRlX3N0YXRpY1JlbmRlckZucz1bXTt0YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ5M2ZlMzRlX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJsZS9zcmMvdGFibGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTQ5M2ZlMzRlJgovLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi9jaGVja2JveCIKdmFyIGNoZWNrYm94Xz1fX3dlYnBhY2tfcmVxdWlyZV9fKDE2KTt2YXIgY2hlY2tib3hfZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGNoZWNrYm94Xyk7Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAidGhyb3R0bGUtZGVib3VuY2UiCnZhciBleHRlcm5hbF90aHJvdHRsZV9kZWJvdW5jZV89X193ZWJwYWNrX3JlcXVpcmVfXygzNSk7Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAibm9ybWFsaXplLXdoZWVsIgp2YXIgZXh0ZXJuYWxfbm9ybWFsaXplX3doZWVsXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDM4KTt2YXIgZXh0ZXJuYWxfbm9ybWFsaXplX3doZWVsX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihleHRlcm5hbF9ub3JtYWxpemVfd2hlZWxfKTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3NyYy9kaXJlY3RpdmVzL21vdXNld2hlZWwuanMKdmFyIGlzRmlyZWZveD10eXBlb2YgbmF2aWdhdG9yIT09J3VuZGVmaW5lZCcmJm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmRleE9mKCdmaXJlZm94Jyk+LTE7dmFyIG1vdXNld2hlZWxfbW91c2V3aGVlbD1mdW5jdGlvbiBtb3VzZXdoZWVsKGVsZW1lbnQsY2FsbGJhY2spe2lmKGVsZW1lbnQmJmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcil7ZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGlzRmlyZWZveD8nRE9NTW91c2VTY3JvbGwnOidtb3VzZXdoZWVsJyxmdW5jdGlvbihldmVudCl7dmFyIG5vcm1hbGl6ZWQ9ZXh0ZXJuYWxfbm9ybWFsaXplX3doZWVsX2RlZmF1bHQoKShldmVudCk7Y2FsbGJhY2smJmNhbGxiYWNrLmFwcGx5KHRoaXMsW2V2ZW50LG5vcm1hbGl6ZWRdKTt9KTt9fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGRpcmVjdGl2ZXNfbW91c2V3aGVlbD17YmluZDpmdW5jdGlvbiBiaW5kKGVsLGJpbmRpbmcpe21vdXNld2hlZWxfbW91c2V3aGVlbChlbCxiaW5kaW5nLnZhbHVlKTt9fTsvLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJ2dWUiCnZhciBleHRlcm5hbF92dWVfPV9fd2VicGFja19yZXF1aXJlX18oNik7dmFyIGV4dGVybmFsX3Z1ZV9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oZXh0ZXJuYWxfdnVlXyk7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJsZS9zcmMvdXRpbC5qcwp2YXIgdXRpbF90eXBlb2Y9dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIj9mdW5jdGlvbihvYmope3JldHVybiBfdHlwZW9mMihvYmopO306ZnVuY3Rpb24ob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt2YXIgZ2V0Q2VsbD1mdW5jdGlvbiBnZXRDZWxsKGV2ZW50KXt2YXIgY2VsbD1ldmVudC50YXJnZXQ7d2hpbGUoY2VsbCYmY2VsbC50YWdOYW1lLnRvVXBwZXJDYXNlKCkhPT0nSFRNTCcpe2lmKGNlbGwudGFnTmFtZS50b1VwcGVyQ2FzZSgpPT09J1REJyl7cmV0dXJuIGNlbGw7fWNlbGw9Y2VsbC5wYXJlbnROb2RlO31yZXR1cm4gbnVsbDt9O3ZhciB1dGlsX2lzT2JqZWN0PWZ1bmN0aW9uIGlzT2JqZWN0KG9iail7cmV0dXJuIG9iaiE9PW51bGwmJih0eXBlb2Ygb2JqPT09J3VuZGVmaW5lZCc/J3VuZGVmaW5lZCc6dXRpbF90eXBlb2Yob2JqKSk9PT0nb2JqZWN0Jzt9O3ZhciB1dGlsX29yZGVyQnk9ZnVuY3Rpb24gb3JkZXJCeShhcnJheSxzb3J0S2V5LHJldmVyc2Usc29ydE1ldGhvZCxzb3J0Qnkpe2lmKCFzb3J0S2V5JiYhc29ydE1ldGhvZCYmKCFzb3J0Qnl8fEFycmF5LmlzQXJyYXkoc29ydEJ5KSYmIXNvcnRCeS5sZW5ndGgpKXtyZXR1cm4gYXJyYXk7fWlmKHR5cGVvZiByZXZlcnNlPT09J3N0cmluZycpe3JldmVyc2U9cmV2ZXJzZT09PSdkZXNjZW5kaW5nJz8tMToxO31lbHNle3JldmVyc2U9cmV2ZXJzZSYmcmV2ZXJzZTwwPy0xOjE7fXZhciBnZXRLZXk9c29ydE1ldGhvZD9udWxsOmZ1bmN0aW9uKHZhbHVlLGluZGV4KXtpZihzb3J0Qnkpe2lmKCFBcnJheS5pc0FycmF5KHNvcnRCeSkpe3NvcnRCeT1bc29ydEJ5XTt9cmV0dXJuIHNvcnRCeS5tYXAoZnVuY3Rpb24oYnkpe2lmKHR5cGVvZiBieT09PSdzdHJpbmcnKXtyZXR1cm4gT2JqZWN0KHV0aWxfWyJnZXRWYWx1ZUJ5UGF0aCJdKSh2YWx1ZSxieSk7fWVsc2V7cmV0dXJuIGJ5KHZhbHVlLGluZGV4LGFycmF5KTt9fSk7fWlmKHNvcnRLZXkhPT0nJGtleScpe2lmKHV0aWxfaXNPYmplY3QodmFsdWUpJiYnJHZhbHVlJ2luIHZhbHVlKXZhbHVlPXZhbHVlLiR2YWx1ZTt9cmV0dXJuW3V0aWxfaXNPYmplY3QodmFsdWUpP09iamVjdCh1dGlsX1siZ2V0VmFsdWVCeVBhdGgiXSkodmFsdWUsc29ydEtleSk6dmFsdWVdO307dmFyIGNvbXBhcmU9ZnVuY3Rpb24gY29tcGFyZShhLGIpe2lmKHNvcnRNZXRob2Qpe3JldHVybiBzb3J0TWV0aG9kKGEudmFsdWUsYi52YWx1ZSk7fWZvcih2YXIgaT0wLGxlbj1hLmtleS5sZW5ndGg7aTxsZW47aSsrKXtpZihhLmtleVtpXTxiLmtleVtpXSl7cmV0dXJuLTE7fWlmKGEua2V5W2ldPmIua2V5W2ldKXtyZXR1cm4gMTt9fXJldHVybiAwO307cmV0dXJuIGFycmF5Lm1hcChmdW5jdGlvbih2YWx1ZSxpbmRleCl7cmV0dXJue3ZhbHVlOnZhbHVlLGluZGV4OmluZGV4LGtleTpnZXRLZXk/Z2V0S2V5KHZhbHVlLGluZGV4KTpudWxsfTt9KS5zb3J0KGZ1bmN0aW9uKGEsYil7dmFyIG9yZGVyPWNvbXBhcmUoYSxiKTtpZighb3JkZXIpey8vIG1ha2Ugc3RhYmxlIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1NvcnRpbmdfYWxnb3JpdGhtI1N0YWJpbGl0eQpvcmRlcj1hLmluZGV4LWIuaW5kZXg7fXJldHVybiBvcmRlcipyZXZlcnNlO30pLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gaXRlbS52YWx1ZTt9KTt9O3ZhciBnZXRDb2x1bW5CeUlkPWZ1bmN0aW9uIGdldENvbHVtbkJ5SWQodGFibGUsY29sdW1uSWQpe3ZhciBjb2x1bW49bnVsbDt0YWJsZS5jb2x1bW5zLmZvckVhY2goZnVuY3Rpb24oaXRlbSl7aWYoaXRlbS5pZD09PWNvbHVtbklkKXtjb2x1bW49aXRlbTt9fSk7cmV0dXJuIGNvbHVtbjt9O3ZhciBnZXRDb2x1bW5CeUtleT1mdW5jdGlvbiBnZXRDb2x1bW5CeUtleSh0YWJsZSxjb2x1bW5LZXkpe3ZhciBjb2x1bW49bnVsbDtmb3IodmFyIGk9MDtpPHRhYmxlLmNvbHVtbnMubGVuZ3RoO2krKyl7dmFyIGl0ZW09dGFibGUuY29sdW1uc1tpXTtpZihpdGVtLmNvbHVtbktleT09PWNvbHVtbktleSl7Y29sdW1uPWl0ZW07YnJlYWs7fX1yZXR1cm4gY29sdW1uO307dmFyIGdldENvbHVtbkJ5Q2VsbD1mdW5jdGlvbiBnZXRDb2x1bW5CeUNlbGwodGFibGUsY2VsbCl7dmFyIG1hdGNoZXM9KGNlbGwuY2xhc3NOYW1lfHwnJykubWF0Y2goL2VsLXRhYmxlX1teXHNdKy9nbSk7aWYobWF0Y2hlcyl7cmV0dXJuIGdldENvbHVtbkJ5SWQodGFibGUsbWF0Y2hlc1swXSk7fXJldHVybiBudWxsO307dmFyIGdldFJvd0lkZW50aXR5PWZ1bmN0aW9uIGdldFJvd0lkZW50aXR5KHJvdyxyb3dLZXkpe2lmKCFyb3cpdGhyb3cgbmV3IEVycm9yKCdyb3cgaXMgcmVxdWlyZWQgd2hlbiBnZXQgcm93IGlkZW50aXR5Jyk7aWYodHlwZW9mIHJvd0tleT09PSdzdHJpbmcnKXtpZihyb3dLZXkuaW5kZXhPZignLicpPDApe3JldHVybiByb3dbcm93S2V5XTt9dmFyIGtleT1yb3dLZXkuc3BsaXQoJy4nKTt2YXIgY3VycmVudD1yb3c7Zm9yKHZhciBpPTA7aTxrZXkubGVuZ3RoO2krKyl7Y3VycmVudD1jdXJyZW50W2tleVtpXV07fXJldHVybiBjdXJyZW50O31lbHNlIGlmKHR5cGVvZiByb3dLZXk9PT0nZnVuY3Rpb24nKXtyZXR1cm4gcm93S2V5LmNhbGwobnVsbCxyb3cpO319O3ZhciBnZXRLZXlzTWFwPWZ1bmN0aW9uIGdldEtleXNNYXAoYXJyYXkscm93S2V5KXt2YXIgYXJyYXlNYXA9e307KGFycmF5fHxbXSkuZm9yRWFjaChmdW5jdGlvbihyb3csaW5kZXgpe2FycmF5TWFwW2dldFJvd0lkZW50aXR5KHJvdyxyb3dLZXkpXT17cm93OnJvdyxpbmRleDppbmRleH07fSk7cmV0dXJuIGFycmF5TWFwO307ZnVuY3Rpb24gaGFzT3duKG9iaixrZXkpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLGtleSk7fWZ1bmN0aW9uIG1lcmdlT3B0aW9ucyhkZWZhdWx0cyxjb25maWcpe3ZhciBvcHRpb25zPXt9O3ZhciBrZXk9dm9pZCAwO2ZvcihrZXkgaW4gZGVmYXVsdHMpe29wdGlvbnNba2V5XT1kZWZhdWx0c1trZXldO31mb3Ioa2V5IGluIGNvbmZpZyl7aWYoaGFzT3duKGNvbmZpZyxrZXkpKXt2YXIgdmFsdWU9Y29uZmlnW2tleV07aWYodHlwZW9mIHZhbHVlIT09J3VuZGVmaW5lZCcpe29wdGlvbnNba2V5XT12YWx1ZTt9fX1yZXR1cm4gb3B0aW9uczt9ZnVuY3Rpb24gcGFyc2VXaWR0aCh3aWR0aCl7aWYod2lkdGghPT11bmRlZmluZWQpe3dpZHRoPXBhcnNlSW50KHdpZHRoLDEwKTtpZihpc05hTih3aWR0aCkpe3dpZHRoPW51bGw7fX1yZXR1cm4gd2lkdGg7fWZ1bmN0aW9uIHBhcnNlTWluV2lkdGgobWluV2lkdGgpe2lmKHR5cGVvZiBtaW5XaWR0aCE9PSd1bmRlZmluZWQnKXttaW5XaWR0aD1wYXJzZVdpZHRoKG1pbldpZHRoKTtpZihpc05hTihtaW5XaWR0aCkpe21pbldpZHRoPTgwO319cmV0dXJuIG1pbldpZHRoO307ZnVuY3Rpb24gcGFyc2VIZWlnaHQoaGVpZ2h0KXtpZih0eXBlb2YgaGVpZ2h0PT09J251bWJlcicpe3JldHVybiBoZWlnaHQ7fWlmKHR5cGVvZiBoZWlnaHQ9PT0nc3RyaW5nJyl7aWYoL15cZCsoPzpweCk/JC8udGVzdChoZWlnaHQpKXtyZXR1cm4gcGFyc2VJbnQoaGVpZ2h0LDEwKTt9ZWxzZXtyZXR1cm4gaGVpZ2h0O319cmV0dXJuIG51bGw7fS8vIGh0dHBzOi8vZ2l0aHViLmNvbS9yZWR1eGpzL3JlZHV4L2Jsb2IvbWFzdGVyL3NyYy9jb21wb3NlLmpzCmZ1bmN0aW9uIGNvbXBvc2UoKXtmb3IodmFyIF9sZW49YXJndW1lbnRzLmxlbmd0aCxmdW5jcz1BcnJheShfbGVuKSxfa2V5PTA7X2tleTxfbGVuO19rZXkrKyl7ZnVuY3NbX2tleV09YXJndW1lbnRzW19rZXldO31pZihmdW5jcy5sZW5ndGg9PT0wKXtyZXR1cm4gZnVuY3Rpb24oYXJnKXtyZXR1cm4gYXJnO307fWlmKGZ1bmNzLmxlbmd0aD09PTEpe3JldHVybiBmdW5jc1swXTt9cmV0dXJuIGZ1bmNzLnJlZHVjZShmdW5jdGlvbihhLGIpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBhKGIuYXBwbHkodW5kZWZpbmVkLGFyZ3VtZW50cykpO307fSk7fWZ1bmN0aW9uIHRvZ2dsZVJvd1N0YXR1cyhzdGF0dXNBcnIscm93LG5ld1ZhbCl7dmFyIGNoYW5nZWQ9ZmFsc2U7dmFyIGluZGV4PXN0YXR1c0Fyci5pbmRleE9mKHJvdyk7dmFyIGluY2x1ZGVkPWluZGV4IT09LTE7dmFyIGFkZFJvdz1mdW5jdGlvbiBhZGRSb3coKXtzdGF0dXNBcnIucHVzaChyb3cpO2NoYW5nZWQ9dHJ1ZTt9O3ZhciByZW1vdmVSb3c9ZnVuY3Rpb24gcmVtb3ZlUm93KCl7c3RhdHVzQXJyLnNwbGljZShpbmRleCwxKTtjaGFuZ2VkPXRydWU7fTtpZih0eXBlb2YgbmV3VmFsPT09J2Jvb2xlYW4nKXtpZihuZXdWYWwmJiFpbmNsdWRlZCl7YWRkUm93KCk7fWVsc2UgaWYoIW5ld1ZhbCYmaW5jbHVkZWQpe3JlbW92ZVJvdygpO319ZWxzZXtpZihpbmNsdWRlZCl7cmVtb3ZlUm93KCk7fWVsc2V7YWRkUm93KCk7fX1yZXR1cm4gY2hhbmdlZDt9ZnVuY3Rpb24gd2Fsa1RyZWVOb2RlKHJvb3QsY2Ipe3ZhciBjaGlsZHJlbktleT1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMl06J2NoaWxkcmVuJzt2YXIgbGF6eUtleT1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbM106J2hhc0NoaWxkcmVuJzt2YXIgaXNOaWw9ZnVuY3Rpb24gaXNOaWwoYXJyYXkpe3JldHVybiEoQXJyYXkuaXNBcnJheShhcnJheSkmJmFycmF5Lmxlbmd0aCk7fTtmdW5jdGlvbiBfd2Fsa2VyKHBhcmVudCxjaGlsZHJlbixsZXZlbCl7Y2IocGFyZW50LGNoaWxkcmVuLGxldmVsKTtjaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pe2lmKGl0ZW1bbGF6eUtleV0pe2NiKGl0ZW0sbnVsbCxsZXZlbCsxKTtyZXR1cm47fXZhciBjaGlsZHJlbj1pdGVtW2NoaWxkcmVuS2V5XTtpZighaXNOaWwoY2hpbGRyZW4pKXtfd2Fsa2VyKGl0ZW0sY2hpbGRyZW4sbGV2ZWwrMSk7fX0pO31yb290LmZvckVhY2goZnVuY3Rpb24oaXRlbSl7aWYoaXRlbVtsYXp5S2V5XSl7Y2IoaXRlbSxudWxsLDApO3JldHVybjt9dmFyIGNoaWxkcmVuPWl0ZW1bY2hpbGRyZW5LZXldO2lmKCFpc05pbChjaGlsZHJlbikpe193YWxrZXIoaXRlbSxjaGlsZHJlbiwwKTt9fSk7fS8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFibGUvc3JjL3N0b3JlL2V4cGFuZC5qcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGV4cGFuZD17ZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3N0YXRlczp7ZGVmYXVsdEV4cGFuZEFsbDpmYWxzZSxleHBhbmRSb3dzOltdfX07fSxtZXRob2RzOnt1cGRhdGVFeHBhbmRSb3dzOmZ1bmN0aW9uIHVwZGF0ZUV4cGFuZFJvd3MoKXt2YXIgX3N0YXRlcz10aGlzLnN0YXRlcyxfc3RhdGVzJGRhdGE9X3N0YXRlcy5kYXRhLGRhdGE9X3N0YXRlcyRkYXRhPT09dW5kZWZpbmVkP1tdOl9zdGF0ZXMkZGF0YSxyb3dLZXk9X3N0YXRlcy5yb3dLZXksZGVmYXVsdEV4cGFuZEFsbD1fc3RhdGVzLmRlZmF1bHRFeHBhbmRBbGwsZXhwYW5kUm93cz1fc3RhdGVzLmV4cGFuZFJvd3M7aWYoZGVmYXVsdEV4cGFuZEFsbCl7dGhpcy5zdGF0ZXMuZXhwYW5kUm93cz1kYXRhLnNsaWNlKCk7fWVsc2UgaWYocm93S2V5KXsvLyBUT0RP77ya6L+Z6YeM55qE5Luj56CB5Y+v5Lul5LyY5YyWCnZhciBleHBhbmRSb3dzTWFwPWdldEtleXNNYXAoZXhwYW5kUm93cyxyb3dLZXkpO3RoaXMuc3RhdGVzLmV4cGFuZFJvd3M9ZGF0YS5yZWR1Y2UoZnVuY3Rpb24ocHJldixyb3cpe3ZhciByb3dJZD1nZXRSb3dJZGVudGl0eShyb3cscm93S2V5KTt2YXIgcm93SW5mbz1leHBhbmRSb3dzTWFwW3Jvd0lkXTtpZihyb3dJbmZvKXtwcmV2LnB1c2gocm93KTt9cmV0dXJuIHByZXY7fSxbXSk7fWVsc2V7dGhpcy5zdGF0ZXMuZXhwYW5kUm93cz1bXTt9fSx0b2dnbGVSb3dFeHBhbnNpb246ZnVuY3Rpb24gdG9nZ2xlUm93RXhwYW5zaW9uKHJvdyxleHBhbmRlZCl7dmFyIGNoYW5nZWQ9dG9nZ2xlUm93U3RhdHVzKHRoaXMuc3RhdGVzLmV4cGFuZFJvd3Mscm93LGV4cGFuZGVkKTtpZihjaGFuZ2VkKXt0aGlzLnRhYmxlLiRlbWl0KCdleHBhbmQtY2hhbmdlJyxyb3csdGhpcy5zdGF0ZXMuZXhwYW5kUm93cy5zbGljZSgpKTt0aGlzLnNjaGVkdWxlTGF5b3V0KCk7fX0sc2V0RXhwYW5kUm93S2V5czpmdW5jdGlvbiBzZXRFeHBhbmRSb3dLZXlzKHJvd0tleXMpe3RoaXMuYXNzZXJ0Um93S2V5KCk7Ly8gVE9ET++8mui/memHjOeahOS7o+eggeWPr+S7peS8mOWMlgp2YXIgX3N0YXRlczI9dGhpcy5zdGF0ZXMsZGF0YT1fc3RhdGVzMi5kYXRhLHJvd0tleT1fc3RhdGVzMi5yb3dLZXk7dmFyIGtleXNNYXA9Z2V0S2V5c01hcChkYXRhLHJvd0tleSk7dGhpcy5zdGF0ZXMuZXhwYW5kUm93cz1yb3dLZXlzLnJlZHVjZShmdW5jdGlvbihwcmV2LGN1cil7dmFyIGluZm89a2V5c01hcFtjdXJdO2lmKGluZm8pe3ByZXYucHVzaChpbmZvLnJvdyk7fXJldHVybiBwcmV2O30sW10pO30saXNSb3dFeHBhbmRlZDpmdW5jdGlvbiBpc1Jvd0V4cGFuZGVkKHJvdyl7dmFyIF9zdGF0ZXMzPXRoaXMuc3RhdGVzLF9zdGF0ZXMzJGV4cGFuZFJvd3M9X3N0YXRlczMuZXhwYW5kUm93cyxleHBhbmRSb3dzPV9zdGF0ZXMzJGV4cGFuZFJvd3M9PT11bmRlZmluZWQ/W106X3N0YXRlczMkZXhwYW5kUm93cyxyb3dLZXk9X3N0YXRlczMucm93S2V5O2lmKHJvd0tleSl7dmFyIGV4cGFuZE1hcD1nZXRLZXlzTWFwKGV4cGFuZFJvd3Mscm93S2V5KTtyZXR1cm4hIWV4cGFuZE1hcFtnZXRSb3dJZGVudGl0eShyb3cscm93S2V5KV07fXJldHVybiBleHBhbmRSb3dzLmluZGV4T2Yocm93KSE9PS0xO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYmxlL3NyYy9zdG9yZS9jdXJyZW50LmpzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3RvcmVfY3VycmVudD17ZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3N0YXRlczp7Ly8g5LiN5Y+v5ZON5bqU55qE77yM6K6+572uIGN1cnJlbnRSb3dLZXkg5pe277yMZGF0YSDkuI3kuIDlrprlrZjlnKjvvIzkuZ/orrjml6Dms5Xnrpflh7rmraPnoa7nmoQgY3VycmVudFJvdwovLyDmioror6XlgLznvJPlrZjkuIDkuIvvvIzlvZPnlKjmiLfngrnlh7vkv67mlLkgY3VycmVudFJvdyDml7bvvIzmioror6XlgLzph43nva7kuLogbnVsbApfY3VycmVudFJvd0tleTpudWxsLGN1cnJlbnRSb3c6bnVsbH19O30sbWV0aG9kczp7c2V0Q3VycmVudFJvd0tleTpmdW5jdGlvbiBzZXRDdXJyZW50Um93S2V5KGtleSl7dGhpcy5hc3NlcnRSb3dLZXkoKTt0aGlzLnN0YXRlcy5fY3VycmVudFJvd0tleT1rZXk7dGhpcy5zZXRDdXJyZW50Um93QnlLZXkoa2V5KTt9LHJlc3RvcmVDdXJyZW50Um93S2V5OmZ1bmN0aW9uIHJlc3RvcmVDdXJyZW50Um93S2V5KCl7dGhpcy5zdGF0ZXMuX2N1cnJlbnRSb3dLZXk9bnVsbDt9LHNldEN1cnJlbnRSb3dCeUtleTpmdW5jdGlvbiBzZXRDdXJyZW50Um93QnlLZXkoa2V5KXt2YXIgc3RhdGVzPXRoaXMuc3RhdGVzO3ZhciBfc3RhdGVzJGRhdGE9c3RhdGVzLmRhdGEsZGF0YT1fc3RhdGVzJGRhdGE9PT11bmRlZmluZWQ/W106X3N0YXRlcyRkYXRhLHJvd0tleT1zdGF0ZXMucm93S2V5O3ZhciBjdXJyZW50Um93PW51bGw7aWYocm93S2V5KXtjdXJyZW50Um93PU9iamVjdCh1dGlsX1siYXJyYXlGaW5kIl0pKGRhdGEsZnVuY3Rpb24oaXRlbSl7cmV0dXJuIGdldFJvd0lkZW50aXR5KGl0ZW0scm93S2V5KT09PWtleTt9KTt9c3RhdGVzLmN1cnJlbnRSb3c9Y3VycmVudFJvdzt9LHVwZGF0ZUN1cnJlbnRSb3c6ZnVuY3Rpb24gdXBkYXRlQ3VycmVudFJvdyhjdXJyZW50Um93KXt2YXIgc3RhdGVzPXRoaXMuc3RhdGVzLHRhYmxlPXRoaXMudGFibGU7dmFyIG9sZEN1cnJlbnRSb3c9c3RhdGVzLmN1cnJlbnRSb3c7aWYoY3VycmVudFJvdyYmY3VycmVudFJvdyE9PW9sZEN1cnJlbnRSb3cpe3N0YXRlcy5jdXJyZW50Um93PWN1cnJlbnRSb3c7dGFibGUuJGVtaXQoJ2N1cnJlbnQtY2hhbmdlJyxjdXJyZW50Um93LG9sZEN1cnJlbnRSb3cpO3JldHVybjt9aWYoIWN1cnJlbnRSb3cmJm9sZEN1cnJlbnRSb3cpe3N0YXRlcy5jdXJyZW50Um93PW51bGw7dGFibGUuJGVtaXQoJ2N1cnJlbnQtY2hhbmdlJyxudWxsLG9sZEN1cnJlbnRSb3cpO319LHVwZGF0ZUN1cnJlbnRSb3dEYXRhOmZ1bmN0aW9uIHVwZGF0ZUN1cnJlbnRSb3dEYXRhKCl7dmFyIHN0YXRlcz10aGlzLnN0YXRlcyx0YWJsZT10aGlzLnRhYmxlO3ZhciByb3dLZXk9c3RhdGVzLnJvd0tleSxfY3VycmVudFJvd0tleT1zdGF0ZXMuX2N1cnJlbnRSb3dLZXk7Ly8gZGF0YSDkuLogbnVsbCDml7bvvIzop6PmnoTml7bnmoTpu5jorqTlgLzkvJrooqvlv73nlaUKdmFyIGRhdGE9c3RhdGVzLmRhdGF8fFtdO3ZhciBvbGRDdXJyZW50Um93PXN0YXRlcy5jdXJyZW50Um93Oy8vIOW9kyBjdXJyZW50Um93IOS4jeWcqCBkYXRhIOS4reaXtuWwneivleabtOaWsOaVsOaNrgppZihkYXRhLmluZGV4T2Yob2xkQ3VycmVudFJvdyk9PT0tMSYmb2xkQ3VycmVudFJvdyl7aWYocm93S2V5KXt2YXIgY3VycmVudFJvd0tleT1nZXRSb3dJZGVudGl0eShvbGRDdXJyZW50Um93LHJvd0tleSk7dGhpcy5zZXRDdXJyZW50Um93QnlLZXkoY3VycmVudFJvd0tleSk7fWVsc2V7c3RhdGVzLmN1cnJlbnRSb3c9bnVsbDt9aWYoc3RhdGVzLmN1cnJlbnRSb3c9PT1udWxsKXt0YWJsZS4kZW1pdCgnY3VycmVudC1jaGFuZ2UnLG51bGwsb2xkQ3VycmVudFJvdyk7fX1lbHNlIGlmKF9jdXJyZW50Um93S2V5KXsvLyDmiorliJ3lp4vml7bkuIvorr7nva7nmoQgcm93S2V5IOi9rOWMluaIkCByb3dEYXRhCnRoaXMuc2V0Q3VycmVudFJvd0J5S2V5KF9jdXJyZW50Um93S2V5KTt0aGlzLnJlc3RvcmVDdXJyZW50Um93S2V5KCk7fX19fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYmxlL3NyYy9zdG9yZS90cmVlLmpzCnZhciBfZXh0ZW5kcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0YXJnZXQpe2Zvcih2YXIgaT0xO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe3ZhciBzb3VyY2U9YXJndW1lbnRzW2ldO2Zvcih2YXIga2V5IGluIHNvdXJjZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSxrZXkpKXt0YXJnZXRba2V5XT1zb3VyY2Vba2V5XTt9fX1yZXR1cm4gdGFyZ2V0O307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0cmVlPXtkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57c3RhdGVzOnsvLyBkZWZhdWx0RXhwYW5kQWxsIOWtmOWcqOS6jiBleHBhbmQuanMg5Lit77yM6L+Z6YeM5LiN6YeN5aSN5re75YqgCi8vIOWcqOWxleW8gOihjOS4re+8jGV4cGFuZFJvd0tleXMg5Lya6KKr6L2s5YyW5oiQIGV4cGFuZFJvd3PvvIxleHBhbmRSb3dLZXlzIOi/meS4quWxnuaAp+WPquaYr+iusOW9leS6hiBUcmVlVGFibGUg6KGM55qE5bGV5byACi8vIFRPRE86IOaLhuWIhuS4uueLrOeri+eahCBUcmVlVGFibGXvvIznu5/kuIDnlKjms5UKZXhwYW5kUm93S2V5czpbXSx0cmVlRGF0YTp7fSxpbmRlbnQ6MTYsbGF6eTpmYWxzZSxsYXp5VHJlZU5vZGVNYXA6e30sbGF6eUNvbHVtbklkZW50aWZpZXI6J2hhc0NoaWxkcmVuJyxjaGlsZHJlbkNvbHVtbk5hbWU6J2NoaWxkcmVuJ319O30sY29tcHV0ZWQ6ey8vIOW1jOWFpeWei+eahOaVsOaNru+8jHdhdGNoIOaXoOazleaYr+ajgOa1i+WIsOWPmOWMliBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L2lzc3Vlcy8xNDk5OAovLyBUT0RPOiDkvb/nlKggY29tcHV0ZWQg6Kej5Yaz6K+l6Zeu6aKY77yM5piv5ZCm5Lya6YCg5oiQ5oCn6IO96Zeu6aKY77yfCi8vIEByZXR1cm4geyBpZDogeyBsZXZlbCwgY2hpbGRyZW4gfSB9Cm5vcm1hbGl6ZWREYXRhOmZ1bmN0aW9uIG5vcm1hbGl6ZWREYXRhKCl7aWYoIXRoaXMuc3RhdGVzLnJvd0tleSlyZXR1cm57fTt2YXIgZGF0YT10aGlzLnN0YXRlcy5kYXRhfHxbXTtyZXR1cm4gdGhpcy5ub3JtYWxpemUoZGF0YSk7fSwvLyBAcmV0dXJuIHsgaWQ6IHsgY2hpbGRyZW4gfSB9Ci8vIOmSiOWvueaHkuWKoOi9veeahOaDheW9ou+8jOS4jeWkhOeQhuW1jOWll+aVsOaNrgpub3JtYWxpemVkTGF6eU5vZGU6ZnVuY3Rpb24gbm9ybWFsaXplZExhenlOb2RlKCl7dmFyIF9zdGF0ZXM9dGhpcy5zdGF0ZXMscm93S2V5PV9zdGF0ZXMucm93S2V5LGxhenlUcmVlTm9kZU1hcD1fc3RhdGVzLmxhenlUcmVlTm9kZU1hcCxsYXp5Q29sdW1uSWRlbnRpZmllcj1fc3RhdGVzLmxhenlDb2x1bW5JZGVudGlmaWVyO3ZhciBrZXlzPU9iamVjdC5rZXlzKGxhenlUcmVlTm9kZU1hcCk7dmFyIHJlcz17fTtpZigha2V5cy5sZW5ndGgpcmV0dXJuIHJlcztrZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KXtpZihsYXp5VHJlZU5vZGVNYXBba2V5XS5sZW5ndGgpe3ZhciBpdGVtPXtjaGlsZHJlbjpbXX07bGF6eVRyZWVOb2RlTWFwW2tleV0uZm9yRWFjaChmdW5jdGlvbihyb3cpe3ZhciBjdXJyZW50Um93S2V5PWdldFJvd0lkZW50aXR5KHJvdyxyb3dLZXkpO2l0ZW0uY2hpbGRyZW4ucHVzaChjdXJyZW50Um93S2V5KTtpZihyb3dbbGF6eUNvbHVtbklkZW50aWZpZXJdJiYhcmVzW2N1cnJlbnRSb3dLZXldKXtyZXNbY3VycmVudFJvd0tleV09e2NoaWxkcmVuOltdfTt9fSk7cmVzW2tleV09aXRlbTt9fSk7cmV0dXJuIHJlczt9fSx3YXRjaDp7bm9ybWFsaXplZERhdGE6J3VwZGF0ZVRyZWVEYXRhJyxub3JtYWxpemVkTGF6eU5vZGU6J3VwZGF0ZVRyZWVEYXRhJ30sbWV0aG9kczp7bm9ybWFsaXplOmZ1bmN0aW9uIG5vcm1hbGl6ZShkYXRhKXt2YXIgX3N0YXRlczI9dGhpcy5zdGF0ZXMsY2hpbGRyZW5Db2x1bW5OYW1lPV9zdGF0ZXMyLmNoaWxkcmVuQ29sdW1uTmFtZSxsYXp5Q29sdW1uSWRlbnRpZmllcj1fc3RhdGVzMi5sYXp5Q29sdW1uSWRlbnRpZmllcixyb3dLZXk9X3N0YXRlczIucm93S2V5LGxhenk9X3N0YXRlczIubGF6eTt2YXIgcmVzPXt9O3dhbGtUcmVlTm9kZShkYXRhLGZ1bmN0aW9uKHBhcmVudCxjaGlsZHJlbixsZXZlbCl7dmFyIHBhcmVudElkPWdldFJvd0lkZW50aXR5KHBhcmVudCxyb3dLZXkpO2lmKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKXtyZXNbcGFyZW50SWRdPXtjaGlsZHJlbjpjaGlsZHJlbi5tYXAoZnVuY3Rpb24ocm93KXtyZXR1cm4gZ2V0Um93SWRlbnRpdHkocm93LHJvd0tleSk7fSksbGV2ZWw6bGV2ZWx9O31lbHNlIGlmKGxhenkpey8vIOW9kyBjaGlsZHJlbiDkuI3lrZjlnKjkuJQgbGF6eSDkuLogdHJ1Ze+8jOivpeiKgueCueWNs+S4uuaHkuWKoOi9veeahOiKgueCuQpyZXNbcGFyZW50SWRdPXtjaGlsZHJlbjpbXSxsYXp5OnRydWUsbGV2ZWw6bGV2ZWx9O319LGNoaWxkcmVuQ29sdW1uTmFtZSxsYXp5Q29sdW1uSWRlbnRpZmllcik7cmV0dXJuIHJlczt9LHVwZGF0ZVRyZWVEYXRhOmZ1bmN0aW9uIHVwZGF0ZVRyZWVEYXRhKCl7dmFyIG5lc3RlZD10aGlzLm5vcm1hbGl6ZWREYXRhO3ZhciBub3JtYWxpemVkTGF6eU5vZGU9dGhpcy5ub3JtYWxpemVkTGF6eU5vZGU7dmFyIGtleXM9T2JqZWN0LmtleXMobmVzdGVkKTt2YXIgbmV3VHJlZURhdGE9e307aWYoa2V5cy5sZW5ndGgpe3ZhciBfc3RhdGVzMz10aGlzLnN0YXRlcyxvbGRUcmVlRGF0YT1fc3RhdGVzMy50cmVlRGF0YSxkZWZhdWx0RXhwYW5kQWxsPV9zdGF0ZXMzLmRlZmF1bHRFeHBhbmRBbGwsZXhwYW5kUm93S2V5cz1fc3RhdGVzMy5leHBhbmRSb3dLZXlzLGxhenk9X3N0YXRlczMubGF6eTt2YXIgcm9vdExhenlSb3dLZXlzPVtdO3ZhciBnZXRFeHBhbmRlZD1mdW5jdGlvbiBnZXRFeHBhbmRlZChvbGRWYWx1ZSxrZXkpe3ZhciBpbmNsdWRlZD1kZWZhdWx0RXhwYW5kQWxsfHxleHBhbmRSb3dLZXlzJiZleHBhbmRSb3dLZXlzLmluZGV4T2Yoa2V5KSE9PS0xO3JldHVybiEhKG9sZFZhbHVlJiZvbGRWYWx1ZS5leHBhbmRlZHx8aW5jbHVkZWQpO307Ly8g5ZCI5bm2IGV4cGFuZGVkIOS4jiBkaXNwbGF577yM56Gu5L+d5pWw5o2u5Yi35paw5ZCO77yM54q25oCB5LiN5Y+YCmtleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpe3ZhciBvbGRWYWx1ZT1vbGRUcmVlRGF0YVtrZXldO3ZhciBuZXdWYWx1ZT1fZXh0ZW5kcyh7fSxuZXN0ZWRba2V5XSk7bmV3VmFsdWUuZXhwYW5kZWQ9Z2V0RXhwYW5kZWQob2xkVmFsdWUsa2V5KTtpZihuZXdWYWx1ZS5sYXp5KXt2YXIgX3JlZj1vbGRWYWx1ZXx8e30sX3JlZiRsb2FkZWQ9X3JlZi5sb2FkZWQsbG9hZGVkPV9yZWYkbG9hZGVkPT09dW5kZWZpbmVkP2ZhbHNlOl9yZWYkbG9hZGVkLF9yZWYkbG9hZGluZz1fcmVmLmxvYWRpbmcsbG9hZGluZz1fcmVmJGxvYWRpbmc9PT11bmRlZmluZWQ/ZmFsc2U6X3JlZiRsb2FkaW5nO25ld1ZhbHVlLmxvYWRlZD0hIWxvYWRlZDtuZXdWYWx1ZS5sb2FkaW5nPSEhbG9hZGluZztyb290TGF6eVJvd0tleXMucHVzaChrZXkpO31uZXdUcmVlRGF0YVtrZXldPW5ld1ZhbHVlO30pOy8vIOagueaNruaHkuWKoOi9veaVsOaNruabtOaWsCB0cmVlRGF0YQp2YXIgbGF6eUtleXM9T2JqZWN0LmtleXMobm9ybWFsaXplZExhenlOb2RlKTtpZihsYXp5JiZsYXp5S2V5cy5sZW5ndGgmJnJvb3RMYXp5Um93S2V5cy5sZW5ndGgpe2xhenlLZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KXt2YXIgb2xkVmFsdWU9b2xkVHJlZURhdGFba2V5XTt2YXIgbGF6eU5vZGVDaGlsZHJlbj1ub3JtYWxpemVkTGF6eU5vZGVba2V5XS5jaGlsZHJlbjtpZihyb290TGF6eVJvd0tleXMuaW5kZXhPZihrZXkpIT09LTEpey8vIOaHkuWKoOi9veeahCByb290IOiKgueCue+8jOabtOaWsOS4gOS4i+WOn+acieeahOaVsOaNru+8jOWOn+adpeeahCBjaGlsZHJlbiDkuIDlrprmmK/nqbrmlbDnu4QKaWYobmV3VHJlZURhdGFba2V5XS5jaGlsZHJlbi5sZW5ndGghPT0wKXt0aHJvdyBuZXcgRXJyb3IoJ1tFbFRhYmxlXWNoaWxkcmVuIG11c3QgYmUgYW4gZW1wdHkgYXJyYXkuJyk7fW5ld1RyZWVEYXRhW2tleV0uY2hpbGRyZW49bGF6eU5vZGVDaGlsZHJlbjt9ZWxzZXt2YXIgX3JlZjI9b2xkVmFsdWV8fHt9LF9yZWYyJGxvYWRlZD1fcmVmMi5sb2FkZWQsbG9hZGVkPV9yZWYyJGxvYWRlZD09PXVuZGVmaW5lZD9mYWxzZTpfcmVmMiRsb2FkZWQsX3JlZjIkbG9hZGluZz1fcmVmMi5sb2FkaW5nLGxvYWRpbmc9X3JlZjIkbG9hZGluZz09PXVuZGVmaW5lZD9mYWxzZTpfcmVmMiRsb2FkaW5nO25ld1RyZWVEYXRhW2tleV09e2xhenk6dHJ1ZSxsb2FkZWQ6ISFsb2FkZWQsbG9hZGluZzohIWxvYWRpbmcsZXhwYW5kZWQ6Z2V0RXhwYW5kZWQob2xkVmFsdWUsa2V5KSxjaGlsZHJlbjpsYXp5Tm9kZUNoaWxkcmVuLGxldmVsOicnfTt9fSk7fX10aGlzLnN0YXRlcy50cmVlRGF0YT1uZXdUcmVlRGF0YTt0aGlzLnVwZGF0ZVRhYmxlU2Nyb2xsWSgpO30sdXBkYXRlVHJlZUV4cGFuZEtleXM6ZnVuY3Rpb24gdXBkYXRlVHJlZUV4cGFuZEtleXModmFsdWUpe3RoaXMuc3RhdGVzLmV4cGFuZFJvd0tleXM9dmFsdWU7dGhpcy51cGRhdGVUcmVlRGF0YSgpO30sdG9nZ2xlVHJlZUV4cGFuc2lvbjpmdW5jdGlvbiB0b2dnbGVUcmVlRXhwYW5zaW9uKHJvdyxleHBhbmRlZCl7dGhpcy5hc3NlcnRSb3dLZXkoKTt2YXIgX3N0YXRlczQ9dGhpcy5zdGF0ZXMscm93S2V5PV9zdGF0ZXM0LnJvd0tleSx0cmVlRGF0YT1fc3RhdGVzNC50cmVlRGF0YTt2YXIgaWQ9Z2V0Um93SWRlbnRpdHkocm93LHJvd0tleSk7dmFyIGRhdGE9aWQmJnRyZWVEYXRhW2lkXTtpZihpZCYmZGF0YSYmJ2V4cGFuZGVkJ2luIGRhdGEpe3ZhciBvbGRFeHBhbmRlZD1kYXRhLmV4cGFuZGVkO2V4cGFuZGVkPXR5cGVvZiBleHBhbmRlZD09PSd1bmRlZmluZWQnPyFkYXRhLmV4cGFuZGVkOmV4cGFuZGVkO3RyZWVEYXRhW2lkXS5leHBhbmRlZD1leHBhbmRlZDtpZihvbGRFeHBhbmRlZCE9PWV4cGFuZGVkKXt0aGlzLnRhYmxlLiRlbWl0KCdleHBhbmQtY2hhbmdlJyxyb3csZXhwYW5kZWQpO310aGlzLnVwZGF0ZVRhYmxlU2Nyb2xsWSgpO319LGxvYWRPclRvZ2dsZTpmdW5jdGlvbiBsb2FkT3JUb2dnbGUocm93KXt0aGlzLmFzc2VydFJvd0tleSgpO3ZhciBfc3RhdGVzNT10aGlzLnN0YXRlcyxsYXp5PV9zdGF0ZXM1LmxhenksdHJlZURhdGE9X3N0YXRlczUudHJlZURhdGEscm93S2V5PV9zdGF0ZXM1LnJvd0tleTt2YXIgaWQ9Z2V0Um93SWRlbnRpdHkocm93LHJvd0tleSk7dmFyIGRhdGE9dHJlZURhdGFbaWRdO2lmKGxhenkmJmRhdGEmJidsb2FkZWQnaW4gZGF0YSYmIWRhdGEubG9hZGVkKXt0aGlzLmxvYWREYXRhKHJvdyxpZCxkYXRhKTt9ZWxzZXt0aGlzLnRvZ2dsZVRyZWVFeHBhbnNpb24ocm93KTt9fSxsb2FkRGF0YTpmdW5jdGlvbiBsb2FkRGF0YShyb3csa2V5LHRyZWVOb2RlKXt2YXIgX3RoaXM9dGhpczt2YXIgbG9hZD10aGlzLnRhYmxlLmxvYWQ7dmFyIF9zdGF0ZXM2PXRoaXMuc3RhdGVzLGxhenlUcmVlTm9kZU1hcD1fc3RhdGVzNi5sYXp5VHJlZU5vZGVNYXAsdHJlZURhdGE9X3N0YXRlczYudHJlZURhdGE7aWYobG9hZCYmIXRyZWVEYXRhW2tleV0ubG9hZGVkKXt0cmVlRGF0YVtrZXldLmxvYWRpbmc9dHJ1ZTtsb2FkKHJvdyx0cmVlTm9kZSxmdW5jdGlvbihkYXRhKXtpZighQXJyYXkuaXNBcnJheShkYXRhKSl7dGhyb3cgbmV3IEVycm9yKCdbRWxUYWJsZV0gZGF0YSBtdXN0IGJlIGFuIGFycmF5Jyk7fXRyZWVEYXRhW2tleV0ubG9hZGluZz1mYWxzZTt0cmVlRGF0YVtrZXldLmxvYWRlZD10cnVlO3RyZWVEYXRhW2tleV0uZXhwYW5kZWQ9dHJ1ZTtpZihkYXRhLmxlbmd0aCl7X3RoaXMuJHNldChsYXp5VHJlZU5vZGVNYXAsa2V5LGRhdGEpO31fdGhpcy50YWJsZS4kZW1pdCgnZXhwYW5kLWNoYW5nZScscm93LHRydWUpO30pO319fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJsZS9zcmMvc3RvcmUvd2F0Y2hlci5qcwp2YXIgd2F0Y2hlcl9zb3J0RGF0YT1mdW5jdGlvbiBzb3J0RGF0YShkYXRhLHN0YXRlcyl7dmFyIHNvcnRpbmdDb2x1bW49c3RhdGVzLnNvcnRpbmdDb2x1bW47aWYoIXNvcnRpbmdDb2x1bW58fHR5cGVvZiBzb3J0aW5nQ29sdW1uLnNvcnRhYmxlPT09J3N0cmluZycpe3JldHVybiBkYXRhO31yZXR1cm4gdXRpbF9vcmRlckJ5KGRhdGEsc3RhdGVzLnNvcnRQcm9wLHN0YXRlcy5zb3J0T3JkZXIsc29ydGluZ0NvbHVtbi5zb3J0TWV0aG9kLHNvcnRpbmdDb2x1bW4uc29ydEJ5KTt9O3ZhciBkb0ZsYXR0ZW5Db2x1bW5zPWZ1bmN0aW9uIGRvRmxhdHRlbkNvbHVtbnMoY29sdW1ucyl7dmFyIHJlc3VsdD1bXTtjb2x1bW5zLmZvckVhY2goZnVuY3Rpb24oY29sdW1uKXtpZihjb2x1bW4uY2hpbGRyZW4pe3Jlc3VsdC5wdXNoLmFwcGx5KHJlc3VsdCxkb0ZsYXR0ZW5Db2x1bW5zKGNvbHVtbi5jaGlsZHJlbikpO31lbHNle3Jlc3VsdC5wdXNoKGNvbHVtbik7fX0pO3JldHVybiByZXN1bHQ7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHdhdGNoZXI9ZXh0ZXJuYWxfdnVlX2RlZmF1bHQuYS5leHRlbmQoe2RhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntzdGF0ZXM6ey8vIDMuMCDniYjmnKzlkI7opoHmsYLlv4Xpobvorr7nva7or6XlsZ7mgKcKcm93S2V5Om51bGwsLy8g5riy5p+T55qE5pWw5o2u5p2l5rqQ77yM5piv5a+5IHRhYmxlIOS4reeahCBkYXRhIOi/h+a7pOaOkuW6j+WQjueahOe7k+aenApkYXRhOltdLC8vIOaYr+WQpuWMheWQq+WbuuWumuWIlwppc0NvbXBsZXg6ZmFsc2UsLy8g5YiXCl9jb2x1bW5zOltdLC8vIOS4jeWPr+WTjeW6lOeahApvcmlnaW5Db2x1bW5zOltdLGNvbHVtbnM6W10sZml4ZWRDb2x1bW5zOltdLHJpZ2h0Rml4ZWRDb2x1bW5zOltdLGxlYWZDb2x1bW5zOltdLGZpeGVkTGVhZkNvbHVtbnM6W10scmlnaHRGaXhlZExlYWZDb2x1bW5zOltdLGxlYWZDb2x1bW5zTGVuZ3RoOjAsZml4ZWRMZWFmQ29sdW1uc0xlbmd0aDowLHJpZ2h0Rml4ZWRMZWFmQ29sdW1uc0xlbmd0aDowLC8vIOmAieaLqQppc0FsbFNlbGVjdGVkOmZhbHNlLHNlbGVjdGlvbjpbXSxyZXNlcnZlU2VsZWN0aW9uOmZhbHNlLHNlbGVjdE9uSW5kZXRlcm1pbmF0ZTpmYWxzZSxzZWxlY3RhYmxlOm51bGwsLy8g6L+H5rukCmZpbHRlcnM6e30sLy8g5LiN5Y+v5ZON5bqU55qECmZpbHRlcmVkRGF0YTpudWxsLC8vIOaOkuW6jwpzb3J0aW5nQ29sdW1uOm51bGwsc29ydFByb3A6bnVsbCxzb3J0T3JkZXI6bnVsbCxob3ZlclJvdzpudWxsfX07fSxtaXhpbnM6W2V4cGFuZCxzdG9yZV9jdXJyZW50LHRyZWVdLG1ldGhvZHM6ey8vIOajgOafpSByb3dLZXkg5piv5ZCm5a2Y5ZyoCmFzc2VydFJvd0tleTpmdW5jdGlvbiBhc3NlcnRSb3dLZXkoKXt2YXIgcm93S2V5PXRoaXMuc3RhdGVzLnJvd0tleTtpZighcm93S2V5KXRocm93IG5ldyBFcnJvcignW0VsVGFibGVdIHByb3Agcm93LWtleSBpcyByZXF1aXJlZCcpO30sLy8g5pu05paw5YiXCnVwZGF0ZUNvbHVtbnM6ZnVuY3Rpb24gdXBkYXRlQ29sdW1ucygpe3ZhciBzdGF0ZXM9dGhpcy5zdGF0ZXM7dmFyIF9jb2x1bW5zPXN0YXRlcy5fY29sdW1uc3x8W107c3RhdGVzLmZpeGVkQ29sdW1ucz1fY29sdW1ucy5maWx0ZXIoZnVuY3Rpb24oY29sdW1uKXtyZXR1cm4gY29sdW1uLmZpeGVkPT09dHJ1ZXx8Y29sdW1uLmZpeGVkPT09J2xlZnQnO30pO3N0YXRlcy5yaWdodEZpeGVkQ29sdW1ucz1fY29sdW1ucy5maWx0ZXIoZnVuY3Rpb24oY29sdW1uKXtyZXR1cm4gY29sdW1uLmZpeGVkPT09J3JpZ2h0Jzt9KTtpZihzdGF0ZXMuZml4ZWRDb2x1bW5zLmxlbmd0aD4wJiZfY29sdW1uc1swXSYmX2NvbHVtbnNbMF0udHlwZT09PSdzZWxlY3Rpb24nJiYhX2NvbHVtbnNbMF0uZml4ZWQpe19jb2x1bW5zWzBdLmZpeGVkPXRydWU7c3RhdGVzLmZpeGVkQ29sdW1ucy51bnNoaWZ0KF9jb2x1bW5zWzBdKTt9dmFyIG5vdEZpeGVkQ29sdW1ucz1fY29sdW1ucy5maWx0ZXIoZnVuY3Rpb24oY29sdW1uKXtyZXR1cm4hY29sdW1uLmZpeGVkO30pO3N0YXRlcy5vcmlnaW5Db2x1bW5zPVtdLmNvbmNhdChzdGF0ZXMuZml4ZWRDb2x1bW5zKS5jb25jYXQobm90Rml4ZWRDb2x1bW5zKS5jb25jYXQoc3RhdGVzLnJpZ2h0Rml4ZWRDb2x1bW5zKTt2YXIgbGVhZkNvbHVtbnM9ZG9GbGF0dGVuQ29sdW1ucyhub3RGaXhlZENvbHVtbnMpO3ZhciBmaXhlZExlYWZDb2x1bW5zPWRvRmxhdHRlbkNvbHVtbnMoc3RhdGVzLmZpeGVkQ29sdW1ucyk7dmFyIHJpZ2h0Rml4ZWRMZWFmQ29sdW1ucz1kb0ZsYXR0ZW5Db2x1bW5zKHN0YXRlcy5yaWdodEZpeGVkQ29sdW1ucyk7c3RhdGVzLmxlYWZDb2x1bW5zTGVuZ3RoPWxlYWZDb2x1bW5zLmxlbmd0aDtzdGF0ZXMuZml4ZWRMZWFmQ29sdW1uc0xlbmd0aD1maXhlZExlYWZDb2x1bW5zLmxlbmd0aDtzdGF0ZXMucmlnaHRGaXhlZExlYWZDb2x1bW5zTGVuZ3RoPXJpZ2h0Rml4ZWRMZWFmQ29sdW1ucy5sZW5ndGg7c3RhdGVzLmNvbHVtbnM9W10uY29uY2F0KGZpeGVkTGVhZkNvbHVtbnMpLmNvbmNhdChsZWFmQ29sdW1ucykuY29uY2F0KHJpZ2h0Rml4ZWRMZWFmQ29sdW1ucyk7c3RhdGVzLmlzQ29tcGxleD1zdGF0ZXMuZml4ZWRDb2x1bW5zLmxlbmd0aD4wfHxzdGF0ZXMucmlnaHRGaXhlZENvbHVtbnMubGVuZ3RoPjA7fSwvLyDmm7TmlrAgRE9NCnNjaGVkdWxlTGF5b3V0OmZ1bmN0aW9uIHNjaGVkdWxlTGF5b3V0KG5lZWRVcGRhdGVDb2x1bW5zKXtpZihuZWVkVXBkYXRlQ29sdW1ucyl7dGhpcy51cGRhdGVDb2x1bW5zKCk7fXRoaXMudGFibGUuZGVib3VuY2VkVXBkYXRlTGF5b3V0KCk7fSwvLyDpgInmi6kKaXNTZWxlY3RlZDpmdW5jdGlvbiBpc1NlbGVjdGVkKHJvdyl7dmFyIF9zdGF0ZXMkc2VsZWN0aW9uPXRoaXMuc3RhdGVzLnNlbGVjdGlvbixzZWxlY3Rpb249X3N0YXRlcyRzZWxlY3Rpb249PT11bmRlZmluZWQ/W106X3N0YXRlcyRzZWxlY3Rpb247cmV0dXJuIHNlbGVjdGlvbi5pbmRleE9mKHJvdyk+LTE7fSxjbGVhclNlbGVjdGlvbjpmdW5jdGlvbiBjbGVhclNlbGVjdGlvbigpe3ZhciBzdGF0ZXM9dGhpcy5zdGF0ZXM7c3RhdGVzLmlzQWxsU2VsZWN0ZWQ9ZmFsc2U7dmFyIG9sZFNlbGVjdGlvbj1zdGF0ZXMuc2VsZWN0aW9uO2lmKG9sZFNlbGVjdGlvbi5sZW5ndGgpe3N0YXRlcy5zZWxlY3Rpb249W107dGhpcy50YWJsZS4kZW1pdCgnc2VsZWN0aW9uLWNoYW5nZScsW10pO319LGNsZWFuU2VsZWN0aW9uOmZ1bmN0aW9uIGNsZWFuU2VsZWN0aW9uKCl7dmFyIHN0YXRlcz10aGlzLnN0YXRlczt2YXIgZGF0YT1zdGF0ZXMuZGF0YSxyb3dLZXk9c3RhdGVzLnJvd0tleSxzZWxlY3Rpb249c3RhdGVzLnNlbGVjdGlvbjt2YXIgZGVsZXRlZD12b2lkIDA7aWYocm93S2V5KXtkZWxldGVkPVtdO3ZhciBzZWxlY3RlZE1hcD1nZXRLZXlzTWFwKHNlbGVjdGlvbixyb3dLZXkpO3ZhciBkYXRhTWFwPWdldEtleXNNYXAoZGF0YSxyb3dLZXkpO2Zvcih2YXIga2V5IGluIHNlbGVjdGVkTWFwKXtpZihzZWxlY3RlZE1hcC5oYXNPd25Qcm9wZXJ0eShrZXkpJiYhZGF0YU1hcFtrZXldKXtkZWxldGVkLnB1c2goc2VsZWN0ZWRNYXBba2V5XS5yb3cpO319fWVsc2V7ZGVsZXRlZD1zZWxlY3Rpb24uZmlsdGVyKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBkYXRhLmluZGV4T2YoaXRlbSk9PT0tMTt9KTt9aWYoZGVsZXRlZC5sZW5ndGgpe3ZhciBuZXdTZWxlY3Rpb249c2VsZWN0aW9uLmZpbHRlcihmdW5jdGlvbihpdGVtKXtyZXR1cm4gZGVsZXRlZC5pbmRleE9mKGl0ZW0pPT09LTE7fSk7c3RhdGVzLnNlbGVjdGlvbj1uZXdTZWxlY3Rpb247dGhpcy50YWJsZS4kZW1pdCgnc2VsZWN0aW9uLWNoYW5nZScsbmV3U2VsZWN0aW9uLnNsaWNlKCkpO319LHRvZ2dsZVJvd1NlbGVjdGlvbjpmdW5jdGlvbiB0b2dnbGVSb3dTZWxlY3Rpb24ocm93LHNlbGVjdGVkKXt2YXIgZW1pdENoYW5nZT1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMl06dHJ1ZTt2YXIgY2hhbmdlZD10b2dnbGVSb3dTdGF0dXModGhpcy5zdGF0ZXMuc2VsZWN0aW9uLHJvdyxzZWxlY3RlZCk7aWYoY2hhbmdlZCl7dmFyIG5ld1NlbGVjdGlvbj0odGhpcy5zdGF0ZXMuc2VsZWN0aW9ufHxbXSkuc2xpY2UoKTsvLyDosIPnlKggQVBJIOS/ruaUuemAieS4reWAvO+8jOS4jeinpuWPkSBzZWxlY3Qg5LqL5Lu2CmlmKGVtaXRDaGFuZ2Upe3RoaXMudGFibGUuJGVtaXQoJ3NlbGVjdCcsbmV3U2VsZWN0aW9uLHJvdyk7fXRoaXMudGFibGUuJGVtaXQoJ3NlbGVjdGlvbi1jaGFuZ2UnLG5ld1NlbGVjdGlvbik7fX0sX3RvZ2dsZUFsbFNlbGVjdGlvbjpmdW5jdGlvbiBfdG9nZ2xlQWxsU2VsZWN0aW9uKCl7dmFyIHN0YXRlcz10aGlzLnN0YXRlczt2YXIgX3N0YXRlcyRkYXRhPXN0YXRlcy5kYXRhLGRhdGE9X3N0YXRlcyRkYXRhPT09dW5kZWZpbmVkP1tdOl9zdGF0ZXMkZGF0YSxzZWxlY3Rpb249c3RhdGVzLnNlbGVjdGlvbjsvLyB3aGVuIG9ubHkgc29tZSByb3dzIGFyZSBzZWxlY3RlZCAoYnV0IG5vdCBhbGwpLCBzZWxlY3Qgb3IgZGVzZWxlY3QgYWxsIG9mIHRoZW0KLy8gZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZSBvZiBzZWxlY3RPbkluZGV0ZXJtaW5hdGUKdmFyIHZhbHVlPXN0YXRlcy5zZWxlY3RPbkluZGV0ZXJtaW5hdGU/IXN0YXRlcy5pc0FsbFNlbGVjdGVkOiEoc3RhdGVzLmlzQWxsU2VsZWN0ZWR8fHNlbGVjdGlvbi5sZW5ndGgpO3N0YXRlcy5pc0FsbFNlbGVjdGVkPXZhbHVlO3ZhciBzZWxlY3Rpb25DaGFuZ2VkPWZhbHNlO2RhdGEuZm9yRWFjaChmdW5jdGlvbihyb3csaW5kZXgpe2lmKHN0YXRlcy5zZWxlY3RhYmxlKXtpZihzdGF0ZXMuc2VsZWN0YWJsZS5jYWxsKG51bGwscm93LGluZGV4KSYmdG9nZ2xlUm93U3RhdHVzKHNlbGVjdGlvbixyb3csdmFsdWUpKXtzZWxlY3Rpb25DaGFuZ2VkPXRydWU7fX1lbHNle2lmKHRvZ2dsZVJvd1N0YXR1cyhzZWxlY3Rpb24scm93LHZhbHVlKSl7c2VsZWN0aW9uQ2hhbmdlZD10cnVlO319fSk7aWYoc2VsZWN0aW9uQ2hhbmdlZCl7dGhpcy50YWJsZS4kZW1pdCgnc2VsZWN0aW9uLWNoYW5nZScsc2VsZWN0aW9uP3NlbGVjdGlvbi5zbGljZSgpOltdKTt9dGhpcy50YWJsZS4kZW1pdCgnc2VsZWN0LWFsbCcsc2VsZWN0aW9uKTt9LHVwZGF0ZVNlbGVjdGlvbkJ5Um93S2V5OmZ1bmN0aW9uIHVwZGF0ZVNlbGVjdGlvbkJ5Um93S2V5KCl7dmFyIHN0YXRlcz10aGlzLnN0YXRlczt2YXIgc2VsZWN0aW9uPXN0YXRlcy5zZWxlY3Rpb24scm93S2V5PXN0YXRlcy5yb3dLZXksZGF0YT1zdGF0ZXMuZGF0YTt2YXIgc2VsZWN0ZWRNYXA9Z2V0S2V5c01hcChzZWxlY3Rpb24scm93S2V5KTtkYXRhLmZvckVhY2goZnVuY3Rpb24ocm93KXt2YXIgcm93SWQ9Z2V0Um93SWRlbnRpdHkocm93LHJvd0tleSk7dmFyIHJvd0luZm89c2VsZWN0ZWRNYXBbcm93SWRdO2lmKHJvd0luZm8pe3NlbGVjdGlvbltyb3dJbmZvLmluZGV4XT1yb3c7fX0pO30sdXBkYXRlQWxsU2VsZWN0ZWQ6ZnVuY3Rpb24gdXBkYXRlQWxsU2VsZWN0ZWQoKXt2YXIgc3RhdGVzPXRoaXMuc3RhdGVzO3ZhciBzZWxlY3Rpb249c3RhdGVzLnNlbGVjdGlvbixyb3dLZXk9c3RhdGVzLnJvd0tleSxzZWxlY3RhYmxlPXN0YXRlcy5zZWxlY3RhYmxlOy8vIGRhdGEg5Li6IG51bGwg5pe277yM6Kej5p6E5pe255qE6buY6K6k5YC85Lya6KKr5b+955WlCnZhciBkYXRhPXN0YXRlcy5kYXRhfHxbXTtpZihkYXRhLmxlbmd0aD09PTApe3N0YXRlcy5pc0FsbFNlbGVjdGVkPWZhbHNlO3JldHVybjt9dmFyIHNlbGVjdGVkTWFwPXZvaWQgMDtpZihyb3dLZXkpe3NlbGVjdGVkTWFwPWdldEtleXNNYXAoc2VsZWN0aW9uLHJvd0tleSk7fXZhciBpc1NlbGVjdGVkPWZ1bmN0aW9uIGlzU2VsZWN0ZWQocm93KXtpZihzZWxlY3RlZE1hcCl7cmV0dXJuISFzZWxlY3RlZE1hcFtnZXRSb3dJZGVudGl0eShyb3cscm93S2V5KV07fWVsc2V7cmV0dXJuIHNlbGVjdGlvbi5pbmRleE9mKHJvdykhPT0tMTt9fTt2YXIgaXNBbGxTZWxlY3RlZD10cnVlO3ZhciBzZWxlY3RlZENvdW50PTA7Zm9yKHZhciBpPTAsaj1kYXRhLmxlbmd0aDtpPGo7aSsrKXt2YXIgaXRlbT1kYXRhW2ldO3ZhciBpc1Jvd1NlbGVjdGFibGU9c2VsZWN0YWJsZSYmc2VsZWN0YWJsZS5jYWxsKG51bGwsaXRlbSxpKTtpZighaXNTZWxlY3RlZChpdGVtKSl7aWYoIXNlbGVjdGFibGV8fGlzUm93U2VsZWN0YWJsZSl7aXNBbGxTZWxlY3RlZD1mYWxzZTticmVhazt9fWVsc2V7c2VsZWN0ZWRDb3VudCsrO319aWYoc2VsZWN0ZWRDb3VudD09PTApaXNBbGxTZWxlY3RlZD1mYWxzZTtzdGF0ZXMuaXNBbGxTZWxlY3RlZD1pc0FsbFNlbGVjdGVkO30sLy8g6L+H5ruk5LiO5o6S5bqPCnVwZGF0ZUZpbHRlcnM6ZnVuY3Rpb24gdXBkYXRlRmlsdGVycyhjb2x1bW5zLHZhbHVlcyl7aWYoIUFycmF5LmlzQXJyYXkoY29sdW1ucykpe2NvbHVtbnM9W2NvbHVtbnNdO312YXIgc3RhdGVzPXRoaXMuc3RhdGVzO3ZhciBmaWx0ZXJzPXt9O2NvbHVtbnMuZm9yRWFjaChmdW5jdGlvbihjb2wpe3N0YXRlcy5maWx0ZXJzW2NvbC5pZF09dmFsdWVzO2ZpbHRlcnNbY29sLmNvbHVtbktleXx8Y29sLmlkXT12YWx1ZXM7fSk7cmV0dXJuIGZpbHRlcnM7fSx1cGRhdGVTb3J0OmZ1bmN0aW9uIHVwZGF0ZVNvcnQoY29sdW1uLHByb3Asb3JkZXIpe2lmKHRoaXMuc3RhdGVzLnNvcnRpbmdDb2x1bW4mJnRoaXMuc3RhdGVzLnNvcnRpbmdDb2x1bW4hPT1jb2x1bW4pe3RoaXMuc3RhdGVzLnNvcnRpbmdDb2x1bW4ub3JkZXI9bnVsbDt9dGhpcy5zdGF0ZXMuc29ydGluZ0NvbHVtbj1jb2x1bW47dGhpcy5zdGF0ZXMuc29ydFByb3A9cHJvcDt0aGlzLnN0YXRlcy5zb3J0T3JkZXI9b3JkZXI7fSxleGVjRmlsdGVyOmZ1bmN0aW9uIGV4ZWNGaWx0ZXIoKXt2YXIgX3RoaXM9dGhpczt2YXIgc3RhdGVzPXRoaXMuc3RhdGVzO3ZhciBfZGF0YT1zdGF0ZXMuX2RhdGEsZmlsdGVycz1zdGF0ZXMuZmlsdGVyczt2YXIgZGF0YT1fZGF0YTtPYmplY3Qua2V5cyhmaWx0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKGNvbHVtbklkKXt2YXIgdmFsdWVzPXN0YXRlcy5maWx0ZXJzW2NvbHVtbklkXTtpZighdmFsdWVzfHx2YWx1ZXMubGVuZ3RoPT09MClyZXR1cm47dmFyIGNvbHVtbj1nZXRDb2x1bW5CeUlkKF90aGlzLnN0YXRlcyxjb2x1bW5JZCk7aWYoY29sdW1uJiZjb2x1bW4uZmlsdGVyTWV0aG9kKXtkYXRhPWRhdGEuZmlsdGVyKGZ1bmN0aW9uKHJvdyl7cmV0dXJuIHZhbHVlcy5zb21lKGZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gY29sdW1uLmZpbHRlck1ldGhvZC5jYWxsKG51bGwsdmFsdWUscm93LGNvbHVtbik7fSk7fSk7fX0pO3N0YXRlcy5maWx0ZXJlZERhdGE9ZGF0YTt9LGV4ZWNTb3J0OmZ1bmN0aW9uIGV4ZWNTb3J0KCl7dmFyIHN0YXRlcz10aGlzLnN0YXRlcztzdGF0ZXMuZGF0YT13YXRjaGVyX3NvcnREYXRhKHN0YXRlcy5maWx0ZXJlZERhdGEsc3RhdGVzKTt9LC8vIOagueaNriBmaWx0ZXJzIOS4jiBzb3J0IOWOu+i/h+a7pCBkYXRhCmV4ZWNRdWVyeTpmdW5jdGlvbiBleGVjUXVlcnkoaWdub3JlKXtpZighKGlnbm9yZSYmaWdub3JlLmZpbHRlcikpe3RoaXMuZXhlY0ZpbHRlcigpO310aGlzLmV4ZWNTb3J0KCk7fSxjbGVhckZpbHRlcjpmdW5jdGlvbiBjbGVhckZpbHRlcihjb2x1bW5LZXlzKXt2YXIgc3RhdGVzPXRoaXMuc3RhdGVzO3ZhciBfdGFibGUkJHJlZnM9dGhpcy50YWJsZS4kcmVmcyx0YWJsZUhlYWRlcj1fdGFibGUkJHJlZnMudGFibGVIZWFkZXIsZml4ZWRUYWJsZUhlYWRlcj1fdGFibGUkJHJlZnMuZml4ZWRUYWJsZUhlYWRlcixyaWdodEZpeGVkVGFibGVIZWFkZXI9X3RhYmxlJCRyZWZzLnJpZ2h0Rml4ZWRUYWJsZUhlYWRlcjt2YXIgcGFuZWxzPXt9O2lmKHRhYmxlSGVhZGVyKXBhbmVscz1tZXJnZV9kZWZhdWx0KCkocGFuZWxzLHRhYmxlSGVhZGVyLmZpbHRlclBhbmVscyk7aWYoZml4ZWRUYWJsZUhlYWRlcilwYW5lbHM9bWVyZ2VfZGVmYXVsdCgpKHBhbmVscyxmaXhlZFRhYmxlSGVhZGVyLmZpbHRlclBhbmVscyk7aWYocmlnaHRGaXhlZFRhYmxlSGVhZGVyKXBhbmVscz1tZXJnZV9kZWZhdWx0KCkocGFuZWxzLHJpZ2h0Rml4ZWRUYWJsZUhlYWRlci5maWx0ZXJQYW5lbHMpO3ZhciBrZXlzPU9iamVjdC5rZXlzKHBhbmVscyk7aWYoIWtleXMubGVuZ3RoKXJldHVybjtpZih0eXBlb2YgY29sdW1uS2V5cz09PSdzdHJpbmcnKXtjb2x1bW5LZXlzPVtjb2x1bW5LZXlzXTt9aWYoQXJyYXkuaXNBcnJheShjb2x1bW5LZXlzKSl7dmFyIGNvbHVtbnM9Y29sdW1uS2V5cy5tYXAoZnVuY3Rpb24oa2V5KXtyZXR1cm4gZ2V0Q29sdW1uQnlLZXkoc3RhdGVzLGtleSk7fSk7a2V5cy5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7dmFyIGNvbHVtbj1jb2x1bW5zLmZpbmQoZnVuY3Rpb24oY29sKXtyZXR1cm4gY29sLmlkPT09a2V5O30pO2lmKGNvbHVtbil7Ly8gVE9ETzog5LyY5YyW6L+Z6YeM55qE5Luj56CBCnBhbmVsc1trZXldLmZpbHRlcmVkVmFsdWU9W107fX0pO3RoaXMuY29tbWl0KCdmaWx0ZXJDaGFuZ2UnLHtjb2x1bW46Y29sdW1ucyx2YWx1ZXM6W10sc2lsZW50OnRydWUsbXVsdGk6dHJ1ZX0pO31lbHNle2tleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpey8vIFRPRE86IOS8mOWMlui/memHjOeahOS7o+eggQpwYW5lbHNba2V5XS5maWx0ZXJlZFZhbHVlPVtdO30pO3N0YXRlcy5maWx0ZXJzPXt9O3RoaXMuY29tbWl0KCdmaWx0ZXJDaGFuZ2UnLHtjb2x1bW46e30sdmFsdWVzOltdLHNpbGVudDp0cnVlfSk7fX0sY2xlYXJTb3J0OmZ1bmN0aW9uIGNsZWFyU29ydCgpe3ZhciBzdGF0ZXM9dGhpcy5zdGF0ZXM7aWYoIXN0YXRlcy5zb3J0aW5nQ29sdW1uKXJldHVybjt0aGlzLnVwZGF0ZVNvcnQobnVsbCxudWxsLG51bGwpO3RoaXMuY29tbWl0KCdjaGFuZ2VTb3J0Q29uZGl0aW9uJyx7c2lsZW50OnRydWV9KTt9LC8vIOmAgumFjeWxgu+8jGV4cGFuZC1yb3cta2V5cyDlnKggRXhwYW5kIOS4jiBUcmVlVGFibGUg5Lit6YO95pyJ5L2/55SoCnNldEV4cGFuZFJvd0tleXNBZGFwdGVyOmZ1bmN0aW9uIHNldEV4cGFuZFJvd0tleXNBZGFwdGVyKHZhbCl7Ly8g6L+Z6YeM5Lya6Kem5Y+R6aKd5aSW55qE6K6h566X77yM5L2G5Li65LqG5YW85a655oCn77yM5pqC5pe26L+Z5LmI5YGaCnRoaXMuc2V0RXhwYW5kUm93S2V5cyh2YWwpO3RoaXMudXBkYXRlVHJlZUV4cGFuZEtleXModmFsKTt9LC8vIOWxleW8gOihjOS4jiBUcmVlVGFibGUg6YO96KaB5L2/55SoCnRvZ2dsZVJvd0V4cGFuc2lvbkFkYXB0ZXI6ZnVuY3Rpb24gdG9nZ2xlUm93RXhwYW5zaW9uQWRhcHRlcihyb3csZXhwYW5kZWQpe3ZhciBoYXNFeHBhbmRDb2x1bW49dGhpcy5zdGF0ZXMuY29sdW1ucy5zb21lKGZ1bmN0aW9uKF9yZWYpe3ZhciB0eXBlPV9yZWYudHlwZTtyZXR1cm4gdHlwZT09PSdleHBhbmQnO30pO2lmKGhhc0V4cGFuZENvbHVtbil7dGhpcy50b2dnbGVSb3dFeHBhbnNpb24ocm93LGV4cGFuZGVkKTt9ZWxzZXt0aGlzLnRvZ2dsZVRyZWVFeHBhbnNpb24ocm93LGV4cGFuZGVkKTt9fX19KTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYmxlL3NyYy9zdG9yZS9pbmRleC5qcwp3YXRjaGVyLnByb3RvdHlwZS5tdXRhdGlvbnM9e3NldERhdGE6ZnVuY3Rpb24gc2V0RGF0YShzdGF0ZXMsZGF0YSl7dmFyIGRhdGFJbnN0YW5jZUNoYW5nZWQ9c3RhdGVzLl9kYXRhIT09ZGF0YTtzdGF0ZXMuX2RhdGE9ZGF0YTt0aGlzLmV4ZWNRdWVyeSgpOy8vIOaVsOaNruWPmOWMlu+8jOabtOaWsOmDqOWIhuaVsOaNruOAggovLyDmsqHmnInkvb/nlKggY29tcHV0ZWTvvIzogIzmmK/miYvliqjmm7TmlrDpg6jliIbmlbDmja4gaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS9pc3N1ZXMvNjY2MCNpc3N1ZWNvbW1lbnQtMzMxNDE3MTQwCnRoaXMudXBkYXRlQ3VycmVudFJvd0RhdGEoKTt0aGlzLnVwZGF0ZUV4cGFuZFJvd3MoKTtpZihzdGF0ZXMucmVzZXJ2ZVNlbGVjdGlvbil7dGhpcy5hc3NlcnRSb3dLZXkoKTt0aGlzLnVwZGF0ZVNlbGVjdGlvbkJ5Um93S2V5KCk7fWVsc2V7aWYoZGF0YUluc3RhbmNlQ2hhbmdlZCl7dGhpcy5jbGVhclNlbGVjdGlvbigpO31lbHNle3RoaXMuY2xlYW5TZWxlY3Rpb24oKTt9fXRoaXMudXBkYXRlQWxsU2VsZWN0ZWQoKTt0aGlzLnVwZGF0ZVRhYmxlU2Nyb2xsWSgpO30saW5zZXJ0Q29sdW1uOmZ1bmN0aW9uIGluc2VydENvbHVtbihzdGF0ZXMsY29sdW1uLGluZGV4LHBhcmVudCl7dmFyIGFycmF5PXN0YXRlcy5fY29sdW1ucztpZihwYXJlbnQpe2FycmF5PXBhcmVudC5jaGlsZHJlbjtpZighYXJyYXkpYXJyYXk9cGFyZW50LmNoaWxkcmVuPVtdO31pZih0eXBlb2YgaW5kZXghPT0ndW5kZWZpbmVkJyl7YXJyYXkuc3BsaWNlKGluZGV4LDAsY29sdW1uKTt9ZWxzZXthcnJheS5wdXNoKGNvbHVtbik7fWlmKGNvbHVtbi50eXBlPT09J3NlbGVjdGlvbicpe3N0YXRlcy5zZWxlY3RhYmxlPWNvbHVtbi5zZWxlY3RhYmxlO3N0YXRlcy5yZXNlcnZlU2VsZWN0aW9uPWNvbHVtbi5yZXNlcnZlU2VsZWN0aW9uO31pZih0aGlzLnRhYmxlLiRyZWFkeSl7dGhpcy51cGRhdGVDb2x1bW5zKCk7Ly8gaGFjayBmb3IgZHluYW1pY3MgaW5zZXJ0IGNvbHVtbgp0aGlzLnNjaGVkdWxlTGF5b3V0KCk7fX0scmVtb3ZlQ29sdW1uOmZ1bmN0aW9uIHJlbW92ZUNvbHVtbihzdGF0ZXMsY29sdW1uLHBhcmVudCl7dmFyIGFycmF5PXN0YXRlcy5fY29sdW1ucztpZihwYXJlbnQpe2FycmF5PXBhcmVudC5jaGlsZHJlbjtpZighYXJyYXkpYXJyYXk9cGFyZW50LmNoaWxkcmVuPVtdO31pZihhcnJheSl7YXJyYXkuc3BsaWNlKGFycmF5LmluZGV4T2YoY29sdW1uKSwxKTt9aWYodGhpcy50YWJsZS4kcmVhZHkpe3RoaXMudXBkYXRlQ29sdW1ucygpOy8vIGhhY2sgZm9yIGR5bmFtaWNzIHJlbW92ZSBjb2x1bW4KdGhpcy5zY2hlZHVsZUxheW91dCgpO319LHNvcnQ6ZnVuY3Rpb24gc29ydChzdGF0ZXMsb3B0aW9ucyl7dmFyIHByb3A9b3B0aW9ucy5wcm9wLG9yZGVyPW9wdGlvbnMub3JkZXIsaW5pdD1vcHRpb25zLmluaXQ7aWYocHJvcCl7dmFyIGNvbHVtbj1PYmplY3QodXRpbF9bImFycmF5RmluZCJdKShzdGF0ZXMuY29sdW1ucyxmdW5jdGlvbihjb2x1bW4pe3JldHVybiBjb2x1bW4ucHJvcGVydHk9PT1wcm9wO30pO2lmKGNvbHVtbil7Y29sdW1uLm9yZGVyPW9yZGVyO3RoaXMudXBkYXRlU29ydChjb2x1bW4scHJvcCxvcmRlcik7dGhpcy5jb21taXQoJ2NoYW5nZVNvcnRDb25kaXRpb24nLHtpbml0OmluaXR9KTt9fX0sY2hhbmdlU29ydENvbmRpdGlvbjpmdW5jdGlvbiBjaGFuZ2VTb3J0Q29uZGl0aW9uKHN0YXRlcyxvcHRpb25zKXsvLyDkv67lpI0gcHIgaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudC9wdWxsLzE1MDEyIOWvvOiHtOeahCBidWcKdmFyIGNvbHVtbj1zdGF0ZXMuc29ydGluZ0NvbHVtbixwcm9wPXN0YXRlcy5zb3J0UHJvcCxvcmRlcj1zdGF0ZXMuc29ydE9yZGVyO2lmKG9yZGVyPT09bnVsbCl7c3RhdGVzLnNvcnRpbmdDb2x1bW49bnVsbDtzdGF0ZXMuc29ydFByb3A9bnVsbDt9dmFyIGluZ29yZT17ZmlsdGVyOnRydWV9O3RoaXMuZXhlY1F1ZXJ5KGluZ29yZSk7aWYoIW9wdGlvbnN8fCEob3B0aW9ucy5zaWxlbnR8fG9wdGlvbnMuaW5pdCkpe3RoaXMudGFibGUuJGVtaXQoJ3NvcnQtY2hhbmdlJyx7Y29sdW1uOmNvbHVtbixwcm9wOnByb3Asb3JkZXI6b3JkZXJ9KTt9dGhpcy51cGRhdGVUYWJsZVNjcm9sbFkoKTt9LGZpbHRlckNoYW5nZTpmdW5jdGlvbiBmaWx0ZXJDaGFuZ2Uoc3RhdGVzLG9wdGlvbnMpe3ZhciBjb2x1bW49b3B0aW9ucy5jb2x1bW4sdmFsdWVzPW9wdGlvbnMudmFsdWVzLHNpbGVudD1vcHRpb25zLnNpbGVudDt2YXIgbmV3RmlsdGVycz10aGlzLnVwZGF0ZUZpbHRlcnMoY29sdW1uLHZhbHVlcyk7dGhpcy5leGVjUXVlcnkoKTtpZighc2lsZW50KXt0aGlzLnRhYmxlLiRlbWl0KCdmaWx0ZXItY2hhbmdlJyxuZXdGaWx0ZXJzKTt9dGhpcy51cGRhdGVUYWJsZVNjcm9sbFkoKTt9LHRvZ2dsZUFsbFNlbGVjdGlvbjpmdW5jdGlvbiB0b2dnbGVBbGxTZWxlY3Rpb24oKXt0aGlzLnRvZ2dsZUFsbFNlbGVjdGlvbigpO30scm93U2VsZWN0ZWRDaGFuZ2VkOmZ1bmN0aW9uIHJvd1NlbGVjdGVkQ2hhbmdlZChzdGF0ZXMscm93KXt0aGlzLnRvZ2dsZVJvd1NlbGVjdGlvbihyb3cpO3RoaXMudXBkYXRlQWxsU2VsZWN0ZWQoKTt9LHNldEhvdmVyUm93OmZ1bmN0aW9uIHNldEhvdmVyUm93KHN0YXRlcyxyb3cpe3N0YXRlcy5ob3ZlclJvdz1yb3c7fSxzZXRDdXJyZW50Um93OmZ1bmN0aW9uIHNldEN1cnJlbnRSb3coc3RhdGVzLHJvdyl7dGhpcy51cGRhdGVDdXJyZW50Um93KHJvdyk7fX07d2F0Y2hlci5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKG5hbWUpe3ZhciBtdXRhdGlvbnM9dGhpcy5tdXRhdGlvbnM7aWYobXV0YXRpb25zW25hbWVdKXtmb3IodmFyIF9sZW49YXJndW1lbnRzLmxlbmd0aCxhcmdzPUFycmF5KF9sZW4+MT9fbGVuLTE6MCksX2tleT0xO19rZXk8X2xlbjtfa2V5Kyspe2FyZ3NbX2tleS0xXT1hcmd1bWVudHNbX2tleV07fW11dGF0aW9uc1tuYW1lXS5hcHBseSh0aGlzLFt0aGlzLnN0YXRlc10uY29uY2F0KGFyZ3MpKTt9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoJ0FjdGlvbiBub3QgZm91bmQ6ICcrbmFtZSk7fX07d2F0Y2hlci5wcm90b3R5cGUudXBkYXRlVGFibGVTY3JvbGxZPWZ1bmN0aW9uKCl7ZXh0ZXJuYWxfdnVlX2RlZmF1bHQuYS5uZXh0VGljayh0aGlzLnRhYmxlLnVwZGF0ZVNjcm9sbFkpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfc3RvcmU9d2F0Y2hlcjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYmxlL3NyYy9zdG9yZS9oZWxwZXIuanMKZnVuY3Rpb24gY3JlYXRlU3RvcmUodGFibGUpe3ZhciBpbml0aWFsU3RhdGU9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzFdOnt9O2lmKCF0YWJsZSl7dGhyb3cgbmV3IEVycm9yKCdUYWJsZSBpcyByZXF1aXJlZC4nKTt9dmFyIHN0b3JlPW5ldyBzcmNfc3RvcmUoKTtzdG9yZS50YWJsZT10YWJsZTsvLyBmaXggaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudC9pc3N1ZXMvMTQwNzUKLy8gcmVsYXRlZCBwciBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L3B1bGwvMTQxNDYKc3RvcmUudG9nZ2xlQWxsU2VsZWN0aW9uPWRlYm91bmNlX2RlZmF1bHQoKSgxMCxzdG9yZS5fdG9nZ2xlQWxsU2VsZWN0aW9uKTtPYmplY3Qua2V5cyhpbml0aWFsU3RhdGUpLmZvckVhY2goZnVuY3Rpb24oa2V5KXtzdG9yZS5zdGF0ZXNba2V5XT1pbml0aWFsU3RhdGVba2V5XTt9KTtyZXR1cm4gc3RvcmU7fWZ1bmN0aW9uIG1hcFN0YXRlcyhtYXBwZXIpe3ZhciByZXM9e307T2JqZWN0LmtleXMobWFwcGVyKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7dmFyIHZhbHVlPW1hcHBlcltrZXldO3ZhciBmbj12b2lkIDA7aWYodHlwZW9mIHZhbHVlPT09J3N0cmluZycpe2ZuPWZ1bmN0aW9uIGZuKCl7cmV0dXJuIHRoaXMuc3RvcmUuc3RhdGVzW3ZhbHVlXTt9O31lbHNlIGlmKHR5cGVvZiB2YWx1ZT09PSdmdW5jdGlvbicpe2ZuPWZ1bmN0aW9uIGZuKCl7cmV0dXJuIHZhbHVlLmNhbGwodGhpcyx0aGlzLnN0b3JlLnN0YXRlcyk7fTt9ZWxzZXtjb25zb2xlLmVycm9yKCdpbnZhbGlkIHZhbHVlIHR5cGUnKTt9aWYoZm4pe3Jlc1trZXldPWZuO319KTtyZXR1cm4gcmVzO307Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvdXRpbHMvc2Nyb2xsYmFyLXdpZHRoIgp2YXIgc2Nyb2xsYmFyX3dpZHRoXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDMwKTt2YXIgc2Nyb2xsYmFyX3dpZHRoX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihzY3JvbGxiYXJfd2lkdGhfKTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYmxlL3NyYy90YWJsZS1sYXlvdXQuanMKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTt9fXZhciB0YWJsZV9sYXlvdXRfVGFibGVMYXlvdXQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBUYWJsZUxheW91dChvcHRpb25zKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxUYWJsZUxheW91dCk7dGhpcy5vYnNlcnZlcnM9W107dGhpcy50YWJsZT1udWxsO3RoaXMuc3RvcmU9bnVsbDt0aGlzLmNvbHVtbnM9bnVsbDt0aGlzLmZpdD10cnVlO3RoaXMuc2hvd0hlYWRlcj10cnVlO3RoaXMuaGVpZ2h0PW51bGw7dGhpcy5zY3JvbGxYPWZhbHNlO3RoaXMuc2Nyb2xsWT1mYWxzZTt0aGlzLmJvZHlXaWR0aD1udWxsO3RoaXMuZml4ZWRXaWR0aD1udWxsO3RoaXMucmlnaHRGaXhlZFdpZHRoPW51bGw7dGhpcy50YWJsZUhlaWdodD1udWxsO3RoaXMuaGVhZGVySGVpZ2h0PTQ0Oy8vIFRhYmxlIEhlYWRlciBIZWlnaHQKdGhpcy5hcHBlbmRIZWlnaHQ9MDsvLyBBcHBlbmQgU2xvdCBIZWlnaHQKdGhpcy5mb290ZXJIZWlnaHQ9NDQ7Ly8gVGFibGUgRm9vdGVyIEhlaWdodAp0aGlzLnZpZXdwb3J0SGVpZ2h0PW51bGw7Ly8gVGFibGUgSGVpZ2h0IC0gU2Nyb2xsIEJhciBIZWlnaHQKdGhpcy5ib2R5SGVpZ2h0PW51bGw7Ly8gVGFibGUgSGVpZ2h0IC0gVGFibGUgSGVhZGVyIEhlaWdodAp0aGlzLmZpeGVkQm9keUhlaWdodD1udWxsOy8vIFRhYmxlIEhlaWdodCAtIFRhYmxlIEhlYWRlciBIZWlnaHQgLSBTY3JvbGwgQmFyIEhlaWdodAp0aGlzLmd1dHRlcldpZHRoPXNjcm9sbGJhcl93aWR0aF9kZWZhdWx0KCkoKTtmb3IodmFyIG5hbWUgaW4gb3B0aW9ucyl7aWYob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShuYW1lKSl7dGhpc1tuYW1lXT1vcHRpb25zW25hbWVdO319aWYoIXRoaXMudGFibGUpe3Rocm93IG5ldyBFcnJvcigndGFibGUgaXMgcmVxdWlyZWQgZm9yIFRhYmxlIExheW91dCcpO31pZighdGhpcy5zdG9yZSl7dGhyb3cgbmV3IEVycm9yKCdzdG9yZSBpcyByZXF1aXJlZCBmb3IgVGFibGUgTGF5b3V0Jyk7fX1UYWJsZUxheW91dC5wcm90b3R5cGUudXBkYXRlU2Nyb2xsWT1mdW5jdGlvbiB1cGRhdGVTY3JvbGxZKCl7dmFyIGhlaWdodD10aGlzLmhlaWdodDtpZihoZWlnaHQ9PT1udWxsKXJldHVybiBmYWxzZTt2YXIgYm9keVdyYXBwZXI9dGhpcy50YWJsZS5ib2R5V3JhcHBlcjtpZih0aGlzLnRhYmxlLiRlbCYmYm9keVdyYXBwZXIpe3ZhciBib2R5PWJvZHlXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJy5lbC10YWJsZV9fYm9keScpO3ZhciBwcmV2U2Nyb2xsWT10aGlzLnNjcm9sbFk7dmFyIHNjcm9sbFk9Ym9keS5vZmZzZXRIZWlnaHQ+dGhpcy5ib2R5SGVpZ2h0O3RoaXMuc2Nyb2xsWT1zY3JvbGxZO3JldHVybiBwcmV2U2Nyb2xsWSE9PXNjcm9sbFk7fXJldHVybiBmYWxzZTt9O1RhYmxlTGF5b3V0LnByb3RvdHlwZS5zZXRIZWlnaHQ9ZnVuY3Rpb24gc2V0SGVpZ2h0KHZhbHVlKXt2YXIgX3RoaXM9dGhpczt2YXIgcHJvcD1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMV06J2hlaWdodCc7aWYoZXh0ZXJuYWxfdnVlX2RlZmF1bHQuYS5wcm90b3R5cGUuJGlzU2VydmVyKXJldHVybjt2YXIgZWw9dGhpcy50YWJsZS4kZWw7dmFsdWU9cGFyc2VIZWlnaHQodmFsdWUpO3RoaXMuaGVpZ2h0PXZhbHVlO2lmKCFlbCYmKHZhbHVlfHx2YWx1ZT09PTApKXJldHVybiBleHRlcm5hbF92dWVfZGVmYXVsdC5hLm5leHRUaWNrKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLnNldEhlaWdodCh2YWx1ZSxwcm9wKTt9KTtpZih0eXBlb2YgdmFsdWU9PT0nbnVtYmVyJyl7ZWwuc3R5bGVbcHJvcF09dmFsdWUrJ3B4Jzt0aGlzLnVwZGF0ZUVsc0hlaWdodCgpO31lbHNlIGlmKHR5cGVvZiB2YWx1ZT09PSdzdHJpbmcnKXtlbC5zdHlsZVtwcm9wXT12YWx1ZTt0aGlzLnVwZGF0ZUVsc0hlaWdodCgpO319O1RhYmxlTGF5b3V0LnByb3RvdHlwZS5zZXRNYXhIZWlnaHQ9ZnVuY3Rpb24gc2V0TWF4SGVpZ2h0KHZhbHVlKXt0aGlzLnNldEhlaWdodCh2YWx1ZSwnbWF4LWhlaWdodCcpO307VGFibGVMYXlvdXQucHJvdG90eXBlLmdldEZsYXR0ZW5Db2x1bW5zPWZ1bmN0aW9uIGdldEZsYXR0ZW5Db2x1bW5zKCl7dmFyIGZsYXR0ZW5Db2x1bW5zPVtdO3ZhciBjb2x1bW5zPXRoaXMudGFibGUuY29sdW1ucztjb2x1bW5zLmZvckVhY2goZnVuY3Rpb24oY29sdW1uKXtpZihjb2x1bW4uaXNDb2x1bW5Hcm91cCl7ZmxhdHRlbkNvbHVtbnMucHVzaC5hcHBseShmbGF0dGVuQ29sdW1ucyxjb2x1bW4uY29sdW1ucyk7fWVsc2V7ZmxhdHRlbkNvbHVtbnMucHVzaChjb2x1bW4pO319KTtyZXR1cm4gZmxhdHRlbkNvbHVtbnM7fTtUYWJsZUxheW91dC5wcm90b3R5cGUudXBkYXRlRWxzSGVpZ2h0PWZ1bmN0aW9uIHVwZGF0ZUVsc0hlaWdodCgpe3ZhciBfdGhpczI9dGhpcztpZighdGhpcy50YWJsZS4kcmVhZHkpcmV0dXJuIGV4dGVybmFsX3Z1ZV9kZWZhdWx0LmEubmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMyLnVwZGF0ZUVsc0hlaWdodCgpO30pO3ZhciBfdGFibGUkJHJlZnM9dGhpcy50YWJsZS4kcmVmcyxoZWFkZXJXcmFwcGVyPV90YWJsZSQkcmVmcy5oZWFkZXJXcmFwcGVyLGFwcGVuZFdyYXBwZXI9X3RhYmxlJCRyZWZzLmFwcGVuZFdyYXBwZXIsZm9vdGVyV3JhcHBlcj1fdGFibGUkJHJlZnMuZm9vdGVyV3JhcHBlcjt0aGlzLmFwcGVuZEhlaWdodD1hcHBlbmRXcmFwcGVyP2FwcGVuZFdyYXBwZXIub2Zmc2V0SGVpZ2h0OjA7aWYodGhpcy5zaG93SGVhZGVyJiYhaGVhZGVyV3JhcHBlcilyZXR1cm47Ly8gZml4IGlzc3VlIChodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L3B1bGwvMTY5NTYpCnZhciBoZWFkZXJUckVsbT1oZWFkZXJXcmFwcGVyP2hlYWRlcldyYXBwZXIucXVlcnlTZWxlY3RvcignLmVsLXRhYmxlX19oZWFkZXIgdHInKTpudWxsO3ZhciBub25lSGVhZGVyPXRoaXMuaGVhZGVyRGlzcGxheU5vbmUoaGVhZGVyVHJFbG0pO3ZhciBoZWFkZXJIZWlnaHQ9dGhpcy5oZWFkZXJIZWlnaHQ9IXRoaXMuc2hvd0hlYWRlcj8wOmhlYWRlcldyYXBwZXIub2Zmc2V0SGVpZ2h0O2lmKHRoaXMuc2hvd0hlYWRlciYmIW5vbmVIZWFkZXImJmhlYWRlcldyYXBwZXIub2Zmc2V0V2lkdGg+MCYmKHRoaXMudGFibGUuY29sdW1uc3x8W10pLmxlbmd0aD4wJiZoZWFkZXJIZWlnaHQ8Mil7cmV0dXJuIGV4dGVybmFsX3Z1ZV9kZWZhdWx0LmEubmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMyLnVwZGF0ZUVsc0hlaWdodCgpO30pO312YXIgdGFibGVIZWlnaHQ9dGhpcy50YWJsZUhlaWdodD10aGlzLnRhYmxlLiRlbC5jbGllbnRIZWlnaHQ7dmFyIGZvb3RlckhlaWdodD10aGlzLmZvb3RlckhlaWdodD1mb290ZXJXcmFwcGVyP2Zvb3RlcldyYXBwZXIub2Zmc2V0SGVpZ2h0OjA7aWYodGhpcy5oZWlnaHQhPT1udWxsKXt0aGlzLmJvZHlIZWlnaHQ9dGFibGVIZWlnaHQtaGVhZGVySGVpZ2h0LWZvb3RlckhlaWdodCsoZm9vdGVyV3JhcHBlcj8xOjApO310aGlzLmZpeGVkQm9keUhlaWdodD10aGlzLnNjcm9sbFg/dGhpcy5ib2R5SGVpZ2h0LXRoaXMuZ3V0dGVyV2lkdGg6dGhpcy5ib2R5SGVpZ2h0O3ZhciBub0RhdGE9ISh0aGlzLnN0b3JlLnN0YXRlcy5kYXRhJiZ0aGlzLnN0b3JlLnN0YXRlcy5kYXRhLmxlbmd0aCk7dGhpcy52aWV3cG9ydEhlaWdodD10aGlzLnNjcm9sbFg/dGFibGVIZWlnaHQtKG5vRGF0YT8wOnRoaXMuZ3V0dGVyV2lkdGgpOnRhYmxlSGVpZ2h0O3RoaXMudXBkYXRlU2Nyb2xsWSgpO3RoaXMubm90aWZ5T2JzZXJ2ZXJzKCdzY3JvbGxhYmxlJyk7fTtUYWJsZUxheW91dC5wcm90b3R5cGUuaGVhZGVyRGlzcGxheU5vbmU9ZnVuY3Rpb24gaGVhZGVyRGlzcGxheU5vbmUoZWxtKXtpZighZWxtKXJldHVybiB0cnVlO3ZhciBoZWFkZXJDaGlsZD1lbG07d2hpbGUoaGVhZGVyQ2hpbGQudGFnTmFtZSE9PSdESVYnKXtpZihnZXRDb21wdXRlZFN0eWxlKGhlYWRlckNoaWxkKS5kaXNwbGF5PT09J25vbmUnKXtyZXR1cm4gdHJ1ZTt9aGVhZGVyQ2hpbGQ9aGVhZGVyQ2hpbGQucGFyZW50RWxlbWVudDt9cmV0dXJuIGZhbHNlO307VGFibGVMYXlvdXQucHJvdG90eXBlLnVwZGF0ZUNvbHVtbnNXaWR0aD1mdW5jdGlvbiB1cGRhdGVDb2x1bW5zV2lkdGgoKXtpZihleHRlcm5hbF92dWVfZGVmYXVsdC5hLnByb3RvdHlwZS4kaXNTZXJ2ZXIpcmV0dXJuO3ZhciBmaXQ9dGhpcy5maXQ7dmFyIGJvZHlXaWR0aD10aGlzLnRhYmxlLiRlbC5jbGllbnRXaWR0aDt2YXIgYm9keU1pbldpZHRoPTA7dmFyIGZsYXR0ZW5Db2x1bW5zPXRoaXMuZ2V0RmxhdHRlbkNvbHVtbnMoKTt2YXIgZmxleENvbHVtbnM9ZmxhdHRlbkNvbHVtbnMuZmlsdGVyKGZ1bmN0aW9uKGNvbHVtbil7cmV0dXJuIHR5cGVvZiBjb2x1bW4ud2lkdGghPT0nbnVtYmVyJzt9KTtmbGF0dGVuQ29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uKGNvbHVtbil7Ly8gQ2xlYW4gdGhvc2UgY29sdW1ucyB3aG9zZSB3aWR0aCBjaGFuZ2VkIGZyb20gZmxleCB0byB1bmZsZXgKaWYodHlwZW9mIGNvbHVtbi53aWR0aD09PSdudW1iZXInJiZjb2x1bW4ucmVhbFdpZHRoKWNvbHVtbi5yZWFsV2lkdGg9bnVsbDt9KTtpZihmbGV4Q29sdW1ucy5sZW5ndGg+MCYmZml0KXtmbGF0dGVuQ29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uKGNvbHVtbil7Ym9keU1pbldpZHRoKz1jb2x1bW4ud2lkdGh8fGNvbHVtbi5taW5XaWR0aHx8ODA7fSk7dmFyIHNjcm9sbFlXaWR0aD10aGlzLnNjcm9sbFk/dGhpcy5ndXR0ZXJXaWR0aDowO2lmKGJvZHlNaW5XaWR0aDw9Ym9keVdpZHRoLXNjcm9sbFlXaWR0aCl7Ly8gRE9OJ1QgSEFWRSBTQ1JPTEwgQkFSCnRoaXMuc2Nyb2xsWD1mYWxzZTt2YXIgdG90YWxGbGV4V2lkdGg9Ym9keVdpZHRoLXNjcm9sbFlXaWR0aC1ib2R5TWluV2lkdGg7aWYoZmxleENvbHVtbnMubGVuZ3RoPT09MSl7ZmxleENvbHVtbnNbMF0ucmVhbFdpZHRoPShmbGV4Q29sdW1uc1swXS5taW5XaWR0aHx8ODApK3RvdGFsRmxleFdpZHRoO31lbHNle3ZhciBhbGxDb2x1bW5zV2lkdGg9ZmxleENvbHVtbnMucmVkdWNlKGZ1bmN0aW9uKHByZXYsY29sdW1uKXtyZXR1cm4gcHJldisoY29sdW1uLm1pbldpZHRofHw4MCk7fSwwKTt2YXIgZmxleFdpZHRoUGVyUGl4ZWw9dG90YWxGbGV4V2lkdGgvYWxsQ29sdW1uc1dpZHRoO3ZhciBub25lRmlyc3RXaWR0aD0wO2ZsZXhDb2x1bW5zLmZvckVhY2goZnVuY3Rpb24oY29sdW1uLGluZGV4KXtpZihpbmRleD09PTApcmV0dXJuO3ZhciBmbGV4V2lkdGg9TWF0aC5mbG9vcigoY29sdW1uLm1pbldpZHRofHw4MCkqZmxleFdpZHRoUGVyUGl4ZWwpO25vbmVGaXJzdFdpZHRoKz1mbGV4V2lkdGg7Y29sdW1uLnJlYWxXaWR0aD0oY29sdW1uLm1pbldpZHRofHw4MCkrZmxleFdpZHRoO30pO2ZsZXhDb2x1bW5zWzBdLnJlYWxXaWR0aD0oZmxleENvbHVtbnNbMF0ubWluV2lkdGh8fDgwKSt0b3RhbEZsZXhXaWR0aC1ub25lRmlyc3RXaWR0aDt9fWVsc2V7Ly8gSEFWRSBIT1JJWk9OVEFMIFNDUk9MTCBCQVIKdGhpcy5zY3JvbGxYPXRydWU7ZmxleENvbHVtbnMuZm9yRWFjaChmdW5jdGlvbihjb2x1bW4pe2NvbHVtbi5yZWFsV2lkdGg9Y29sdW1uLm1pbldpZHRoO30pO310aGlzLmJvZHlXaWR0aD1NYXRoLm1heChib2R5TWluV2lkdGgsYm9keVdpZHRoKTt0aGlzLnRhYmxlLnJlc2l6ZVN0YXRlLndpZHRoPXRoaXMuYm9keVdpZHRoO31lbHNle2ZsYXR0ZW5Db2x1bW5zLmZvckVhY2goZnVuY3Rpb24oY29sdW1uKXtpZighY29sdW1uLndpZHRoJiYhY29sdW1uLm1pbldpZHRoKXtjb2x1bW4ucmVhbFdpZHRoPTgwO31lbHNle2NvbHVtbi5yZWFsV2lkdGg9Y29sdW1uLndpZHRofHxjb2x1bW4ubWluV2lkdGg7fWJvZHlNaW5XaWR0aCs9Y29sdW1uLnJlYWxXaWR0aDt9KTt0aGlzLnNjcm9sbFg9Ym9keU1pbldpZHRoPmJvZHlXaWR0aDt0aGlzLmJvZHlXaWR0aD1ib2R5TWluV2lkdGg7fXZhciBmaXhlZENvbHVtbnM9dGhpcy5zdG9yZS5zdGF0ZXMuZml4ZWRDb2x1bW5zO2lmKGZpeGVkQ29sdW1ucy5sZW5ndGg+MCl7dmFyIGZpeGVkV2lkdGg9MDtmaXhlZENvbHVtbnMuZm9yRWFjaChmdW5jdGlvbihjb2x1bW4pe2ZpeGVkV2lkdGgrPWNvbHVtbi5yZWFsV2lkdGh8fGNvbHVtbi53aWR0aDt9KTt0aGlzLmZpeGVkV2lkdGg9Zml4ZWRXaWR0aDt9dmFyIHJpZ2h0Rml4ZWRDb2x1bW5zPXRoaXMuc3RvcmUuc3RhdGVzLnJpZ2h0Rml4ZWRDb2x1bW5zO2lmKHJpZ2h0Rml4ZWRDb2x1bW5zLmxlbmd0aD4wKXt2YXIgcmlnaHRGaXhlZFdpZHRoPTA7cmlnaHRGaXhlZENvbHVtbnMuZm9yRWFjaChmdW5jdGlvbihjb2x1bW4pe3JpZ2h0Rml4ZWRXaWR0aCs9Y29sdW1uLnJlYWxXaWR0aHx8Y29sdW1uLndpZHRoO30pO3RoaXMucmlnaHRGaXhlZFdpZHRoPXJpZ2h0Rml4ZWRXaWR0aDt9dGhpcy5ub3RpZnlPYnNlcnZlcnMoJ2NvbHVtbnMnKTt9O1RhYmxlTGF5b3V0LnByb3RvdHlwZS5hZGRPYnNlcnZlcj1mdW5jdGlvbiBhZGRPYnNlcnZlcihvYnNlcnZlcil7dGhpcy5vYnNlcnZlcnMucHVzaChvYnNlcnZlcik7fTtUYWJsZUxheW91dC5wcm90b3R5cGUucmVtb3ZlT2JzZXJ2ZXI9ZnVuY3Rpb24gcmVtb3ZlT2JzZXJ2ZXIob2JzZXJ2ZXIpe3ZhciBpbmRleD10aGlzLm9ic2VydmVycy5pbmRleE9mKG9ic2VydmVyKTtpZihpbmRleCE9PS0xKXt0aGlzLm9ic2VydmVycy5zcGxpY2UoaW5kZXgsMSk7fX07VGFibGVMYXlvdXQucHJvdG90eXBlLm5vdGlmeU9ic2VydmVycz1mdW5jdGlvbiBub3RpZnlPYnNlcnZlcnMoZXZlbnQpe3ZhciBfdGhpczM9dGhpczt2YXIgb2JzZXJ2ZXJzPXRoaXMub2JzZXJ2ZXJzO29ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uKG9ic2VydmVyKXtzd2l0Y2goZXZlbnQpe2Nhc2UnY29sdW1ucyc6b2JzZXJ2ZXIub25Db2x1bW5zQ2hhbmdlKF90aGlzMyk7YnJlYWs7Y2FzZSdzY3JvbGxhYmxlJzpvYnNlcnZlci5vblNjcm9sbGFibGVDaGFuZ2UoX3RoaXMzKTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcignVGFibGUgTGF5b3V0IGRvblwndCBoYXZlIGV2ZW50ICcrZXZlbnQrJy4nKTt9fSk7fTtyZXR1cm4gVGFibGVMYXlvdXQ7fSgpOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGFibGVfbGF5b3V0PXRhYmxlX2xheW91dF9UYWJsZUxheW91dDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYmxlL3NyYy9sYXlvdXQtb2JzZXJ2ZXIuanMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBsYXlvdXRfb2JzZXJ2ZXI9e2NyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpe3RoaXMudGFibGVMYXlvdXQuYWRkT2JzZXJ2ZXIodGhpcyk7fSxkZXN0cm95ZWQ6ZnVuY3Rpb24gZGVzdHJveWVkKCl7dGhpcy50YWJsZUxheW91dC5yZW1vdmVPYnNlcnZlcih0aGlzKTt9LGNvbXB1dGVkOnt0YWJsZUxheW91dDpmdW5jdGlvbiB0YWJsZUxheW91dCgpe3ZhciBsYXlvdXQ9dGhpcy5sYXlvdXQ7aWYoIWxheW91dCYmdGhpcy50YWJsZSl7bGF5b3V0PXRoaXMudGFibGUubGF5b3V0O31pZighbGF5b3V0KXt0aHJvdyBuZXcgRXJyb3IoJ0NhbiBub3QgZmluZCB0YWJsZSBsYXlvdXQuJyk7fXJldHVybiBsYXlvdXQ7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy5vbkNvbHVtbnNDaGFuZ2UodGhpcy50YWJsZUxheW91dCk7dGhpcy5vblNjcm9sbGFibGVDaGFuZ2UodGhpcy50YWJsZUxheW91dCk7fSx1cGRhdGVkOmZ1bmN0aW9uIHVwZGF0ZWQoKXtpZih0aGlzLl9fdXBkYXRlZF9fKXJldHVybjt0aGlzLm9uQ29sdW1uc0NoYW5nZSh0aGlzLnRhYmxlTGF5b3V0KTt0aGlzLm9uU2Nyb2xsYWJsZUNoYW5nZSh0aGlzLnRhYmxlTGF5b3V0KTt0aGlzLl9fdXBkYXRlZF9fPXRydWU7fSxtZXRob2RzOntvbkNvbHVtbnNDaGFuZ2U6ZnVuY3Rpb24gb25Db2x1bW5zQ2hhbmdlKGxheW91dCl7dmFyIGNvbHM9dGhpcy4kZWwucXVlcnlTZWxlY3RvckFsbCgnY29sZ3JvdXAgPiBjb2wnKTtpZighY29scy5sZW5ndGgpcmV0dXJuO3ZhciBmbGF0dGVuQ29sdW1ucz1sYXlvdXQuZ2V0RmxhdHRlbkNvbHVtbnMoKTt2YXIgY29sdW1uc01hcD17fTtmbGF0dGVuQ29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uKGNvbHVtbil7Y29sdW1uc01hcFtjb2x1bW4uaWRdPWNvbHVtbjt9KTtmb3IodmFyIGk9MCxqPWNvbHMubGVuZ3RoO2k8ajtpKyspe3ZhciBjb2w9Y29sc1tpXTt2YXIgbmFtZT1jb2wuZ2V0QXR0cmlidXRlKCduYW1lJyk7dmFyIGNvbHVtbj1jb2x1bW5zTWFwW25hbWVdO2lmKGNvbHVtbil7Y29sLnNldEF0dHJpYnV0ZSgnd2lkdGgnLGNvbHVtbi5yZWFsV2lkdGh8fGNvbHVtbi53aWR0aCk7fX19LG9uU2Nyb2xsYWJsZUNoYW5nZTpmdW5jdGlvbiBvblNjcm9sbGFibGVDaGFuZ2UobGF5b3V0KXt2YXIgY29scz10aGlzLiRlbC5xdWVyeVNlbGVjdG9yQWxsKCdjb2xncm91cCA+IGNvbFtuYW1lPWd1dHRlcl0nKTtmb3IodmFyIGk9MCxqPWNvbHMubGVuZ3RoO2k8ajtpKyspe3ZhciBjb2w9Y29sc1tpXTtjb2wuc2V0QXR0cmlidXRlKCd3aWR0aCcsbGF5b3V0LnNjcm9sbFk/bGF5b3V0Lmd1dHRlcldpZHRoOicwJyk7fXZhciB0aHM9dGhpcy4kZWwucXVlcnlTZWxlY3RvckFsbCgndGguZ3V0dGVyJyk7Zm9yKHZhciBfaT0wLF9qPXRocy5sZW5ndGg7X2k8X2o7X2krKyl7dmFyIHRoPXRoc1tfaV07dGguc3R5bGUud2lkdGg9bGF5b3V0LnNjcm9sbFk/bGF5b3V0Lmd1dHRlcldpZHRoKydweCc6JzAnO3RoLnN0eWxlLmRpc3BsYXk9bGF5b3V0LnNjcm9sbFk/Jyc6J25vbmUnO319fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJsZS9zcmMvdGFibGUtYm9keS5qcwp2YXIgdGFibGVfYm9keV90eXBlb2Y9dHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJl90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcik9PT0ic3ltYm9sIj9mdW5jdGlvbihvYmope3JldHVybiBfdHlwZW9mMihvYmopO306ZnVuY3Rpb24ob2JqKXtyZXR1cm4gb2JqJiZ0eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmb2JqLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmohPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOl90eXBlb2YyKG9iaik7fTt2YXIgdGFibGVfYm9keV9leHRlbmRzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHRhcmdldCl7Zm9yKHZhciBpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7dmFyIHNvdXJjZT1hcmd1bWVudHNbaV07Zm9yKHZhciBrZXkgaW4gc291cmNlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLGtleSkpe3RhcmdldFtrZXldPXNvdXJjZVtrZXldO319fXJldHVybiB0YXJnZXQ7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRhYmxlX2JvZHk9e25hbWU6J0VsVGFibGVCb2R5JyxtaXhpbnM6W2xheW91dF9vYnNlcnZlcl0sY29tcG9uZW50czp7RWxDaGVja2JveDpjaGVja2JveF9kZWZhdWx0LmEsRWxUb29sdGlwOnRvb2x0aXBfZGVmYXVsdC5hfSxwcm9wczp7c3RvcmU6e3JlcXVpcmVkOnRydWV9LHN0cmlwZTpCb29sZWFuLGNvbnRleHQ6e30scm93Q2xhc3NOYW1lOltTdHJpbmcsRnVuY3Rpb25dLHJvd1N0eWxlOltPYmplY3QsRnVuY3Rpb25dLGZpeGVkOlN0cmluZyxoaWdobGlnaHQ6Qm9vbGVhbn0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX3RoaXM9dGhpczt2YXIgZGF0YT10aGlzLmRhdGF8fFtdO3JldHVybiBoKCd0YWJsZScseydjbGFzcyc6J2VsLXRhYmxlX19ib2R5JyxhdHRyczp7Y2VsbHNwYWNpbmc6JzAnLGNlbGxwYWRkaW5nOicwJyxib3JkZXI6JzAnfX0sW2goJ2NvbGdyb3VwJyxbdGhpcy5jb2x1bW5zLm1hcChmdW5jdGlvbihjb2x1bW4pe3JldHVybiBoKCdjb2wnLHthdHRyczp7bmFtZTpjb2x1bW4uaWR9LGtleTpjb2x1bW4uaWR9KTt9KV0pLGgoJ3Rib2R5JyxbZGF0YS5yZWR1Y2UoZnVuY3Rpb24oYWNjLHJvdyl7cmV0dXJuIGFjYy5jb25jYXQoX3RoaXMud3JhcHBlZFJvd1JlbmRlcihyb3csYWNjLmxlbmd0aCkpO30sW10pLGgoJ2VsLXRvb2x0aXAnLHthdHRyczp7ZWZmZWN0OnRoaXMudGFibGUudG9vbHRpcEVmZmVjdCxwbGFjZW1lbnQ6J3RvcCcsY29udGVudDp0aGlzLnRvb2x0aXBDb250ZW50fSxyZWY6J3Rvb2x0aXAnfSldKV0pO30sY29tcHV0ZWQ6dGFibGVfYm9keV9leHRlbmRzKHt0YWJsZTpmdW5jdGlvbiB0YWJsZSgpe3JldHVybiB0aGlzLiRwYXJlbnQ7fX0sbWFwU3RhdGVzKHtkYXRhOidkYXRhJyxjb2x1bW5zOidjb2x1bW5zJyx0cmVlSW5kZW50OidpbmRlbnQnLGxlZnRGaXhlZExlYWZDb3VudDonZml4ZWRMZWFmQ29sdW1uc0xlbmd0aCcscmlnaHRGaXhlZExlYWZDb3VudDoncmlnaHRGaXhlZExlYWZDb2x1bW5zTGVuZ3RoJyxjb2x1bW5zQ291bnQ6ZnVuY3Rpb24gY29sdW1uc0NvdW50KHN0YXRlcyl7cmV0dXJuIHN0YXRlcy5jb2x1bW5zLmxlbmd0aDt9LGxlZnRGaXhlZENvdW50OmZ1bmN0aW9uIGxlZnRGaXhlZENvdW50KHN0YXRlcyl7cmV0dXJuIHN0YXRlcy5maXhlZENvbHVtbnMubGVuZ3RoO30scmlnaHRGaXhlZENvdW50OmZ1bmN0aW9uIHJpZ2h0Rml4ZWRDb3VudChzdGF0ZXMpe3JldHVybiBzdGF0ZXMucmlnaHRGaXhlZENvbHVtbnMubGVuZ3RoO30saGFzRXhwYW5kQ29sdW1uOmZ1bmN0aW9uIGhhc0V4cGFuZENvbHVtbihzdGF0ZXMpe3JldHVybiBzdGF0ZXMuY29sdW1ucy5zb21lKGZ1bmN0aW9uKF9yZWYpe3ZhciB0eXBlPV9yZWYudHlwZTtyZXR1cm4gdHlwZT09PSdleHBhbmQnO30pO319KSx7Zmlyc3REZWZhdWx0Q29sdW1uSW5kZXg6ZnVuY3Rpb24gZmlyc3REZWZhdWx0Q29sdW1uSW5kZXgoKXtyZXR1cm4gT2JqZWN0KHV0aWxfWyJhcnJheUZpbmRJbmRleCJdKSh0aGlzLmNvbHVtbnMsZnVuY3Rpb24oX3JlZjIpe3ZhciB0eXBlPV9yZWYyLnR5cGU7cmV0dXJuIHR5cGU9PT0nZGVmYXVsdCc7fSk7fX0pLHdhdGNoOnsvLyBkb24ndCB0cmlnZ2VyIGdldHRlciBvZiBjdXJyZW50Um93IGluIGdldENlbGxDbGFzcy4gc2VlIGh0dHBzOi8vanNmaWRkbGUubmV0L29lMmI0aHF0LwovLyB1cGRhdGUgRE9NIG1hbnVhbGx5LiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudC9wdWxsLzEzOTU0L2ZpbGVzI2RpZmYtOWI0NTBjMDBkMGE5ZGVjMGZmYWQ1YTMxNzY5NzJlNDAKJ3N0b3JlLnN0YXRlcy5ob3ZlclJvdyc6ZnVuY3Rpb24gc3RvcmVTdGF0ZXNIb3ZlclJvdyhuZXdWYWwsb2xkVmFsKXt2YXIgX3RoaXMyPXRoaXM7aWYoIXRoaXMuc3RvcmUuc3RhdGVzLmlzQ29tcGxleHx8dGhpcy4kaXNTZXJ2ZXIpcmV0dXJuO3ZhciByYWY9d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZTtpZighcmFmKXtyYWY9ZnVuY3Rpb24gcmFmKGZuKXtyZXR1cm4gc2V0VGltZW91dChmbiwxNik7fTt9cmFmKGZ1bmN0aW9uKCl7dmFyIHJvd3M9X3RoaXMyLiRlbC5xdWVyeVNlbGVjdG9yQWxsKCcuZWwtdGFibGVfX3JvdycpO3ZhciBvbGRSb3c9cm93c1tvbGRWYWxdO3ZhciBuZXdSb3c9cm93c1tuZXdWYWxdO2lmKG9sZFJvdyl7T2JqZWN0KGRvbV9bInJlbW92ZUNsYXNzIl0pKG9sZFJvdywnaG92ZXItcm93Jyk7fWlmKG5ld1Jvdyl7T2JqZWN0KGRvbV9bImFkZENsYXNzIl0pKG5ld1JvdywnaG92ZXItcm93Jyk7fX0pO319LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnt0b29sdGlwQ29udGVudDonJ307fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt0aGlzLmFjdGl2YXRlVG9vbHRpcD1kZWJvdW5jZV9kZWZhdWx0KCkoNTAsZnVuY3Rpb24odG9vbHRpcCl7cmV0dXJuIHRvb2x0aXAuaGFuZGxlU2hvd1BvcHBlcigpO30pO30sbWV0aG9kczp7Z2V0S2V5T2ZSb3c6ZnVuY3Rpb24gZ2V0S2V5T2ZSb3cocm93LGluZGV4KXt2YXIgcm93S2V5PXRoaXMudGFibGUucm93S2V5O2lmKHJvd0tleSl7cmV0dXJuIGdldFJvd0lkZW50aXR5KHJvdyxyb3dLZXkpO31yZXR1cm4gaW5kZXg7fSxpc0NvbHVtbkhpZGRlbjpmdW5jdGlvbiBpc0NvbHVtbkhpZGRlbihpbmRleCl7aWYodGhpcy5maXhlZD09PXRydWV8fHRoaXMuZml4ZWQ9PT0nbGVmdCcpe3JldHVybiBpbmRleD49dGhpcy5sZWZ0Rml4ZWRMZWFmQ291bnQ7fWVsc2UgaWYodGhpcy5maXhlZD09PSdyaWdodCcpe3JldHVybiBpbmRleDx0aGlzLmNvbHVtbnNDb3VudC10aGlzLnJpZ2h0Rml4ZWRMZWFmQ291bnQ7fWVsc2V7cmV0dXJuIGluZGV4PHRoaXMubGVmdEZpeGVkTGVhZkNvdW50fHxpbmRleD49dGhpcy5jb2x1bW5zQ291bnQtdGhpcy5yaWdodEZpeGVkTGVhZkNvdW50O319LGdldFNwYW46ZnVuY3Rpb24gZ2V0U3Bhbihyb3csY29sdW1uLHJvd0luZGV4LGNvbHVtbkluZGV4KXt2YXIgcm93c3Bhbj0xO3ZhciBjb2xzcGFuPTE7dmFyIGZuPXRoaXMudGFibGUuc3Bhbk1ldGhvZDtpZih0eXBlb2YgZm49PT0nZnVuY3Rpb24nKXt2YXIgcmVzdWx0PWZuKHtyb3c6cm93LGNvbHVtbjpjb2x1bW4scm93SW5kZXg6cm93SW5kZXgsY29sdW1uSW5kZXg6Y29sdW1uSW5kZXh9KTtpZihBcnJheS5pc0FycmF5KHJlc3VsdCkpe3Jvd3NwYW49cmVzdWx0WzBdO2NvbHNwYW49cmVzdWx0WzFdO31lbHNlIGlmKCh0eXBlb2YgcmVzdWx0PT09J3VuZGVmaW5lZCc/J3VuZGVmaW5lZCc6dGFibGVfYm9keV90eXBlb2YocmVzdWx0KSk9PT0nb2JqZWN0Jyl7cm93c3Bhbj1yZXN1bHQucm93c3Bhbjtjb2xzcGFuPXJlc3VsdC5jb2xzcGFuO319cmV0dXJue3Jvd3NwYW46cm93c3Bhbixjb2xzcGFuOmNvbHNwYW59O30sZ2V0Um93U3R5bGU6ZnVuY3Rpb24gZ2V0Um93U3R5bGUocm93LHJvd0luZGV4KXt2YXIgcm93U3R5bGU9dGhpcy50YWJsZS5yb3dTdHlsZTtpZih0eXBlb2Ygcm93U3R5bGU9PT0nZnVuY3Rpb24nKXtyZXR1cm4gcm93U3R5bGUuY2FsbChudWxsLHtyb3c6cm93LHJvd0luZGV4OnJvd0luZGV4fSk7fXJldHVybiByb3dTdHlsZXx8bnVsbDt9LGdldFJvd0NsYXNzOmZ1bmN0aW9uIGdldFJvd0NsYXNzKHJvdyxyb3dJbmRleCl7dmFyIGNsYXNzZXM9WydlbC10YWJsZV9fcm93J107aWYodGhpcy50YWJsZS5oaWdobGlnaHRDdXJyZW50Um93JiZyb3c9PT10aGlzLnN0b3JlLnN0YXRlcy5jdXJyZW50Um93KXtjbGFzc2VzLnB1c2goJ2N1cnJlbnQtcm93Jyk7fWlmKHRoaXMuc3RyaXBlJiZyb3dJbmRleCUyPT09MSl7Y2xhc3Nlcy5wdXNoKCdlbC10YWJsZV9fcm93LS1zdHJpcGVkJyk7fXZhciByb3dDbGFzc05hbWU9dGhpcy50YWJsZS5yb3dDbGFzc05hbWU7aWYodHlwZW9mIHJvd0NsYXNzTmFtZT09PSdzdHJpbmcnKXtjbGFzc2VzLnB1c2gocm93Q2xhc3NOYW1lKTt9ZWxzZSBpZih0eXBlb2Ygcm93Q2xhc3NOYW1lPT09J2Z1bmN0aW9uJyl7Y2xhc3Nlcy5wdXNoKHJvd0NsYXNzTmFtZS5jYWxsKG51bGwse3Jvdzpyb3cscm93SW5kZXg6cm93SW5kZXh9KSk7fWlmKHRoaXMuc3RvcmUuc3RhdGVzLmV4cGFuZFJvd3MuaW5kZXhPZihyb3cpPi0xKXtjbGFzc2VzLnB1c2goJ2V4cGFuZGVkJyk7fXJldHVybiBjbGFzc2VzO30sZ2V0Q2VsbFN0eWxlOmZ1bmN0aW9uIGdldENlbGxTdHlsZShyb3dJbmRleCxjb2x1bW5JbmRleCxyb3csY29sdW1uKXt2YXIgY2VsbFN0eWxlPXRoaXMudGFibGUuY2VsbFN0eWxlO2lmKHR5cGVvZiBjZWxsU3R5bGU9PT0nZnVuY3Rpb24nKXtyZXR1cm4gY2VsbFN0eWxlLmNhbGwobnVsbCx7cm93SW5kZXg6cm93SW5kZXgsY29sdW1uSW5kZXg6Y29sdW1uSW5kZXgscm93OnJvdyxjb2x1bW46Y29sdW1ufSk7fXJldHVybiBjZWxsU3R5bGU7fSxnZXRDZWxsQ2xhc3M6ZnVuY3Rpb24gZ2V0Q2VsbENsYXNzKHJvd0luZGV4LGNvbHVtbkluZGV4LHJvdyxjb2x1bW4pe3ZhciBjbGFzc2VzPVtjb2x1bW4uaWQsY29sdW1uLmFsaWduLGNvbHVtbi5jbGFzc05hbWVdO2lmKHRoaXMuaXNDb2x1bW5IaWRkZW4oY29sdW1uSW5kZXgpKXtjbGFzc2VzLnB1c2goJ2lzLWhpZGRlbicpO312YXIgY2VsbENsYXNzTmFtZT10aGlzLnRhYmxlLmNlbGxDbGFzc05hbWU7aWYodHlwZW9mIGNlbGxDbGFzc05hbWU9PT0nc3RyaW5nJyl7Y2xhc3Nlcy5wdXNoKGNlbGxDbGFzc05hbWUpO31lbHNlIGlmKHR5cGVvZiBjZWxsQ2xhc3NOYW1lPT09J2Z1bmN0aW9uJyl7Y2xhc3Nlcy5wdXNoKGNlbGxDbGFzc05hbWUuY2FsbChudWxsLHtyb3dJbmRleDpyb3dJbmRleCxjb2x1bW5JbmRleDpjb2x1bW5JbmRleCxyb3c6cm93LGNvbHVtbjpjb2x1bW59KSk7fXJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTt9LGdldENvbHNwYW5SZWFsV2lkdGg6ZnVuY3Rpb24gZ2V0Q29sc3BhblJlYWxXaWR0aChjb2x1bW5zLGNvbHNwYW4saW5kZXgpe2lmKGNvbHNwYW48MSl7cmV0dXJuIGNvbHVtbnNbaW5kZXhdLnJlYWxXaWR0aDt9dmFyIHdpZHRoQXJyPWNvbHVtbnMubWFwKGZ1bmN0aW9uKF9yZWYzKXt2YXIgcmVhbFdpZHRoPV9yZWYzLnJlYWxXaWR0aDtyZXR1cm4gcmVhbFdpZHRoO30pLnNsaWNlKGluZGV4LGluZGV4K2NvbHNwYW4pO3JldHVybiB3aWR0aEFyci5yZWR1Y2UoZnVuY3Rpb24oYWNjLHdpZHRoKXtyZXR1cm4gYWNjK3dpZHRoO30sLTEpO30saGFuZGxlQ2VsbE1vdXNlRW50ZXI6ZnVuY3Rpb24gaGFuZGxlQ2VsbE1vdXNlRW50ZXIoZXZlbnQscm93KXt2YXIgdGFibGU9dGhpcy50YWJsZTt2YXIgY2VsbD1nZXRDZWxsKGV2ZW50KTtpZihjZWxsKXt2YXIgY29sdW1uPWdldENvbHVtbkJ5Q2VsbCh0YWJsZSxjZWxsKTt2YXIgaG92ZXJTdGF0ZT10YWJsZS5ob3ZlclN0YXRlPXtjZWxsOmNlbGwsY29sdW1uOmNvbHVtbixyb3c6cm93fTt0YWJsZS4kZW1pdCgnY2VsbC1tb3VzZS1lbnRlcicsaG92ZXJTdGF0ZS5yb3csaG92ZXJTdGF0ZS5jb2x1bW4saG92ZXJTdGF0ZS5jZWxsLGV2ZW50KTt9Ly8g5Yik5pat5piv5ZCmdGV4dC1vdmVyZmxvdywg5aaC5p6c5piv5bCx5pi+56S6dG9vbHRpcAp2YXIgY2VsbENoaWxkPWV2ZW50LnRhcmdldC5xdWVyeVNlbGVjdG9yKCcuY2VsbCcpO2lmKCEoT2JqZWN0KGRvbV9bImhhc0NsYXNzIl0pKGNlbGxDaGlsZCwnZWwtdG9vbHRpcCcpJiZjZWxsQ2hpbGQuY2hpbGROb2Rlcy5sZW5ndGgpKXtyZXR1cm47fS8vIHVzZSByYW5nZSB3aWR0aCBpbnN0ZWFkIG9mIHNjcm9sbFdpZHRoIHRvIGRldGVybWluZSB3aGV0aGVyIHRoZSB0ZXh0IGlzIG92ZXJmbG93aW5nCi8vIHRvIGFkZHJlc3MgYSBwb3RlbnRpYWwgRmlyZUZveCBidWc6IGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTEwNzQ1NDMjYzMKdmFyIHJhbmdlPWRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7cmFuZ2Uuc2V0U3RhcnQoY2VsbENoaWxkLDApO3JhbmdlLnNldEVuZChjZWxsQ2hpbGQsY2VsbENoaWxkLmNoaWxkTm9kZXMubGVuZ3RoKTt2YXIgcmFuZ2VXaWR0aD1yYW5nZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aDt2YXIgcGFkZGluZz0ocGFyc2VJbnQoT2JqZWN0KGRvbV9bImdldFN0eWxlIl0pKGNlbGxDaGlsZCwncGFkZGluZ0xlZnQnKSwxMCl8fDApKyhwYXJzZUludChPYmplY3QoZG9tX1siZ2V0U3R5bGUiXSkoY2VsbENoaWxkLCdwYWRkaW5nUmlnaHQnKSwxMCl8fDApO2lmKChyYW5nZVdpZHRoK3BhZGRpbmc+Y2VsbENoaWxkLm9mZnNldFdpZHRofHxjZWxsQ2hpbGQuc2Nyb2xsV2lkdGg+Y2VsbENoaWxkLm9mZnNldFdpZHRoKSYmdGhpcy4kcmVmcy50b29sdGlwKXt2YXIgdG9vbHRpcD10aGlzLiRyZWZzLnRvb2x0aXA7Ly8gVE9ETyDkvJrlvJXotbfmlbTkuKogVGFibGUg55qE6YeN5paw5riy5p+T77yM6ZyA6KaB5LyY5YyWCnRoaXMudG9vbHRpcENvbnRlbnQ9Y2VsbC5pbm5lclRleHR8fGNlbGwudGV4dENvbnRlbnQ7dG9vbHRpcC5yZWZlcmVuY2VFbG09Y2VsbDt0b29sdGlwLiRyZWZzLnBvcHBlciYmKHRvb2x0aXAuJHJlZnMucG9wcGVyLnN0eWxlLmRpc3BsYXk9J25vbmUnKTt0b29sdGlwLmRvRGVzdHJveSgpO3Rvb2x0aXAuc2V0RXhwZWN0ZWRTdGF0ZSh0cnVlKTt0aGlzLmFjdGl2YXRlVG9vbHRpcCh0b29sdGlwKTt9fSxoYW5kbGVDZWxsTW91c2VMZWF2ZTpmdW5jdGlvbiBoYW5kbGVDZWxsTW91c2VMZWF2ZShldmVudCl7dmFyIHRvb2x0aXA9dGhpcy4kcmVmcy50b29sdGlwO2lmKHRvb2x0aXApe3Rvb2x0aXAuc2V0RXhwZWN0ZWRTdGF0ZShmYWxzZSk7dG9vbHRpcC5oYW5kbGVDbG9zZVBvcHBlcigpO312YXIgY2VsbD1nZXRDZWxsKGV2ZW50KTtpZighY2VsbClyZXR1cm47dmFyIG9sZEhvdmVyU3RhdGU9dGhpcy50YWJsZS5ob3ZlclN0YXRlfHx7fTt0aGlzLnRhYmxlLiRlbWl0KCdjZWxsLW1vdXNlLWxlYXZlJyxvbGRIb3ZlclN0YXRlLnJvdyxvbGRIb3ZlclN0YXRlLmNvbHVtbixvbGRIb3ZlclN0YXRlLmNlbGwsZXZlbnQpO30saGFuZGxlTW91c2VFbnRlcjpkZWJvdW5jZV9kZWZhdWx0KCkoMzAsZnVuY3Rpb24oaW5kZXgpe3RoaXMuc3RvcmUuY29tbWl0KCdzZXRIb3ZlclJvdycsaW5kZXgpO30pLGhhbmRsZU1vdXNlTGVhdmU6ZGVib3VuY2VfZGVmYXVsdCgpKDMwLGZ1bmN0aW9uKCl7dGhpcy5zdG9yZS5jb21taXQoJ3NldEhvdmVyUm93JyxudWxsKTt9KSxoYW5kbGVDb250ZXh0TWVudTpmdW5jdGlvbiBoYW5kbGVDb250ZXh0TWVudShldmVudCxyb3cpe3RoaXMuaGFuZGxlRXZlbnQoZXZlbnQscm93LCdjb250ZXh0bWVudScpO30saGFuZGxlRG91YmxlQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlRG91YmxlQ2xpY2soZXZlbnQscm93KXt0aGlzLmhhbmRsZUV2ZW50KGV2ZW50LHJvdywnZGJsY2xpY2snKTt9LGhhbmRsZUNsaWNrOmZ1bmN0aW9uIGhhbmRsZUNsaWNrKGV2ZW50LHJvdyl7dGhpcy5zdG9yZS5jb21taXQoJ3NldEN1cnJlbnRSb3cnLHJvdyk7dGhpcy5oYW5kbGVFdmVudChldmVudCxyb3csJ2NsaWNrJyk7fSxoYW5kbGVFdmVudDpmdW5jdGlvbiBoYW5kbGVFdmVudChldmVudCxyb3csbmFtZSl7dmFyIHRhYmxlPXRoaXMudGFibGU7dmFyIGNlbGw9Z2V0Q2VsbChldmVudCk7dmFyIGNvbHVtbj12b2lkIDA7aWYoY2VsbCl7Y29sdW1uPWdldENvbHVtbkJ5Q2VsbCh0YWJsZSxjZWxsKTtpZihjb2x1bW4pe3RhYmxlLiRlbWl0KCdjZWxsLScrbmFtZSxyb3csY29sdW1uLGNlbGwsZXZlbnQpO319dGFibGUuJGVtaXQoJ3Jvdy0nK25hbWUscm93LGNvbHVtbixldmVudCk7fSxyb3dSZW5kZXI6ZnVuY3Rpb24gcm93UmVuZGVyKHJvdywkaW5kZXgsdHJlZVJvd0RhdGEpe3ZhciBfdGhpczM9dGhpczt2YXIgaD10aGlzLiRjcmVhdGVFbGVtZW50O3ZhciB0cmVlSW5kZW50PXRoaXMudHJlZUluZGVudCxjb2x1bW5zPXRoaXMuY29sdW1ucyxmaXJzdERlZmF1bHRDb2x1bW5JbmRleD10aGlzLmZpcnN0RGVmYXVsdENvbHVtbkluZGV4O3ZhciBjb2x1bW5zSGlkZGVuPWNvbHVtbnMubWFwKGZ1bmN0aW9uKGNvbHVtbixpbmRleCl7cmV0dXJuIF90aGlzMy5pc0NvbHVtbkhpZGRlbihpbmRleCk7fSk7dmFyIHJvd0NsYXNzZXM9dGhpcy5nZXRSb3dDbGFzcyhyb3csJGluZGV4KTt2YXIgZGlzcGxheT10cnVlO2lmKHRyZWVSb3dEYXRhKXtyb3dDbGFzc2VzLnB1c2goJ2VsLXRhYmxlX19yb3ctLWxldmVsLScrdHJlZVJvd0RhdGEubGV2ZWwpO2Rpc3BsYXk9dHJlZVJvd0RhdGEuZGlzcGxheTt9Ly8g5oyH5LukIHYtc2hvdyDkvJropobnm5Ygcm93LXN0eWxlIOS4rSBkaXNwbGF5Ci8vIOS9v+eUqCA6c3R5bGUg5Luj5pu/IHYtc2hvdyBodHRwczovL2dpdGh1Yi5jb20vRWxlbWVGRS9lbGVtZW50L2lzc3Vlcy8xNjk5NQp2YXIgZGlzcGxheVN0eWxlPWRpc3BsYXk/bnVsbDp7ZGlzcGxheTonbm9uZSd9O3JldHVybiBoKCd0cicse3N0eWxlOltkaXNwbGF5U3R5bGUsdGhpcy5nZXRSb3dTdHlsZShyb3csJGluZGV4KV0sJ2NsYXNzJzpyb3dDbGFzc2VzLGtleTp0aGlzLmdldEtleU9mUm93KHJvdywkaW5kZXgpLG9uOnsnZGJsY2xpY2snOmZ1bmN0aW9uIGRibGNsaWNrKCRldmVudCl7cmV0dXJuIF90aGlzMy5oYW5kbGVEb3VibGVDbGljaygkZXZlbnQscm93KTt9LCdjbGljayc6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtyZXR1cm4gX3RoaXMzLmhhbmRsZUNsaWNrKCRldmVudCxyb3cpO30sJ2NvbnRleHRtZW51JzpmdW5jdGlvbiBjb250ZXh0bWVudSgkZXZlbnQpe3JldHVybiBfdGhpczMuaGFuZGxlQ29udGV4dE1lbnUoJGV2ZW50LHJvdyk7fSwnbW91c2VlbnRlcic6ZnVuY3Rpb24gbW91c2VlbnRlcihfKXtyZXR1cm4gX3RoaXMzLmhhbmRsZU1vdXNlRW50ZXIoJGluZGV4KTt9LCdtb3VzZWxlYXZlJzp0aGlzLmhhbmRsZU1vdXNlTGVhdmV9fSxbY29sdW1ucy5tYXAoZnVuY3Rpb24oY29sdW1uLGNlbGxJbmRleCl7dmFyIF9nZXRTcGFuPV90aGlzMy5nZXRTcGFuKHJvdyxjb2x1bW4sJGluZGV4LGNlbGxJbmRleCkscm93c3Bhbj1fZ2V0U3Bhbi5yb3dzcGFuLGNvbHNwYW49X2dldFNwYW4uY29sc3BhbjtpZighcm93c3Bhbnx8IWNvbHNwYW4pe3JldHVybiBudWxsO312YXIgY29sdW1uRGF0YT10YWJsZV9ib2R5X2V4dGVuZHMoe30sY29sdW1uKTtjb2x1bW5EYXRhLnJlYWxXaWR0aD1fdGhpczMuZ2V0Q29sc3BhblJlYWxXaWR0aChjb2x1bW5zLGNvbHNwYW4sY2VsbEluZGV4KTt2YXIgZGF0YT17c3RvcmU6X3RoaXMzLnN0b3JlLF9zZWxmOl90aGlzMy5jb250ZXh0fHxfdGhpczMudGFibGUuJHZub2RlLmNvbnRleHQsY29sdW1uOmNvbHVtbkRhdGEscm93OnJvdywkaW5kZXg6JGluZGV4fTtpZihjZWxsSW5kZXg9PT1maXJzdERlZmF1bHRDb2x1bW5JbmRleCYmdHJlZVJvd0RhdGEpe2RhdGEudHJlZU5vZGU9e2luZGVudDp0cmVlUm93RGF0YS5sZXZlbCp0cmVlSW5kZW50LGxldmVsOnRyZWVSb3dEYXRhLmxldmVsfTtpZih0eXBlb2YgdHJlZVJvd0RhdGEuZXhwYW5kZWQ9PT0nYm9vbGVhbicpe2RhdGEudHJlZU5vZGUuZXhwYW5kZWQ9dHJlZVJvd0RhdGEuZXhwYW5kZWQ7Ly8g6KGo5piO5piv5oeS5Yqg6L29CmlmKCdsb2FkaW5nJ2luIHRyZWVSb3dEYXRhKXtkYXRhLnRyZWVOb2RlLmxvYWRpbmc9dHJlZVJvd0RhdGEubG9hZGluZzt9aWYoJ25vTGF6eUNoaWxkcmVuJ2luIHRyZWVSb3dEYXRhKXtkYXRhLnRyZWVOb2RlLm5vTGF6eUNoaWxkcmVuPXRyZWVSb3dEYXRhLm5vTGF6eUNoaWxkcmVuO319fXJldHVybiBoKCd0ZCcse3N0eWxlOl90aGlzMy5nZXRDZWxsU3R5bGUoJGluZGV4LGNlbGxJbmRleCxyb3csY29sdW1uKSwnY2xhc3MnOl90aGlzMy5nZXRDZWxsQ2xhc3MoJGluZGV4LGNlbGxJbmRleCxyb3csY29sdW1uKSxhdHRyczp7cm93c3Bhbjpyb3dzcGFuLGNvbHNwYW46Y29sc3Bhbn0sb246eydtb3VzZWVudGVyJzpmdW5jdGlvbiBtb3VzZWVudGVyKCRldmVudCl7cmV0dXJuIF90aGlzMy5oYW5kbGVDZWxsTW91c2VFbnRlcigkZXZlbnQscm93KTt9LCdtb3VzZWxlYXZlJzpfdGhpczMuaGFuZGxlQ2VsbE1vdXNlTGVhdmV9fSxbY29sdW1uLnJlbmRlckNlbGwuY2FsbChfdGhpczMuX3JlbmRlclByb3h5LF90aGlzMy4kY3JlYXRlRWxlbWVudCxkYXRhLGNvbHVtbnNIaWRkZW5bY2VsbEluZGV4XSldKTt9KV0pO30sd3JhcHBlZFJvd1JlbmRlcjpmdW5jdGlvbiB3cmFwcGVkUm93UmVuZGVyKHJvdywkaW5kZXgpe3ZhciBfdGhpczQ9dGhpczt2YXIgaD10aGlzLiRjcmVhdGVFbGVtZW50O3ZhciBzdG9yZT10aGlzLnN0b3JlO3ZhciBpc1Jvd0V4cGFuZGVkPXN0b3JlLmlzUm93RXhwYW5kZWQsYXNzZXJ0Um93S2V5PXN0b3JlLmFzc2VydFJvd0tleTt2YXIgX3N0b3JlJHN0YXRlcz1zdG9yZS5zdGF0ZXMsdHJlZURhdGE9X3N0b3JlJHN0YXRlcy50cmVlRGF0YSxsYXp5VHJlZU5vZGVNYXA9X3N0b3JlJHN0YXRlcy5sYXp5VHJlZU5vZGVNYXAsY2hpbGRyZW5Db2x1bW5OYW1lPV9zdG9yZSRzdGF0ZXMuY2hpbGRyZW5Db2x1bW5OYW1lLHJvd0tleT1fc3RvcmUkc3RhdGVzLnJvd0tleTtpZih0aGlzLmhhc0V4cGFuZENvbHVtbiYmaXNSb3dFeHBhbmRlZChyb3cpKXt2YXIgcmVuZGVyRXhwYW5kZWQ9dGhpcy50YWJsZS5yZW5kZXJFeHBhbmRlZDt2YXIgdHI9dGhpcy5yb3dSZW5kZXIocm93LCRpbmRleCk7aWYoIXJlbmRlckV4cGFuZGVkKXtjb25zb2xlLmVycm9yKCdbRWxlbWVudCBFcnJvcl1yZW5kZXJFeHBhbmRlZCBpcyByZXF1aXJlZC4nKTtyZXR1cm4gdHI7fS8vIOS9v+eUqOS6jOe7tOaVsOe7hO+8jOmBv+WFjeS/ruaUuSAkaW5kZXgKcmV0dXJuW1t0cixoKCd0cicse2tleTonZXhwYW5kZWQtcm93X18nK3RyLmtleX0sW2goJ3RkJyx7YXR0cnM6e2NvbHNwYW46dGhpcy5jb2x1bW5zQ291bnR9LCdjbGFzcyc6J2VsLXRhYmxlX19leHBhbmRlZC1jZWxsJ30sW3JlbmRlckV4cGFuZGVkKHRoaXMuJGNyZWF0ZUVsZW1lbnQse3Jvdzpyb3csJGluZGV4OiRpbmRleCxzdG9yZTp0aGlzLnN0b3JlfSldKV0pXV07fWVsc2UgaWYoT2JqZWN0LmtleXModHJlZURhdGEpLmxlbmd0aCl7YXNzZXJ0Um93S2V5KCk7Ly8gVHJlZVRhYmxlIOaXtu+8jHJvd0tleSDlv4XpobvnlLHnlKjmiLforr7lrprvvIzkuI3kvb/nlKggZ2V0S2V5T2ZSb3cg6K6h566XCi8vIOWcqOiwg+eUqCByb3dSZW5kZXIg5Ye95pWw5pe277yM5LuN54S25Lya6K6h566XIHJvd0tlee+8jOS4jeWkquWlveeahOaTjeS9nAp2YXIga2V5PWdldFJvd0lkZW50aXR5KHJvdyxyb3dLZXkpO3ZhciBjdXI9dHJlZURhdGFba2V5XTt2YXIgdHJlZVJvd0RhdGE9bnVsbDtpZihjdXIpe3RyZWVSb3dEYXRhPXtleHBhbmRlZDpjdXIuZXhwYW5kZWQsbGV2ZWw6Y3VyLmxldmVsLGRpc3BsYXk6dHJ1ZX07aWYodHlwZW9mIGN1ci5sYXp5PT09J2Jvb2xlYW4nKXtpZih0eXBlb2YgY3VyLmxvYWRlZD09PSdib29sZWFuJyYmY3VyLmxvYWRlZCl7dHJlZVJvd0RhdGEubm9MYXp5Q2hpbGRyZW49IShjdXIuY2hpbGRyZW4mJmN1ci5jaGlsZHJlbi5sZW5ndGgpO310cmVlUm93RGF0YS5sb2FkaW5nPWN1ci5sb2FkaW5nO319dmFyIHRtcD1bdGhpcy5yb3dSZW5kZXIocm93LCRpbmRleCx0cmVlUm93RGF0YSldOy8vIOa4suafk+W1jOWll+aVsOaNrgppZihjdXIpey8vIGN1cnJlbnRSb3cg6K6w5b2V55qE5pivIGluZGV477yM5omA5Lul6L+Y6ZyA5Li75Yqo5aKe5YqgIFRyZWVUYWJsZSDnmoQgaW5kZXgKdmFyIGk9MDt2YXIgdHJhdmVyc2U9ZnVuY3Rpb24gdHJhdmVyc2UoY2hpbGRyZW4scGFyZW50KXtpZighKGNoaWxkcmVuJiZjaGlsZHJlbi5sZW5ndGgmJnBhcmVudCkpcmV0dXJuO2NoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24obm9kZSl7Ly8g54i26IqC54K555qEIGRpc3BsYXkg54q25oCB5b2x5ZON5a2Q6IqC54K555qE5pi+56S654q25oCBCnZhciBpbm5lclRyZWVSb3dEYXRhPXtkaXNwbGF5OnBhcmVudC5kaXNwbGF5JiZwYXJlbnQuZXhwYW5kZWQsbGV2ZWw6cGFyZW50LmxldmVsKzF9O3ZhciBjaGlsZEtleT1nZXRSb3dJZGVudGl0eShub2RlLHJvd0tleSk7aWYoY2hpbGRLZXk9PT11bmRlZmluZWR8fGNoaWxkS2V5PT09bnVsbCl7dGhyb3cgbmV3IEVycm9yKCdmb3IgbmVzdGVkIGRhdGEgaXRlbSwgcm93LWtleSBpcyByZXF1aXJlZC4nKTt9Y3VyPXRhYmxlX2JvZHlfZXh0ZW5kcyh7fSx0cmVlRGF0YVtjaGlsZEtleV0pOy8vIOWvueS6juW9k+WJjeiKgueCue+8jOWIhuaIkOacieaXoOWtkOiKgueCueS4pOenjeaDheWGteOAggovLyDlpoLmnpzljIXlkKvlrZDoioLngrnnmoTvvIzorr7nva4gZXhwYW5kZWQg5bGe5oCn44CCCi8vIOWvueS6juWug+WtkOiKgueCueeahCBkaXNwbGF5IOWxnuaAp+eUseWug+acrOi6q+eahCBleHBhbmRlZCDkuI4gZGlzcGxheSDlhbHlkIzlhrPlrprjgIIKaWYoY3VyKXtpbm5lclRyZWVSb3dEYXRhLmV4cGFuZGVkPWN1ci5leHBhbmRlZDsvLyDmh5LliqDovb3nmoTmn5DkupvoioLngrnvvIxsZXZlbCDmnKrnn6UKY3VyLmxldmVsPWN1ci5sZXZlbHx8aW5uZXJUcmVlUm93RGF0YS5sZXZlbDtjdXIuZGlzcGxheT0hIShjdXIuZXhwYW5kZWQmJmlubmVyVHJlZVJvd0RhdGEuZGlzcGxheSk7aWYodHlwZW9mIGN1ci5sYXp5PT09J2Jvb2xlYW4nKXtpZih0eXBlb2YgY3VyLmxvYWRlZD09PSdib29sZWFuJyYmY3VyLmxvYWRlZCl7aW5uZXJUcmVlUm93RGF0YS5ub0xhenlDaGlsZHJlbj0hKGN1ci5jaGlsZHJlbiYmY3VyLmNoaWxkcmVuLmxlbmd0aCk7fWlubmVyVHJlZVJvd0RhdGEubG9hZGluZz1jdXIubG9hZGluZzt9fWkrKzt0bXAucHVzaChfdGhpczQucm93UmVuZGVyKG5vZGUsJGluZGV4K2ksaW5uZXJUcmVlUm93RGF0YSkpO2lmKGN1cil7dmFyIF9ub2Rlcz1sYXp5VHJlZU5vZGVNYXBbY2hpbGRLZXldfHxub2RlW2NoaWxkcmVuQ29sdW1uTmFtZV07dHJhdmVyc2UoX25vZGVzLGN1cik7fX0pO307Ly8g5a+55LqOIHJvb3Qg6IqC54K577yMZGlzcGxheSDkuIDlrprkuLogdHJ1ZQpjdXIuZGlzcGxheT10cnVlO3ZhciBub2Rlcz1sYXp5VHJlZU5vZGVNYXBba2V5XXx8cm93W2NoaWxkcmVuQ29sdW1uTmFtZV07dHJhdmVyc2Uobm9kZXMsY3VyKTt9cmV0dXJuIHRtcDt9ZWxzZXtyZXR1cm4gdGhpcy5yb3dSZW5kZXIocm93LCRpbmRleCk7fX19fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RhYmxlL3NyYy9maWx0ZXItcGFuZWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdmMmM5MTlmJgp2YXIgZmlsdGVyX3BhbmVsdnVlX3R5cGVfdGVtcGxhdGVfaWRfN2YyYzkxOWZfcmVuZGVyPWZ1bmN0aW9uIGZpbHRlcl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdmMmM5MTlmX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidHJhbnNpdGlvbiIse2F0dHJzOntuYW1lOiJlbC16b29tLWluLXRvcCJ9fSxbX3ZtLm11bHRpcGxlP19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToiY2xpY2tvdXRzaWRlIixyYXdOYW1lOiJ2LWNsaWNrb3V0c2lkZSIsdmFsdWU6X3ZtLmhhbmRsZU91dHNpZGVDbGljayxleHByZXNzaW9uOiJoYW5kbGVPdXRzaWRlQ2xpY2sifSx7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0uc2hvd1BvcHBlcixleHByZXNzaW9uOiJzaG93UG9wcGVyIn1dLHN0YXRpY0NsYXNzOiJlbC10YWJsZS1maWx0ZXIifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10YWJsZS1maWx0ZXJfX2NvbnRlbnQifSxbX2MoImVsLXNjcm9sbGJhciIse2F0dHJzOnsid3JhcC1jbGFzcyI6ImVsLXRhYmxlLWZpbHRlcl9fd3JhcCJ9fSxbX2MoImVsLWNoZWNrYm94LWdyb3VwIix7c3RhdGljQ2xhc3M6ImVsLXRhYmxlLWZpbHRlcl9fY2hlY2tib3gtZ3JvdXAiLG1vZGVsOnt2YWx1ZTpfdm0uZmlsdGVyZWRWYWx1ZSxjYWxsYmFjazpmdW5jdGlvbiBjYWxsYmFjaygkJHYpe192bS5maWx0ZXJlZFZhbHVlPSQkdjt9LGV4cHJlc3Npb246ImZpbHRlcmVkVmFsdWUifX0sX3ZtLl9sKF92bS5maWx0ZXJzLGZ1bmN0aW9uKGZpbHRlcil7cmV0dXJuIF9jKCJlbC1jaGVja2JveCIse2tleTpmaWx0ZXIudmFsdWUsYXR0cnM6e2xhYmVsOmZpbHRlci52YWx1ZX19LFtfdm0uX3YoX3ZtLl9zKGZpbHRlci50ZXh0KSldKTt9KSwxKV0sMSldLDEpLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdGFibGUtZmlsdGVyX19ib3R0b20ifSxbX2MoImJ1dHRvbiIse2NsYXNzOnsiaXMtZGlzYWJsZWQiOl92bS5maWx0ZXJlZFZhbHVlLmxlbmd0aD09PTB9LGF0dHJzOntkaXNhYmxlZDpfdm0uZmlsdGVyZWRWYWx1ZS5sZW5ndGg9PT0wfSxvbjp7Y2xpY2s6X3ZtLmhhbmRsZUNvbmZpcm19fSxbX3ZtLl92KF92bS5fcyhfdm0udCgiZWwudGFibGUuY29uZmlybUZpbHRlciIpKSldKSxfYygiYnV0dG9uIix7b246e2NsaWNrOl92bS5oYW5kbGVSZXNldH19LFtfdm0uX3YoX3ZtLl9zKF92bS50KCJlbC50YWJsZS5yZXNldEZpbHRlciIpKSldKV0pXSk6X2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJjbGlja291dHNpZGUiLHJhd05hbWU6InYtY2xpY2tvdXRzaWRlIix2YWx1ZTpfdm0uaGFuZGxlT3V0c2lkZUNsaWNrLGV4cHJlc3Npb246ImhhbmRsZU91dHNpZGVDbGljayJ9LHtuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5zaG93UG9wcGVyLGV4cHJlc3Npb246InNob3dQb3BwZXIifV0sc3RhdGljQ2xhc3M6ImVsLXRhYmxlLWZpbHRlciJ9LFtfYygidWwiLHtzdGF0aWNDbGFzczoiZWwtdGFibGUtZmlsdGVyX19saXN0In0sW19jKCJsaSIse3N0YXRpY0NsYXNzOiJlbC10YWJsZS1maWx0ZXJfX2xpc3QtaXRlbSIsY2xhc3M6eyJpcy1hY3RpdmUiOl92bS5maWx0ZXJWYWx1ZT09PXVuZGVmaW5lZHx8X3ZtLmZpbHRlclZhbHVlPT09bnVsbH0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLmhhbmRsZVNlbGVjdChudWxsKTt9fX0sW192bS5fdihfdm0uX3MoX3ZtLnQoImVsLnRhYmxlLmNsZWFyRmlsdGVyIikpKV0pLF92bS5fbChfdm0uZmlsdGVycyxmdW5jdGlvbihmaWx0ZXIpe3JldHVybiBfYygibGkiLHtrZXk6ZmlsdGVyLnZhbHVlLHN0YXRpY0NsYXNzOiJlbC10YWJsZS1maWx0ZXJfX2xpc3QtaXRlbSIsY2xhc3M6eyJpcy1hY3RpdmUiOl92bS5pc0FjdGl2ZShmaWx0ZXIpfSxhdHRyczp7bGFiZWw6ZmlsdGVyLnZhbHVlfSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtfdm0uaGFuZGxlU2VsZWN0KGZpbHRlci52YWx1ZSk7fX19LFtfdm0uX3YoX3ZtLl9zKGZpbHRlci50ZXh0KSldKTt9KV0sMildKV0pO307dmFyIGZpbHRlcl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdmMmM5MTlmX3N0YXRpY1JlbmRlckZucz1bXTtmaWx0ZXJfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF83ZjJjOTE5Zl9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFibGUvc3JjL2ZpbHRlci1wYW5lbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2YyYzkxOWYmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFibGUvc3JjL2Ryb3Bkb3duLmpzCnZhciBkcm9wZG93bnM9W107IWV4dGVybmFsX3Z1ZV9kZWZhdWx0LmEucHJvdG90eXBlLiRpc1NlcnZlciYmZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLGZ1bmN0aW9uKGV2ZW50KXtkcm9wZG93bnMuZm9yRWFjaChmdW5jdGlvbihkcm9wZG93bil7dmFyIHRhcmdldD1ldmVudC50YXJnZXQ7aWYoIWRyb3Bkb3dufHwhZHJvcGRvd24uJGVsKXJldHVybjtpZih0YXJnZXQ9PT1kcm9wZG93bi4kZWx8fGRyb3Bkb3duLiRlbC5jb250YWlucyh0YXJnZXQpKXtyZXR1cm47fWRyb3Bkb3duLmhhbmRsZU91dHNpZGVDbGljayYmZHJvcGRvd24uaGFuZGxlT3V0c2lkZUNsaWNrKGV2ZW50KTt9KTt9KTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19kcm9wZG93bj17b3BlbjpmdW5jdGlvbiBvcGVuKGluc3RhbmNlKXtpZihpbnN0YW5jZSl7ZHJvcGRvd25zLnB1c2goaW5zdGFuY2UpO319LGNsb3NlOmZ1bmN0aW9uIGNsb3NlKGluc3RhbmNlKXt2YXIgaW5kZXg9ZHJvcGRvd25zLmluZGV4T2YoaW5zdGFuY2UpO2lmKGluZGV4IT09LTEpe2Ryb3Bkb3ducy5zcGxpY2UoaW5zdGFuY2UsMSk7fX19Oy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL2NoZWNrYm94LWdyb3VwIgp2YXIgY2hlY2tib3hfZ3JvdXBfPV9fd2VicGFja19yZXF1aXJlX18oMzEpO3ZhciBjaGVja2JveF9ncm91cF9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oY2hlY2tib3hfZ3JvdXBfKTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy90YWJsZS9zcmMvZmlsdGVyLXBhbmVsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBmaWx0ZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsVGFibGVGaWx0ZXJQYW5lbCcsbWl4aW5zOlt2dWVfcG9wcGVyX2RlZmF1bHQuYSxsb2NhbGVfZGVmYXVsdC5hXSxkaXJlY3RpdmVzOntDbGlja291dHNpZGU6Y2xpY2tvdXRzaWRlX2RlZmF1bHQuYX0sY29tcG9uZW50czp7RWxDaGVja2JveDpjaGVja2JveF9kZWZhdWx0LmEsRWxDaGVja2JveEdyb3VwOmNoZWNrYm94X2dyb3VwX2RlZmF1bHQuYSxFbFNjcm9sbGJhcjpzY3JvbGxiYXJfZGVmYXVsdC5hfSxwcm9wczp7cGxhY2VtZW50Ont0eXBlOlN0cmluZyxkZWZhdWx0Oidib3R0b20tZW5kJ319LG1ldGhvZHM6e2lzQWN0aXZlOmZ1bmN0aW9uIGlzQWN0aXZlKGZpbHRlcil7cmV0dXJuIGZpbHRlci52YWx1ZT09PXRoaXMuZmlsdGVyVmFsdWU7fSxoYW5kbGVPdXRzaWRlQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlT3V0c2lkZUNsaWNrKCl7dmFyIF90aGlzPXRoaXM7c2V0VGltZW91dChmdW5jdGlvbigpe190aGlzLnNob3dQb3BwZXI9ZmFsc2U7fSwxNik7fSxoYW5kbGVDb25maXJtOmZ1bmN0aW9uIGhhbmRsZUNvbmZpcm0oKXt0aGlzLmNvbmZpcm1GaWx0ZXIodGhpcy5maWx0ZXJlZFZhbHVlKTt0aGlzLmhhbmRsZU91dHNpZGVDbGljaygpO30saGFuZGxlUmVzZXQ6ZnVuY3Rpb24gaGFuZGxlUmVzZXQoKXt0aGlzLmZpbHRlcmVkVmFsdWU9W107dGhpcy5jb25maXJtRmlsdGVyKHRoaXMuZmlsdGVyZWRWYWx1ZSk7dGhpcy5oYW5kbGVPdXRzaWRlQ2xpY2soKTt9LGhhbmRsZVNlbGVjdDpmdW5jdGlvbiBoYW5kbGVTZWxlY3QoZmlsdGVyVmFsdWUpe3RoaXMuZmlsdGVyVmFsdWU9ZmlsdGVyVmFsdWU7aWYodHlwZW9mIGZpbHRlclZhbHVlIT09J3VuZGVmaW5lZCcmJmZpbHRlclZhbHVlIT09bnVsbCl7dGhpcy5jb25maXJtRmlsdGVyKHRoaXMuZmlsdGVyZWRWYWx1ZSk7fWVsc2V7dGhpcy5jb25maXJtRmlsdGVyKFtdKTt9dGhpcy5oYW5kbGVPdXRzaWRlQ2xpY2soKTt9LGNvbmZpcm1GaWx0ZXI6ZnVuY3Rpb24gY29uZmlybUZpbHRlcihmaWx0ZXJlZFZhbHVlKXt0aGlzLnRhYmxlLnN0b3JlLmNvbW1pdCgnZmlsdGVyQ2hhbmdlJyx7Y29sdW1uOnRoaXMuY29sdW1uLHZhbHVlczpmaWx0ZXJlZFZhbHVlfSk7dGhpcy50YWJsZS5zdG9yZS51cGRhdGVBbGxTZWxlY3RlZCgpO319LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnt0YWJsZTpudWxsLGNlbGw6bnVsbCxjb2x1bW46bnVsbH07fSxjb21wdXRlZDp7ZmlsdGVyczpmdW5jdGlvbiBmaWx0ZXJzKCl7cmV0dXJuIHRoaXMuY29sdW1uJiZ0aGlzLmNvbHVtbi5maWx0ZXJzO30sZmlsdGVyVmFsdWU6e2dldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4odGhpcy5jb2x1bW4uZmlsdGVyZWRWYWx1ZXx8W10pWzBdO30sc2V0OmZ1bmN0aW9uIHNldCh2YWx1ZSl7aWYodGhpcy5maWx0ZXJlZFZhbHVlKXtpZih0eXBlb2YgdmFsdWUhPT0ndW5kZWZpbmVkJyYmdmFsdWUhPT1udWxsKXt0aGlzLmZpbHRlcmVkVmFsdWUuc3BsaWNlKDAsMSx2YWx1ZSk7fWVsc2V7dGhpcy5maWx0ZXJlZFZhbHVlLnNwbGljZSgwLDEpO319fX0sZmlsdGVyZWRWYWx1ZTp7Z2V0OmZ1bmN0aW9uIGdldCgpe2lmKHRoaXMuY29sdW1uKXtyZXR1cm4gdGhpcy5jb2x1bW4uZmlsdGVyZWRWYWx1ZXx8W107fXJldHVybltdO30sc2V0OmZ1bmN0aW9uIHNldCh2YWx1ZSl7aWYodGhpcy5jb2x1bW4pe3RoaXMuY29sdW1uLmZpbHRlcmVkVmFsdWU9dmFsdWU7fX19LG11bHRpcGxlOmZ1bmN0aW9uIG11bHRpcGxlKCl7aWYodGhpcy5jb2x1bW4pe3JldHVybiB0aGlzLmNvbHVtbi5maWx0ZXJNdWx0aXBsZTt9cmV0dXJuIHRydWU7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIF90aGlzMj10aGlzO3RoaXMucG9wcGVyRWxtPXRoaXMuJGVsO3RoaXMucmVmZXJlbmNlRWxtPXRoaXMuY2VsbDt0aGlzLnRhYmxlLmJvZHlXcmFwcGVyLmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsZnVuY3Rpb24oKXtfdGhpczIudXBkYXRlUG9wcGVyKCk7fSk7dGhpcy4kd2F0Y2goJ3Nob3dQb3BwZXInLGZ1bmN0aW9uKHZhbHVlKXtpZihfdGhpczIuY29sdW1uKV90aGlzMi5jb2x1bW4uZmlsdGVyT3BlbmVkPXZhbHVlO2lmKHZhbHVlKXtzcmNfZHJvcGRvd24ub3BlbihfdGhpczIpO31lbHNle3NyY19kcm9wZG93bi5jbG9zZShfdGhpczIpO319KTt9LHdhdGNoOntzaG93UG9wcGVyOmZ1bmN0aW9uIHNob3dQb3BwZXIodmFsKXtpZih2YWw9PT10cnVlJiZwYXJzZUludCh0aGlzLnBvcHBlckpTLl9wb3BwZXIuc3R5bGUuekluZGV4LDEwKTxwb3B1cF9bIlBvcHVwTWFuYWdlciJdLnpJbmRleCl7dGhpcy5wb3BwZXJKUy5fcG9wcGVyLnN0eWxlLnpJbmRleD1wb3B1cF9bIlBvcHVwTWFuYWdlciJdLm5leHRaSW5kZXgoKTt9fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFibGUvc3JjL2ZpbHRlci1wYW5lbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2ZpbHRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1maWx0ZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJsZS9zcmMvZmlsdGVyLXBhbmVsLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGZpbHRlcl9wYW5lbF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19maWx0ZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sZmlsdGVyX3BhbmVsdnVlX3R5cGVfdGVtcGxhdGVfaWRfN2YyYzkxOWZfcmVuZGVyLGZpbHRlcl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdmMmM5MTlmX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgZmlsdGVyX3BhbmVsX2FwaTt9ZmlsdGVyX3BhbmVsX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvdGFibGUvc3JjL2ZpbHRlci1wYW5lbC52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZmlsdGVyX3BhbmVsPWZpbHRlcl9wYW5lbF9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYmxlL3NyYy90YWJsZS1oZWFkZXIuanMKdmFyIHRhYmxlX2hlYWRlcl9leHRlbmRzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHRhcmdldCl7Zm9yKHZhciBpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7dmFyIHNvdXJjZT1hcmd1bWVudHNbaV07Zm9yKHZhciBrZXkgaW4gc291cmNlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLGtleSkpe3RhcmdldFtrZXldPXNvdXJjZVtrZXldO319fXJldHVybiB0YXJnZXQ7fTt2YXIgZ2V0QWxsQ29sdW1ucz1mdW5jdGlvbiBnZXRBbGxDb2x1bW5zKGNvbHVtbnMpe3ZhciByZXN1bHQ9W107Y29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uKGNvbHVtbil7aWYoY29sdW1uLmNoaWxkcmVuKXtyZXN1bHQucHVzaChjb2x1bW4pO3Jlc3VsdC5wdXNoLmFwcGx5KHJlc3VsdCxnZXRBbGxDb2x1bW5zKGNvbHVtbi5jaGlsZHJlbikpO31lbHNle3Jlc3VsdC5wdXNoKGNvbHVtbik7fX0pO3JldHVybiByZXN1bHQ7fTt2YXIgY29udmVydFRvUm93cz1mdW5jdGlvbiBjb252ZXJ0VG9Sb3dzKG9yaWdpbkNvbHVtbnMpe3ZhciBtYXhMZXZlbD0xO3ZhciB0cmF2ZXJzZT1mdW5jdGlvbiB0cmF2ZXJzZShjb2x1bW4scGFyZW50KXtpZihwYXJlbnQpe2NvbHVtbi5sZXZlbD1wYXJlbnQubGV2ZWwrMTtpZihtYXhMZXZlbDxjb2x1bW4ubGV2ZWwpe21heExldmVsPWNvbHVtbi5sZXZlbDt9fWlmKGNvbHVtbi5jaGlsZHJlbil7dmFyIGNvbFNwYW49MDtjb2x1bW4uY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihzdWJDb2x1bW4pe3RyYXZlcnNlKHN1YkNvbHVtbixjb2x1bW4pO2NvbFNwYW4rPXN1YkNvbHVtbi5jb2xTcGFuO30pO2NvbHVtbi5jb2xTcGFuPWNvbFNwYW47fWVsc2V7Y29sdW1uLmNvbFNwYW49MTt9fTtvcmlnaW5Db2x1bW5zLmZvckVhY2goZnVuY3Rpb24oY29sdW1uKXtjb2x1bW4ubGV2ZWw9MTt0cmF2ZXJzZShjb2x1bW4pO30pO3ZhciByb3dzPVtdO2Zvcih2YXIgaT0wO2k8bWF4TGV2ZWw7aSsrKXtyb3dzLnB1c2goW10pO312YXIgYWxsQ29sdW1ucz1nZXRBbGxDb2x1bW5zKG9yaWdpbkNvbHVtbnMpO2FsbENvbHVtbnMuZm9yRWFjaChmdW5jdGlvbihjb2x1bW4pe2lmKCFjb2x1bW4uY2hpbGRyZW4pe2NvbHVtbi5yb3dTcGFuPW1heExldmVsLWNvbHVtbi5sZXZlbCsxO31lbHNle2NvbHVtbi5yb3dTcGFuPTE7fXJvd3NbY29sdW1uLmxldmVsLTFdLnB1c2goY29sdW1uKTt9KTtyZXR1cm4gcm93czt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGFibGVfaGVhZGVyPXtuYW1lOidFbFRhYmxlSGVhZGVyJyxtaXhpbnM6W2xheW91dF9vYnNlcnZlcl0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX3RoaXM9dGhpczt2YXIgb3JpZ2luQ29sdW1ucz10aGlzLnN0b3JlLnN0YXRlcy5vcmlnaW5Db2x1bW5zO3ZhciBjb2x1bW5Sb3dzPWNvbnZlcnRUb1Jvd3Mob3JpZ2luQ29sdW1ucyx0aGlzLmNvbHVtbnMpOy8vIOaYr+WQpuaLpeacieWkmue6p+ihqOWktAp2YXIgaXNHcm91cD1jb2x1bW5Sb3dzLmxlbmd0aD4xO2lmKGlzR3JvdXApdGhpcy4kcGFyZW50LmlzR3JvdXA9dHJ1ZTtyZXR1cm4gaCgndGFibGUnLHsnY2xhc3MnOidlbC10YWJsZV9faGVhZGVyJyxhdHRyczp7Y2VsbHNwYWNpbmc6JzAnLGNlbGxwYWRkaW5nOicwJyxib3JkZXI6JzAnfX0sW2goJ2NvbGdyb3VwJyxbdGhpcy5jb2x1bW5zLm1hcChmdW5jdGlvbihjb2x1bW4pe3JldHVybiBoKCdjb2wnLHthdHRyczp7bmFtZTpjb2x1bW4uaWR9LGtleTpjb2x1bW4uaWR9KTt9KSx0aGlzLmhhc0d1dHRlcj9oKCdjb2wnLHthdHRyczp7bmFtZTonZ3V0dGVyJ319KTonJ10pLGgoJ3RoZWFkJyx7J2NsYXNzJzpbeydpcy1ncm91cCc6aXNHcm91cCwnaGFzLWd1dHRlcic6dGhpcy5oYXNHdXR0ZXJ9XX0sW3RoaXMuX2woY29sdW1uUm93cyxmdW5jdGlvbihjb2x1bW5zLHJvd0luZGV4KXtyZXR1cm4gaCgndHInLHtzdHlsZTpfdGhpcy5nZXRIZWFkZXJSb3dTdHlsZShyb3dJbmRleCksJ2NsYXNzJzpfdGhpcy5nZXRIZWFkZXJSb3dDbGFzcyhyb3dJbmRleCl9LFtjb2x1bW5zLm1hcChmdW5jdGlvbihjb2x1bW4sY2VsbEluZGV4KXtyZXR1cm4gaCgndGgnLHthdHRyczp7Y29sc3Bhbjpjb2x1bW4uY29sU3Bhbixyb3dzcGFuOmNvbHVtbi5yb3dTcGFufSxvbjp7J21vdXNlbW92ZSc6ZnVuY3Rpb24gbW91c2Vtb3ZlKCRldmVudCl7cmV0dXJuIF90aGlzLmhhbmRsZU1vdXNlTW92ZSgkZXZlbnQsY29sdW1uKTt9LCdtb3VzZW91dCc6X3RoaXMuaGFuZGxlTW91c2VPdXQsJ21vdXNlZG93bic6ZnVuY3Rpb24gbW91c2Vkb3duKCRldmVudCl7cmV0dXJuIF90aGlzLmhhbmRsZU1vdXNlRG93bigkZXZlbnQsY29sdW1uKTt9LCdjbGljayc6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtyZXR1cm4gX3RoaXMuaGFuZGxlSGVhZGVyQ2xpY2soJGV2ZW50LGNvbHVtbik7fSwnY29udGV4dG1lbnUnOmZ1bmN0aW9uIGNvbnRleHRtZW51KCRldmVudCl7cmV0dXJuIF90aGlzLmhhbmRsZUhlYWRlckNvbnRleHRNZW51KCRldmVudCxjb2x1bW4pO319LHN0eWxlOl90aGlzLmdldEhlYWRlckNlbGxTdHlsZShyb3dJbmRleCxjZWxsSW5kZXgsY29sdW1ucyxjb2x1bW4pLCdjbGFzcyc6X3RoaXMuZ2V0SGVhZGVyQ2VsbENsYXNzKHJvd0luZGV4LGNlbGxJbmRleCxjb2x1bW5zLGNvbHVtbiksa2V5OmNvbHVtbi5pZH0sW2goJ2RpdicseydjbGFzcyc6WydjZWxsJyxjb2x1bW4uZmlsdGVyZWRWYWx1ZSYmY29sdW1uLmZpbHRlcmVkVmFsdWUubGVuZ3RoPjA/J2hpZ2hsaWdodCc6JycsY29sdW1uLmxhYmVsQ2xhc3NOYW1lXX0sW2NvbHVtbi5yZW5kZXJIZWFkZXI/Y29sdW1uLnJlbmRlckhlYWRlci5jYWxsKF90aGlzLl9yZW5kZXJQcm94eSxoLHtjb2x1bW46Y29sdW1uLCRpbmRleDpjZWxsSW5kZXgsc3RvcmU6X3RoaXMuc3RvcmUsX3NlbGY6X3RoaXMuJHBhcmVudC4kdm5vZGUuY29udGV4dH0pOmNvbHVtbi5sYWJlbCxjb2x1bW4uc29ydGFibGU/aCgnc3BhbicseydjbGFzcyc6J2NhcmV0LXdyYXBwZXInLG9uOnsnY2xpY2snOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7cmV0dXJuIF90aGlzLmhhbmRsZVNvcnRDbGljaygkZXZlbnQsY29sdW1uKTt9fX0sW2goJ2knLHsnY2xhc3MnOidzb3J0LWNhcmV0IGFzY2VuZGluZycsb246eydjbGljayc6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtyZXR1cm4gX3RoaXMuaGFuZGxlU29ydENsaWNrKCRldmVudCxjb2x1bW4sJ2FzY2VuZGluZycpO319fSksaCgnaScseydjbGFzcyc6J3NvcnQtY2FyZXQgZGVzY2VuZGluZycsb246eydjbGljayc6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtyZXR1cm4gX3RoaXMuaGFuZGxlU29ydENsaWNrKCRldmVudCxjb2x1bW4sJ2Rlc2NlbmRpbmcnKTt9fX0pXSk6JycsY29sdW1uLmZpbHRlcmFibGU/aCgnc3BhbicseydjbGFzcyc6J2VsLXRhYmxlX19jb2x1bW4tZmlsdGVyLXRyaWdnZXInLG9uOnsnY2xpY2snOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7cmV0dXJuIF90aGlzLmhhbmRsZUZpbHRlckNsaWNrKCRldmVudCxjb2x1bW4pO319fSxbaCgnaScseydjbGFzcyc6WydlbC1pY29uLWFycm93LWRvd24nLGNvbHVtbi5maWx0ZXJPcGVuZWQ/J2VsLWljb24tYXJyb3ctdXAnOicnXX0pXSk6JyddKV0pO30pLF90aGlzLmhhc0d1dHRlcj9oKCd0aCcseydjbGFzcyc6J2d1dHRlcid9KTonJ10pO30pXSldKTt9LHByb3BzOntmaXhlZDpTdHJpbmcsc3RvcmU6e3JlcXVpcmVkOnRydWV9LGJvcmRlcjpCb29sZWFuLGRlZmF1bHRTb3J0Ont0eXBlOk9iamVjdCxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJue3Byb3A6Jycsb3JkZXI6Jyd9O319fSxjb21wb25lbnRzOntFbENoZWNrYm94OmNoZWNrYm94X2RlZmF1bHQuYX0sY29tcHV0ZWQ6dGFibGVfaGVhZGVyX2V4dGVuZHMoe3RhYmxlOmZ1bmN0aW9uIHRhYmxlKCl7cmV0dXJuIHRoaXMuJHBhcmVudDt9LGhhc0d1dHRlcjpmdW5jdGlvbiBoYXNHdXR0ZXIoKXtyZXR1cm4hdGhpcy5maXhlZCYmdGhpcy50YWJsZUxheW91dC5ndXR0ZXJXaWR0aDt9fSxtYXBTdGF0ZXMoe2NvbHVtbnM6J2NvbHVtbnMnLGlzQWxsU2VsZWN0ZWQ6J2lzQWxsU2VsZWN0ZWQnLGxlZnRGaXhlZExlYWZDb3VudDonZml4ZWRMZWFmQ29sdW1uc0xlbmd0aCcscmlnaHRGaXhlZExlYWZDb3VudDoncmlnaHRGaXhlZExlYWZDb2x1bW5zTGVuZ3RoJyxjb2x1bW5zQ291bnQ6ZnVuY3Rpb24gY29sdW1uc0NvdW50KHN0YXRlcyl7cmV0dXJuIHN0YXRlcy5jb2x1bW5zLmxlbmd0aDt9LGxlZnRGaXhlZENvdW50OmZ1bmN0aW9uIGxlZnRGaXhlZENvdW50KHN0YXRlcyl7cmV0dXJuIHN0YXRlcy5maXhlZENvbHVtbnMubGVuZ3RoO30scmlnaHRGaXhlZENvdW50OmZ1bmN0aW9uIHJpZ2h0Rml4ZWRDb3VudChzdGF0ZXMpe3JldHVybiBzdGF0ZXMucmlnaHRGaXhlZENvbHVtbnMubGVuZ3RoO319KSksY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy5maWx0ZXJQYW5lbHM9e307fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXMyPXRoaXM7Ly8gbmV4dFRpY2sg5piv5pyJ5b+F6KaB55qEIGh0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL2VsZW1lbnQvcHVsbC8xMTMxMQp0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe3ZhciBfZGVmYXVsdFNvcnQ9X3RoaXMyLmRlZmF1bHRTb3J0LHByb3A9X2RlZmF1bHRTb3J0LnByb3Asb3JkZXI9X2RlZmF1bHRTb3J0Lm9yZGVyO3ZhciBpbml0PXRydWU7X3RoaXMyLnN0b3JlLmNvbW1pdCgnc29ydCcse3Byb3A6cHJvcCxvcmRlcjpvcmRlcixpbml0OmluaXR9KTt9KTt9LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpe3ZhciBwYW5lbHM9dGhpcy5maWx0ZXJQYW5lbHM7Zm9yKHZhciBwcm9wIGluIHBhbmVscyl7aWYocGFuZWxzLmhhc093blByb3BlcnR5KHByb3ApJiZwYW5lbHNbcHJvcF0pe3BhbmVsc1twcm9wXS4kZGVzdHJveSh0cnVlKTt9fX0sbWV0aG9kczp7aXNDZWxsSGlkZGVuOmZ1bmN0aW9uIGlzQ2VsbEhpZGRlbihpbmRleCxjb2x1bW5zKXt2YXIgc3RhcnQ9MDtmb3IodmFyIGk9MDtpPGluZGV4O2krKyl7c3RhcnQrPWNvbHVtbnNbaV0uY29sU3Bhbjt9dmFyIGFmdGVyPXN0YXJ0K2NvbHVtbnNbaW5kZXhdLmNvbFNwYW4tMTtpZih0aGlzLmZpeGVkPT09dHJ1ZXx8dGhpcy5maXhlZD09PSdsZWZ0Jyl7cmV0dXJuIGFmdGVyPj10aGlzLmxlZnRGaXhlZExlYWZDb3VudDt9ZWxzZSBpZih0aGlzLmZpeGVkPT09J3JpZ2h0Jyl7cmV0dXJuIHN0YXJ0PHRoaXMuY29sdW1uc0NvdW50LXRoaXMucmlnaHRGaXhlZExlYWZDb3VudDt9ZWxzZXtyZXR1cm4gYWZ0ZXI8dGhpcy5sZWZ0Rml4ZWRMZWFmQ291bnR8fHN0YXJ0Pj10aGlzLmNvbHVtbnNDb3VudC10aGlzLnJpZ2h0Rml4ZWRMZWFmQ291bnQ7fX0sZ2V0SGVhZGVyUm93U3R5bGU6ZnVuY3Rpb24gZ2V0SGVhZGVyUm93U3R5bGUocm93SW5kZXgpe3ZhciBoZWFkZXJSb3dTdHlsZT10aGlzLnRhYmxlLmhlYWRlclJvd1N0eWxlO2lmKHR5cGVvZiBoZWFkZXJSb3dTdHlsZT09PSdmdW5jdGlvbicpe3JldHVybiBoZWFkZXJSb3dTdHlsZS5jYWxsKG51bGwse3Jvd0luZGV4OnJvd0luZGV4fSk7fXJldHVybiBoZWFkZXJSb3dTdHlsZTt9LGdldEhlYWRlclJvd0NsYXNzOmZ1bmN0aW9uIGdldEhlYWRlclJvd0NsYXNzKHJvd0luZGV4KXt2YXIgY2xhc3Nlcz1bXTt2YXIgaGVhZGVyUm93Q2xhc3NOYW1lPXRoaXMudGFibGUuaGVhZGVyUm93Q2xhc3NOYW1lO2lmKHR5cGVvZiBoZWFkZXJSb3dDbGFzc05hbWU9PT0nc3RyaW5nJyl7Y2xhc3Nlcy5wdXNoKGhlYWRlclJvd0NsYXNzTmFtZSk7fWVsc2UgaWYodHlwZW9mIGhlYWRlclJvd0NsYXNzTmFtZT09PSdmdW5jdGlvbicpe2NsYXNzZXMucHVzaChoZWFkZXJSb3dDbGFzc05hbWUuY2FsbChudWxsLHtyb3dJbmRleDpyb3dJbmRleH0pKTt9cmV0dXJuIGNsYXNzZXMuam9pbignICcpO30sZ2V0SGVhZGVyQ2VsbFN0eWxlOmZ1bmN0aW9uIGdldEhlYWRlckNlbGxTdHlsZShyb3dJbmRleCxjb2x1bW5JbmRleCxyb3csY29sdW1uKXt2YXIgaGVhZGVyQ2VsbFN0eWxlPXRoaXMudGFibGUuaGVhZGVyQ2VsbFN0eWxlO2lmKHR5cGVvZiBoZWFkZXJDZWxsU3R5bGU9PT0nZnVuY3Rpb24nKXtyZXR1cm4gaGVhZGVyQ2VsbFN0eWxlLmNhbGwobnVsbCx7cm93SW5kZXg6cm93SW5kZXgsY29sdW1uSW5kZXg6Y29sdW1uSW5kZXgscm93OnJvdyxjb2x1bW46Y29sdW1ufSk7fXJldHVybiBoZWFkZXJDZWxsU3R5bGU7fSxnZXRIZWFkZXJDZWxsQ2xhc3M6ZnVuY3Rpb24gZ2V0SGVhZGVyQ2VsbENsYXNzKHJvd0luZGV4LGNvbHVtbkluZGV4LHJvdyxjb2x1bW4pe3ZhciBjbGFzc2VzPVtjb2x1bW4uaWQsY29sdW1uLm9yZGVyLGNvbHVtbi5oZWFkZXJBbGlnbixjb2x1bW4uY2xhc3NOYW1lLGNvbHVtbi5sYWJlbENsYXNzTmFtZV07aWYocm93SW5kZXg9PT0wJiZ0aGlzLmlzQ2VsbEhpZGRlbihjb2x1bW5JbmRleCxyb3cpKXtjbGFzc2VzLnB1c2goJ2lzLWhpZGRlbicpO31pZighY29sdW1uLmNoaWxkcmVuKXtjbGFzc2VzLnB1c2goJ2lzLWxlYWYnKTt9aWYoY29sdW1uLnNvcnRhYmxlKXtjbGFzc2VzLnB1c2goJ2lzLXNvcnRhYmxlJyk7fXZhciBoZWFkZXJDZWxsQ2xhc3NOYW1lPXRoaXMudGFibGUuaGVhZGVyQ2VsbENsYXNzTmFtZTtpZih0eXBlb2YgaGVhZGVyQ2VsbENsYXNzTmFtZT09PSdzdHJpbmcnKXtjbGFzc2VzLnB1c2goaGVhZGVyQ2VsbENsYXNzTmFtZSk7fWVsc2UgaWYodHlwZW9mIGhlYWRlckNlbGxDbGFzc05hbWU9PT0nZnVuY3Rpb24nKXtjbGFzc2VzLnB1c2goaGVhZGVyQ2VsbENsYXNzTmFtZS5jYWxsKG51bGwse3Jvd0luZGV4OnJvd0luZGV4LGNvbHVtbkluZGV4OmNvbHVtbkluZGV4LHJvdzpyb3csY29sdW1uOmNvbHVtbn0pKTt9cmV0dXJuIGNsYXNzZXMuam9pbignICcpO30sdG9nZ2xlQWxsU2VsZWN0aW9uOmZ1bmN0aW9uIHRvZ2dsZUFsbFNlbGVjdGlvbihldmVudCl7ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7dGhpcy5zdG9yZS5jb21taXQoJ3RvZ2dsZUFsbFNlbGVjdGlvbicpO30saGFuZGxlRmlsdGVyQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlRmlsdGVyQ2xpY2soZXZlbnQsY29sdW1uKXtldmVudC5zdG9wUHJvcGFnYXRpb24oKTt2YXIgdGFyZ2V0PWV2ZW50LnRhcmdldDt2YXIgY2VsbD10YXJnZXQudGFnTmFtZT09PSdUSCc/dGFyZ2V0OnRhcmdldC5wYXJlbnROb2RlO2lmKE9iamVjdChkb21fWyJoYXNDbGFzcyJdKShjZWxsLCdub2NsaWNrJykpcmV0dXJuO2NlbGw9Y2VsbC5xdWVyeVNlbGVjdG9yKCcuZWwtdGFibGVfX2NvbHVtbi1maWx0ZXItdHJpZ2dlcicpfHxjZWxsO3ZhciB0YWJsZT10aGlzLiRwYXJlbnQ7dmFyIGZpbHRlclBhbmVsPXRoaXMuZmlsdGVyUGFuZWxzW2NvbHVtbi5pZF07aWYoZmlsdGVyUGFuZWwmJmNvbHVtbi5maWx0ZXJPcGVuZWQpe2ZpbHRlclBhbmVsLnNob3dQb3BwZXI9ZmFsc2U7cmV0dXJuO31pZighZmlsdGVyUGFuZWwpe2ZpbHRlclBhbmVsPW5ldyBleHRlcm5hbF92dWVfZGVmYXVsdC5hKGZpbHRlcl9wYW5lbCk7dGhpcy5maWx0ZXJQYW5lbHNbY29sdW1uLmlkXT1maWx0ZXJQYW5lbDtpZihjb2x1bW4uZmlsdGVyUGxhY2VtZW50KXtmaWx0ZXJQYW5lbC5wbGFjZW1lbnQ9Y29sdW1uLmZpbHRlclBsYWNlbWVudDt9ZmlsdGVyUGFuZWwudGFibGU9dGFibGU7ZmlsdGVyUGFuZWwuY2VsbD1jZWxsO2ZpbHRlclBhbmVsLmNvbHVtbj1jb2x1bW47IXRoaXMuJGlzU2VydmVyJiZmaWx0ZXJQYW5lbC4kbW91bnQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykpO31zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZmlsdGVyUGFuZWwuc2hvd1BvcHBlcj10cnVlO30sMTYpO30saGFuZGxlSGVhZGVyQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlSGVhZGVyQ2xpY2soZXZlbnQsY29sdW1uKXtpZighY29sdW1uLmZpbHRlcnMmJmNvbHVtbi5zb3J0YWJsZSl7dGhpcy5oYW5kbGVTb3J0Q2xpY2soZXZlbnQsY29sdW1uKTt9ZWxzZSBpZihjb2x1bW4uZmlsdGVyYWJsZSYmIWNvbHVtbi5zb3J0YWJsZSl7dGhpcy5oYW5kbGVGaWx0ZXJDbGljayhldmVudCxjb2x1bW4pO310aGlzLiRwYXJlbnQuJGVtaXQoJ2hlYWRlci1jbGljaycsY29sdW1uLGV2ZW50KTt9LGhhbmRsZUhlYWRlckNvbnRleHRNZW51OmZ1bmN0aW9uIGhhbmRsZUhlYWRlckNvbnRleHRNZW51KGV2ZW50LGNvbHVtbil7dGhpcy4kcGFyZW50LiRlbWl0KCdoZWFkZXItY29udGV4dG1lbnUnLGNvbHVtbixldmVudCk7fSxoYW5kbGVNb3VzZURvd246ZnVuY3Rpb24gaGFuZGxlTW91c2VEb3duKGV2ZW50LGNvbHVtbil7dmFyIF90aGlzMz10aGlzO2lmKHRoaXMuJGlzU2VydmVyKXJldHVybjtpZihjb2x1bW4uY2hpbGRyZW4mJmNvbHVtbi5jaGlsZHJlbi5sZW5ndGg+MClyZXR1cm47LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYodGhpcy5kcmFnZ2luZ0NvbHVtbiYmdGhpcy5ib3JkZXIpe3RoaXMuZHJhZ2dpbmc9dHJ1ZTt0aGlzLiRwYXJlbnQucmVzaXplUHJveHlWaXNpYmxlPXRydWU7dmFyIHRhYmxlPXRoaXMuJHBhcmVudDt2YXIgdGFibGVFbD10YWJsZS4kZWw7dmFyIHRhYmxlTGVmdD10YWJsZUVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7dmFyIGNvbHVtbkVsPXRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoJ3RoLicrY29sdW1uLmlkKTt2YXIgY29sdW1uUmVjdD1jb2x1bW5FbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt2YXIgbWluTGVmdD1jb2x1bW5SZWN0LmxlZnQtdGFibGVMZWZ0KzMwO09iamVjdChkb21fWyJhZGRDbGFzcyJdKShjb2x1bW5FbCwnbm9jbGljaycpO3RoaXMuZHJhZ1N0YXRlPXtzdGFydE1vdXNlTGVmdDpldmVudC5jbGllbnRYLHN0YXJ0TGVmdDpjb2x1bW5SZWN0LnJpZ2h0LXRhYmxlTGVmdCxzdGFydENvbHVtbkxlZnQ6Y29sdW1uUmVjdC5sZWZ0LXRhYmxlTGVmdCx0YWJsZUxlZnQ6dGFibGVMZWZ0fTt2YXIgcmVzaXplUHJveHk9dGFibGUuJHJlZnMucmVzaXplUHJveHk7cmVzaXplUHJveHkuc3R5bGUubGVmdD10aGlzLmRyYWdTdGF0ZS5zdGFydExlZnQrJ3B4Jztkb2N1bWVudC5vbnNlbGVjdHN0YXJ0PWZ1bmN0aW9uKCl7cmV0dXJuIGZhbHNlO307ZG9jdW1lbnQub25kcmFnc3RhcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gZmFsc2U7fTt2YXIgaGFuZGxlTW91c2VNb3ZlPWZ1bmN0aW9uIGhhbmRsZU1vdXNlTW92ZShldmVudCl7dmFyIGRlbHRhTGVmdD1ldmVudC5jbGllbnRYLV90aGlzMy5kcmFnU3RhdGUuc3RhcnRNb3VzZUxlZnQ7dmFyIHByb3h5TGVmdD1fdGhpczMuZHJhZ1N0YXRlLnN0YXJ0TGVmdCtkZWx0YUxlZnQ7cmVzaXplUHJveHkuc3R5bGUubGVmdD1NYXRoLm1heChtaW5MZWZ0LHByb3h5TGVmdCkrJ3B4Jzt9O3ZhciBoYW5kbGVNb3VzZVVwPWZ1bmN0aW9uIGhhbmRsZU1vdXNlVXAoKXtpZihfdGhpczMuZHJhZ2dpbmcpe3ZhciBfZHJhZ1N0YXRlPV90aGlzMy5kcmFnU3RhdGUsc3RhcnRDb2x1bW5MZWZ0PV9kcmFnU3RhdGUuc3RhcnRDb2x1bW5MZWZ0LHN0YXJ0TGVmdD1fZHJhZ1N0YXRlLnN0YXJ0TGVmdDt2YXIgZmluYWxMZWZ0PXBhcnNlSW50KHJlc2l6ZVByb3h5LnN0eWxlLmxlZnQsMTApO3ZhciBjb2x1bW5XaWR0aD1maW5hbExlZnQtc3RhcnRDb2x1bW5MZWZ0O2NvbHVtbi53aWR0aD1jb2x1bW4ucmVhbFdpZHRoPWNvbHVtbldpZHRoO3RhYmxlLiRlbWl0KCdoZWFkZXItZHJhZ2VuZCcsY29sdW1uLndpZHRoLHN0YXJ0TGVmdC1zdGFydENvbHVtbkxlZnQsY29sdW1uLGV2ZW50KTtfdGhpczMuc3RvcmUuc2NoZWR1bGVMYXlvdXQoKTtkb2N1bWVudC5ib2R5LnN0eWxlLmN1cnNvcj0nJztfdGhpczMuZHJhZ2dpbmc9ZmFsc2U7X3RoaXMzLmRyYWdnaW5nQ29sdW1uPW51bGw7X3RoaXMzLmRyYWdTdGF0ZT17fTt0YWJsZS5yZXNpemVQcm94eVZpc2libGU9ZmFsc2U7fWRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsaGFuZGxlTW91c2VNb3ZlKTtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJyxoYW5kbGVNb3VzZVVwKTtkb2N1bWVudC5vbnNlbGVjdHN0YXJ0PW51bGw7ZG9jdW1lbnQub25kcmFnc3RhcnQ9bnVsbDtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7T2JqZWN0KGRvbV9bInJlbW92ZUNsYXNzIl0pKGNvbHVtbkVsLCdub2NsaWNrJyk7fSwwKTt9O2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsaGFuZGxlTW91c2VNb3ZlKTtkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJyxoYW5kbGVNb3VzZVVwKTt9fSxoYW5kbGVNb3VzZU1vdmU6ZnVuY3Rpb24gaGFuZGxlTW91c2VNb3ZlKGV2ZW50LGNvbHVtbil7aWYoY29sdW1uLmNoaWxkcmVuJiZjb2x1bW4uY2hpbGRyZW4ubGVuZ3RoPjApcmV0dXJuO3ZhciB0YXJnZXQ9ZXZlbnQudGFyZ2V0O3doaWxlKHRhcmdldCYmdGFyZ2V0LnRhZ05hbWUhPT0nVEgnKXt0YXJnZXQ9dGFyZ2V0LnBhcmVudE5vZGU7fWlmKCFjb2x1bW58fCFjb2x1bW4ucmVzaXphYmxlKXJldHVybjtpZighdGhpcy5kcmFnZ2luZyYmdGhpcy5ib3JkZXIpe3ZhciByZWN0PXRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt2YXIgYm9keVN0eWxlPWRvY3VtZW50LmJvZHkuc3R5bGU7aWYocmVjdC53aWR0aD4xMiYmcmVjdC5yaWdodC1ldmVudC5wYWdlWDw4KXtib2R5U3R5bGUuY3Vyc29yPSdjb2wtcmVzaXplJztpZihPYmplY3QoZG9tX1siaGFzQ2xhc3MiXSkodGFyZ2V0LCdpcy1zb3J0YWJsZScpKXt0YXJnZXQuc3R5bGUuY3Vyc29yPSdjb2wtcmVzaXplJzt9dGhpcy5kcmFnZ2luZ0NvbHVtbj1jb2x1bW47fWVsc2UgaWYoIXRoaXMuZHJhZ2dpbmcpe2JvZHlTdHlsZS5jdXJzb3I9Jyc7aWYoT2JqZWN0KGRvbV9bImhhc0NsYXNzIl0pKHRhcmdldCwnaXMtc29ydGFibGUnKSl7dGFyZ2V0LnN0eWxlLmN1cnNvcj0ncG9pbnRlcic7fXRoaXMuZHJhZ2dpbmdDb2x1bW49bnVsbDt9fX0saGFuZGxlTW91c2VPdXQ6ZnVuY3Rpb24gaGFuZGxlTW91c2VPdXQoKXtpZih0aGlzLiRpc1NlcnZlcilyZXR1cm47ZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3I9Jyc7fSx0b2dnbGVPcmRlcjpmdW5jdGlvbiB0b2dnbGVPcmRlcihfcmVmKXt2YXIgb3JkZXI9X3JlZi5vcmRlcixzb3J0T3JkZXJzPV9yZWYuc29ydE9yZGVycztpZihvcmRlcj09PScnKXJldHVybiBzb3J0T3JkZXJzWzBdO3ZhciBpbmRleD1zb3J0T3JkZXJzLmluZGV4T2Yob3JkZXJ8fG51bGwpO3JldHVybiBzb3J0T3JkZXJzW2luZGV4PnNvcnRPcmRlcnMubGVuZ3RoLTI/MDppbmRleCsxXTt9LGhhbmRsZVNvcnRDbGljazpmdW5jdGlvbiBoYW5kbGVTb3J0Q2xpY2soZXZlbnQsY29sdW1uLGdpdmVuT3JkZXIpe2V2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3ZhciBvcmRlcj1jb2x1bW4ub3JkZXI9PT1naXZlbk9yZGVyP251bGw6Z2l2ZW5PcmRlcnx8dGhpcy50b2dnbGVPcmRlcihjb2x1bW4pO3ZhciB0YXJnZXQ9ZXZlbnQudGFyZ2V0O3doaWxlKHRhcmdldCYmdGFyZ2V0LnRhZ05hbWUhPT0nVEgnKXt0YXJnZXQ9dGFyZ2V0LnBhcmVudE5vZGU7fWlmKHRhcmdldCYmdGFyZ2V0LnRhZ05hbWU9PT0nVEgnKXtpZihPYmplY3QoZG9tX1siaGFzQ2xhc3MiXSkodGFyZ2V0LCdub2NsaWNrJykpe09iamVjdChkb21fWyJyZW1vdmVDbGFzcyJdKSh0YXJnZXQsJ25vY2xpY2snKTtyZXR1cm47fX1pZighY29sdW1uLnNvcnRhYmxlKXJldHVybjt2YXIgc3RhdGVzPXRoaXMuc3RvcmUuc3RhdGVzO3ZhciBzb3J0UHJvcD1zdGF0ZXMuc29ydFByb3A7dmFyIHNvcnRPcmRlcj12b2lkIDA7dmFyIHNvcnRpbmdDb2x1bW49c3RhdGVzLnNvcnRpbmdDb2x1bW47aWYoc29ydGluZ0NvbHVtbiE9PWNvbHVtbnx8c29ydGluZ0NvbHVtbj09PWNvbHVtbiYmc29ydGluZ0NvbHVtbi5vcmRlcj09PW51bGwpe2lmKHNvcnRpbmdDb2x1bW4pe3NvcnRpbmdDb2x1bW4ub3JkZXI9bnVsbDt9c3RhdGVzLnNvcnRpbmdDb2x1bW49Y29sdW1uO3NvcnRQcm9wPWNvbHVtbi5wcm9wZXJ0eTt9aWYoIW9yZGVyKXtzb3J0T3JkZXI9Y29sdW1uLm9yZGVyPW51bGw7fWVsc2V7c29ydE9yZGVyPWNvbHVtbi5vcmRlcj1vcmRlcjt9c3RhdGVzLnNvcnRQcm9wPXNvcnRQcm9wO3N0YXRlcy5zb3J0T3JkZXI9c29ydE9yZGVyO3RoaXMuc3RvcmUuY29tbWl0KCdjaGFuZ2VTb3J0Q29uZGl0aW9uJyk7fX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2RyYWdnaW5nQ29sdW1uOm51bGwsZHJhZ2dpbmc6ZmFsc2UsZHJhZ1N0YXRlOnt9fTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYmxlL3NyYy90YWJsZS1mb290ZXIuanMKdmFyIHRhYmxlX2Zvb3Rlcl9leHRlbmRzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHRhcmdldCl7Zm9yKHZhciBpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7dmFyIHNvdXJjZT1hcmd1bWVudHNbaV07Zm9yKHZhciBrZXkgaW4gc291cmNlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLGtleSkpe3RhcmdldFtrZXldPXNvdXJjZVtrZXldO319fXJldHVybiB0YXJnZXQ7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRhYmxlX2Zvb3Rlcj17bmFtZTonRWxUYWJsZUZvb3RlcicsbWl4aW5zOltsYXlvdXRfb2JzZXJ2ZXJdLHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIF90aGlzPXRoaXM7dmFyIHN1bXM9W107aWYodGhpcy5zdW1tYXJ5TWV0aG9kKXtzdW1zPXRoaXMuc3VtbWFyeU1ldGhvZCh7Y29sdW1uczp0aGlzLmNvbHVtbnMsZGF0YTp0aGlzLnN0b3JlLnN0YXRlcy5kYXRhfSk7fWVsc2V7dGhpcy5jb2x1bW5zLmZvckVhY2goZnVuY3Rpb24oY29sdW1uLGluZGV4KXtpZihpbmRleD09PTApe3N1bXNbaW5kZXhdPV90aGlzLnN1bVRleHQ7cmV0dXJuO312YXIgdmFsdWVzPV90aGlzLnN0b3JlLnN0YXRlcy5kYXRhLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gTnVtYmVyKGl0ZW1bY29sdW1uLnByb3BlcnR5XSk7fSk7dmFyIHByZWNpc2lvbnM9W107dmFyIG5vdE51bWJlcj10cnVlO3ZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKXtpZighaXNOYU4odmFsdWUpKXtub3ROdW1iZXI9ZmFsc2U7dmFyIGRlY2ltYWw9KCcnK3ZhbHVlKS5zcGxpdCgnLicpWzFdO3ByZWNpc2lvbnMucHVzaChkZWNpbWFsP2RlY2ltYWwubGVuZ3RoOjApO319KTt2YXIgcHJlY2lzaW9uPU1hdGgubWF4LmFwcGx5KG51bGwscHJlY2lzaW9ucyk7aWYoIW5vdE51bWJlcil7c3Vtc1tpbmRleF09dmFsdWVzLnJlZHVjZShmdW5jdGlvbihwcmV2LGN1cnIpe3ZhciB2YWx1ZT1OdW1iZXIoY3Vycik7aWYoIWlzTmFOKHZhbHVlKSl7cmV0dXJuIHBhcnNlRmxvYXQoKHByZXYrY3VycikudG9GaXhlZChNYXRoLm1pbihwcmVjaXNpb24sMjApKSk7fWVsc2V7cmV0dXJuIHByZXY7fX0sMCk7fWVsc2V7c3Vtc1tpbmRleF09Jyc7fX0pO31yZXR1cm4gaCgndGFibGUnLHsnY2xhc3MnOidlbC10YWJsZV9fZm9vdGVyJyxhdHRyczp7Y2VsbHNwYWNpbmc6JzAnLGNlbGxwYWRkaW5nOicwJyxib3JkZXI6JzAnfX0sW2goJ2NvbGdyb3VwJyxbdGhpcy5jb2x1bW5zLm1hcChmdW5jdGlvbihjb2x1bW4pe3JldHVybiBoKCdjb2wnLHthdHRyczp7bmFtZTpjb2x1bW4uaWR9LGtleTpjb2x1bW4uaWR9KTt9KSx0aGlzLmhhc0d1dHRlcj9oKCdjb2wnLHthdHRyczp7bmFtZTonZ3V0dGVyJ319KTonJ10pLGgoJ3Rib2R5Jyx7J2NsYXNzJzpbeydoYXMtZ3V0dGVyJzp0aGlzLmhhc0d1dHRlcn1dfSxbaCgndHInLFt0aGlzLmNvbHVtbnMubWFwKGZ1bmN0aW9uKGNvbHVtbixjZWxsSW5kZXgpe3JldHVybiBoKCd0ZCcse2tleTpjZWxsSW5kZXgsYXR0cnM6e2NvbHNwYW46Y29sdW1uLmNvbFNwYW4scm93c3Bhbjpjb2x1bW4ucm93U3Bhbn0sJ2NsYXNzJzpfdGhpcy5nZXRSb3dDbGFzc2VzKGNvbHVtbixjZWxsSW5kZXgpfSxbaCgnZGl2Jyx7J2NsYXNzJzpbJ2NlbGwnLGNvbHVtbi5sYWJlbENsYXNzTmFtZV19LFtzdW1zW2NlbGxJbmRleF1dKV0pO30pLHRoaXMuaGFzR3V0dGVyP2goJ3RoJyx7J2NsYXNzJzonZ3V0dGVyJ30pOicnXSldKV0pO30scHJvcHM6e2ZpeGVkOlN0cmluZyxzdG9yZTp7cmVxdWlyZWQ6dHJ1ZX0sc3VtbWFyeU1ldGhvZDpGdW5jdGlvbixzdW1UZXh0OlN0cmluZyxib3JkZXI6Qm9vbGVhbixkZWZhdWx0U29ydDp7dHlwZTpPYmplY3QsZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybntwcm9wOicnLG9yZGVyOicnfTt9fX0sY29tcHV0ZWQ6dGFibGVfZm9vdGVyX2V4dGVuZHMoe3RhYmxlOmZ1bmN0aW9uIHRhYmxlKCl7cmV0dXJuIHRoaXMuJHBhcmVudDt9LGhhc0d1dHRlcjpmdW5jdGlvbiBoYXNHdXR0ZXIoKXtyZXR1cm4hdGhpcy5maXhlZCYmdGhpcy50YWJsZUxheW91dC5ndXR0ZXJXaWR0aDt9fSxtYXBTdGF0ZXMoe2NvbHVtbnM6J2NvbHVtbnMnLGlzQWxsU2VsZWN0ZWQ6J2lzQWxsU2VsZWN0ZWQnLGxlZnRGaXhlZExlYWZDb3VudDonZml4ZWRMZWFmQ29sdW1uc0xlbmd0aCcscmlnaHRGaXhlZExlYWZDb3VudDoncmlnaHRGaXhlZExlYWZDb2x1bW5zTGVuZ3RoJyxjb2x1bW5zQ291bnQ6ZnVuY3Rpb24gY29sdW1uc0NvdW50KHN0YXRlcyl7cmV0dXJuIHN0YXRlcy5jb2x1bW5zLmxlbmd0aDt9LGxlZnRGaXhlZENvdW50OmZ1bmN0aW9uIGxlZnRGaXhlZENvdW50KHN0YXRlcyl7cmV0dXJuIHN0YXRlcy5maXhlZENvbHVtbnMubGVuZ3RoO30scmlnaHRGaXhlZENvdW50OmZ1bmN0aW9uIHJpZ2h0Rml4ZWRDb3VudChzdGF0ZXMpe3JldHVybiBzdGF0ZXMucmlnaHRGaXhlZENvbHVtbnMubGVuZ3RoO319KSksbWV0aG9kczp7aXNDZWxsSGlkZGVuOmZ1bmN0aW9uIGlzQ2VsbEhpZGRlbihpbmRleCxjb2x1bW5zLGNvbHVtbil7aWYodGhpcy5maXhlZD09PXRydWV8fHRoaXMuZml4ZWQ9PT0nbGVmdCcpe3JldHVybiBpbmRleD49dGhpcy5sZWZ0Rml4ZWRMZWFmQ291bnQ7fWVsc2UgaWYodGhpcy5maXhlZD09PSdyaWdodCcpe3ZhciBiZWZvcmU9MDtmb3IodmFyIGk9MDtpPGluZGV4O2krKyl7YmVmb3JlKz1jb2x1bW5zW2ldLmNvbFNwYW47fXJldHVybiBiZWZvcmU8dGhpcy5jb2x1bW5zQ291bnQtdGhpcy5yaWdodEZpeGVkTGVhZkNvdW50O31lbHNlIGlmKCF0aGlzLmZpeGVkJiZjb2x1bW4uZml4ZWQpey8vIGhpZGUgY2VsbCB3aGVuIGZvb3RlciBpbnN0YW5jZSBpcyBub3QgZml4ZWQgYW5kIGNvbHVtbiBpcyBmaXhlZApyZXR1cm4gdHJ1ZTt9ZWxzZXtyZXR1cm4gaW5kZXg8dGhpcy5sZWZ0Rml4ZWRDb3VudHx8aW5kZXg+PXRoaXMuY29sdW1uc0NvdW50LXRoaXMucmlnaHRGaXhlZENvdW50O319LGdldFJvd0NsYXNzZXM6ZnVuY3Rpb24gZ2V0Um93Q2xhc3Nlcyhjb2x1bW4sY2VsbEluZGV4KXt2YXIgY2xhc3Nlcz1bY29sdW1uLmlkLGNvbHVtbi5hbGlnbixjb2x1bW4ubGFiZWxDbGFzc05hbWVdO2lmKGNvbHVtbi5jbGFzc05hbWUpe2NsYXNzZXMucHVzaChjb2x1bW4uY2xhc3NOYW1lKTt9aWYodGhpcy5pc0NlbGxIaWRkZW4oY2VsbEluZGV4LHRoaXMuY29sdW1ucyxjb2x1bW4pKXtjbGFzc2VzLnB1c2goJ2lzLWhpZGRlbicpO31pZighY29sdW1uLmNoaWxkcmVuKXtjbGFzc2VzLnB1c2goJ2lzLWxlYWYnKTt9cmV0dXJuIGNsYXNzZXM7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RhYmxlL3NyYy90YWJsZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCnZhciB0YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2V4dGVuZHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odGFyZ2V0KXtmb3IodmFyIGk9MTtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXt2YXIgc291cmNlPWFyZ3VtZW50c1tpXTtmb3IodmFyIGtleSBpbiBzb3VyY2Upe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2Usa2V5KSl7dGFyZ2V0W2tleV09c291cmNlW2tleV07fX19cmV0dXJuIHRhcmdldDt9Oy8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciB0YWJsZUlkU2VlZD0xOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsVGFibGUnLG1peGluczpbbG9jYWxlX2RlZmF1bHQuYSxtaWdyYXRpbmdfZGVmYXVsdC5hXSxkaXJlY3RpdmVzOntNb3VzZXdoZWVsOmRpcmVjdGl2ZXNfbW91c2V3aGVlbH0scHJvcHM6e2RhdGE6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LHNpemU6U3RyaW5nLHdpZHRoOltTdHJpbmcsTnVtYmVyXSxoZWlnaHQ6W1N0cmluZyxOdW1iZXJdLG1heEhlaWdodDpbU3RyaW5nLE51bWJlcl0sZml0Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxzdHJpcGU6Qm9vbGVhbixib3JkZXI6Qm9vbGVhbixyb3dLZXk6W1N0cmluZyxGdW5jdGlvbl0sY29udGV4dDp7fSxzaG93SGVhZGVyOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxzaG93U3VtbWFyeTpCb29sZWFuLHN1bVRleHQ6U3RyaW5nLHN1bW1hcnlNZXRob2Q6RnVuY3Rpb24scm93Q2xhc3NOYW1lOltTdHJpbmcsRnVuY3Rpb25dLHJvd1N0eWxlOltPYmplY3QsRnVuY3Rpb25dLGNlbGxDbGFzc05hbWU6W1N0cmluZyxGdW5jdGlvbl0sY2VsbFN0eWxlOltPYmplY3QsRnVuY3Rpb25dLGhlYWRlclJvd0NsYXNzTmFtZTpbU3RyaW5nLEZ1bmN0aW9uXSxoZWFkZXJSb3dTdHlsZTpbT2JqZWN0LEZ1bmN0aW9uXSxoZWFkZXJDZWxsQ2xhc3NOYW1lOltTdHJpbmcsRnVuY3Rpb25dLGhlYWRlckNlbGxTdHlsZTpbT2JqZWN0LEZ1bmN0aW9uXSxoaWdobGlnaHRDdXJyZW50Um93OkJvb2xlYW4sY3VycmVudFJvd0tleTpbU3RyaW5nLE51bWJlcl0sZW1wdHlUZXh0OlN0cmluZyxleHBhbmRSb3dLZXlzOkFycmF5LGRlZmF1bHRFeHBhbmRBbGw6Qm9vbGVhbixkZWZhdWx0U29ydDpPYmplY3QsdG9vbHRpcEVmZmVjdDpTdHJpbmcsc3Bhbk1ldGhvZDpGdW5jdGlvbixzZWxlY3RPbkluZGV0ZXJtaW5hdGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGluZGVudDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxNn0sdHJlZVByb3BzOnt0eXBlOk9iamVjdCxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJue2hhc0NoaWxkcmVuOidoYXNDaGlsZHJlbicsY2hpbGRyZW46J2NoaWxkcmVuJ307fX0sbGF6eTpCb29sZWFuLGxvYWQ6RnVuY3Rpb259LGNvbXBvbmVudHM6e1RhYmxlSGVhZGVyOnRhYmxlX2hlYWRlcixUYWJsZUZvb3Rlcjp0YWJsZV9mb290ZXIsVGFibGVCb2R5OnRhYmxlX2JvZHksRWxDaGVja2JveDpjaGVja2JveF9kZWZhdWx0LmF9LG1ldGhvZHM6e2dldE1pZ3JhdGluZ0NvbmZpZzpmdW5jdGlvbiBnZXRNaWdyYXRpbmdDb25maWcoKXtyZXR1cm57ZXZlbnRzOntleHBhbmQ6J2V4cGFuZCBpcyByZW5hbWVkIHRvIGV4cGFuZC1jaGFuZ2UnfX07fSxzZXRDdXJyZW50Um93OmZ1bmN0aW9uIHNldEN1cnJlbnRSb3cocm93KXt0aGlzLnN0b3JlLmNvbW1pdCgnc2V0Q3VycmVudFJvdycscm93KTt9LHRvZ2dsZVJvd1NlbGVjdGlvbjpmdW5jdGlvbiB0b2dnbGVSb3dTZWxlY3Rpb24ocm93LHNlbGVjdGVkKXt0aGlzLnN0b3JlLnRvZ2dsZVJvd1NlbGVjdGlvbihyb3csc2VsZWN0ZWQsZmFsc2UpO3RoaXMuc3RvcmUudXBkYXRlQWxsU2VsZWN0ZWQoKTt9LHRvZ2dsZVJvd0V4cGFuc2lvbjpmdW5jdGlvbiB0b2dnbGVSb3dFeHBhbnNpb24ocm93LGV4cGFuZGVkKXt0aGlzLnN0b3JlLnRvZ2dsZVJvd0V4cGFuc2lvbkFkYXB0ZXIocm93LGV4cGFuZGVkKTt9LGNsZWFyU2VsZWN0aW9uOmZ1bmN0aW9uIGNsZWFyU2VsZWN0aW9uKCl7dGhpcy5zdG9yZS5jbGVhclNlbGVjdGlvbigpO30sY2xlYXJGaWx0ZXI6ZnVuY3Rpb24gY2xlYXJGaWx0ZXIoY29sdW1uS2V5cyl7dGhpcy5zdG9yZS5jbGVhckZpbHRlcihjb2x1bW5LZXlzKTt9LGNsZWFyU29ydDpmdW5jdGlvbiBjbGVhclNvcnQoKXt0aGlzLnN0b3JlLmNsZWFyU29ydCgpO30saGFuZGxlTW91c2VMZWF2ZTpmdW5jdGlvbiBoYW5kbGVNb3VzZUxlYXZlKCl7dGhpcy5zdG9yZS5jb21taXQoJ3NldEhvdmVyUm93JyxudWxsKTtpZih0aGlzLmhvdmVyU3RhdGUpdGhpcy5ob3ZlclN0YXRlPW51bGw7fSx1cGRhdGVTY3JvbGxZOmZ1bmN0aW9uIHVwZGF0ZVNjcm9sbFkoKXt2YXIgY2hhbmdlZD10aGlzLmxheW91dC51cGRhdGVTY3JvbGxZKCk7aWYoY2hhbmdlZCl7dGhpcy5sYXlvdXQubm90aWZ5T2JzZXJ2ZXJzKCdzY3JvbGxhYmxlJyk7dGhpcy5sYXlvdXQudXBkYXRlQ29sdW1uc1dpZHRoKCk7fX0saGFuZGxlRml4ZWRNb3VzZXdoZWVsOmZ1bmN0aW9uIGhhbmRsZUZpeGVkTW91c2V3aGVlbChldmVudCxkYXRhKXt2YXIgYm9keVdyYXBwZXI9dGhpcy5ib2R5V3JhcHBlcjtpZihNYXRoLmFicyhkYXRhLnNwaW5ZKT4wKXt2YXIgY3VycmVudFNjcm9sbFRvcD1ib2R5V3JhcHBlci5zY3JvbGxUb3A7aWYoZGF0YS5waXhlbFk8MCYmY3VycmVudFNjcm9sbFRvcCE9PTApe2V2ZW50LnByZXZlbnREZWZhdWx0KCk7fWlmKGRhdGEucGl4ZWxZPjAmJmJvZHlXcmFwcGVyLnNjcm9sbEhlaWdodC1ib2R5V3JhcHBlci5jbGllbnRIZWlnaHQ+Y3VycmVudFNjcm9sbFRvcCl7ZXZlbnQucHJldmVudERlZmF1bHQoKTt9Ym9keVdyYXBwZXIuc2Nyb2xsVG9wKz1NYXRoLmNlaWwoZGF0YS5waXhlbFkvNSk7fWVsc2V7Ym9keVdyYXBwZXIuc2Nyb2xsTGVmdCs9TWF0aC5jZWlsKGRhdGEucGl4ZWxYLzUpO319LGhhbmRsZUhlYWRlckZvb3Rlck1vdXNld2hlZWw6ZnVuY3Rpb24gaGFuZGxlSGVhZGVyRm9vdGVyTW91c2V3aGVlbChldmVudCxkYXRhKXt2YXIgcGl4ZWxYPWRhdGEucGl4ZWxYLHBpeGVsWT1kYXRhLnBpeGVsWTtpZihNYXRoLmFicyhwaXhlbFgpPj1NYXRoLmFicyhwaXhlbFkpKXt0aGlzLmJvZHlXcmFwcGVyLnNjcm9sbExlZnQrPWRhdGEucGl4ZWxYLzU7fX0sLy8gVE9ETyDkvb/nlKggQ1NTIHRyYW5zZm9ybQpzeW5jUG9zdGlvbjpPYmplY3QoZXh0ZXJuYWxfdGhyb3R0bGVfZGVib3VuY2VfWyJ0aHJvdHRsZSJdKSgyMCxmdW5jdGlvbigpe3ZhciBfYm9keVdyYXBwZXI9dGhpcy5ib2R5V3JhcHBlcixzY3JvbGxMZWZ0PV9ib2R5V3JhcHBlci5zY3JvbGxMZWZ0LHNjcm9sbFRvcD1fYm9keVdyYXBwZXIuc2Nyb2xsVG9wLG9mZnNldFdpZHRoPV9ib2R5V3JhcHBlci5vZmZzZXRXaWR0aCxzY3JvbGxXaWR0aD1fYm9keVdyYXBwZXIuc2Nyb2xsV2lkdGg7dmFyIF8kcmVmcz10aGlzLiRyZWZzLGhlYWRlcldyYXBwZXI9XyRyZWZzLmhlYWRlcldyYXBwZXIsZm9vdGVyV3JhcHBlcj1fJHJlZnMuZm9vdGVyV3JhcHBlcixmaXhlZEJvZHlXcmFwcGVyPV8kcmVmcy5maXhlZEJvZHlXcmFwcGVyLHJpZ2h0Rml4ZWRCb2R5V3JhcHBlcj1fJHJlZnMucmlnaHRGaXhlZEJvZHlXcmFwcGVyO2lmKGhlYWRlcldyYXBwZXIpaGVhZGVyV3JhcHBlci5zY3JvbGxMZWZ0PXNjcm9sbExlZnQ7aWYoZm9vdGVyV3JhcHBlcilmb290ZXJXcmFwcGVyLnNjcm9sbExlZnQ9c2Nyb2xsTGVmdDtpZihmaXhlZEJvZHlXcmFwcGVyKWZpeGVkQm9keVdyYXBwZXIuc2Nyb2xsVG9wPXNjcm9sbFRvcDtpZihyaWdodEZpeGVkQm9keVdyYXBwZXIpcmlnaHRGaXhlZEJvZHlXcmFwcGVyLnNjcm9sbFRvcD1zY3JvbGxUb3A7dmFyIG1heFNjcm9sbExlZnRQb3NpdGlvbj1zY3JvbGxXaWR0aC1vZmZzZXRXaWR0aC0xO2lmKHNjcm9sbExlZnQ+PW1heFNjcm9sbExlZnRQb3NpdGlvbil7dGhpcy5zY3JvbGxQb3NpdGlvbj0ncmlnaHQnO31lbHNlIGlmKHNjcm9sbExlZnQ9PT0wKXt0aGlzLnNjcm9sbFBvc2l0aW9uPSdsZWZ0Jzt9ZWxzZXt0aGlzLnNjcm9sbFBvc2l0aW9uPSdtaWRkbGUnO319KSxiaW5kRXZlbnRzOmZ1bmN0aW9uIGJpbmRFdmVudHMoKXt0aGlzLmJvZHlXcmFwcGVyLmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsdGhpcy5zeW5jUG9zdGlvbix7cGFzc2l2ZTp0cnVlfSk7aWYodGhpcy5maXQpe09iamVjdChyZXNpemVfZXZlbnRfWyJhZGRSZXNpemVMaXN0ZW5lciJdKSh0aGlzLiRlbCx0aGlzLnJlc2l6ZUxpc3RlbmVyKTt9fSx1bmJpbmRFdmVudHM6ZnVuY3Rpb24gdW5iaW5kRXZlbnRzKCl7dGhpcy5ib2R5V3JhcHBlci5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLHRoaXMuc3luY1Bvc3Rpb24se3Bhc3NpdmU6dHJ1ZX0pO2lmKHRoaXMuZml0KXtPYmplY3QocmVzaXplX2V2ZW50X1sicmVtb3ZlUmVzaXplTGlzdGVuZXIiXSkodGhpcy4kZWwsdGhpcy5yZXNpemVMaXN0ZW5lcik7fX0scmVzaXplTGlzdGVuZXI6ZnVuY3Rpb24gcmVzaXplTGlzdGVuZXIoKXtpZighdGhpcy4kcmVhZHkpcmV0dXJuO3ZhciBzaG91bGRVcGRhdGVMYXlvdXQ9ZmFsc2U7dmFyIGVsPXRoaXMuJGVsO3ZhciBfcmVzaXplU3RhdGU9dGhpcy5yZXNpemVTdGF0ZSxvbGRXaWR0aD1fcmVzaXplU3RhdGUud2lkdGgsb2xkSGVpZ2h0PV9yZXNpemVTdGF0ZS5oZWlnaHQ7dmFyIHdpZHRoPWVsLm9mZnNldFdpZHRoO2lmKG9sZFdpZHRoIT09d2lkdGgpe3Nob3VsZFVwZGF0ZUxheW91dD10cnVlO312YXIgaGVpZ2h0PWVsLm9mZnNldEhlaWdodDtpZigodGhpcy5oZWlnaHR8fHRoaXMuc2hvdWxkVXBkYXRlSGVpZ2h0KSYmb2xkSGVpZ2h0IT09aGVpZ2h0KXtzaG91bGRVcGRhdGVMYXlvdXQ9dHJ1ZTt9aWYoc2hvdWxkVXBkYXRlTGF5b3V0KXt0aGlzLnJlc2l6ZVN0YXRlLndpZHRoPXdpZHRoO3RoaXMucmVzaXplU3RhdGUuaGVpZ2h0PWhlaWdodDt0aGlzLmRvTGF5b3V0KCk7fX0sZG9MYXlvdXQ6ZnVuY3Rpb24gZG9MYXlvdXQoKXtpZih0aGlzLnNob3VsZFVwZGF0ZUhlaWdodCl7dGhpcy5sYXlvdXQudXBkYXRlRWxzSGVpZ2h0KCk7fXRoaXMubGF5b3V0LnVwZGF0ZUNvbHVtbnNXaWR0aCgpO30sc29ydDpmdW5jdGlvbiBzb3J0KHByb3Asb3JkZXIpe3RoaXMuc3RvcmUuY29tbWl0KCdzb3J0Jyx7cHJvcDpwcm9wLG9yZGVyOm9yZGVyfSk7fSx0b2dnbGVBbGxTZWxlY3Rpb246ZnVuY3Rpb24gdG9nZ2xlQWxsU2VsZWN0aW9uKCl7dGhpcy5zdG9yZS5jb21taXQoJ3RvZ2dsZUFsbFNlbGVjdGlvbicpO319LGNvbXB1dGVkOnRhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfZXh0ZW5kcyh7dGFibGVTaXplOmZ1bmN0aW9uIHRhYmxlU2l6ZSgpe3JldHVybiB0aGlzLnNpemV8fCh0aGlzLiRFTEVNRU5UfHx7fSkuc2l6ZTt9LGJvZHlXcmFwcGVyOmZ1bmN0aW9uIGJvZHlXcmFwcGVyKCl7cmV0dXJuIHRoaXMuJHJlZnMuYm9keVdyYXBwZXI7fSxzaG91bGRVcGRhdGVIZWlnaHQ6ZnVuY3Rpb24gc2hvdWxkVXBkYXRlSGVpZ2h0KCl7cmV0dXJuIHRoaXMuaGVpZ2h0fHx0aGlzLm1heEhlaWdodHx8dGhpcy5maXhlZENvbHVtbnMubGVuZ3RoPjB8fHRoaXMucmlnaHRGaXhlZENvbHVtbnMubGVuZ3RoPjA7fSxib2R5V2lkdGg6ZnVuY3Rpb24gYm9keVdpZHRoKCl7dmFyIF9sYXlvdXQ9dGhpcy5sYXlvdXQsYm9keVdpZHRoPV9sYXlvdXQuYm9keVdpZHRoLHNjcm9sbFk9X2xheW91dC5zY3JvbGxZLGd1dHRlcldpZHRoPV9sYXlvdXQuZ3V0dGVyV2lkdGg7cmV0dXJuIGJvZHlXaWR0aD9ib2R5V2lkdGgtKHNjcm9sbFk/Z3V0dGVyV2lkdGg6MCkrJ3B4JzonJzt9LGJvZHlIZWlnaHQ6ZnVuY3Rpb24gYm9keUhlaWdodCgpe3ZhciBfbGF5b3V0Mj10aGlzLmxheW91dCxfbGF5b3V0MiRoZWFkZXJIZWlnaHQ9X2xheW91dDIuaGVhZGVySGVpZ2h0LGhlYWRlckhlaWdodD1fbGF5b3V0MiRoZWFkZXJIZWlnaHQ9PT11bmRlZmluZWQ/MDpfbGF5b3V0MiRoZWFkZXJIZWlnaHQsYm9keUhlaWdodD1fbGF5b3V0Mi5ib2R5SGVpZ2h0LF9sYXlvdXQyJGZvb3RlckhlaWdodD1fbGF5b3V0Mi5mb290ZXJIZWlnaHQsZm9vdGVySGVpZ2h0PV9sYXlvdXQyJGZvb3RlckhlaWdodD09PXVuZGVmaW5lZD8wOl9sYXlvdXQyJGZvb3RlckhlaWdodDtpZih0aGlzLmhlaWdodCl7cmV0dXJue2hlaWdodDpib2R5SGVpZ2h0P2JvZHlIZWlnaHQrJ3B4JzonJ307fWVsc2UgaWYodGhpcy5tYXhIZWlnaHQpe3ZhciBtYXhIZWlnaHQ9cGFyc2VIZWlnaHQodGhpcy5tYXhIZWlnaHQpO2lmKHR5cGVvZiBtYXhIZWlnaHQ9PT0nbnVtYmVyJyl7cmV0dXJueydtYXgtaGVpZ2h0JzptYXhIZWlnaHQtZm9vdGVySGVpZ2h0LSh0aGlzLnNob3dIZWFkZXI/aGVhZGVySGVpZ2h0OjApKydweCd9O319cmV0dXJue307fSxmaXhlZEJvZHlIZWlnaHQ6ZnVuY3Rpb24gZml4ZWRCb2R5SGVpZ2h0KCl7aWYodGhpcy5oZWlnaHQpe3JldHVybntoZWlnaHQ6dGhpcy5sYXlvdXQuZml4ZWRCb2R5SGVpZ2h0P3RoaXMubGF5b3V0LmZpeGVkQm9keUhlaWdodCsncHgnOicnfTt9ZWxzZSBpZih0aGlzLm1heEhlaWdodCl7dmFyIG1heEhlaWdodD1wYXJzZUhlaWdodCh0aGlzLm1heEhlaWdodCk7aWYodHlwZW9mIG1heEhlaWdodD09PSdudW1iZXInKXttYXhIZWlnaHQ9dGhpcy5sYXlvdXQuc2Nyb2xsWD9tYXhIZWlnaHQtdGhpcy5sYXlvdXQuZ3V0dGVyV2lkdGg6bWF4SGVpZ2h0O2lmKHRoaXMuc2hvd0hlYWRlcil7bWF4SGVpZ2h0LT10aGlzLmxheW91dC5oZWFkZXJIZWlnaHQ7fW1heEhlaWdodC09dGhpcy5sYXlvdXQuZm9vdGVySGVpZ2h0O3JldHVybnsnbWF4LWhlaWdodCc6bWF4SGVpZ2h0KydweCd9O319cmV0dXJue307fSxmaXhlZEhlaWdodDpmdW5jdGlvbiBmaXhlZEhlaWdodCgpe2lmKHRoaXMubWF4SGVpZ2h0KXtpZih0aGlzLnNob3dTdW1tYXJ5KXtyZXR1cm57Ym90dG9tOjB9O31yZXR1cm57Ym90dG9tOnRoaXMubGF5b3V0LnNjcm9sbFgmJnRoaXMuZGF0YS5sZW5ndGg/dGhpcy5sYXlvdXQuZ3V0dGVyV2lkdGgrJ3B4JzonJ307fWVsc2V7aWYodGhpcy5zaG93U3VtbWFyeSl7cmV0dXJue2hlaWdodDp0aGlzLmxheW91dC50YWJsZUhlaWdodD90aGlzLmxheW91dC50YWJsZUhlaWdodCsncHgnOicnfTt9cmV0dXJue2hlaWdodDp0aGlzLmxheW91dC52aWV3cG9ydEhlaWdodD90aGlzLmxheW91dC52aWV3cG9ydEhlaWdodCsncHgnOicnfTt9fSxlbXB0eUJsb2NrU3R5bGU6ZnVuY3Rpb24gZW1wdHlCbG9ja1N0eWxlKCl7aWYodGhpcy5kYXRhJiZ0aGlzLmRhdGEubGVuZ3RoKXJldHVybiBudWxsO3ZhciBoZWlnaHQ9JzEwMCUnO2lmKHRoaXMubGF5b3V0LmFwcGVuZEhlaWdodCl7aGVpZ2h0PSdjYWxjKDEwMCUgLSAnK3RoaXMubGF5b3V0LmFwcGVuZEhlaWdodCsncHgpJzt9cmV0dXJue3dpZHRoOnRoaXMuYm9keVdpZHRoLGhlaWdodDpoZWlnaHR9O319LG1hcFN0YXRlcyh7c2VsZWN0aW9uOidzZWxlY3Rpb24nLGNvbHVtbnM6J2NvbHVtbnMnLHRhYmxlRGF0YTonZGF0YScsZml4ZWRDb2x1bW5zOidmaXhlZENvbHVtbnMnLHJpZ2h0Rml4ZWRDb2x1bW5zOidyaWdodEZpeGVkQ29sdW1ucyd9KSksd2F0Y2g6e2hlaWdodDp7aW1tZWRpYXRlOnRydWUsaGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKHZhbHVlKXt0aGlzLmxheW91dC5zZXRIZWlnaHQodmFsdWUpO319LG1heEhlaWdodDp7aW1tZWRpYXRlOnRydWUsaGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKHZhbHVlKXt0aGlzLmxheW91dC5zZXRNYXhIZWlnaHQodmFsdWUpO319LGN1cnJlbnRSb3dLZXk6e2ltbWVkaWF0ZTp0cnVlLGhhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcih2YWx1ZSl7aWYoIXRoaXMucm93S2V5KXJldHVybjt0aGlzLnN0b3JlLnNldEN1cnJlbnRSb3dLZXkodmFsdWUpO319LGRhdGE6e2ltbWVkaWF0ZTp0cnVlLGhhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcih2YWx1ZSl7dGhpcy5zdG9yZS5jb21taXQoJ3NldERhdGEnLHZhbHVlKTt9fSxleHBhbmRSb3dLZXlzOntpbW1lZGlhdGU6dHJ1ZSxoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsKXtpZihuZXdWYWwpe3RoaXMuc3RvcmUuc2V0RXhwYW5kUm93S2V5c0FkYXB0ZXIobmV3VmFsKTt9fX19LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpe3ZhciBfdGhpcz10aGlzO3RoaXMudGFibGVJZD0nZWwtdGFibGVfJyt0YWJsZUlkU2VlZCsrO3RoaXMuZGVib3VuY2VkVXBkYXRlTGF5b3V0PU9iamVjdChleHRlcm5hbF90aHJvdHRsZV9kZWJvdW5jZV9bImRlYm91bmNlIl0pKDUwLGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzLmRvTGF5b3V0KCk7fSk7fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXMyPXRoaXM7dGhpcy5iaW5kRXZlbnRzKCk7dGhpcy5zdG9yZS51cGRhdGVDb2x1bW5zKCk7dGhpcy5kb0xheW91dCgpO3RoaXMucmVzaXplU3RhdGU9e3dpZHRoOnRoaXMuJGVsLm9mZnNldFdpZHRoLGhlaWdodDp0aGlzLiRlbC5vZmZzZXRIZWlnaHR9Oy8vIGluaXQgZmlsdGVycwp0aGlzLnN0b3JlLnN0YXRlcy5jb2x1bW5zLmZvckVhY2goZnVuY3Rpb24oY29sdW1uKXtpZihjb2x1bW4uZmlsdGVyZWRWYWx1ZSYmY29sdW1uLmZpbHRlcmVkVmFsdWUubGVuZ3RoKXtfdGhpczIuc3RvcmUuY29tbWl0KCdmaWx0ZXJDaGFuZ2UnLHtjb2x1bW46Y29sdW1uLHZhbHVlczpjb2x1bW4uZmlsdGVyZWRWYWx1ZSxzaWxlbnQ6dHJ1ZX0pO319KTt0aGlzLiRyZWFkeT10cnVlO30sZGVzdHJveWVkOmZ1bmN0aW9uIGRlc3Ryb3llZCgpe3RoaXMudW5iaW5kRXZlbnRzKCk7fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXt2YXIgX3RyZWVQcm9wcz10aGlzLnRyZWVQcm9wcyxfdHJlZVByb3BzJGhhc0NoaWxkcmU9X3RyZWVQcm9wcy5oYXNDaGlsZHJlbixoYXNDaGlsZHJlbj1fdHJlZVByb3BzJGhhc0NoaWxkcmU9PT11bmRlZmluZWQ/J2hhc0NoaWxkcmVuJzpfdHJlZVByb3BzJGhhc0NoaWxkcmUsX3RyZWVQcm9wcyRjaGlsZHJlbj1fdHJlZVByb3BzLmNoaWxkcmVuLGNoaWxkcmVuPV90cmVlUHJvcHMkY2hpbGRyZW49PT11bmRlZmluZWQ/J2NoaWxkcmVuJzpfdHJlZVByb3BzJGNoaWxkcmVuO3RoaXMuc3RvcmU9Y3JlYXRlU3RvcmUodGhpcyx7cm93S2V5OnRoaXMucm93S2V5LGRlZmF1bHRFeHBhbmRBbGw6dGhpcy5kZWZhdWx0RXhwYW5kQWxsLHNlbGVjdE9uSW5kZXRlcm1pbmF0ZTp0aGlzLnNlbGVjdE9uSW5kZXRlcm1pbmF0ZSwvLyBUcmVlVGFibGUg55qE55u45YWz6YWN572uCmluZGVudDp0aGlzLmluZGVudCxsYXp5OnRoaXMubGF6eSxsYXp5Q29sdW1uSWRlbnRpZmllcjpoYXNDaGlsZHJlbixjaGlsZHJlbkNvbHVtbk5hbWU6Y2hpbGRyZW59KTt2YXIgbGF5b3V0PW5ldyB0YWJsZV9sYXlvdXQoe3N0b3JlOnRoaXMuc3RvcmUsdGFibGU6dGhpcyxmaXQ6dGhpcy5maXQsc2hvd0hlYWRlcjp0aGlzLnNob3dIZWFkZXJ9KTtyZXR1cm57bGF5b3V0OmxheW91dCxpc0hpZGRlbjpmYWxzZSxyZW5kZXJFeHBhbmRlZDpudWxsLHJlc2l6ZVByb3h5VmlzaWJsZTpmYWxzZSxyZXNpemVTdGF0ZTp7d2lkdGg6bnVsbCxoZWlnaHQ6bnVsbH0sLy8g5piv5ZCm5oul5pyJ5aSa57qn6KGo5aS0CmlzR3JvdXA6ZmFsc2Usc2Nyb2xsUG9zaXRpb246J2xlZnQnfTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYmxlL3NyYy90YWJsZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXRhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFibGUvc3JjL3RhYmxlLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHRhYmxlX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLHRhYmxldnVlX3R5cGVfdGVtcGxhdGVfaWRfNDkzZmUzNGVfcmVuZGVyLHRhYmxldnVlX3R5cGVfdGVtcGxhdGVfaWRfNDkzZmUzNGVfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciB0YWJsZV9hcGk7fXRhYmxlX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvdGFibGUvc3JjL3RhYmxlLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfdGFibGU9dGFibGVfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJsZS9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY190YWJsZS5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChzcmNfdGFibGUubmFtZSxzcmNfdGFibGUpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc190YWJsZT1zcmNfdGFibGU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJsZS9zcmMvY29uZmlnLmpzCnZhciBjZWxsU3RhcnRzPXtkZWZhdWx0OntvcmRlcjonJ30sc2VsZWN0aW9uOnt3aWR0aDo0OCxtaW5XaWR0aDo0OCxyZWFsV2lkdGg6NDgsb3JkZXI6JycsY2xhc3NOYW1lOidlbC10YWJsZS1jb2x1bW4tLXNlbGVjdGlvbid9LGV4cGFuZDp7d2lkdGg6NDgsbWluV2lkdGg6NDgscmVhbFdpZHRoOjQ4LG9yZGVyOicnfSxpbmRleDp7d2lkdGg6NDgsbWluV2lkdGg6NDgscmVhbFdpZHRoOjQ4LG9yZGVyOicnfX07Ly8g6L+Z5Lqb6YCJ6aG55LiN5bqU6K+l6KKr6KaG55uWCnZhciBjZWxsRm9yY2VkPXtzZWxlY3Rpb246e3JlbmRlckhlYWRlcjpmdW5jdGlvbiByZW5kZXJIZWFkZXIoaCxfcmVmKXt2YXIgc3RvcmU9X3JlZi5zdG9yZTtyZXR1cm4gaCgnZWwtY2hlY2tib3gnLHthdHRyczp7ZGlzYWJsZWQ6c3RvcmUuc3RhdGVzLmRhdGEmJnN0b3JlLnN0YXRlcy5kYXRhLmxlbmd0aD09PTAsaW5kZXRlcm1pbmF0ZTpzdG9yZS5zdGF0ZXMuc2VsZWN0aW9uLmxlbmd0aD4wJiYhdGhpcy5pc0FsbFNlbGVjdGVkLHZhbHVlOnRoaXMuaXNBbGxTZWxlY3RlZH0sbmF0aXZlT246eydjbGljayc6dGhpcy50b2dnbGVBbGxTZWxlY3Rpb259fSk7fSxyZW5kZXJDZWxsOmZ1bmN0aW9uIHJlbmRlckNlbGwoaCxfcmVmMil7dmFyIHJvdz1fcmVmMi5yb3csY29sdW1uPV9yZWYyLmNvbHVtbixzdG9yZT1fcmVmMi5zdG9yZSwkaW5kZXg9X3JlZjIuJGluZGV4O3JldHVybiBoKCdlbC1jaGVja2JveCcse25hdGl2ZU9uOnsnY2xpY2snOmZ1bmN0aW9uIGNsaWNrKGV2ZW50KXtyZXR1cm4gZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7fX0sYXR0cnM6e3ZhbHVlOnN0b3JlLmlzU2VsZWN0ZWQocm93KSxkaXNhYmxlZDpjb2x1bW4uc2VsZWN0YWJsZT8hY29sdW1uLnNlbGVjdGFibGUuY2FsbChudWxsLHJvdywkaW5kZXgpOmZhbHNlfSxvbjp7J2lucHV0JzpmdW5jdGlvbiBpbnB1dCgpe3N0b3JlLmNvbW1pdCgncm93U2VsZWN0ZWRDaGFuZ2VkJyxyb3cpO319fSk7fSxzb3J0YWJsZTpmYWxzZSxyZXNpemFibGU6ZmFsc2V9LGluZGV4OntyZW5kZXJIZWFkZXI6ZnVuY3Rpb24gcmVuZGVySGVhZGVyKGgsX3JlZjMpe3ZhciBjb2x1bW49X3JlZjMuY29sdW1uO3JldHVybiBjb2x1bW4ubGFiZWx8fCcjJzt9LHJlbmRlckNlbGw6ZnVuY3Rpb24gcmVuZGVyQ2VsbChoLF9yZWY0KXt2YXIgJGluZGV4PV9yZWY0LiRpbmRleCxjb2x1bW49X3JlZjQuY29sdW1uO3ZhciBpPSRpbmRleCsxO3ZhciBpbmRleD1jb2x1bW4uaW5kZXg7aWYodHlwZW9mIGluZGV4PT09J251bWJlcicpe2k9JGluZGV4K2luZGV4O31lbHNlIGlmKHR5cGVvZiBpbmRleD09PSdmdW5jdGlvbicpe2k9aW5kZXgoJGluZGV4KTt9cmV0dXJuIGgoJ2RpdicsW2ldKTt9LHNvcnRhYmxlOmZhbHNlfSxleHBhbmQ6e3JlbmRlckhlYWRlcjpmdW5jdGlvbiByZW5kZXJIZWFkZXIoaCxfcmVmNSl7dmFyIGNvbHVtbj1fcmVmNS5jb2x1bW47cmV0dXJuIGNvbHVtbi5sYWJlbHx8Jyc7fSxyZW5kZXJDZWxsOmZ1bmN0aW9uIHJlbmRlckNlbGwoaCxfcmVmNil7dmFyIHJvdz1fcmVmNi5yb3csc3RvcmU9X3JlZjYuc3RvcmU7dmFyIGNsYXNzZXM9WydlbC10YWJsZV9fZXhwYW5kLWljb24nXTtpZihzdG9yZS5zdGF0ZXMuZXhwYW5kUm93cy5pbmRleE9mKHJvdyk+LTEpe2NsYXNzZXMucHVzaCgnZWwtdGFibGVfX2V4cGFuZC1pY29uLS1leHBhbmRlZCcpO312YXIgY2FsbGJhY2s9ZnVuY3Rpb24gY2FsbGJhY2soZSl7ZS5zdG9wUHJvcGFnYXRpb24oKTtzdG9yZS50b2dnbGVSb3dFeHBhbnNpb24ocm93KTt9O3JldHVybiBoKCdkaXYnLHsnY2xhc3MnOmNsYXNzZXMsb246eydjbGljayc6Y2FsbGJhY2t9fSxbaCgnaScseydjbGFzcyc6J2VsLWljb24gZWwtaWNvbi1hcnJvdy1yaWdodCd9KV0pO30sc29ydGFibGU6ZmFsc2UscmVzaXphYmxlOmZhbHNlLGNsYXNzTmFtZTonZWwtdGFibGVfX2V4cGFuZC1jb2x1bW4nfX07ZnVuY3Rpb24gZGVmYXVsdFJlbmRlckNlbGwoaCxfcmVmNyl7dmFyIHJvdz1fcmVmNy5yb3csY29sdW1uPV9yZWY3LmNvbHVtbiwkaW5kZXg9X3JlZjcuJGluZGV4O3ZhciBwcm9wZXJ0eT1jb2x1bW4ucHJvcGVydHk7dmFyIHZhbHVlPXByb3BlcnR5JiZPYmplY3QodXRpbF9bImdldFByb3BCeVBhdGgiXSkocm93LHByb3BlcnR5KS52O2lmKGNvbHVtbiYmY29sdW1uLmZvcm1hdHRlcil7cmV0dXJuIGNvbHVtbi5mb3JtYXR0ZXIocm93LGNvbHVtbix2YWx1ZSwkaW5kZXgpO31yZXR1cm4gdmFsdWU7fWZ1bmN0aW9uIHRyZWVDZWxsUHJlZml4KGgsX3JlZjgpe3ZhciByb3c9X3JlZjgucm93LHRyZWVOb2RlPV9yZWY4LnRyZWVOb2RlLHN0b3JlPV9yZWY4LnN0b3JlO2lmKCF0cmVlTm9kZSlyZXR1cm4gbnVsbDt2YXIgZWxlPVtdO3ZhciBjYWxsYmFjaz1mdW5jdGlvbiBjYWxsYmFjayhlKXtlLnN0b3BQcm9wYWdhdGlvbigpO3N0b3JlLmxvYWRPclRvZ2dsZShyb3cpO307aWYodHJlZU5vZGUuaW5kZW50KXtlbGUucHVzaChoKCdzcGFuJyx7J2NsYXNzJzonZWwtdGFibGVfX2luZGVudCcsc3R5bGU6eydwYWRkaW5nLWxlZnQnOnRyZWVOb2RlLmluZGVudCsncHgnfX0pKTt9aWYodHlwZW9mIHRyZWVOb2RlLmV4cGFuZGVkPT09J2Jvb2xlYW4nJiYhdHJlZU5vZGUubm9MYXp5Q2hpbGRyZW4pe3ZhciBleHBhbmRDbGFzc2VzPVsnZWwtdGFibGVfX2V4cGFuZC1pY29uJyx0cmVlTm9kZS5leHBhbmRlZD8nZWwtdGFibGVfX2V4cGFuZC1pY29uLS1leHBhbmRlZCc6JyddO3ZhciBpY29uQ2xhc3Nlcz1bJ2VsLWljb24tYXJyb3ctcmlnaHQnXTtpZih0cmVlTm9kZS5sb2FkaW5nKXtpY29uQ2xhc3Nlcz1bJ2VsLWljb24tbG9hZGluZyddO31lbGUucHVzaChoKCdkaXYnLHsnY2xhc3MnOmV4cGFuZENsYXNzZXMsb246eydjbGljayc6Y2FsbGJhY2t9fSxbaCgnaScseydjbGFzcyc6aWNvbkNsYXNzZXN9KV0pKTt9ZWxzZXtlbGUucHVzaChoKCdzcGFuJyx7J2NsYXNzJzonZWwtdGFibGVfX3BsYWNlaG9sZGVyJ30pKTt9cmV0dXJuIGVsZTt9Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJsZS9zcmMvdGFibGUtY29sdW1uLmpzCnZhciB0YWJsZV9jb2x1bW5fZXh0ZW5kcz1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0YXJnZXQpe2Zvcih2YXIgaT0xO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe3ZhciBzb3VyY2U9YXJndW1lbnRzW2ldO2Zvcih2YXIga2V5IGluIHNvdXJjZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSxrZXkpKXt0YXJnZXRba2V5XT1zb3VyY2Vba2V5XTt9fX1yZXR1cm4gdGFyZ2V0O307dmFyIGNvbHVtbklkU2VlZD0xOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGFibGVfY29sdW1uPXtuYW1lOidFbFRhYmxlQ29sdW1uJyxwcm9wczp7dHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZGVmYXVsdCd9LGxhYmVsOlN0cmluZyxjbGFzc05hbWU6U3RyaW5nLGxhYmVsQ2xhc3NOYW1lOlN0cmluZyxwcm9wZXJ0eTpTdHJpbmcscHJvcDpTdHJpbmcsd2lkdGg6e30sbWluV2lkdGg6e30scmVuZGVySGVhZGVyOkZ1bmN0aW9uLHNvcnRhYmxlOnt0eXBlOltCb29sZWFuLFN0cmluZ10sZGVmYXVsdDpmYWxzZX0sc29ydE1ldGhvZDpGdW5jdGlvbixzb3J0Qnk6W1N0cmluZyxGdW5jdGlvbixBcnJheV0scmVzaXphYmxlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxjb2x1bW5LZXk6U3RyaW5nLGFsaWduOlN0cmluZyxoZWFkZXJBbGlnbjpTdHJpbmcsc2hvd1Rvb2x0aXBXaGVuT3ZlcmZsb3c6Qm9vbGVhbixzaG93T3ZlcmZsb3dUb29sdGlwOkJvb2xlYW4sZml4ZWQ6W0Jvb2xlYW4sU3RyaW5nXSxmb3JtYXR0ZXI6RnVuY3Rpb24sc2VsZWN0YWJsZTpGdW5jdGlvbixyZXNlcnZlU2VsZWN0aW9uOkJvb2xlYW4sZmlsdGVyTWV0aG9kOkZ1bmN0aW9uLGZpbHRlcmVkVmFsdWU6QXJyYXksZmlsdGVyczpBcnJheSxmaWx0ZXJQbGFjZW1lbnQ6U3RyaW5nLGZpbHRlck11bHRpcGxlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxpbmRleDpbTnVtYmVyLEZ1bmN0aW9uXSxzb3J0T3JkZXJzOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bJ2FzY2VuZGluZycsJ2Rlc2NlbmRpbmcnLG51bGxdO30sdmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpe3JldHVybiB2YWwuZXZlcnkoZnVuY3Rpb24ob3JkZXIpe3JldHVyblsnYXNjZW5kaW5nJywnZGVzY2VuZGluZycsbnVsbF0uaW5kZXhPZihvcmRlcik+LTE7fSk7fX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntpc1N1YkNvbHVtbjpmYWxzZSxjb2x1bW5zOltdfTt9LGNvbXB1dGVkOntvd25lcjpmdW5jdGlvbiBvd25lcigpe3ZhciBwYXJlbnQ9dGhpcy4kcGFyZW50O3doaWxlKHBhcmVudCYmIXBhcmVudC50YWJsZUlkKXtwYXJlbnQ9cGFyZW50LiRwYXJlbnQ7fXJldHVybiBwYXJlbnQ7fSxjb2x1bW5PclRhYmxlUGFyZW50OmZ1bmN0aW9uIGNvbHVtbk9yVGFibGVQYXJlbnQoKXt2YXIgcGFyZW50PXRoaXMuJHBhcmVudDt3aGlsZShwYXJlbnQmJiFwYXJlbnQudGFibGVJZCYmIXBhcmVudC5jb2x1bW5JZCl7cGFyZW50PXBhcmVudC4kcGFyZW50O31yZXR1cm4gcGFyZW50O30scmVhbFdpZHRoOmZ1bmN0aW9uIHJlYWxXaWR0aCgpe3JldHVybiBwYXJzZVdpZHRoKHRoaXMud2lkdGgpO30scmVhbE1pbldpZHRoOmZ1bmN0aW9uIHJlYWxNaW5XaWR0aCgpe3JldHVybiBwYXJzZU1pbldpZHRoKHRoaXMubWluV2lkdGgpO30scmVhbEFsaWduOmZ1bmN0aW9uIHJlYWxBbGlnbigpe3JldHVybiB0aGlzLmFsaWduPydpcy0nK3RoaXMuYWxpZ246bnVsbDt9LHJlYWxIZWFkZXJBbGlnbjpmdW5jdGlvbiByZWFsSGVhZGVyQWxpZ24oKXtyZXR1cm4gdGhpcy5oZWFkZXJBbGlnbj8naXMtJyt0aGlzLmhlYWRlckFsaWduOnRoaXMucmVhbEFsaWduO319LG1ldGhvZHM6e2dldFByb3BzRGF0YTpmdW5jdGlvbiBnZXRQcm9wc0RhdGEoKXt2YXIgX3RoaXM9dGhpcztmb3IodmFyIF9sZW49YXJndW1lbnRzLmxlbmd0aCxwcm9wcz1BcnJheShfbGVuKSxfa2V5PTA7X2tleTxfbGVuO19rZXkrKyl7cHJvcHNbX2tleV09YXJndW1lbnRzW19rZXldO31yZXR1cm4gcHJvcHMucmVkdWNlKGZ1bmN0aW9uKHByZXYsY3VyKXtpZihBcnJheS5pc0FycmF5KGN1cikpe2N1ci5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7cHJldltrZXldPV90aGlzW2tleV07fSk7fXJldHVybiBwcmV2O30se30pO30sZ2V0Q29sdW1uRWxJbmRleDpmdW5jdGlvbiBnZXRDb2x1bW5FbEluZGV4KGNoaWxkcmVuLGNoaWxkKXtyZXR1cm5bXS5pbmRleE9mLmNhbGwoY2hpbGRyZW4sY2hpbGQpO30sc2V0Q29sdW1uV2lkdGg6ZnVuY3Rpb24gc2V0Q29sdW1uV2lkdGgoY29sdW1uKXtpZih0aGlzLnJlYWxXaWR0aCl7Y29sdW1uLndpZHRoPXRoaXMucmVhbFdpZHRoO31pZih0aGlzLnJlYWxNaW5XaWR0aCl7Y29sdW1uLm1pbldpZHRoPXRoaXMucmVhbE1pbldpZHRoO31pZighY29sdW1uLm1pbldpZHRoKXtjb2x1bW4ubWluV2lkdGg9ODA7fWNvbHVtbi5yZWFsV2lkdGg9Y29sdW1uLndpZHRoPT09dW5kZWZpbmVkP2NvbHVtbi5taW5XaWR0aDpjb2x1bW4ud2lkdGg7cmV0dXJuIGNvbHVtbjt9LHNldENvbHVtbkZvcmNlZFByb3BzOmZ1bmN0aW9uIHNldENvbHVtbkZvcmNlZFByb3BzKGNvbHVtbil7Ly8g5a+55LqO54m55a6a57G75Z6L55qEIGNvbHVtbu+8jOafkOS6m+WxnuaAp+S4jeWFgeiuuOiuvue9rgp2YXIgdHlwZT1jb2x1bW4udHlwZTt2YXIgc291cmNlPWNlbGxGb3JjZWRbdHlwZV18fHt9O09iamVjdC5rZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbihwcm9wKXt2YXIgdmFsdWU9c291cmNlW3Byb3BdO2lmKHZhbHVlIT09dW5kZWZpbmVkKXtjb2x1bW5bcHJvcF09cHJvcD09PSdjbGFzc05hbWUnP2NvbHVtbltwcm9wXSsnICcrdmFsdWU6dmFsdWU7fX0pO3JldHVybiBjb2x1bW47fSxzZXRDb2x1bW5SZW5kZXJzOmZ1bmN0aW9uIHNldENvbHVtblJlbmRlcnMoY29sdW1uKXt2YXIgX3RoaXMyPXRoaXM7dmFyIGg9dGhpcy4kY3JlYXRlRWxlbWVudDsvLyByZW5kZXJIZWFkZXIg5bGe5oCn5LiN5o6o6I2Q5L2/55So44CCCmlmKHRoaXMucmVuZGVySGVhZGVyKXtjb25zb2xlLndhcm4oJ1tFbGVtZW50IFdhcm5dW1RhYmxlQ29sdW1uXUNvbXBhcmluZyB0byByZW5kZXItaGVhZGVyLCBzY29wZWQtc2xvdCBoZWFkZXIgaXMgZWFzaWVyIHRvIHVzZS4gV2UgcmVjb21tZW5kIHVzZXJzIHRvIHVzZSBzY29wZWQtc2xvdCBoZWFkZXIuJyk7fWVsc2UgaWYoY29sdW1uLnR5cGUhPT0nc2VsZWN0aW9uJyl7Y29sdW1uLnJlbmRlckhlYWRlcj1mdW5jdGlvbihoLHNjb3BlKXt2YXIgcmVuZGVySGVhZGVyPV90aGlzMi4kc2NvcGVkU2xvdHMuaGVhZGVyO3JldHVybiByZW5kZXJIZWFkZXI/cmVuZGVySGVhZGVyKHNjb3BlKTpjb2x1bW4ubGFiZWw7fTt9dmFyIG9yaWdpblJlbmRlckNlbGw9Y29sdW1uLnJlbmRlckNlbGw7Ly8gVE9ETzog6L+Z6YeM55qE5a6e546w6LCD5pW0CmlmKGNvbHVtbi50eXBlPT09J2V4cGFuZCcpey8vIOWvueS6juWxleW8gOihjO+8jHJlbmRlckNlbGwg5LiN5YWB6K646YWN572u55qE44CC5Zyo5LiK5LiA5q2l5Lit5bey57uP6K6+572u6L+H77yM6L+Z6YeM6ZyA6KaB566A5Y2V5bCB6KOF5LiA5LiL44CCCmNvbHVtbi5yZW5kZXJDZWxsPWZ1bmN0aW9uKGgsZGF0YSl7cmV0dXJuIGgoJ2RpdicseydjbGFzcyc6J2NlbGwnfSxbb3JpZ2luUmVuZGVyQ2VsbChoLGRhdGEpXSk7fTt0aGlzLm93bmVyLnJlbmRlckV4cGFuZGVkPWZ1bmN0aW9uKGgsZGF0YSl7cmV0dXJuIF90aGlzMi4kc2NvcGVkU2xvdHMuZGVmYXVsdD9fdGhpczIuJHNjb3BlZFNsb3RzLmRlZmF1bHQoZGF0YSk6X3RoaXMyLiRzbG90cy5kZWZhdWx0O307fWVsc2V7b3JpZ2luUmVuZGVyQ2VsbD1vcmlnaW5SZW5kZXJDZWxsfHxkZWZhdWx0UmVuZGVyQ2VsbDsvLyDlr7kgcmVuZGVyQ2VsbCDov5vooYzljIXoo4UKY29sdW1uLnJlbmRlckNlbGw9ZnVuY3Rpb24oaCxkYXRhKXt2YXIgY2hpbGRyZW49bnVsbDtpZihfdGhpczIuJHNjb3BlZFNsb3RzLmRlZmF1bHQpe2NoaWxkcmVuPV90aGlzMi4kc2NvcGVkU2xvdHMuZGVmYXVsdChkYXRhKTt9ZWxzZXtjaGlsZHJlbj1vcmlnaW5SZW5kZXJDZWxsKGgsZGF0YSk7fXZhciBwcmVmaXg9dHJlZUNlbGxQcmVmaXgoaCxkYXRhKTt2YXIgcHJvcHM9e2NsYXNzOidjZWxsJyxzdHlsZTp7fX07aWYoY29sdW1uLnNob3dPdmVyZmxvd1Rvb2x0aXApe3Byb3BzLmNsYXNzKz0nIGVsLXRvb2x0aXAnO3Byb3BzLnN0eWxlPXt3aWR0aDooZGF0YS5jb2x1bW4ucmVhbFdpZHRofHxkYXRhLmNvbHVtbi53aWR0aCktMSsncHgnfTt9cmV0dXJuIGgoJ2RpdicscHJvcHMsW3ByZWZpeCxjaGlsZHJlbl0pO307fXJldHVybiBjb2x1bW47fSxyZWdpc3Rlck5vcm1hbFdhdGNoZXJzOmZ1bmN0aW9uIHJlZ2lzdGVyTm9ybWFsV2F0Y2hlcnMoKXt2YXIgX3RoaXMzPXRoaXM7dmFyIHByb3BzPVsnbGFiZWwnLCdwcm9wZXJ0eScsJ2ZpbHRlcnMnLCdmaWx0ZXJNdWx0aXBsZScsJ3NvcnRhYmxlJywnaW5kZXgnLCdmb3JtYXR0ZXInLCdjbGFzc05hbWUnLCdsYWJlbENsYXNzTmFtZScsJ3Nob3dPdmVyZmxvd1Rvb2x0aXAnXTsvLyDkuIDkupvlsZ7mgKflhbfmnInliKvlkI0KdmFyIGFsaWFzZXM9e3Byb3A6J3Byb3BlcnR5JyxyZWFsQWxpZ246J2FsaWduJyxyZWFsSGVhZGVyQWxpZ246J2hlYWRlckFsaWduJyxyZWFsV2lkdGg6J3dpZHRoJ307dmFyIGFsbEFsaWFzZXM9cHJvcHMucmVkdWNlKGZ1bmN0aW9uKHByZXYsY3VyKXtwcmV2W2N1cl09Y3VyO3JldHVybiBwcmV2O30sYWxpYXNlcyk7T2JqZWN0LmtleXMoYWxsQWxpYXNlcykuZm9yRWFjaChmdW5jdGlvbihrZXkpe3ZhciBjb2x1bW5LZXk9YWxpYXNlc1trZXldO190aGlzMy4kd2F0Y2goa2V5LGZ1bmN0aW9uKG5ld1ZhbCl7X3RoaXMzLmNvbHVtbkNvbmZpZ1tjb2x1bW5LZXldPW5ld1ZhbDt9KTt9KTt9LHJlZ2lzdGVyQ29tcGxleFdhdGNoZXJzOmZ1bmN0aW9uIHJlZ2lzdGVyQ29tcGxleFdhdGNoZXJzKCl7dmFyIF90aGlzND10aGlzO3ZhciBwcm9wcz1bJ2ZpeGVkJ107dmFyIGFsaWFzZXM9e3JlYWxXaWR0aDond2lkdGgnLHJlYWxNaW5XaWR0aDonbWluV2lkdGgnfTt2YXIgYWxsQWxpYXNlcz1wcm9wcy5yZWR1Y2UoZnVuY3Rpb24ocHJldixjdXIpe3ByZXZbY3VyXT1jdXI7cmV0dXJuIHByZXY7fSxhbGlhc2VzKTtPYmplY3Qua2V5cyhhbGxBbGlhc2VzKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7dmFyIGNvbHVtbktleT1hbGlhc2VzW2tleV07X3RoaXM0LiR3YXRjaChrZXksZnVuY3Rpb24obmV3VmFsKXtfdGhpczQuY29sdW1uQ29uZmlnW2NvbHVtbktleV09bmV3VmFsO3ZhciB1cGRhdGVDb2x1bW5zPWNvbHVtbktleT09PSdmaXhlZCc7X3RoaXM0Lm93bmVyLnN0b3JlLnNjaGVkdWxlTGF5b3V0KHVwZGF0ZUNvbHVtbnMpO30pO30pO319LGNvbXBvbmVudHM6e0VsQ2hlY2tib3g6Y2hlY2tib3hfZGVmYXVsdC5hfSxiZWZvcmVDcmVhdGU6ZnVuY3Rpb24gYmVmb3JlQ3JlYXRlKCl7dGhpcy5yb3c9e307dGhpcy5jb2x1bW49e307dGhpcy4kaW5kZXg9MDt0aGlzLmNvbHVtbklkPScnO30sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dmFyIHBhcmVudD10aGlzLmNvbHVtbk9yVGFibGVQYXJlbnQ7dGhpcy5pc1N1YkNvbHVtbj10aGlzLm93bmVyIT09cGFyZW50O3RoaXMuY29sdW1uSWQ9KHBhcmVudC50YWJsZUlkfHxwYXJlbnQuY29sdW1uSWQpKydfY29sdW1uXycrY29sdW1uSWRTZWVkKys7dmFyIHR5cGU9dGhpcy50eXBlfHwnZGVmYXVsdCc7dmFyIHNvcnRhYmxlPXRoaXMuc29ydGFibGU9PT0nJz90cnVlOnRoaXMuc29ydGFibGU7dmFyIGRlZmF1bHRzPXRhYmxlX2NvbHVtbl9leHRlbmRzKHt9LGNlbGxTdGFydHNbdHlwZV0se2lkOnRoaXMuY29sdW1uSWQsdHlwZTp0eXBlLHByb3BlcnR5OnRoaXMucHJvcHx8dGhpcy5wcm9wZXJ0eSxhbGlnbjp0aGlzLnJlYWxBbGlnbixoZWFkZXJBbGlnbjp0aGlzLnJlYWxIZWFkZXJBbGlnbixzaG93T3ZlcmZsb3dUb29sdGlwOnRoaXMuc2hvd092ZXJmbG93VG9vbHRpcHx8dGhpcy5zaG93VG9vbHRpcFdoZW5PdmVyZmxvdywvLyBmaWx0ZXIg55u45YWz5bGe5oCnCmZpbHRlcmFibGU6dGhpcy5maWx0ZXJzfHx0aGlzLmZpbHRlck1ldGhvZCxmaWx0ZXJlZFZhbHVlOltdLGZpbHRlclBsYWNlbWVudDonJyxpc0NvbHVtbkdyb3VwOmZhbHNlLGZpbHRlck9wZW5lZDpmYWxzZSwvLyBzb3J0IOebuOWFs+WxnuaApwpzb3J0YWJsZTpzb3J0YWJsZSwvLyBpbmRleCDliJcKaW5kZXg6dGhpcy5pbmRleH0pO3ZhciBiYXNpY1Byb3BzPVsnY29sdW1uS2V5JywnbGFiZWwnLCdjbGFzc05hbWUnLCdsYWJlbENsYXNzTmFtZScsJ3R5cGUnLCdyZW5kZXJIZWFkZXInLCdmb3JtYXR0ZXInLCdmaXhlZCcsJ3Jlc2l6YWJsZSddO3ZhciBzb3J0UHJvcHM9Wydzb3J0TWV0aG9kJywnc29ydEJ5Jywnc29ydE9yZGVycyddO3ZhciBzZWxlY3RQcm9wcz1bJ3NlbGVjdGFibGUnLCdyZXNlcnZlU2VsZWN0aW9uJ107dmFyIGZpbHRlclByb3BzPVsnZmlsdGVyTWV0aG9kJywnZmlsdGVycycsJ2ZpbHRlck11bHRpcGxlJywnZmlsdGVyT3BlbmVkJywnZmlsdGVyZWRWYWx1ZScsJ2ZpbHRlclBsYWNlbWVudCddO3ZhciBjb2x1bW49dGhpcy5nZXRQcm9wc0RhdGEoYmFzaWNQcm9wcyxzb3J0UHJvcHMsc2VsZWN0UHJvcHMsZmlsdGVyUHJvcHMpO2NvbHVtbj1tZXJnZU9wdGlvbnMoZGVmYXVsdHMsY29sdW1uKTsvLyDms6jmhI8gY29tcG9zZSDkuK3lh73mlbDmiafooYznmoTpobrluo/mmK/ku47lj7PliLDlt6YKdmFyIGNoYWlucz1jb21wb3NlKHRoaXMuc2V0Q29sdW1uUmVuZGVycyx0aGlzLnNldENvbHVtbldpZHRoLHRoaXMuc2V0Q29sdW1uRm9yY2VkUHJvcHMpO2NvbHVtbj1jaGFpbnMoY29sdW1uKTt0aGlzLmNvbHVtbkNvbmZpZz1jb2x1bW47Ly8g5rOo5YaMIHdhdGNoZXIKdGhpcy5yZWdpc3Rlck5vcm1hbFdhdGNoZXJzKCk7dGhpcy5yZWdpc3RlckNvbXBsZXhXYXRjaGVycygpO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIG93bmVyPXRoaXMub3duZXI7dmFyIHBhcmVudD10aGlzLmNvbHVtbk9yVGFibGVQYXJlbnQ7dmFyIGNoaWxkcmVuPXRoaXMuaXNTdWJDb2x1bW4/cGFyZW50LiRlbC5jaGlsZHJlbjpwYXJlbnQuJHJlZnMuaGlkZGVuQ29sdW1ucy5jaGlsZHJlbjt2YXIgY29sdW1uSW5kZXg9dGhpcy5nZXRDb2x1bW5FbEluZGV4KGNoaWxkcmVuLHRoaXMuJGVsKTtvd25lci5zdG9yZS5jb21taXQoJ2luc2VydENvbHVtbicsdGhpcy5jb2x1bW5Db25maWcsY29sdW1uSW5kZXgsdGhpcy5pc1N1YkNvbHVtbj9wYXJlbnQuY29sdW1uQ29uZmlnOm51bGwpO30sZGVzdHJveWVkOmZ1bmN0aW9uIGRlc3Ryb3llZCgpe2lmKCF0aGlzLiRwYXJlbnQpcmV0dXJuO3ZhciBwYXJlbnQ9dGhpcy4kcGFyZW50O3RoaXMub3duZXIuc3RvcmUuY29tbWl0KCdyZW1vdmVDb2x1bW4nLHRoaXMuY29sdW1uQ29uZmlnLHRoaXMuaXNTdWJDb2x1bW4/cGFyZW50LmNvbHVtbkNvbmZpZzpudWxsKTt9LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7Ly8gc2xvdHMg5Lmf6KaB5riy5p+T77yM6ZyA6KaB6K6h566X5ZCI5bm26KGo5aS0CnJldHVybiBoKCdkaXYnLHRoaXMuJHNsb3RzLmRlZmF1bHQpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFibGUtY29sdW1uL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovdGFibGVfY29sdW1uLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHRhYmxlX2NvbHVtbi5uYW1lLHRhYmxlX2NvbHVtbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX3RhYmxlX2NvbHVtbj10YWJsZV9jb2x1bW47Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGlja2VyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03OWFlMDY5ZiYKdmFyIHBpY2tlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzc5YWUwNjlmX3JlbmRlcj1mdW5jdGlvbiBwaWNrZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF83OWFlMDY5Zl9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4hX3ZtLnJhbmdlZD9fYygiZWwtaW5wdXQiLF92bS5fYih7ZGlyZWN0aXZlczpbe25hbWU6ImNsaWNrb3V0c2lkZSIscmF3TmFtZToidi1jbGlja291dHNpZGUiLHZhbHVlOl92bS5oYW5kbGVDbG9zZSxleHByZXNzaW9uOiJoYW5kbGVDbG9zZSJ9XSxyZWY6InJlZmVyZW5jZSIsc3RhdGljQ2xhc3M6ImVsLWRhdGUtZWRpdG9yIixjbGFzczoiZWwtZGF0ZS1lZGl0b3ItLSIrX3ZtLnR5cGUsYXR0cnM6e3JlYWRvbmx5OiFfdm0uZWRpdGFibGV8fF92bS5yZWFkb25seXx8X3ZtLnR5cGU9PT0iZGF0ZXMifHxfdm0udHlwZT09PSJ3ZWVrIixkaXNhYmxlZDpfdm0ucGlja2VyRGlzYWJsZWQsc2l6ZTpfdm0ucGlja2VyU2l6ZSxuYW1lOl92bS5uYW1lLHBsYWNlaG9sZGVyOl92bS5wbGFjZWhvbGRlcix2YWx1ZTpfdm0uZGlzcGxheVZhbHVlLHZhbGlkYXRlRXZlbnQ6ZmFsc2V9LG9uOntmb2N1czpfdm0uaGFuZGxlRm9jdXMsaW5wdXQ6ZnVuY3Rpb24gaW5wdXQodmFsdWUpe3JldHVybiBfdm0udXNlcklucHV0PXZhbHVlO30sY2hhbmdlOl92bS5oYW5kbGVDaGFuZ2V9LG5hdGl2ZU9uOntrZXlkb3duOmZ1bmN0aW9uIGtleWRvd24oJGV2ZW50KXtyZXR1cm4gX3ZtLmhhbmRsZUtleWRvd24oJGV2ZW50KTt9LG1vdXNlZW50ZXI6ZnVuY3Rpb24gbW91c2VlbnRlcigkZXZlbnQpe3JldHVybiBfdm0uaGFuZGxlTW91c2VFbnRlcigkZXZlbnQpO30sbW91c2VsZWF2ZTpmdW5jdGlvbiBtb3VzZWxlYXZlKCRldmVudCl7X3ZtLnNob3dDbG9zZT1mYWxzZTt9fX0sImVsLWlucHV0Iixfdm0uZmlyc3RJbnB1dElkLGZhbHNlKSxbX2MoImkiLHtzdGF0aWNDbGFzczoiZWwtaW5wdXRfX2ljb24iLGNsYXNzOl92bS50cmlnZ2VyQ2xhc3MsYXR0cnM6e3Nsb3Q6InByZWZpeCJ9LG9uOntjbGljazpfdm0uaGFuZGxlRm9jdXN9LHNsb3Q6InByZWZpeCJ9KSxfdm0uaGF2ZVRyaWdnZXI/X2MoImkiLHtzdGF0aWNDbGFzczoiZWwtaW5wdXRfX2ljb24iLGNsYXNzOltfdm0uc2hvd0Nsb3NlPyIiK192bS5jbGVhckljb246IiJdLGF0dHJzOntzbG90OiJzdWZmaXgifSxvbjp7Y2xpY2s6X3ZtLmhhbmRsZUNsaWNrSWNvbn0sc2xvdDoic3VmZml4In0pOl92bS5fZSgpXSk6X2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJjbGlja291dHNpZGUiLHJhd05hbWU6InYtY2xpY2tvdXRzaWRlIix2YWx1ZTpfdm0uaGFuZGxlQ2xvc2UsZXhwcmVzc2lvbjoiaGFuZGxlQ2xvc2UifV0scmVmOiJyZWZlcmVuY2UiLHN0YXRpY0NsYXNzOiJlbC1kYXRlLWVkaXRvciBlbC1yYW5nZS1lZGl0b3IgZWwtaW5wdXRfX2lubmVyIixjbGFzczpbImVsLWRhdGUtZWRpdG9yLS0iK192bS50eXBlLF92bS5waWNrZXJTaXplPyJlbC1yYW5nZS1lZGl0b3ItLSIrX3ZtLnBpY2tlclNpemU6IiIsX3ZtLnBpY2tlckRpc2FibGVkPyJpcy1kaXNhYmxlZCI6IiIsX3ZtLnBpY2tlclZpc2libGU/ImlzLWFjdGl2ZSI6IiJdLG9uOntjbGljazpfdm0uaGFuZGxlUmFuZ2VDbGljayxtb3VzZWVudGVyOl92bS5oYW5kbGVNb3VzZUVudGVyLG1vdXNlbGVhdmU6ZnVuY3Rpb24gbW91c2VsZWF2ZSgkZXZlbnQpe192bS5zaG93Q2xvc2U9ZmFsc2U7fSxrZXlkb3duOl92bS5oYW5kbGVLZXlkb3dufX0sW19jKCJpIix7Y2xhc3M6WyJlbC1pbnB1dF9faWNvbiIsImVsLXJhbmdlX19pY29uIixfdm0udHJpZ2dlckNsYXNzXX0pLF9jKCJpbnB1dCIsX3ZtLl9iKHtzdGF0aWNDbGFzczoiZWwtcmFuZ2UtaW5wdXQiLGF0dHJzOnthdXRvY29tcGxldGU6Im9mZiIscGxhY2Vob2xkZXI6X3ZtLnN0YXJ0UGxhY2Vob2xkZXIsZGlzYWJsZWQ6X3ZtLnBpY2tlckRpc2FibGVkLHJlYWRvbmx5OiFfdm0uZWRpdGFibGV8fF92bS5yZWFkb25seSxuYW1lOl92bS5uYW1lJiZfdm0ubmFtZVswXX0sZG9tUHJvcHM6e3ZhbHVlOl92bS5kaXNwbGF5VmFsdWUmJl92bS5kaXNwbGF5VmFsdWVbMF19LG9uOntpbnB1dDpfdm0uaGFuZGxlU3RhcnRJbnB1dCxjaGFuZ2U6X3ZtLmhhbmRsZVN0YXJ0Q2hhbmdlLGZvY3VzOl92bS5oYW5kbGVGb2N1c319LCJpbnB1dCIsX3ZtLmZpcnN0SW5wdXRJZCxmYWxzZSkpLF92bS5fdCgicmFuZ2Utc2VwYXJhdG9yIixbX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtcmFuZ2Utc2VwYXJhdG9yIn0sW192bS5fdihfdm0uX3MoX3ZtLnJhbmdlU2VwYXJhdG9yKSldKV0pLF9jKCJpbnB1dCIsX3ZtLl9iKHtzdGF0aWNDbGFzczoiZWwtcmFuZ2UtaW5wdXQiLGF0dHJzOnthdXRvY29tcGxldGU6Im9mZiIscGxhY2Vob2xkZXI6X3ZtLmVuZFBsYWNlaG9sZGVyLGRpc2FibGVkOl92bS5waWNrZXJEaXNhYmxlZCxyZWFkb25seTohX3ZtLmVkaXRhYmxlfHxfdm0ucmVhZG9ubHksbmFtZTpfdm0ubmFtZSYmX3ZtLm5hbWVbMV19LGRvbVByb3BzOnt2YWx1ZTpfdm0uZGlzcGxheVZhbHVlJiZfdm0uZGlzcGxheVZhbHVlWzFdfSxvbjp7aW5wdXQ6X3ZtLmhhbmRsZUVuZElucHV0LGNoYW5nZTpfdm0uaGFuZGxlRW5kQ2hhbmdlLGZvY3VzOl92bS5oYW5kbGVGb2N1c319LCJpbnB1dCIsX3ZtLnNlY29uZElucHV0SWQsZmFsc2UpKSxfdm0uaGF2ZVRyaWdnZXI/X2MoImkiLHtzdGF0aWNDbGFzczoiZWwtaW5wdXRfX2ljb24gZWwtcmFuZ2VfX2Nsb3NlLWljb24iLGNsYXNzOltfdm0uc2hvd0Nsb3NlPyIiK192bS5jbGVhckljb246IiJdLG9uOntjbGljazpfdm0uaGFuZGxlQ2xpY2tJY29ufX0pOl92bS5fZSgpXSwyKTt9O3ZhciBwaWNrZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF83OWFlMDY5Zl9zdGF0aWNSZW5kZXJGbnM9W107cGlja2VydnVlX3R5cGVfdGVtcGxhdGVfaWRfNzlhZTA2OWZfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9waWNrZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTc5YWUwNjlmJgovLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi91dGlscy9kYXRlLXV0aWwiCnZhciBkYXRlX3V0aWxfPV9fd2VicGFja19yZXF1aXJlX18oMCk7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BpY2tlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBOZXdQb3BwZXI9e3Byb3BzOnthcHBlbmRUb0JvZHk6dnVlX3BvcHBlcl9kZWZhdWx0LmEucHJvcHMuYXBwZW5kVG9Cb2R5LG9mZnNldDp2dWVfcG9wcGVyX2RlZmF1bHQuYS5wcm9wcy5vZmZzZXQsYm91bmRhcmllc1BhZGRpbmc6dnVlX3BvcHBlcl9kZWZhdWx0LmEucHJvcHMuYm91bmRhcmllc1BhZGRpbmcsYXJyb3dPZmZzZXQ6dnVlX3BvcHBlcl9kZWZhdWx0LmEucHJvcHMuYXJyb3dPZmZzZXR9LG1ldGhvZHM6dnVlX3BvcHBlcl9kZWZhdWx0LmEubWV0aG9kcyxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm4gbWVyZ2VfZGVmYXVsdCgpKHt2aXNpYmxlQXJyb3c6dHJ1ZX0sdnVlX3BvcHBlcl9kZWZhdWx0LmEuZGF0YSk7fSxiZWZvcmVEZXN0cm95OnZ1ZV9wb3BwZXJfZGVmYXVsdC5hLmJlZm9yZURlc3Ryb3l9O3ZhciBERUZBVUxUX0ZPUk1BVFM9e2RhdGU6J3l5eXktTU0tZGQnLG1vbnRoOid5eXl5LU1NJyxkYXRldGltZToneXl5eS1NTS1kZCBISDptbTpzcycsdGltZTonSEg6bW06c3MnLHdlZWs6J3l5eXl3V1cnLHRpbWVyYW5nZTonSEg6bW06c3MnLGRhdGVyYW5nZToneXl5eS1NTS1kZCcsbW9udGhyYW5nZToneXl5eS1NTScsZGF0ZXRpbWVyYW5nZToneXl5eS1NTS1kZCBISDptbTpzcycseWVhcjoneXl5eSd9O3ZhciBIQVZFX1RSSUdHRVJfVFlQRVM9WydkYXRlJywnZGF0ZXRpbWUnLCd0aW1lJywndGltZS1zZWxlY3QnLCd3ZWVrJywnbW9udGgnLCd5ZWFyJywnZGF0ZXJhbmdlJywnbW9udGhyYW5nZScsJ3RpbWVyYW5nZScsJ2RhdGV0aW1lcmFuZ2UnLCdkYXRlcyddO3ZhciBwaWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19EQVRFX0ZPUk1BVFRFUj1mdW5jdGlvbiBEQVRFX0ZPUk1BVFRFUih2YWx1ZSxmb3JtYXQpe2lmKGZvcm1hdD09PSd0aW1lc3RhbXAnKXJldHVybiB2YWx1ZS5nZXRUaW1lKCk7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJmb3JtYXREYXRlIl0pKHZhbHVlLGZvcm1hdCk7fTt2YXIgcGlja2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfREFURV9QQVJTRVI9ZnVuY3Rpb24gREFURV9QQVJTRVIodGV4dCxmb3JtYXQpe2lmKGZvcm1hdD09PSd0aW1lc3RhbXAnKXJldHVybiBuZXcgRGF0ZShOdW1iZXIodGV4dCkpO3JldHVybiBPYmplY3QoZGF0ZV91dGlsX1sicGFyc2VEYXRlIl0pKHRleHQsZm9ybWF0KTt9O3ZhciBSQU5HRV9GT1JNQVRURVI9ZnVuY3Rpb24gUkFOR0VfRk9STUFUVEVSKHZhbHVlLGZvcm1hdCl7aWYoQXJyYXkuaXNBcnJheSh2YWx1ZSkmJnZhbHVlLmxlbmd0aD09PTIpe3ZhciBzdGFydD12YWx1ZVswXTt2YXIgZW5kPXZhbHVlWzFdO2lmKHN0YXJ0JiZlbmQpe3JldHVybltwaWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19EQVRFX0ZPUk1BVFRFUihzdGFydCxmb3JtYXQpLHBpY2tlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0RBVEVfRk9STUFUVEVSKGVuZCxmb3JtYXQpXTt9fXJldHVybicnO307dmFyIFJBTkdFX1BBUlNFUj1mdW5jdGlvbiBSQU5HRV9QQVJTRVIoYXJyYXksZm9ybWF0LHNlcGFyYXRvcil7aWYoIUFycmF5LmlzQXJyYXkoYXJyYXkpKXthcnJheT1hcnJheS5zcGxpdChzZXBhcmF0b3IpO31pZihhcnJheS5sZW5ndGg9PT0yKXt2YXIgcmFuZ2UxPWFycmF5WzBdO3ZhciByYW5nZTI9YXJyYXlbMV07cmV0dXJuW3BpY2tlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0RBVEVfUEFSU0VSKHJhbmdlMSxmb3JtYXQpLHBpY2tlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0RBVEVfUEFSU0VSKHJhbmdlMixmb3JtYXQpXTt9cmV0dXJuW107fTt2YXIgVFlQRV9WQUxVRV9SRVNPTFZFUl9NQVA9e2RlZmF1bHQ6e2Zvcm1hdHRlcjpmdW5jdGlvbiBmb3JtYXR0ZXIodmFsdWUpe2lmKCF2YWx1ZSlyZXR1cm4nJztyZXR1cm4nJyt2YWx1ZTt9LHBhcnNlcjpmdW5jdGlvbiBwYXJzZXIodGV4dCl7aWYodGV4dD09PXVuZGVmaW5lZHx8dGV4dD09PScnKXJldHVybiBudWxsO3JldHVybiB0ZXh0O319LHdlZWs6e2Zvcm1hdHRlcjpmdW5jdGlvbiBmb3JtYXR0ZXIodmFsdWUsZm9ybWF0KXt2YXIgd2Vlaz1PYmplY3QoZGF0ZV91dGlsX1siZ2V0V2Vla051bWJlciJdKSh2YWx1ZSk7dmFyIG1vbnRoPXZhbHVlLmdldE1vbnRoKCk7dmFyIHRydWVEYXRlPW5ldyBEYXRlKHZhbHVlKTtpZih3ZWVrPT09MSYmbW9udGg9PT0xMSl7dHJ1ZURhdGUuc2V0SG91cnMoMCwwLDAsMCk7dHJ1ZURhdGUuc2V0RGF0ZSh0cnVlRGF0ZS5nZXREYXRlKCkrMy0odHJ1ZURhdGUuZ2V0RGF5KCkrNiklNyk7fXZhciBkYXRlPU9iamVjdChkYXRlX3V0aWxfWyJmb3JtYXREYXRlIl0pKHRydWVEYXRlLGZvcm1hdCk7ZGF0ZT0vV1cvLnRlc3QoZGF0ZSk/ZGF0ZS5yZXBsYWNlKC9XVy8sd2VlazwxMD8nMCcrd2Vlazp3ZWVrKTpkYXRlLnJlcGxhY2UoL1cvLHdlZWspO3JldHVybiBkYXRlO30scGFyc2VyOmZ1bmN0aW9uIHBhcnNlcih0ZXh0LGZvcm1hdCl7Ly8gcGFyc2UgYXMgaWYgYSBub3JtYWwgZGF0ZQpyZXR1cm4gVFlQRV9WQUxVRV9SRVNPTFZFUl9NQVAuZGF0ZS5wYXJzZXIodGV4dCxmb3JtYXQpO319LGRhdGU6e2Zvcm1hdHRlcjpwaWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19EQVRFX0ZPUk1BVFRFUixwYXJzZXI6cGlja2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfREFURV9QQVJTRVJ9LGRhdGV0aW1lOntmb3JtYXR0ZXI6cGlja2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfREFURV9GT1JNQVRURVIscGFyc2VyOnBpY2tlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0RBVEVfUEFSU0VSfSxkYXRlcmFuZ2U6e2Zvcm1hdHRlcjpSQU5HRV9GT1JNQVRURVIscGFyc2VyOlJBTkdFX1BBUlNFUn0sbW9udGhyYW5nZTp7Zm9ybWF0dGVyOlJBTkdFX0ZPUk1BVFRFUixwYXJzZXI6UkFOR0VfUEFSU0VSfSxkYXRldGltZXJhbmdlOntmb3JtYXR0ZXI6UkFOR0VfRk9STUFUVEVSLHBhcnNlcjpSQU5HRV9QQVJTRVJ9LHRpbWVyYW5nZTp7Zm9ybWF0dGVyOlJBTkdFX0ZPUk1BVFRFUixwYXJzZXI6UkFOR0VfUEFSU0VSfSx0aW1lOntmb3JtYXR0ZXI6cGlja2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfREFURV9GT1JNQVRURVIscGFyc2VyOnBpY2tlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0RBVEVfUEFSU0VSfSxtb250aDp7Zm9ybWF0dGVyOnBpY2tlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0RBVEVfRk9STUFUVEVSLHBhcnNlcjpwaWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19EQVRFX1BBUlNFUn0seWVhcjp7Zm9ybWF0dGVyOnBpY2tlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0RBVEVfRk9STUFUVEVSLHBhcnNlcjpwaWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19EQVRFX1BBUlNFUn0sbnVtYmVyOntmb3JtYXR0ZXI6ZnVuY3Rpb24gZm9ybWF0dGVyKHZhbHVlKXtpZighdmFsdWUpcmV0dXJuJyc7cmV0dXJuJycrdmFsdWU7fSxwYXJzZXI6ZnVuY3Rpb24gcGFyc2VyKHRleHQpe3ZhciByZXN1bHQ9TnVtYmVyKHRleHQpO2lmKCFpc05hTih0ZXh0KSl7cmV0dXJuIHJlc3VsdDt9ZWxzZXtyZXR1cm4gbnVsbDt9fX0sZGF0ZXM6e2Zvcm1hdHRlcjpmdW5jdGlvbiBmb3JtYXR0ZXIodmFsdWUsZm9ybWF0KXtyZXR1cm4gdmFsdWUubWFwKGZ1bmN0aW9uKGRhdGUpe3JldHVybiBwaWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19EQVRFX0ZPUk1BVFRFUihkYXRlLGZvcm1hdCk7fSk7fSxwYXJzZXI6ZnVuY3Rpb24gcGFyc2VyKHZhbHVlLGZvcm1hdCl7cmV0dXJuKHR5cGVvZiB2YWx1ZT09PSdzdHJpbmcnP3ZhbHVlLnNwbGl0KCcsICcpOnZhbHVlKS5tYXAoZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGRhdGUgaW5zdGFuY2VvZiBEYXRlP2RhdGU6cGlja2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfREFURV9QQVJTRVIoZGF0ZSxmb3JtYXQpO30pO319fTt2YXIgUExBQ0VNRU5UX01BUD17bGVmdDonYm90dG9tLXN0YXJ0JyxjZW50ZXI6J2JvdHRvbScscmlnaHQ6J2JvdHRvbS1lbmQnfTt2YXIgcGFyc2VBc0Zvcm1hdEFuZFR5cGU9ZnVuY3Rpb24gcGFyc2VBc0Zvcm1hdEFuZFR5cGUodmFsdWUsY3VzdG9tRm9ybWF0LHR5cGUpe3ZhciByYW5nZVNlcGFyYXRvcj1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbM106Jy0nO2lmKCF2YWx1ZSlyZXR1cm4gbnVsbDt2YXIgcGFyc2VyPShUWVBFX1ZBTFVFX1JFU09MVkVSX01BUFt0eXBlXXx8VFlQRV9WQUxVRV9SRVNPTFZFUl9NQVBbJ2RlZmF1bHQnXSkucGFyc2VyO3ZhciBmb3JtYXQ9Y3VzdG9tRm9ybWF0fHxERUZBVUxUX0ZPUk1BVFNbdHlwZV07cmV0dXJuIHBhcnNlcih2YWx1ZSxmb3JtYXQscmFuZ2VTZXBhcmF0b3IpO307dmFyIGZvcm1hdEFzRm9ybWF0QW5kVHlwZT1mdW5jdGlvbiBmb3JtYXRBc0Zvcm1hdEFuZFR5cGUodmFsdWUsY3VzdG9tRm9ybWF0LHR5cGUpe2lmKCF2YWx1ZSlyZXR1cm4gbnVsbDt2YXIgZm9ybWF0dGVyPShUWVBFX1ZBTFVFX1JFU09MVkVSX01BUFt0eXBlXXx8VFlQRV9WQUxVRV9SRVNPTFZFUl9NQVBbJ2RlZmF1bHQnXSkuZm9ybWF0dGVyO3ZhciBmb3JtYXQ9Y3VzdG9tRm9ybWF0fHxERUZBVUxUX0ZPUk1BVFNbdHlwZV07cmV0dXJuIGZvcm1hdHRlcih2YWx1ZSxmb3JtYXQpO307LyoKICogQ29uc2lkZXJzOgogKiAgIDEuIERhdGUgb2JqZWN0CiAqICAgMi4gZGF0ZSBzdHJpbmcKICogICAzLiBhcnJheSBvZiAxIG9yIDIKICovdmFyIHZhbHVlRXF1YWxzPWZ1bmN0aW9uIHZhbHVlRXF1YWxzKGEsYil7Ly8gY29uc2lkZXJzIERhdGUgb2JqZWN0IGFuZCBzdHJpbmcKdmFyIGRhdGVFcXVhbHM9ZnVuY3Rpb24gZGF0ZUVxdWFscyhhLGIpe3ZhciBhSXNEYXRlPWEgaW5zdGFuY2VvZiBEYXRlO3ZhciBiSXNEYXRlPWIgaW5zdGFuY2VvZiBEYXRlO2lmKGFJc0RhdGUmJmJJc0RhdGUpe3JldHVybiBhLmdldFRpbWUoKT09PWIuZ2V0VGltZSgpO31pZighYUlzRGF0ZSYmIWJJc0RhdGUpe3JldHVybiBhPT09Yjt9cmV0dXJuIGZhbHNlO307dmFyIGFJc0FycmF5PWEgaW5zdGFuY2VvZiBBcnJheTt2YXIgYklzQXJyYXk9YiBpbnN0YW5jZW9mIEFycmF5O2lmKGFJc0FycmF5JiZiSXNBcnJheSl7aWYoYS5sZW5ndGghPT1iLmxlbmd0aCl7cmV0dXJuIGZhbHNlO31yZXR1cm4gYS5ldmVyeShmdW5jdGlvbihpdGVtLGluZGV4KXtyZXR1cm4gZGF0ZUVxdWFscyhpdGVtLGJbaW5kZXhdKTt9KTt9aWYoIWFJc0FycmF5JiYhYklzQXJyYXkpe3JldHVybiBkYXRlRXF1YWxzKGEsYik7fXJldHVybiBmYWxzZTt9O3ZhciBpc1N0cmluZz1mdW5jdGlvbiBpc1N0cmluZyh2YWwpe3JldHVybiB0eXBlb2YgdmFsPT09J3N0cmluZyd8fHZhbCBpbnN0YW5jZW9mIFN0cmluZzt9O3ZhciBwaWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc192YWxpZGF0b3I9ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7Ly8gZWl0aGVyOiBTdHJpbmcsIEFycmF5IG9mIFN0cmluZywgbnVsbCAvIHVuZGVmaW5lZApyZXR1cm4gdmFsPT09bnVsbHx8dmFsPT09dW5kZWZpbmVkfHxpc1N0cmluZyh2YWwpfHxBcnJheS5pc0FycmF5KHZhbCkmJnZhbC5sZW5ndGg9PT0yJiZ2YWwuZXZlcnkoaXNTdHJpbmcpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwaWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e21peGluczpbZW1pdHRlcl9kZWZhdWx0LmEsTmV3UG9wcGVyXSxpbmplY3Q6e2VsRm9ybTp7ZGVmYXVsdDonJ30sZWxGb3JtSXRlbTp7ZGVmYXVsdDonJ319LHByb3BzOntzaXplOlN0cmluZyxmb3JtYXQ6U3RyaW5nLHZhbHVlRm9ybWF0OlN0cmluZyxyZWFkb25seTpCb29sZWFuLHBsYWNlaG9sZGVyOlN0cmluZyxzdGFydFBsYWNlaG9sZGVyOlN0cmluZyxlbmRQbGFjZWhvbGRlcjpTdHJpbmcscHJlZml4SWNvbjpTdHJpbmcsY2xlYXJJY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OidlbC1pY29uLWNpcmNsZS1jbG9zZSd9LG5hbWU6e2RlZmF1bHQ6JycsdmFsaWRhdG9yOnBpY2tlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX3ZhbGlkYXRvcn0sZGlzYWJsZWQ6Qm9vbGVhbixjbGVhcmFibGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGlkOntkZWZhdWx0OicnLHZhbGlkYXRvcjpwaWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc192YWxpZGF0b3J9LHBvcHBlckNsYXNzOlN0cmluZyxlZGl0YWJsZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sYWxpZ246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2xlZnQnfSx2YWx1ZTp7fSxkZWZhdWx0VmFsdWU6e30sZGVmYXVsdFRpbWU6e30scmFuZ2VTZXBhcmF0b3I6e2RlZmF1bHQ6Jy0nfSxwaWNrZXJPcHRpb25zOnt9LHVubGlua1BhbmVsczpCb29sZWFuLHZhbGlkYXRlRXZlbnQ6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9fSxjb21wb25lbnRzOntFbElucHV0OmlucHV0X2RlZmF1bHQuYX0sZGlyZWN0aXZlczp7Q2xpY2tvdXRzaWRlOmNsaWNrb3V0c2lkZV9kZWZhdWx0LmF9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntwaWNrZXJWaXNpYmxlOmZhbHNlLHNob3dDbG9zZTpmYWxzZSx1c2VySW5wdXQ6bnVsbCx2YWx1ZU9uT3BlbjpudWxsLC8vIHZhbHVlIHdoZW4gcGlja2VyIG9wZW5zLCB1c2VkIHRvIGRldGVybWluZSB3aGV0aGVyIHRvIGVtaXQgY2hhbmdlCnVud2F0Y2hQaWNrZXJPcHRpb25zOm51bGx9O30sd2F0Y2g6e3BpY2tlclZpc2libGU6ZnVuY3Rpb24gcGlja2VyVmlzaWJsZSh2YWwpe2lmKHRoaXMucmVhZG9ubHl8fHRoaXMucGlja2VyRGlzYWJsZWQpcmV0dXJuO2lmKHZhbCl7dGhpcy5zaG93UGlja2VyKCk7dGhpcy52YWx1ZU9uT3Blbj1BcnJheS5pc0FycmF5KHRoaXMudmFsdWUpP1tdLmNvbmNhdCh0aGlzLnZhbHVlKTp0aGlzLnZhbHVlO31lbHNle3RoaXMuaGlkZVBpY2tlcigpO3RoaXMuZW1pdENoYW5nZSh0aGlzLnZhbHVlKTt0aGlzLnVzZXJJbnB1dD1udWxsO2lmKHRoaXMudmFsaWRhdGVFdmVudCl7dGhpcy5kaXNwYXRjaCgnRWxGb3JtSXRlbScsJ2VsLmZvcm0uYmx1cicpO310aGlzLiRlbWl0KCdibHVyJyx0aGlzKTt0aGlzLmJsdXIoKTt9fSxwYXJzZWRWYWx1ZTp7aW1tZWRpYXRlOnRydWUsaGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKHZhbCl7aWYodGhpcy5waWNrZXIpe3RoaXMucGlja2VyLnZhbHVlPXZhbDt9fX0sZGVmYXVsdFZhbHVlOmZ1bmN0aW9uIGRlZmF1bHRWYWx1ZSh2YWwpey8vIE5PVEU6IHNob3VsZCBldmVudHVhbGx5IG1vdmUgdG8ganN4IHN0eWxlIHBpY2tlciArIHBhbmVsID8KaWYodGhpcy5waWNrZXIpe3RoaXMucGlja2VyLmRlZmF1bHRWYWx1ZT12YWw7fX0sdmFsdWU6ZnVuY3Rpb24gdmFsdWUodmFsLG9sZFZhbCl7aWYoIXZhbHVlRXF1YWxzKHZhbCxvbGRWYWwpJiYhdGhpcy5waWNrZXJWaXNpYmxlJiZ0aGlzLnZhbGlkYXRlRXZlbnQpe3RoaXMuZGlzcGF0Y2goJ0VsRm9ybUl0ZW0nLCdlbC5mb3JtLmNoYW5nZScsdmFsKTt9fX0sY29tcHV0ZWQ6e3JhbmdlZDpmdW5jdGlvbiByYW5nZWQoKXtyZXR1cm4gdGhpcy50eXBlLmluZGV4T2YoJ3JhbmdlJyk+LTE7fSxyZWZlcmVuY2U6ZnVuY3Rpb24gcmVmZXJlbmNlKCl7dmFyIHJlZmVyZW5jZT10aGlzLiRyZWZzLnJlZmVyZW5jZTtyZXR1cm4gcmVmZXJlbmNlLiRlbHx8cmVmZXJlbmNlO30scmVmSW5wdXQ6ZnVuY3Rpb24gcmVmSW5wdXQoKXtpZih0aGlzLnJlZmVyZW5jZSl7cmV0dXJuW10uc2xpY2UuY2FsbCh0aGlzLnJlZmVyZW5jZS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCcpKTt9cmV0dXJuW107fSx2YWx1ZUlzRW1wdHk6ZnVuY3Rpb24gdmFsdWVJc0VtcHR5KCl7dmFyIHZhbD10aGlzLnZhbHVlO2lmKEFycmF5LmlzQXJyYXkodmFsKSl7Zm9yKHZhciBpPTAsbGVuPXZhbC5sZW5ndGg7aTxsZW47aSsrKXtpZih2YWxbaV0pe3JldHVybiBmYWxzZTt9fX1lbHNle2lmKHZhbCl7cmV0dXJuIGZhbHNlO319cmV0dXJuIHRydWU7fSx0cmlnZ2VyQ2xhc3M6ZnVuY3Rpb24gdHJpZ2dlckNsYXNzKCl7cmV0dXJuIHRoaXMucHJlZml4SWNvbnx8KHRoaXMudHlwZS5pbmRleE9mKCd0aW1lJykhPT0tMT8nZWwtaWNvbi10aW1lJzonZWwtaWNvbi1kYXRlJyk7fSxzZWxlY3Rpb25Nb2RlOmZ1bmN0aW9uIHNlbGVjdGlvbk1vZGUoKXtpZih0aGlzLnR5cGU9PT0nd2Vlaycpe3JldHVybid3ZWVrJzt9ZWxzZSBpZih0aGlzLnR5cGU9PT0nbW9udGgnKXtyZXR1cm4nbW9udGgnO31lbHNlIGlmKHRoaXMudHlwZT09PSd5ZWFyJyl7cmV0dXJuJ3llYXInO31lbHNlIGlmKHRoaXMudHlwZT09PSdkYXRlcycpe3JldHVybidkYXRlcyc7fXJldHVybidkYXknO30saGF2ZVRyaWdnZXI6ZnVuY3Rpb24gaGF2ZVRyaWdnZXIoKXtpZih0eXBlb2YgdGhpcy5zaG93VHJpZ2dlciE9PSd1bmRlZmluZWQnKXtyZXR1cm4gdGhpcy5zaG93VHJpZ2dlcjt9cmV0dXJuIEhBVkVfVFJJR0dFUl9UWVBFUy5pbmRleE9mKHRoaXMudHlwZSkhPT0tMTt9LGRpc3BsYXlWYWx1ZTpmdW5jdGlvbiBkaXNwbGF5VmFsdWUoKXt2YXIgZm9ybWF0dGVkVmFsdWU9Zm9ybWF0QXNGb3JtYXRBbmRUeXBlKHRoaXMucGFyc2VkVmFsdWUsdGhpcy5mb3JtYXQsdGhpcy50eXBlLHRoaXMucmFuZ2VTZXBhcmF0b3IpO2lmKEFycmF5LmlzQXJyYXkodGhpcy51c2VySW5wdXQpKXtyZXR1cm5bdGhpcy51c2VySW5wdXRbMF18fGZvcm1hdHRlZFZhbHVlJiZmb3JtYXR0ZWRWYWx1ZVswXXx8JycsdGhpcy51c2VySW5wdXRbMV18fGZvcm1hdHRlZFZhbHVlJiZmb3JtYXR0ZWRWYWx1ZVsxXXx8JyddO31lbHNlIGlmKHRoaXMudXNlcklucHV0IT09bnVsbCl7cmV0dXJuIHRoaXMudXNlcklucHV0O31lbHNlIGlmKGZvcm1hdHRlZFZhbHVlKXtyZXR1cm4gdGhpcy50eXBlPT09J2RhdGVzJz9mb3JtYXR0ZWRWYWx1ZS5qb2luKCcsICcpOmZvcm1hdHRlZFZhbHVlO31lbHNle3JldHVybicnO319LHBhcnNlZFZhbHVlOmZ1bmN0aW9uIHBhcnNlZFZhbHVlKCl7aWYoIXRoaXMudmFsdWUpcmV0dXJuIHRoaXMudmFsdWU7Ly8gY29tcG9uZW50IHZhbHVlIGlzIG5vdCBzZXQKaWYodGhpcy50eXBlPT09J3RpbWUtc2VsZWN0JylyZXR1cm4gdGhpcy52YWx1ZTsvLyB0aW1lLXNlbGVjdCBkb2VzIG5vdCByZXF1aXJlIHBhcnNpbmcsIHRoaXMgbWlnaHQgY2hhbmdlIGluIG5leHQgbWFqb3IgdmVyc2lvbgp2YXIgdmFsdWVJc0RhdGVPYmplY3Q9T2JqZWN0KGRhdGVfdXRpbF9bImlzRGF0ZU9iamVjdCJdKSh0aGlzLnZhbHVlKXx8QXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSYmdGhpcy52YWx1ZS5ldmVyeShkYXRlX3V0aWxfWyJpc0RhdGVPYmplY3QiXSk7aWYodmFsdWVJc0RhdGVPYmplY3Qpe3JldHVybiB0aGlzLnZhbHVlO31pZih0aGlzLnZhbHVlRm9ybWF0KXtyZXR1cm4gcGFyc2VBc0Zvcm1hdEFuZFR5cGUodGhpcy52YWx1ZSx0aGlzLnZhbHVlRm9ybWF0LHRoaXMudHlwZSx0aGlzLnJhbmdlU2VwYXJhdG9yKXx8dGhpcy52YWx1ZTt9Ly8gTk9URTogZGVhbCB3aXRoIGNvbW1vbiBidXQgaW5jb3JyZWN0IHVzYWdlLCBzaG91bGQgcmVtb3ZlIGluIG5leHQgbWFqb3IgdmVyc2lvbgovLyB1c2VyIG1pZ2h0IHByb3ZpZGUgc3RyaW5nIC8gdGltZXN0YW1wIHdpdGhvdXQgdmFsdWUtZm9ybWF0LCBjb2VyY2UgdGhlbSBpbnRvIGRhdGUgKG9yIGFycmF5IG9mIGRhdGUpCnJldHVybiBBcnJheS5pc0FycmF5KHRoaXMudmFsdWUpP3RoaXMudmFsdWUubWFwKGZ1bmN0aW9uKHZhbCl7cmV0dXJuIG5ldyBEYXRlKHZhbCk7fSk6bmV3IERhdGUodGhpcy52YWx1ZSk7fSxfZWxGb3JtSXRlbVNpemU6ZnVuY3Rpb24gX2VsRm9ybUl0ZW1TaXplKCl7cmV0dXJuKHRoaXMuZWxGb3JtSXRlbXx8e30pLmVsRm9ybUl0ZW1TaXplO30scGlja2VyU2l6ZTpmdW5jdGlvbiBwaWNrZXJTaXplKCl7cmV0dXJuIHRoaXMuc2l6ZXx8dGhpcy5fZWxGb3JtSXRlbVNpemV8fCh0aGlzLiRFTEVNRU5UfHx7fSkuc2l6ZTt9LHBpY2tlckRpc2FibGVkOmZ1bmN0aW9uIHBpY2tlckRpc2FibGVkKCl7cmV0dXJuIHRoaXMuZGlzYWJsZWR8fCh0aGlzLmVsRm9ybXx8e30pLmRpc2FibGVkO30sZmlyc3RJbnB1dElkOmZ1bmN0aW9uIGZpcnN0SW5wdXRJZCgpe3ZhciBvYmo9e307dmFyIGlkPXZvaWQgMDtpZih0aGlzLnJhbmdlZCl7aWQ9dGhpcy5pZCYmdGhpcy5pZFswXTt9ZWxzZXtpZD10aGlzLmlkO31pZihpZClvYmouaWQ9aWQ7cmV0dXJuIG9iajt9LHNlY29uZElucHV0SWQ6ZnVuY3Rpb24gc2Vjb25kSW5wdXRJZCgpe3ZhciBvYmo9e307dmFyIGlkPXZvaWQgMDtpZih0aGlzLnJhbmdlZCl7aWQ9dGhpcy5pZCYmdGhpcy5pZFsxXTt9aWYoaWQpb2JqLmlkPWlkO3JldHVybiBvYmo7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7Ly8gdnVlLXBvcHBlcgp0aGlzLnBvcHBlck9wdGlvbnM9e2JvdW5kYXJpZXNQYWRkaW5nOjAsZ3B1QWNjZWxlcmF0aW9uOmZhbHNlfTt0aGlzLnBsYWNlbWVudD1QTEFDRU1FTlRfTUFQW3RoaXMuYWxpZ25dfHxQTEFDRU1FTlRfTUFQLmxlZnQ7dGhpcy4kb24oJ2ZpZWxkUmVzZXQnLHRoaXMuaGFuZGxlRmllbGRSZXNldCk7fSxtZXRob2RzOntmb2N1czpmdW5jdGlvbiBmb2N1cygpe2lmKCF0aGlzLnJhbmdlZCl7dGhpcy4kcmVmcy5yZWZlcmVuY2UuZm9jdXMoKTt9ZWxzZXt0aGlzLmhhbmRsZUZvY3VzKCk7fX0sYmx1cjpmdW5jdGlvbiBibHVyKCl7dGhpcy5yZWZJbnB1dC5mb3JFYWNoKGZ1bmN0aW9uKGlucHV0KXtyZXR1cm4gaW5wdXQuYmx1cigpO30pO30sLy8ge3BhcnNlLCBmb3JtYXRUb30gVmFsdWUgZGVhbHMgbWFwcyBjb21wb25lbnQgdmFsdWUgd2l0aCBpbnRlcm5hbCBEYXRlCnBhcnNlVmFsdWU6ZnVuY3Rpb24gcGFyc2VWYWx1ZSh2YWx1ZSl7dmFyIGlzUGFyc2VkPU9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGVPYmplY3QiXSkodmFsdWUpfHxBcnJheS5pc0FycmF5KHZhbHVlKSYmdmFsdWUuZXZlcnkoZGF0ZV91dGlsX1siaXNEYXRlT2JqZWN0Il0pO2lmKHRoaXMudmFsdWVGb3JtYXQmJiFpc1BhcnNlZCl7cmV0dXJuIHBhcnNlQXNGb3JtYXRBbmRUeXBlKHZhbHVlLHRoaXMudmFsdWVGb3JtYXQsdGhpcy50eXBlLHRoaXMucmFuZ2VTZXBhcmF0b3IpfHx2YWx1ZTt9ZWxzZXtyZXR1cm4gdmFsdWU7fX0sZm9ybWF0VG9WYWx1ZTpmdW5jdGlvbiBmb3JtYXRUb1ZhbHVlKGRhdGUpe3ZhciBpc0Zvcm1hdHRhYmxlPU9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGVPYmplY3QiXSkoZGF0ZSl8fEFycmF5LmlzQXJyYXkoZGF0ZSkmJmRhdGUuZXZlcnkoZGF0ZV91dGlsX1siaXNEYXRlT2JqZWN0Il0pO2lmKHRoaXMudmFsdWVGb3JtYXQmJmlzRm9ybWF0dGFibGUpe3JldHVybiBmb3JtYXRBc0Zvcm1hdEFuZFR5cGUoZGF0ZSx0aGlzLnZhbHVlRm9ybWF0LHRoaXMudHlwZSx0aGlzLnJhbmdlU2VwYXJhdG9yKTt9ZWxzZXtyZXR1cm4gZGF0ZTt9fSwvLyB7cGFyc2UsIGZvcm1hdFRvfSBTdHJpbmcgZGVhbHMgd2l0aCB1c2VyIGlucHV0CnBhcnNlU3RyaW5nOmZ1bmN0aW9uIHBhcnNlU3RyaW5nKHZhbHVlKXt2YXIgdHlwZT1BcnJheS5pc0FycmF5KHZhbHVlKT90aGlzLnR5cGU6dGhpcy50eXBlLnJlcGxhY2UoJ3JhbmdlJywnJyk7cmV0dXJuIHBhcnNlQXNGb3JtYXRBbmRUeXBlKHZhbHVlLHRoaXMuZm9ybWF0LHR5cGUpO30sZm9ybWF0VG9TdHJpbmc6ZnVuY3Rpb24gZm9ybWF0VG9TdHJpbmcodmFsdWUpe3ZhciB0eXBlPUFycmF5LmlzQXJyYXkodmFsdWUpP3RoaXMudHlwZTp0aGlzLnR5cGUucmVwbGFjZSgncmFuZ2UnLCcnKTtyZXR1cm4gZm9ybWF0QXNGb3JtYXRBbmRUeXBlKHZhbHVlLHRoaXMuZm9ybWF0LHR5cGUpO30saGFuZGxlTW91c2VFbnRlcjpmdW5jdGlvbiBoYW5kbGVNb3VzZUVudGVyKCl7aWYodGhpcy5yZWFkb25seXx8dGhpcy5waWNrZXJEaXNhYmxlZClyZXR1cm47aWYoIXRoaXMudmFsdWVJc0VtcHR5JiZ0aGlzLmNsZWFyYWJsZSl7dGhpcy5zaG93Q2xvc2U9dHJ1ZTt9fSxoYW5kbGVDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKCl7aWYodGhpcy51c2VySW5wdXQpe3ZhciB2YWx1ZT10aGlzLnBhcnNlU3RyaW5nKHRoaXMuZGlzcGxheVZhbHVlKTtpZih2YWx1ZSl7dGhpcy5waWNrZXIudmFsdWU9dmFsdWU7aWYodGhpcy5pc1ZhbGlkVmFsdWUodmFsdWUpKXt0aGlzLmVtaXRJbnB1dCh2YWx1ZSk7dGhpcy51c2VySW5wdXQ9bnVsbDt9fX1pZih0aGlzLnVzZXJJbnB1dD09PScnKXt0aGlzLmVtaXRJbnB1dChudWxsKTt0aGlzLmVtaXRDaGFuZ2UobnVsbCk7dGhpcy51c2VySW5wdXQ9bnVsbDt9fSxoYW5kbGVTdGFydElucHV0OmZ1bmN0aW9uIGhhbmRsZVN0YXJ0SW5wdXQoZXZlbnQpe2lmKHRoaXMudXNlcklucHV0KXt0aGlzLnVzZXJJbnB1dD1bZXZlbnQudGFyZ2V0LnZhbHVlLHRoaXMudXNlcklucHV0WzFdXTt9ZWxzZXt0aGlzLnVzZXJJbnB1dD1bZXZlbnQudGFyZ2V0LnZhbHVlLG51bGxdO319LGhhbmRsZUVuZElucHV0OmZ1bmN0aW9uIGhhbmRsZUVuZElucHV0KGV2ZW50KXtpZih0aGlzLnVzZXJJbnB1dCl7dGhpcy51c2VySW5wdXQ9W3RoaXMudXNlcklucHV0WzBdLGV2ZW50LnRhcmdldC52YWx1ZV07fWVsc2V7dGhpcy51c2VySW5wdXQ9W251bGwsZXZlbnQudGFyZ2V0LnZhbHVlXTt9fSxoYW5kbGVTdGFydENoYW5nZTpmdW5jdGlvbiBoYW5kbGVTdGFydENoYW5nZShldmVudCl7dmFyIHZhbHVlPXRoaXMucGFyc2VTdHJpbmcodGhpcy51c2VySW5wdXQmJnRoaXMudXNlcklucHV0WzBdKTtpZih2YWx1ZSl7dGhpcy51c2VySW5wdXQ9W3RoaXMuZm9ybWF0VG9TdHJpbmcodmFsdWUpLHRoaXMuZGlzcGxheVZhbHVlWzFdXTt2YXIgbmV3VmFsdWU9W3ZhbHVlLHRoaXMucGlja2VyLnZhbHVlJiZ0aGlzLnBpY2tlci52YWx1ZVsxXV07dGhpcy5waWNrZXIudmFsdWU9bmV3VmFsdWU7aWYodGhpcy5pc1ZhbGlkVmFsdWUobmV3VmFsdWUpKXt0aGlzLmVtaXRJbnB1dChuZXdWYWx1ZSk7dGhpcy51c2VySW5wdXQ9bnVsbDt9fX0saGFuZGxlRW5kQ2hhbmdlOmZ1bmN0aW9uIGhhbmRsZUVuZENoYW5nZShldmVudCl7dmFyIHZhbHVlPXRoaXMucGFyc2VTdHJpbmcodGhpcy51c2VySW5wdXQmJnRoaXMudXNlcklucHV0WzFdKTtpZih2YWx1ZSl7dGhpcy51c2VySW5wdXQ9W3RoaXMuZGlzcGxheVZhbHVlWzBdLHRoaXMuZm9ybWF0VG9TdHJpbmcodmFsdWUpXTt2YXIgbmV3VmFsdWU9W3RoaXMucGlja2VyLnZhbHVlJiZ0aGlzLnBpY2tlci52YWx1ZVswXSx2YWx1ZV07dGhpcy5waWNrZXIudmFsdWU9bmV3VmFsdWU7aWYodGhpcy5pc1ZhbGlkVmFsdWUobmV3VmFsdWUpKXt0aGlzLmVtaXRJbnB1dChuZXdWYWx1ZSk7dGhpcy51c2VySW5wdXQ9bnVsbDt9fX0saGFuZGxlQ2xpY2tJY29uOmZ1bmN0aW9uIGhhbmRsZUNsaWNrSWNvbihldmVudCl7aWYodGhpcy5yZWFkb25seXx8dGhpcy5waWNrZXJEaXNhYmxlZClyZXR1cm47aWYodGhpcy5zaG93Q2xvc2Upe3RoaXMudmFsdWVPbk9wZW49dGhpcy52YWx1ZTtldmVudC5zdG9wUHJvcGFnYXRpb24oKTt0aGlzLmVtaXRJbnB1dChudWxsKTt0aGlzLmVtaXRDaGFuZ2UobnVsbCk7dGhpcy5zaG93Q2xvc2U9ZmFsc2U7aWYodGhpcy5waWNrZXImJnR5cGVvZiB0aGlzLnBpY2tlci5oYW5kbGVDbGVhcj09PSdmdW5jdGlvbicpe3RoaXMucGlja2VyLmhhbmRsZUNsZWFyKCk7fX1lbHNle3RoaXMucGlja2VyVmlzaWJsZT0hdGhpcy5waWNrZXJWaXNpYmxlO319LGhhbmRsZUNsb3NlOmZ1bmN0aW9uIGhhbmRsZUNsb3NlKCl7aWYoIXRoaXMucGlja2VyVmlzaWJsZSlyZXR1cm47dGhpcy5waWNrZXJWaXNpYmxlPWZhbHNlO2lmKHRoaXMudHlwZT09PSdkYXRlcycpey8vIHJlc3RvcmUgdG8gZm9ybWVyIHZhbHVlCnZhciBvbGRWYWx1ZT1wYXJzZUFzRm9ybWF0QW5kVHlwZSh0aGlzLnZhbHVlT25PcGVuLHRoaXMudmFsdWVGb3JtYXQsdGhpcy50eXBlLHRoaXMucmFuZ2VTZXBhcmF0b3IpfHx0aGlzLnZhbHVlT25PcGVuO3RoaXMuZW1pdElucHV0KG9sZFZhbHVlKTt9fSxoYW5kbGVGaWVsZFJlc2V0OmZ1bmN0aW9uIGhhbmRsZUZpZWxkUmVzZXQoaW5pdGlhbFZhbHVlKXt0aGlzLnVzZXJJbnB1dD1pbml0aWFsVmFsdWU9PT0nJz9udWxsOmluaXRpYWxWYWx1ZTt9LGhhbmRsZUZvY3VzOmZ1bmN0aW9uIGhhbmRsZUZvY3VzKCl7dmFyIHR5cGU9dGhpcy50eXBlO2lmKEhBVkVfVFJJR0dFUl9UWVBFUy5pbmRleE9mKHR5cGUpIT09LTEmJiF0aGlzLnBpY2tlclZpc2libGUpe3RoaXMucGlja2VyVmlzaWJsZT10cnVlO310aGlzLiRlbWl0KCdmb2N1cycsdGhpcyk7fSxoYW5kbGVLZXlkb3duOmZ1bmN0aW9uIGhhbmRsZUtleWRvd24oZXZlbnQpe3ZhciBfdGhpcz10aGlzO3ZhciBrZXlDb2RlPWV2ZW50LmtleUNvZGU7Ly8gRVNDCmlmKGtleUNvZGU9PT0yNyl7dGhpcy5waWNrZXJWaXNpYmxlPWZhbHNlO2V2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybjt9Ly8gVGFiCmlmKGtleUNvZGU9PT05KXtpZighdGhpcy5yYW5nZWQpe3RoaXMuaGFuZGxlQ2hhbmdlKCk7dGhpcy5waWNrZXJWaXNpYmxlPXRoaXMucGlja2VyLnZpc2libGU9ZmFsc2U7dGhpcy5ibHVyKCk7ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7fWVsc2V7Ly8gdXNlciBtYXkgY2hhbmdlIGZvY3VzIGJldHdlZW4gdHdvIGlucHV0CnNldFRpbWVvdXQoZnVuY3Rpb24oKXtpZihfdGhpcy5yZWZJbnB1dC5pbmRleE9mKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpPT09LTEpe190aGlzLnBpY2tlclZpc2libGU9ZmFsc2U7X3RoaXMuYmx1cigpO2V2ZW50LnN0b3BQcm9wYWdhdGlvbigpO319LDApO31yZXR1cm47fS8vIEVudGVyCmlmKGtleUNvZGU9PT0xMyl7aWYodGhpcy51c2VySW5wdXQ9PT0nJ3x8dGhpcy5pc1ZhbGlkVmFsdWUodGhpcy5wYXJzZVN0cmluZyh0aGlzLmRpc3BsYXlWYWx1ZSkpKXt0aGlzLmhhbmRsZUNoYW5nZSgpO3RoaXMucGlja2VyVmlzaWJsZT10aGlzLnBpY2tlci52aXNpYmxlPWZhbHNlO3RoaXMuYmx1cigpO31ldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm47fS8vIGlmIHVzZXIgaXMgdHlwaW5nLCBkbyBub3QgbGV0IHBpY2tlciBoYW5kbGUga2V5IGlucHV0CmlmKHRoaXMudXNlcklucHV0KXtldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm47fS8vIGRlbGVnYXRlIG90aGVyIGtleXMgdG8gcGFuZWwKaWYodGhpcy5waWNrZXImJnRoaXMucGlja2VyLmhhbmRsZUtleWRvd24pe3RoaXMucGlja2VyLmhhbmRsZUtleWRvd24oZXZlbnQpO319LGhhbmRsZVJhbmdlQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlUmFuZ2VDbGljaygpe3ZhciB0eXBlPXRoaXMudHlwZTtpZihIQVZFX1RSSUdHRVJfVFlQRVMuaW5kZXhPZih0eXBlKSE9PS0xJiYhdGhpcy5waWNrZXJWaXNpYmxlKXt0aGlzLnBpY2tlclZpc2libGU9dHJ1ZTt9dGhpcy4kZW1pdCgnZm9jdXMnLHRoaXMpO30saGlkZVBpY2tlcjpmdW5jdGlvbiBoaWRlUGlja2VyKCl7aWYodGhpcy5waWNrZXIpe3RoaXMucGlja2VyLnJlc2V0VmlldyYmdGhpcy5waWNrZXIucmVzZXRWaWV3KCk7dGhpcy5waWNrZXJWaXNpYmxlPXRoaXMucGlja2VyLnZpc2libGU9ZmFsc2U7dGhpcy5kZXN0cm95UG9wcGVyKCk7fX0sc2hvd1BpY2tlcjpmdW5jdGlvbiBzaG93UGlja2VyKCl7dmFyIF90aGlzMj10aGlzO2lmKHRoaXMuJGlzU2VydmVyKXJldHVybjtpZighdGhpcy5waWNrZXIpe3RoaXMubW91bnRQaWNrZXIoKTt9dGhpcy5waWNrZXJWaXNpYmxlPXRoaXMucGlja2VyLnZpc2libGU9dHJ1ZTt0aGlzLnVwZGF0ZVBvcHBlcigpO3RoaXMucGlja2VyLnZhbHVlPXRoaXMucGFyc2VkVmFsdWU7dGhpcy5waWNrZXIucmVzZXRWaWV3JiZ0aGlzLnBpY2tlci5yZXNldFZpZXcoKTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzMi5waWNrZXIuYWRqdXN0U3Bpbm5lcnMmJl90aGlzMi5waWNrZXIuYWRqdXN0U3Bpbm5lcnMoKTt9KTt9LG1vdW50UGlja2VyOmZ1bmN0aW9uIG1vdW50UGlja2VyKCl7dmFyIF90aGlzMz10aGlzO3RoaXMucGlja2VyPW5ldyBleHRlcm5hbF92dWVfZGVmYXVsdC5hKHRoaXMucGFuZWwpLiRtb3VudCgpO3RoaXMucGlja2VyLmRlZmF1bHRWYWx1ZT10aGlzLmRlZmF1bHRWYWx1ZTt0aGlzLnBpY2tlci5kZWZhdWx0VGltZT10aGlzLmRlZmF1bHRUaW1lO3RoaXMucGlja2VyLnBvcHBlckNsYXNzPXRoaXMucG9wcGVyQ2xhc3M7dGhpcy5wb3BwZXJFbG09dGhpcy5waWNrZXIuJGVsO3RoaXMucGlja2VyLndpZHRoPXRoaXMucmVmZXJlbmNlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO3RoaXMucGlja2VyLnNob3dUaW1lPXRoaXMudHlwZT09PSdkYXRldGltZSd8fHRoaXMudHlwZT09PSdkYXRldGltZXJhbmdlJzt0aGlzLnBpY2tlci5zZWxlY3Rpb25Nb2RlPXRoaXMuc2VsZWN0aW9uTW9kZTt0aGlzLnBpY2tlci51bmxpbmtQYW5lbHM9dGhpcy51bmxpbmtQYW5lbHM7dGhpcy5waWNrZXIuYXJyb3dDb250cm9sPXRoaXMuYXJyb3dDb250cm9sfHx0aGlzLnRpbWVBcnJvd0NvbnRyb2x8fGZhbHNlO3RoaXMuJHdhdGNoKCdmb3JtYXQnLGZ1bmN0aW9uKGZvcm1hdCl7X3RoaXMzLnBpY2tlci5mb3JtYXQ9Zm9ybWF0O30pO3ZhciB1cGRhdGVPcHRpb25zPWZ1bmN0aW9uIHVwZGF0ZU9wdGlvbnMoKXt2YXIgb3B0aW9ucz1fdGhpczMucGlja2VyT3B0aW9ucztpZihvcHRpb25zJiZvcHRpb25zLnNlbGVjdGFibGVSYW5nZSl7dmFyIHJhbmdlcz1vcHRpb25zLnNlbGVjdGFibGVSYW5nZTt2YXIgcGFyc2VyPVRZUEVfVkFMVUVfUkVTT0xWRVJfTUFQLmRhdGV0aW1lcmFuZ2UucGFyc2VyO3ZhciBmb3JtYXQ9REVGQVVMVF9GT1JNQVRTLnRpbWVyYW5nZTtyYW5nZXM9QXJyYXkuaXNBcnJheShyYW5nZXMpP3JhbmdlczpbcmFuZ2VzXTtfdGhpczMucGlja2VyLnNlbGVjdGFibGVSYW5nZT1yYW5nZXMubWFwKGZ1bmN0aW9uKHJhbmdlKXtyZXR1cm4gcGFyc2VyKHJhbmdlLGZvcm1hdCxfdGhpczMucmFuZ2VTZXBhcmF0b3IpO30pO31mb3IodmFyIG9wdGlvbiBpbiBvcHRpb25zKXtpZihvcHRpb25zLmhhc093blByb3BlcnR5KG9wdGlvbikmJi8vIOW/veeVpSB0aW1lLXBpY2tlciDnmoTor6XphY3nva7pobkKb3B0aW9uIT09J3NlbGVjdGFibGVSYW5nZScpe190aGlzMy5waWNrZXJbb3B0aW9uXT1vcHRpb25zW29wdGlvbl07fX0vLyBtYWluIGZvcm1hdCBtdXN0IHByZXZhaWwgb3ZlciB1bmRvY3VtZW50ZWQgcGlja2VyT3B0aW9ucy5mb3JtYXQKaWYoX3RoaXMzLmZvcm1hdCl7X3RoaXMzLnBpY2tlci5mb3JtYXQ9X3RoaXMzLmZvcm1hdDt9fTt1cGRhdGVPcHRpb25zKCk7dGhpcy51bndhdGNoUGlja2VyT3B0aW9ucz10aGlzLiR3YXRjaCgncGlja2VyT3B0aW9ucycsZnVuY3Rpb24oKXtyZXR1cm4gdXBkYXRlT3B0aW9ucygpO30se2RlZXA6dHJ1ZX0pO3RoaXMuJGVsLmFwcGVuZENoaWxkKHRoaXMucGlja2VyLiRlbCk7dGhpcy5waWNrZXIucmVzZXRWaWV3JiZ0aGlzLnBpY2tlci5yZXNldFZpZXcoKTt0aGlzLnBpY2tlci4kb24oJ2RvZGVzdHJveScsdGhpcy5kb0Rlc3Ryb3kpO3RoaXMucGlja2VyLiRvbigncGljaycsZnVuY3Rpb24oKXt2YXIgZGF0ZT1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMF06Jyc7dmFyIHZpc2libGU9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzFdOmZhbHNlO190aGlzMy51c2VySW5wdXQ9bnVsbDtfdGhpczMucGlja2VyVmlzaWJsZT1fdGhpczMucGlja2VyLnZpc2libGU9dmlzaWJsZTtfdGhpczMuZW1pdElucHV0KGRhdGUpO190aGlzMy5waWNrZXIucmVzZXRWaWV3JiZfdGhpczMucGlja2VyLnJlc2V0VmlldygpO30pO3RoaXMucGlja2VyLiRvbignc2VsZWN0LXJhbmdlJyxmdW5jdGlvbihzdGFydCxlbmQscG9zKXtpZihfdGhpczMucmVmSW5wdXQubGVuZ3RoPT09MClyZXR1cm47aWYoIXBvc3x8cG9zPT09J21pbicpe190aGlzMy5yZWZJbnB1dFswXS5zZXRTZWxlY3Rpb25SYW5nZShzdGFydCxlbmQpO190aGlzMy5yZWZJbnB1dFswXS5mb2N1cygpO31lbHNlIGlmKHBvcz09PSdtYXgnKXtfdGhpczMucmVmSW5wdXRbMV0uc2V0U2VsZWN0aW9uUmFuZ2Uoc3RhcnQsZW5kKTtfdGhpczMucmVmSW5wdXRbMV0uZm9jdXMoKTt9fSk7fSx1bm1vdW50UGlja2VyOmZ1bmN0aW9uIHVubW91bnRQaWNrZXIoKXtpZih0aGlzLnBpY2tlcil7dGhpcy5waWNrZXIuJGRlc3Ryb3koKTt0aGlzLnBpY2tlci4kb2ZmKCk7aWYodHlwZW9mIHRoaXMudW53YXRjaFBpY2tlck9wdGlvbnM9PT0nZnVuY3Rpb24nKXt0aGlzLnVud2F0Y2hQaWNrZXJPcHRpb25zKCk7fXRoaXMucGlja2VyLiRlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMucGlja2VyLiRlbCk7fX0sZW1pdENoYW5nZTpmdW5jdGlvbiBlbWl0Q2hhbmdlKHZhbCl7Ly8gZGV0ZXJtaW5lIHVzZXIgcmVhbCBjaGFuZ2Ugb25seQppZighdmFsdWVFcXVhbHModmFsLHRoaXMudmFsdWVPbk9wZW4pKXt0aGlzLiRlbWl0KCdjaGFuZ2UnLHZhbCk7dGhpcy52YWx1ZU9uT3Blbj12YWw7aWYodGhpcy52YWxpZGF0ZUV2ZW50KXt0aGlzLmRpc3BhdGNoKCdFbEZvcm1JdGVtJywnZWwuZm9ybS5jaGFuZ2UnLHZhbCk7fX19LGVtaXRJbnB1dDpmdW5jdGlvbiBlbWl0SW5wdXQodmFsKXt2YXIgZm9ybWF0dGVkPXRoaXMuZm9ybWF0VG9WYWx1ZSh2YWwpO2lmKCF2YWx1ZUVxdWFscyh0aGlzLnZhbHVlLGZvcm1hdHRlZCkpe3RoaXMuJGVtaXQoJ2lucHV0Jyxmb3JtYXR0ZWQpO319LGlzVmFsaWRWYWx1ZTpmdW5jdGlvbiBpc1ZhbGlkVmFsdWUodmFsdWUpe2lmKCF0aGlzLnBpY2tlcil7dGhpcy5tb3VudFBpY2tlcigpO31pZih0aGlzLnBpY2tlci5pc1ZhbGlkVmFsdWUpe3JldHVybiB2YWx1ZSYmdGhpcy5waWNrZXIuaXNWYWxpZFZhbHVlKHZhbHVlKTt9ZWxzZXtyZXR1cm4gdHJ1ZTt9fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BpY2tlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3BpY2tlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1waWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGlja2VyLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHBpY2tlcl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19waWNrZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18scGlja2VydnVlX3R5cGVfdGVtcGxhdGVfaWRfNzlhZTA2OWZfcmVuZGVyLHBpY2tlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzc5YWUwNjlmX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgcGlja2VyX2FwaTt9cGlja2VyX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BpY2tlci52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGlja2VyPXBpY2tlcl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9kYXRlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yNDQwZDRlYSYKdmFyIGRhdGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yNDQwZDRlYV9yZW5kZXI9ZnVuY3Rpb24gZGF0ZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzI0NDBkNGVhX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidHJhbnNpdGlvbiIse2F0dHJzOntuYW1lOiJlbC16b29tLWluLXRvcCJ9LG9uOnsiYWZ0ZXItZW50ZXIiOl92bS5oYW5kbGVFbnRlciwiYWZ0ZXItbGVhdmUiOl92bS5oYW5kbGVMZWF2ZX19LFtfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUsZXhwcmVzc2lvbjoidmlzaWJsZSJ9XSxzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsIGVsLWRhdGUtcGlja2VyIGVsLXBvcHBlciIsY2xhc3M6W3siaGFzLXNpZGViYXIiOl92bS4kc2xvdHMuc2lkZWJhcnx8X3ZtLnNob3J0Y3V0cywiaGFzLXRpbWUiOl92bS5zaG93VGltZX0sX3ZtLnBvcHBlckNsYXNzXX0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19ib2R5LXdyYXBwZXIifSxbX3ZtLl90KCJzaWRlYmFyIiksX3ZtLnNob3J0Y3V0cz9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9fc2lkZWJhciJ9LF92bS5fbChfdm0uc2hvcnRjdXRzLGZ1bmN0aW9uKHNob3J0Y3V0LGtleSl7cmV0dXJuIF9jKCJidXR0b24iLHtrZXk6a2V5LHN0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX3Nob3J0Y3V0IixhdHRyczp7dHlwZToiYnV0dG9uIn0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLmhhbmRsZVNob3J0Y3V0Q2xpY2soc2hvcnRjdXQpO319fSxbX3ZtLl92KF92bS5fcyhzaG9ydGN1dC50ZXh0KSldKTt9KSwwKTpfdm0uX2UoKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9fYm9keSJ9LFtfdm0uc2hvd1RpbWU/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1kYXRlLXBpY2tlcl9fdGltZS1oZWFkZXIifSxbX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtZGF0ZS1waWNrZXJfX2VkaXRvci13cmFwIn0sW19jKCJlbC1pbnB1dCIse2F0dHJzOntwbGFjZWhvbGRlcjpfdm0udCgiZWwuZGF0ZXBpY2tlci5zZWxlY3REYXRlIiksdmFsdWU6X3ZtLnZpc2libGVEYXRlLHNpemU6InNtYWxsIn0sb246e2lucHV0OmZ1bmN0aW9uIGlucHV0KHZhbCl7cmV0dXJuIF92bS51c2VySW5wdXREYXRlPXZhbDt9LGNoYW5nZTpfdm0uaGFuZGxlVmlzaWJsZURhdGVDaGFuZ2V9fSldLDEpLF9jKCJzcGFuIix7ZGlyZWN0aXZlczpbe25hbWU6ImNsaWNrb3V0c2lkZSIscmF3TmFtZToidi1jbGlja291dHNpZGUiLHZhbHVlOl92bS5oYW5kbGVUaW1lUGlja0Nsb3NlLGV4cHJlc3Npb246ImhhbmRsZVRpbWVQaWNrQ2xvc2UifV0sc3RhdGljQ2xhc3M6ImVsLWRhdGUtcGlja2VyX19lZGl0b3Itd3JhcCJ9LFtfYygiZWwtaW5wdXQiLHtyZWY6ImlucHV0IixhdHRyczp7cGxhY2Vob2xkZXI6X3ZtLnQoImVsLmRhdGVwaWNrZXIuc2VsZWN0VGltZSIpLHZhbHVlOl92bS52aXNpYmxlVGltZSxzaXplOiJzbWFsbCJ9LG9uOntmb2N1czpmdW5jdGlvbiBmb2N1cygkZXZlbnQpe192bS50aW1lUGlja2VyVmlzaWJsZT10cnVlO30saW5wdXQ6ZnVuY3Rpb24gaW5wdXQodmFsKXtyZXR1cm4gX3ZtLnVzZXJJbnB1dFRpbWU9dmFsO30sY2hhbmdlOl92bS5oYW5kbGVWaXNpYmxlVGltZUNoYW5nZX19KSxfYygidGltZS1waWNrZXIiLHtyZWY6InRpbWVwaWNrZXIiLGF0dHJzOnsidGltZS1hcnJvdy1jb250cm9sIjpfdm0uYXJyb3dDb250cm9sLHZpc2libGU6X3ZtLnRpbWVQaWNrZXJWaXNpYmxlfSxvbjp7cGljazpfdm0uaGFuZGxlVGltZVBpY2ssbW91bnRlZDpfdm0ucHJveHlUaW1lUGlja2VyRGF0YVByb3BlcnRpZXN9fSldLDEpXSk6X3ZtLl9lKCksX2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5jdXJyZW50VmlldyE9PSJ0aW1lIixleHByZXNzaW9uOiJjdXJyZW50VmlldyAhPT0gJ3RpbWUnIn1dLHN0YXRpY0NsYXNzOiJlbC1kYXRlLXBpY2tlcl9faGVhZGVyIixjbGFzczp7ImVsLWRhdGUtcGlja2VyX19oZWFkZXItLWJvcmRlcmVkIjpfdm0uY3VycmVudFZpZXc9PT0ieWVhciJ8fF92bS5jdXJyZW50Vmlldz09PSJtb250aCJ9fSxbX2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2ljb24tYnRuIGVsLWRhdGUtcGlja2VyX19wcmV2LWJ0biBlbC1pY29uLWQtYXJyb3ctbGVmdCIsYXR0cnM6e3R5cGU6ImJ1dHRvbiIsImFyaWEtbGFiZWwiOl92bS50KCJlbC5kYXRlcGlja2VyLnByZXZZZWFyIil9LG9uOntjbGljazpfdm0ucHJldlllYXJ9fSksX2MoImJ1dHRvbiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5jdXJyZW50Vmlldz09PSJkYXRlIixleHByZXNzaW9uOiJjdXJyZW50VmlldyA9PT0gJ2RhdGUnIn1dLHN0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2ljb24tYnRuIGVsLWRhdGUtcGlja2VyX19wcmV2LWJ0biBlbC1pY29uLWFycm93LWxlZnQiLGF0dHJzOnt0eXBlOiJidXR0b24iLCJhcmlhLWxhYmVsIjpfdm0udCgiZWwuZGF0ZXBpY2tlci5wcmV2TW9udGgiKX0sb246e2NsaWNrOl92bS5wcmV2TW9udGh9fSksX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtZGF0ZS1waWNrZXJfX2hlYWRlci1sYWJlbCIsYXR0cnM6e3JvbGU6ImJ1dHRvbiJ9LG9uOntjbGljazpfdm0uc2hvd1llYXJQaWNrZXJ9fSxbX3ZtLl92KF92bS5fcyhfdm0ueWVhckxhYmVsKSldKSxfYygic3BhbiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5jdXJyZW50Vmlldz09PSJkYXRlIixleHByZXNzaW9uOiJjdXJyZW50VmlldyA9PT0gJ2RhdGUnIn1dLHN0YXRpY0NsYXNzOiJlbC1kYXRlLXBpY2tlcl9faGVhZGVyLWxhYmVsIixjbGFzczp7YWN0aXZlOl92bS5jdXJyZW50Vmlldz09PSJtb250aCJ9LGF0dHJzOntyb2xlOiJidXR0b24ifSxvbjp7Y2xpY2s6X3ZtLnNob3dNb250aFBpY2tlcn19LFtfdm0uX3YoX3ZtLl9zKF92bS50KCJlbC5kYXRlcGlja2VyLm1vbnRoIisoX3ZtLm1vbnRoKzEpKSkpXSksX2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2ljb24tYnRuIGVsLWRhdGUtcGlja2VyX19uZXh0LWJ0biBlbC1pY29uLWQtYXJyb3ctcmlnaHQiLGF0dHJzOnt0eXBlOiJidXR0b24iLCJhcmlhLWxhYmVsIjpfdm0udCgiZWwuZGF0ZXBpY2tlci5uZXh0WWVhciIpfSxvbjp7Y2xpY2s6X3ZtLm5leHRZZWFyfX0pLF9jKCJidXR0b24iLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0uY3VycmVudFZpZXc9PT0iZGF0ZSIsZXhwcmVzc2lvbjoiY3VycmVudFZpZXcgPT09ICdkYXRlJyJ9XSxzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19pY29uLWJ0biBlbC1kYXRlLXBpY2tlcl9fbmV4dC1idG4gZWwtaWNvbi1hcnJvdy1yaWdodCIsYXR0cnM6e3R5cGU6ImJ1dHRvbiIsImFyaWEtbGFiZWwiOl92bS50KCJlbC5kYXRlcGlja2VyLm5leHRNb250aCIpfSxvbjp7Y2xpY2s6X3ZtLm5leHRNb250aH19KV0pLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19jb250ZW50In0sW19jKCJkYXRlLXRhYmxlIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLmN1cnJlbnRWaWV3PT09ImRhdGUiLGV4cHJlc3Npb246ImN1cnJlbnRWaWV3ID09PSAnZGF0ZScifV0sYXR0cnM6eyJzZWxlY3Rpb24tbW9kZSI6X3ZtLnNlbGVjdGlvbk1vZGUsImZpcnN0LWRheS1vZi13ZWVrIjpfdm0uZmlyc3REYXlPZldlZWssdmFsdWU6X3ZtLnZhbHVlLCJkZWZhdWx0LXZhbHVlIjpfdm0uZGVmYXVsdFZhbHVlP25ldyBEYXRlKF92bS5kZWZhdWx0VmFsdWUpOm51bGwsZGF0ZTpfdm0uZGF0ZSwiY2VsbC1jbGFzcy1uYW1lIjpfdm0uY2VsbENsYXNzTmFtZSwiZGlzYWJsZWQtZGF0ZSI6X3ZtLmRpc2FibGVkRGF0ZX0sb246e3BpY2s6X3ZtLmhhbmRsZURhdGVQaWNrfX0pLF9jKCJ5ZWFyLXRhYmxlIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLmN1cnJlbnRWaWV3PT09InllYXIiLGV4cHJlc3Npb246ImN1cnJlbnRWaWV3ID09PSAneWVhcicifV0sYXR0cnM6e3ZhbHVlOl92bS52YWx1ZSwiZGVmYXVsdC12YWx1ZSI6X3ZtLmRlZmF1bHRWYWx1ZT9uZXcgRGF0ZShfdm0uZGVmYXVsdFZhbHVlKTpudWxsLGRhdGU6X3ZtLmRhdGUsImRpc2FibGVkLWRhdGUiOl92bS5kaXNhYmxlZERhdGV9LG9uOntwaWNrOl92bS5oYW5kbGVZZWFyUGlja319KSxfYygibW9udGgtdGFibGUiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0uY3VycmVudFZpZXc9PT0ibW9udGgiLGV4cHJlc3Npb246ImN1cnJlbnRWaWV3ID09PSAnbW9udGgnIn1dLGF0dHJzOnt2YWx1ZTpfdm0udmFsdWUsImRlZmF1bHQtdmFsdWUiOl92bS5kZWZhdWx0VmFsdWU/bmV3IERhdGUoX3ZtLmRlZmF1bHRWYWx1ZSk6bnVsbCxkYXRlOl92bS5kYXRlLCJkaXNhYmxlZC1kYXRlIjpfdm0uZGlzYWJsZWREYXRlfSxvbjp7cGljazpfdm0uaGFuZGxlTW9udGhQaWNrfX0pXSwxKV0pXSwyKSxfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLmZvb3RlclZpc2libGUmJl92bS5jdXJyZW50Vmlldz09PSJkYXRlIixleHByZXNzaW9uOiJmb290ZXJWaXNpYmxlICYmIGN1cnJlbnRWaWV3ID09PSAnZGF0ZScifV0sc3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9fZm9vdGVyIn0sW19jKCJlbC1idXR0b24iLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0uc2VsZWN0aW9uTW9kZSE9PSJkYXRlcyIsZXhwcmVzc2lvbjoic2VsZWN0aW9uTW9kZSAhPT0gJ2RhdGVzJyJ9XSxzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19saW5rLWJ0biIsYXR0cnM6e3NpemU6Im1pbmkiLHR5cGU6InRleHQifSxvbjp7Y2xpY2s6X3ZtLmNoYW5nZVRvTm93fX0sW192bS5fdigiXG4gICAgICAgICIrX3ZtLl9zKF92bS50KCJlbC5kYXRlcGlja2VyLm5vdyIpKSsiXG4gICAgICAiKV0pLF9jKCJlbC1idXR0b24iLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19saW5rLWJ0biIsYXR0cnM6e3BsYWluOiIiLHNpemU6Im1pbmkifSxvbjp7Y2xpY2s6X3ZtLmNvbmZpcm19fSxbX3ZtLl92KCJcbiAgICAgICAgIitfdm0uX3MoX3ZtLnQoImVsLmRhdGVwaWNrZXIuY29uZmlybSIpKSsiXG4gICAgICAiKV0pXSwxKV0pXSk7fTt2YXIgZGF0ZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzI0NDBkNGVhX3N0YXRpY1JlbmRlckZucz1bXTtkYXRldnVlX3R5cGVfdGVtcGxhdGVfaWRfMjQ0MGQ0ZWFfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9kYXRlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yNDQwZDRlYSYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGFuZWwvdGltZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9M2Q5MzkwODkmCnZhciB0aW1ldnVlX3R5cGVfdGVtcGxhdGVfaWRfM2Q5MzkwODlfcmVuZGVyPWZ1bmN0aW9uIHRpbWV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zZDkzOTA4OV9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInRyYW5zaXRpb24iLHthdHRyczp7bmFtZToiZWwtem9vbS1pbi10b3AifSxvbjp7ImFmdGVyLWxlYXZlIjpmdW5jdGlvbiBhZnRlckxlYXZlKCRldmVudCl7X3ZtLiRlbWl0KCJkb2Rlc3Ryb3kiKTt9fX0sW19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0udmlzaWJsZSxleHByZXNzaW9uOiJ2aXNpYmxlIn1dLHN0YXRpY0NsYXNzOiJlbC10aW1lLXBhbmVsIGVsLXBvcHBlciIsY2xhc3M6X3ZtLnBvcHBlckNsYXNzfSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10aW1lLXBhbmVsX19jb250ZW50IixjbGFzczp7Imhhcy1zZWNvbmRzIjpfdm0uc2hvd1NlY29uZHN9fSxbX2MoInRpbWUtc3Bpbm5lciIse3JlZjoic3Bpbm5lciIsYXR0cnM6eyJhcnJvdy1jb250cm9sIjpfdm0udXNlQXJyb3csInNob3ctc2Vjb25kcyI6X3ZtLnNob3dTZWNvbmRzLCJhbS1wbS1tb2RlIjpfdm0uYW1QbU1vZGUsZGF0ZTpfdm0uZGF0ZX0sb246e2NoYW5nZTpfdm0uaGFuZGxlQ2hhbmdlLCJzZWxlY3QtcmFuZ2UiOl92bS5zZXRTZWxlY3Rpb25SYW5nZX19KV0sMSksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10aW1lLXBhbmVsX19mb290ZXIifSxbX2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC10aW1lLXBhbmVsX19idG4gY2FuY2VsIixhdHRyczp7dHlwZToiYnV0dG9uIn0sb246e2NsaWNrOl92bS5oYW5kbGVDYW5jZWx9fSxbX3ZtLl92KF92bS5fcyhfdm0udCgiZWwuZGF0ZXBpY2tlci5jYW5jZWwiKSkpXSksX2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC10aW1lLXBhbmVsX19idG4iLGNsYXNzOntjb25maXJtOiFfdm0uZGlzYWJsZWR9LGF0dHJzOnt0eXBlOiJidXR0b24ifSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtfdm0uaGFuZGxlQ29uZmlybSgpO319fSxbX3ZtLl92KF92bS5fcyhfdm0udCgiZWwuZGF0ZXBpY2tlci5jb25maXJtIikpKV0pXSldKV0pO307dmFyIHRpbWV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zZDkzOTA4OV9zdGF0aWNSZW5kZXJGbnM9W107dGltZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzNkOTM5MDg5X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGFuZWwvdGltZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9M2Q5MzkwODkmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL2Jhc2ljL3RpbWUtc3Bpbm5lci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MWZhY2FkZWImCnZhciB0aW1lX3NwaW5uZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8xZmFjYWRlYl9yZW5kZXI9ZnVuY3Rpb24gdGltZV9zcGlubmVydnVlX3R5cGVfdGVtcGxhdGVfaWRfMWZhY2FkZWJfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdGltZS1zcGlubmVyIixjbGFzczp7Imhhcy1zZWNvbmRzIjpfdm0uc2hvd1NlY29uZHN9fSxbIV92bS5hcnJvd0NvbnRyb2w/W19jKCJlbC1zY3JvbGxiYXIiLHtyZWY6ImhvdXJzIixzdGF0aWNDbGFzczoiZWwtdGltZS1zcGlubmVyX193cmFwcGVyIixhdHRyczp7IndyYXAtc3R5bGUiOiJtYXgtaGVpZ2h0OiBpbmhlcml0OyIsInZpZXctY2xhc3MiOiJlbC10aW1lLXNwaW5uZXJfX2xpc3QiLG5vcmVzaXplOiIiLHRhZzoidWwifSxuYXRpdmVPbjp7bW91c2VlbnRlcjpmdW5jdGlvbiBtb3VzZWVudGVyKCRldmVudCl7X3ZtLmVtaXRTZWxlY3RSYW5nZSgiaG91cnMiKTt9LG1vdXNlbW92ZTpmdW5jdGlvbiBtb3VzZW1vdmUoJGV2ZW50KXtfdm0uYWRqdXN0Q3VycmVudFNwaW5uZXIoImhvdXJzIik7fX19LF92bS5fbChfdm0uaG91cnNMaXN0LGZ1bmN0aW9uKGRpc2FibGVkLGhvdXIpe3JldHVybiBfYygibGkiLHtrZXk6aG91cixzdGF0aWNDbGFzczoiZWwtdGltZS1zcGlubmVyX19pdGVtIixjbGFzczp7YWN0aXZlOmhvdXI9PT1fdm0uaG91cnMsZGlzYWJsZWQ6ZGlzYWJsZWR9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVDbGljaygiaG91cnMiLHt2YWx1ZTpob3VyLGRpc2FibGVkOmRpc2FibGVkfSk7fX19LFtfdm0uX3YoX3ZtLl9zKCgiMCIrKF92bS5hbVBtTW9kZT9ob3VyJTEyfHwxMjpob3VyKSkuc2xpY2UoLTIpKStfdm0uX3MoX3ZtLmFtUG0oaG91cikpKV0pO30pLDApLF9jKCJlbC1zY3JvbGxiYXIiLHtyZWY6Im1pbnV0ZXMiLHN0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX3dyYXBwZXIiLGF0dHJzOnsid3JhcC1zdHlsZSI6Im1heC1oZWlnaHQ6IGluaGVyaXQ7Iiwidmlldy1jbGFzcyI6ImVsLXRpbWUtc3Bpbm5lcl9fbGlzdCIsbm9yZXNpemU6IiIsdGFnOiJ1bCJ9LG5hdGl2ZU9uOnttb3VzZWVudGVyOmZ1bmN0aW9uIG1vdXNlZW50ZXIoJGV2ZW50KXtfdm0uZW1pdFNlbGVjdFJhbmdlKCJtaW51dGVzIik7fSxtb3VzZW1vdmU6ZnVuY3Rpb24gbW91c2Vtb3ZlKCRldmVudCl7X3ZtLmFkanVzdEN1cnJlbnRTcGlubmVyKCJtaW51dGVzIik7fX19LF92bS5fbChfdm0ubWludXRlc0xpc3QsZnVuY3Rpb24oZW5hYmxlZCxrZXkpe3JldHVybiBfYygibGkiLHtrZXk6a2V5LHN0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX2l0ZW0iLGNsYXNzOnthY3RpdmU6a2V5PT09X3ZtLm1pbnV0ZXMsZGlzYWJsZWQ6IWVuYWJsZWR9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVDbGljaygibWludXRlcyIse3ZhbHVlOmtleSxkaXNhYmxlZDpmYWxzZX0pO319fSxbX3ZtLl92KF92bS5fcygoIjAiK2tleSkuc2xpY2UoLTIpKSldKTt9KSwwKSxfYygiZWwtc2Nyb2xsYmFyIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnNob3dTZWNvbmRzLGV4cHJlc3Npb246InNob3dTZWNvbmRzIn1dLHJlZjoic2Vjb25kcyIsc3RhdGljQ2xhc3M6ImVsLXRpbWUtc3Bpbm5lcl9fd3JhcHBlciIsYXR0cnM6eyJ3cmFwLXN0eWxlIjoibWF4LWhlaWdodDogaW5oZXJpdDsiLCJ2aWV3LWNsYXNzIjoiZWwtdGltZS1zcGlubmVyX19saXN0Iixub3Jlc2l6ZToiIix0YWc6InVsIn0sbmF0aXZlT246e21vdXNlZW50ZXI6ZnVuY3Rpb24gbW91c2VlbnRlcigkZXZlbnQpe192bS5lbWl0U2VsZWN0UmFuZ2UoInNlY29uZHMiKTt9LG1vdXNlbW92ZTpmdW5jdGlvbiBtb3VzZW1vdmUoJGV2ZW50KXtfdm0uYWRqdXN0Q3VycmVudFNwaW5uZXIoInNlY29uZHMiKTt9fX0sX3ZtLl9sKDYwLGZ1bmN0aW9uKHNlY29uZCxrZXkpe3JldHVybiBfYygibGkiLHtrZXk6a2V5LHN0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX2l0ZW0iLGNsYXNzOnthY3RpdmU6a2V5PT09X3ZtLnNlY29uZHN9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVDbGljaygic2Vjb25kcyIse3ZhbHVlOmtleSxkaXNhYmxlZDpmYWxzZX0pO319fSxbX3ZtLl92KF92bS5fcygoIjAiK2tleSkuc2xpY2UoLTIpKSldKTt9KSwwKV06X3ZtLl9lKCksX3ZtLmFycm93Q29udHJvbD9bX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX3dyYXBwZXIgaXMtYXJyb3ciLG9uOnttb3VzZWVudGVyOmZ1bmN0aW9uIG1vdXNlZW50ZXIoJGV2ZW50KXtfdm0uZW1pdFNlbGVjdFJhbmdlKCJob3VycyIpO319fSxbX2MoImkiLHtkaXJlY3RpdmVzOlt7bmFtZToicmVwZWF0LWNsaWNrIixyYXdOYW1lOiJ2LXJlcGVhdC1jbGljayIsdmFsdWU6X3ZtLmRlY3JlYXNlLGV4cHJlc3Npb246ImRlY3JlYXNlIn1dLHN0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX2Fycm93IGVsLWljb24tYXJyb3ctdXAifSksX2MoImkiLHtkaXJlY3RpdmVzOlt7bmFtZToicmVwZWF0LWNsaWNrIixyYXdOYW1lOiJ2LXJlcGVhdC1jbGljayIsdmFsdWU6X3ZtLmluY3JlYXNlLGV4cHJlc3Npb246ImluY3JlYXNlIn1dLHN0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX2Fycm93IGVsLWljb24tYXJyb3ctZG93biJ9KSxfYygidWwiLHtyZWY6ImhvdXJzIixzdGF0aWNDbGFzczoiZWwtdGltZS1zcGlubmVyX19saXN0In0sX3ZtLl9sKF92bS5hcnJvd0hvdXJMaXN0LGZ1bmN0aW9uKGhvdXIsa2V5KXtyZXR1cm4gX2MoImxpIix7a2V5OmtleSxzdGF0aWNDbGFzczoiZWwtdGltZS1zcGlubmVyX19pdGVtIixjbGFzczp7YWN0aXZlOmhvdXI9PT1fdm0uaG91cnMsZGlzYWJsZWQ6X3ZtLmhvdXJzTGlzdFtob3VyXX19LFtfdm0uX3YoX3ZtLl9zKGhvdXI9PT11bmRlZmluZWQ/IiI6KCIwIisoX3ZtLmFtUG1Nb2RlP2hvdXIlMTJ8fDEyOmhvdXIpKS5zbGljZSgtMikrX3ZtLmFtUG0oaG91cikpKV0pO30pLDApXSksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX3dyYXBwZXIgaXMtYXJyb3ciLG9uOnttb3VzZWVudGVyOmZ1bmN0aW9uIG1vdXNlZW50ZXIoJGV2ZW50KXtfdm0uZW1pdFNlbGVjdFJhbmdlKCJtaW51dGVzIik7fX19LFtfYygiaSIse2RpcmVjdGl2ZXM6W3tuYW1lOiJyZXBlYXQtY2xpY2siLHJhd05hbWU6InYtcmVwZWF0LWNsaWNrIix2YWx1ZTpfdm0uZGVjcmVhc2UsZXhwcmVzc2lvbjoiZGVjcmVhc2UifV0sc3RhdGljQ2xhc3M6ImVsLXRpbWUtc3Bpbm5lcl9fYXJyb3cgZWwtaWNvbi1hcnJvdy11cCJ9KSxfYygiaSIse2RpcmVjdGl2ZXM6W3tuYW1lOiJyZXBlYXQtY2xpY2siLHJhd05hbWU6InYtcmVwZWF0LWNsaWNrIix2YWx1ZTpfdm0uaW5jcmVhc2UsZXhwcmVzc2lvbjoiaW5jcmVhc2UifV0sc3RhdGljQ2xhc3M6ImVsLXRpbWUtc3Bpbm5lcl9fYXJyb3cgZWwtaWNvbi1hcnJvdy1kb3duIn0pLF9jKCJ1bCIse3JlZjoibWludXRlcyIsc3RhdGljQ2xhc3M6ImVsLXRpbWUtc3Bpbm5lcl9fbGlzdCJ9LF92bS5fbChfdm0uYXJyb3dNaW51dGVMaXN0LGZ1bmN0aW9uKG1pbnV0ZSxrZXkpe3JldHVybiBfYygibGkiLHtrZXk6a2V5LHN0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX2l0ZW0iLGNsYXNzOnthY3RpdmU6bWludXRlPT09X3ZtLm1pbnV0ZXN9fSxbX3ZtLl92KCJcbiAgICAgICAgICAiK192bS5fcyhtaW51dGU9PT11bmRlZmluZWQ/IiI6KCIwIittaW51dGUpLnNsaWNlKC0yKSkrIlxuICAgICAgICAiKV0pO30pLDApXSksX3ZtLnNob3dTZWNvbmRzP19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdGltZS1zcGlubmVyX193cmFwcGVyIGlzLWFycm93Iixvbjp7bW91c2VlbnRlcjpmdW5jdGlvbiBtb3VzZWVudGVyKCRldmVudCl7X3ZtLmVtaXRTZWxlY3RSYW5nZSgic2Vjb25kcyIpO319fSxbX2MoImkiLHtkaXJlY3RpdmVzOlt7bmFtZToicmVwZWF0LWNsaWNrIixyYXdOYW1lOiJ2LXJlcGVhdC1jbGljayIsdmFsdWU6X3ZtLmRlY3JlYXNlLGV4cHJlc3Npb246ImRlY3JlYXNlIn1dLHN0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX2Fycm93IGVsLWljb24tYXJyb3ctdXAifSksX2MoImkiLHtkaXJlY3RpdmVzOlt7bmFtZToicmVwZWF0LWNsaWNrIixyYXdOYW1lOiJ2LXJlcGVhdC1jbGljayIsdmFsdWU6X3ZtLmluY3JlYXNlLGV4cHJlc3Npb246ImluY3JlYXNlIn1dLHN0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX2Fycm93IGVsLWljb24tYXJyb3ctZG93biJ9KSxfYygidWwiLHtyZWY6InNlY29uZHMiLHN0YXRpY0NsYXNzOiJlbC10aW1lLXNwaW5uZXJfX2xpc3QifSxfdm0uX2woX3ZtLmFycm93U2Vjb25kTGlzdCxmdW5jdGlvbihzZWNvbmQsa2V5KXtyZXR1cm4gX2MoImxpIix7a2V5OmtleSxzdGF0aWNDbGFzczoiZWwtdGltZS1zcGlubmVyX19pdGVtIixjbGFzczp7YWN0aXZlOnNlY29uZD09PV92bS5zZWNvbmRzfX0sW192bS5fdigiXG4gICAgICAgICAgIitfdm0uX3Moc2Vjb25kPT09dW5kZWZpbmVkPyIiOigiMCIrc2Vjb25kKS5zbGljZSgtMikpKyJcbiAgICAgICAgIildKTt9KSwwKV0pOl92bS5fZSgpXTpfdm0uX2UoKV0sMik7fTt2YXIgdGltZV9zcGlubmVydnVlX3R5cGVfdGVtcGxhdGVfaWRfMWZhY2FkZWJfc3RhdGljUmVuZGVyRm5zPVtdO3RpbWVfc3Bpbm5lcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzFmYWNhZGViX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvYmFzaWMvdGltZS1zcGlubmVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xZmFjYWRlYiYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL2Jhc2ljL3RpbWUtc3Bpbm5lci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGltZV9zcGlubmVydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtjb21wb25lbnRzOntFbFNjcm9sbGJhcjpzY3JvbGxiYXJfZGVmYXVsdC5hfSxkaXJlY3RpdmVzOntyZXBlYXRDbGljazpyZXBlYXRfY2xpY2t9LHByb3BzOntkYXRlOnt9LGRlZmF1bHRWYWx1ZTp7fSwvLyByZXNlcnZlZCBmb3IgZnV0dXJlIHVzZQpzaG93U2Vjb25kczp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sYXJyb3dDb250cm9sOkJvb2xlYW4sYW1QbU1vZGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JycvLyAnYSc6IGFtL3BtOyAnQSc6IEFNL1BNCn19LGNvbXB1dGVkOntob3VyczpmdW5jdGlvbiBob3Vycygpe3JldHVybiB0aGlzLmRhdGUuZ2V0SG91cnMoKTt9LG1pbnV0ZXM6ZnVuY3Rpb24gbWludXRlcygpe3JldHVybiB0aGlzLmRhdGUuZ2V0TWludXRlcygpO30sc2Vjb25kczpmdW5jdGlvbiBzZWNvbmRzKCl7cmV0dXJuIHRoaXMuZGF0ZS5nZXRTZWNvbmRzKCk7fSxob3Vyc0xpc3Q6ZnVuY3Rpb24gaG91cnNMaXN0KCl7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJnZXRSYW5nZUhvdXJzIl0pKHRoaXMuc2VsZWN0YWJsZVJhbmdlKTt9LG1pbnV0ZXNMaXN0OmZ1bmN0aW9uIG1pbnV0ZXNMaXN0KCl7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJnZXRSYW5nZU1pbnV0ZXMiXSkodGhpcy5zZWxlY3RhYmxlUmFuZ2UsdGhpcy5ob3Vycyk7fSxhcnJvd0hvdXJMaXN0OmZ1bmN0aW9uIGFycm93SG91ckxpc3QoKXt2YXIgaG91cnM9dGhpcy5ob3VycztyZXR1cm5baG91cnM+MD9ob3Vycy0xOnVuZGVmaW5lZCxob3Vycyxob3VyczwyMz9ob3VycysxOnVuZGVmaW5lZF07fSxhcnJvd01pbnV0ZUxpc3Q6ZnVuY3Rpb24gYXJyb3dNaW51dGVMaXN0KCl7dmFyIG1pbnV0ZXM9dGhpcy5taW51dGVzO3JldHVyblttaW51dGVzPjA/bWludXRlcy0xOnVuZGVmaW5lZCxtaW51dGVzLG1pbnV0ZXM8NTk/bWludXRlcysxOnVuZGVmaW5lZF07fSxhcnJvd1NlY29uZExpc3Q6ZnVuY3Rpb24gYXJyb3dTZWNvbmRMaXN0KCl7dmFyIHNlY29uZHM9dGhpcy5zZWNvbmRzO3JldHVybltzZWNvbmRzPjA/c2Vjb25kcy0xOnVuZGVmaW5lZCxzZWNvbmRzLHNlY29uZHM8NTk/c2Vjb25kcysxOnVuZGVmaW5lZF07fX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3NlbGVjdGFibGVSYW5nZTpbXSxjdXJyZW50U2Nyb2xsYmFyOm51bGx9O30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXshX3RoaXMuYXJyb3dDb250cm9sJiZfdGhpcy5iaW5kU2Nyb2xsRXZlbnQoKTt9KTt9LG1ldGhvZHM6e2luY3JlYXNlOmZ1bmN0aW9uIGluY3JlYXNlKCl7dGhpcy5zY3JvbGxEb3duKDEpO30sZGVjcmVhc2U6ZnVuY3Rpb24gZGVjcmVhc2UoKXt0aGlzLnNjcm9sbERvd24oLTEpO30sbW9kaWZ5RGF0ZUZpZWxkOmZ1bmN0aW9uIG1vZGlmeURhdGVGaWVsZCh0eXBlLHZhbHVlKXtzd2l0Y2godHlwZSl7Y2FzZSdob3Vycyc6dGhpcy4kZW1pdCgnY2hhbmdlJyxPYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5VGltZSJdKSh0aGlzLmRhdGUsdmFsdWUsdGhpcy5taW51dGVzLHRoaXMuc2Vjb25kcykpO2JyZWFrO2Nhc2UnbWludXRlcyc6dGhpcy4kZW1pdCgnY2hhbmdlJyxPYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5VGltZSJdKSh0aGlzLmRhdGUsdGhpcy5ob3Vycyx2YWx1ZSx0aGlzLnNlY29uZHMpKTticmVhaztjYXNlJ3NlY29uZHMnOnRoaXMuJGVtaXQoJ2NoYW5nZScsT2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeVRpbWUiXSkodGhpcy5kYXRlLHRoaXMuaG91cnMsdGhpcy5taW51dGVzLHZhbHVlKSk7YnJlYWs7fX0saGFuZGxlQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlQ2xpY2sodHlwZSxfcmVmKXt2YXIgdmFsdWU9X3JlZi52YWx1ZSxkaXNhYmxlZD1fcmVmLmRpc2FibGVkO2lmKCFkaXNhYmxlZCl7dGhpcy5tb2RpZnlEYXRlRmllbGQodHlwZSx2YWx1ZSk7dGhpcy5lbWl0U2VsZWN0UmFuZ2UodHlwZSk7dGhpcy5hZGp1c3RTcGlubmVyKHR5cGUsdmFsdWUpO319LGVtaXRTZWxlY3RSYW5nZTpmdW5jdGlvbiBlbWl0U2VsZWN0UmFuZ2UodHlwZSl7aWYodHlwZT09PSdob3Vycycpe3RoaXMuJGVtaXQoJ3NlbGVjdC1yYW5nZScsMCwyKTt9ZWxzZSBpZih0eXBlPT09J21pbnV0ZXMnKXt0aGlzLiRlbWl0KCdzZWxlY3QtcmFuZ2UnLDMsNSk7fWVsc2UgaWYodHlwZT09PSdzZWNvbmRzJyl7dGhpcy4kZW1pdCgnc2VsZWN0LXJhbmdlJyw2LDgpO310aGlzLmN1cnJlbnRTY3JvbGxiYXI9dHlwZTt9LGJpbmRTY3JvbGxFdmVudDpmdW5jdGlvbiBiaW5kU2Nyb2xsRXZlbnQoKXt2YXIgX3RoaXMyPXRoaXM7dmFyIGJpbmRGdW50aW9uPWZ1bmN0aW9uIGJpbmRGdW50aW9uKHR5cGUpe190aGlzMi4kcmVmc1t0eXBlXS53cmFwLm9uc2Nyb2xsPWZ1bmN0aW9uKGUpey8vIFRPRE86IHNjcm9sbCBpcyBlbWl0dGVkIHdoZW4gc2V0IHNjcm9sbFRvcCBwcm9ncmFtYXRpY2FsbHkKLy8gc2hvdWxkIGZpbmQgYmV0dGVyIHNvbHV0aW9ucyBpbiB0aGUgZnV0dXJlIQpfdGhpczIuaGFuZGxlU2Nyb2xsKHR5cGUsZSk7fTt9O2JpbmRGdW50aW9uKCdob3VycycpO2JpbmRGdW50aW9uKCdtaW51dGVzJyk7YmluZEZ1bnRpb24oJ3NlY29uZHMnKTt9LGhhbmRsZVNjcm9sbDpmdW5jdGlvbiBoYW5kbGVTY3JvbGwodHlwZSl7dmFyIHZhbHVlPU1hdGgubWluKE1hdGgucm91bmQoKHRoaXMuJHJlZnNbdHlwZV0ud3JhcC5zY3JvbGxUb3AtKHRoaXMuc2Nyb2xsQmFySGVpZ2h0KHR5cGUpKjAuNS0xMCkvdGhpcy50eXBlSXRlbUhlaWdodCh0eXBlKSszKS90aGlzLnR5cGVJdGVtSGVpZ2h0KHR5cGUpKSx0eXBlPT09J2hvdXJzJz8yMzo1OSk7dGhpcy5tb2RpZnlEYXRlRmllbGQodHlwZSx2YWx1ZSk7fSwvLyBOT1RFOiB1c2VkIGJ5IGRhdGV0aW1lIC8gZGF0ZS1yYW5nZSBwYW5lbAovLyAgICAgICByZW5hbWVkIGZyb20gYWRqdXN0U2Nyb2xsVG9wCi8vICAgICAgIHNob3VsZCB0cnkgdG8gcmVmYWN0b3J5IGl0CmFkanVzdFNwaW5uZXJzOmZ1bmN0aW9uIGFkanVzdFNwaW5uZXJzKCl7dGhpcy5hZGp1c3RTcGlubmVyKCdob3VycycsdGhpcy5ob3Vycyk7dGhpcy5hZGp1c3RTcGlubmVyKCdtaW51dGVzJyx0aGlzLm1pbnV0ZXMpO3RoaXMuYWRqdXN0U3Bpbm5lcignc2Vjb25kcycsdGhpcy5zZWNvbmRzKTt9LGFkanVzdEN1cnJlbnRTcGlubmVyOmZ1bmN0aW9uIGFkanVzdEN1cnJlbnRTcGlubmVyKHR5cGUpe3RoaXMuYWRqdXN0U3Bpbm5lcih0eXBlLHRoaXNbdHlwZV0pO30sYWRqdXN0U3Bpbm5lcjpmdW5jdGlvbiBhZGp1c3RTcGlubmVyKHR5cGUsdmFsdWUpe2lmKHRoaXMuYXJyb3dDb250cm9sKXJldHVybjt2YXIgZWw9dGhpcy4kcmVmc1t0eXBlXS53cmFwO2lmKGVsKXtlbC5zY3JvbGxUb3A9TWF0aC5tYXgoMCx2YWx1ZSp0aGlzLnR5cGVJdGVtSGVpZ2h0KHR5cGUpKTt9fSxzY3JvbGxEb3duOmZ1bmN0aW9uIHNjcm9sbERvd24oc3RlcCl7dmFyIF90aGlzMz10aGlzO2lmKCF0aGlzLmN1cnJlbnRTY3JvbGxiYXIpe3RoaXMuZW1pdFNlbGVjdFJhbmdlKCdob3VycycpO312YXIgbGFiZWw9dGhpcy5jdXJyZW50U2Nyb2xsYmFyO3ZhciBob3Vyc0xpc3Q9dGhpcy5ob3Vyc0xpc3Q7dmFyIG5vdz10aGlzW2xhYmVsXTtpZih0aGlzLmN1cnJlbnRTY3JvbGxiYXI9PT0naG91cnMnKXt2YXIgdG90YWw9TWF0aC5hYnMoc3RlcCk7c3RlcD1zdGVwPjA/MTotMTt2YXIgbGVuZ3RoPWhvdXJzTGlzdC5sZW5ndGg7d2hpbGUobGVuZ3RoLS0mJnRvdGFsKXtub3c9KG5vdytzdGVwK2hvdXJzTGlzdC5sZW5ndGgpJWhvdXJzTGlzdC5sZW5ndGg7aWYoaG91cnNMaXN0W25vd10pe2NvbnRpbnVlO310b3RhbC0tO31pZihob3Vyc0xpc3Rbbm93XSlyZXR1cm47fWVsc2V7bm93PShub3crc3RlcCs2MCklNjA7fXRoaXMubW9kaWZ5RGF0ZUZpZWxkKGxhYmVsLG5vdyk7dGhpcy5hZGp1c3RTcGlubmVyKGxhYmVsLG5vdyk7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMzLmVtaXRTZWxlY3RSYW5nZShfdGhpczMuY3VycmVudFNjcm9sbGJhcik7fSk7fSxhbVBtOmZ1bmN0aW9uIGFtUG0oaG91cil7dmFyIHNob3VsZFNob3dBbVBtPXRoaXMuYW1QbU1vZGUudG9Mb3dlckNhc2UoKT09PSdhJztpZighc2hvdWxkU2hvd0FtUG0pcmV0dXJuJyc7dmFyIGlzQ2FwaXRhbD10aGlzLmFtUG1Nb2RlPT09J0EnO3ZhciBjb250ZW50PWhvdXI8MTI/JyBhbSc6JyBwbSc7aWYoaXNDYXBpdGFsKWNvbnRlbnQ9Y29udGVudC50b1VwcGVyQ2FzZSgpO3JldHVybiBjb250ZW50O30sdHlwZUl0ZW1IZWlnaHQ6ZnVuY3Rpb24gdHlwZUl0ZW1IZWlnaHQodHlwZSl7cmV0dXJuIHRoaXMuJHJlZnNbdHlwZV0uJGVsLnF1ZXJ5U2VsZWN0b3IoJ2xpJykub2Zmc2V0SGVpZ2h0O30sc2Nyb2xsQmFySGVpZ2h0OmZ1bmN0aW9uIHNjcm9sbEJhckhlaWdodCh0eXBlKXtyZXR1cm4gdGhpcy4kcmVmc1t0eXBlXS4kZWwub2Zmc2V0SGVpZ2h0O319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9iYXNpYy90aW1lLXNwaW5uZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGJhc2ljX3RpbWVfc3Bpbm5lcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz10aW1lX3NwaW5uZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvYmFzaWMvdGltZS1zcGlubmVyLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHRpbWVfc3Bpbm5lcl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KGJhc2ljX3RpbWVfc3Bpbm5lcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyx0aW1lX3NwaW5uZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8xZmFjYWRlYl9yZW5kZXIsdGltZV9zcGlubmVydnVlX3R5cGVfdGVtcGxhdGVfaWRfMWZhY2FkZWJfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciB0aW1lX3NwaW5uZXJfYXBpO310aW1lX3NwaW5uZXJfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvYmFzaWMvdGltZS1zcGlubmVyLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0aW1lX3NwaW5uZXI9dGltZV9zcGlubmVyX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC90aW1lLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0aW1ldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXttaXhpbnM6W2xvY2FsZV9kZWZhdWx0LmFdLGNvbXBvbmVudHM6e1RpbWVTcGlubmVyOnRpbWVfc3Bpbm5lcn0scHJvcHM6e3Zpc2libGU6Qm9vbGVhbix0aW1lQXJyb3dDb250cm9sOkJvb2xlYW59LHdhdGNoOnt2aXNpYmxlOmZ1bmN0aW9uIHZpc2libGUodmFsKXt2YXIgX3RoaXM9dGhpcztpZih2YWwpe3RoaXMub2xkVmFsdWU9dGhpcy52YWx1ZTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe3JldHVybiBfdGhpcy4kcmVmcy5zcGlubmVyLmVtaXRTZWxlY3RSYW5nZSgnaG91cnMnKTt9KTt9ZWxzZXt0aGlzLm5lZWRJbml0QWRqdXN0PXRydWU7fX0sdmFsdWU6ZnVuY3Rpb24gdmFsdWUobmV3VmFsKXt2YXIgX3RoaXMyPXRoaXM7dmFyIGRhdGU9dm9pZCAwO2lmKG5ld1ZhbCBpbnN0YW5jZW9mIERhdGUpe2RhdGU9T2JqZWN0KGRhdGVfdXRpbF9bImxpbWl0VGltZVJhbmdlIl0pKG5ld1ZhbCx0aGlzLnNlbGVjdGFibGVSYW5nZSx0aGlzLmZvcm1hdCk7fWVsc2UgaWYoIW5ld1ZhbCl7ZGF0ZT10aGlzLmRlZmF1bHRWYWx1ZT9uZXcgRGF0ZSh0aGlzLmRlZmF1bHRWYWx1ZSk6bmV3IERhdGUoKTt9dGhpcy5kYXRlPWRhdGU7aWYodGhpcy52aXNpYmxlJiZ0aGlzLm5lZWRJbml0QWRqdXN0KXt0aGlzLiRuZXh0VGljayhmdW5jdGlvbihfKXtyZXR1cm4gX3RoaXMyLmFkanVzdFNwaW5uZXJzKCk7fSk7dGhpcy5uZWVkSW5pdEFkanVzdD1mYWxzZTt9fSxzZWxlY3RhYmxlUmFuZ2U6ZnVuY3Rpb24gc2VsZWN0YWJsZVJhbmdlKHZhbCl7dGhpcy4kcmVmcy5zcGlubmVyLnNlbGVjdGFibGVSYW5nZT12YWw7fSxkZWZhdWx0VmFsdWU6ZnVuY3Rpb24gZGVmYXVsdFZhbHVlKHZhbCl7aWYoIU9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkodGhpcy52YWx1ZSkpe3RoaXMuZGF0ZT12YWw/bmV3IERhdGUodmFsKTpuZXcgRGF0ZSgpO319fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57cG9wcGVyQ2xhc3M6JycsZm9ybWF0OidISDptbTpzcycsdmFsdWU6JycsZGVmYXVsdFZhbHVlOm51bGwsZGF0ZTpuZXcgRGF0ZSgpLG9sZFZhbHVlOm5ldyBEYXRlKCksc2VsZWN0YWJsZVJhbmdlOltdLHNlbGVjdGlvblJhbmdlOlswLDJdLGRpc2FibGVkOmZhbHNlLGFycm93Q29udHJvbDpmYWxzZSxuZWVkSW5pdEFkanVzdDp0cnVlfTt9LGNvbXB1dGVkOntzaG93U2Vjb25kczpmdW5jdGlvbiBzaG93U2Vjb25kcygpe3JldHVybih0aGlzLmZvcm1hdHx8JycpLmluZGV4T2YoJ3NzJykhPT0tMTt9LHVzZUFycm93OmZ1bmN0aW9uIHVzZUFycm93KCl7cmV0dXJuIHRoaXMuYXJyb3dDb250cm9sfHx0aGlzLnRpbWVBcnJvd0NvbnRyb2x8fGZhbHNlO30sYW1QbU1vZGU6ZnVuY3Rpb24gYW1QbU1vZGUoKXtpZigodGhpcy5mb3JtYXR8fCcnKS5pbmRleE9mKCdBJykhPT0tMSlyZXR1cm4nQSc7aWYoKHRoaXMuZm9ybWF0fHwnJykuaW5kZXhPZignYScpIT09LTEpcmV0dXJuJ2EnO3JldHVybicnO319LG1ldGhvZHM6e2hhbmRsZUNhbmNlbDpmdW5jdGlvbiBoYW5kbGVDYW5jZWwoKXt0aGlzLiRlbWl0KCdwaWNrJyx0aGlzLm9sZFZhbHVlLGZhbHNlKTt9LGhhbmRsZUNoYW5nZTpmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoZGF0ZSl7Ly8gdGhpcy52aXNpYmxlIGF2b2lkcyBlZGdlIGNhc2VzLCB3aGVuIHVzZSBzY3JvbGxzIGR1cmluZyBwYW5lbCBjbG9zaW5nIGFuaW1hdGlvbgppZih0aGlzLnZpc2libGUpe3RoaXMuZGF0ZT1PYmplY3QoZGF0ZV91dGlsX1siY2xlYXJNaWxsaXNlY29uZHMiXSkoZGF0ZSk7Ly8gaWYgZGF0ZSBpcyBvdXQgb2YgcmFuZ2UsIGRvIG5vdCBlbWl0CmlmKHRoaXMuaXNWYWxpZFZhbHVlKHRoaXMuZGF0ZSkpe3RoaXMuJGVtaXQoJ3BpY2snLHRoaXMuZGF0ZSx0cnVlKTt9fX0sc2V0U2VsZWN0aW9uUmFuZ2U6ZnVuY3Rpb24gc2V0U2VsZWN0aW9uUmFuZ2Uoc3RhcnQsZW5kKXt0aGlzLiRlbWl0KCdzZWxlY3QtcmFuZ2UnLHN0YXJ0LGVuZCk7dGhpcy5zZWxlY3Rpb25SYW5nZT1bc3RhcnQsZW5kXTt9LGhhbmRsZUNvbmZpcm06ZnVuY3Rpb24gaGFuZGxlQ29uZmlybSgpe3ZhciB2aXNpYmxlPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1swXTpmYWxzZTt2YXIgZmlyc3Q9YXJndW1lbnRzWzFdO2lmKGZpcnN0KXJldHVybjt2YXIgZGF0ZT1PYmplY3QoZGF0ZV91dGlsX1siY2xlYXJNaWxsaXNlY29uZHMiXSkoT2JqZWN0KGRhdGVfdXRpbF9bImxpbWl0VGltZVJhbmdlIl0pKHRoaXMuZGF0ZSx0aGlzLnNlbGVjdGFibGVSYW5nZSx0aGlzLmZvcm1hdCkpO3RoaXMuJGVtaXQoJ3BpY2snLGRhdGUsdmlzaWJsZSxmaXJzdCk7fSxoYW5kbGVLZXlkb3duOmZ1bmN0aW9uIGhhbmRsZUtleWRvd24oZXZlbnQpe3ZhciBrZXlDb2RlPWV2ZW50LmtleUNvZGU7dmFyIG1hcHBpbmc9ezM4Oi0xLDQwOjEsMzc6LTEsMzk6MX07Ly8gTGVmdCBvciBSaWdodAppZihrZXlDb2RlPT09Mzd8fGtleUNvZGU9PT0zOSl7dmFyIHN0ZXA9bWFwcGluZ1trZXlDb2RlXTt0aGlzLmNoYW5nZVNlbGVjdGlvblJhbmdlKHN0ZXApO2V2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuO30vLyBVcCBvciBEb3duCmlmKGtleUNvZGU9PT0zOHx8a2V5Q29kZT09PTQwKXt2YXIgX3N0ZXA9bWFwcGluZ1trZXlDb2RlXTt0aGlzLiRyZWZzLnNwaW5uZXIuc2Nyb2xsRG93bihfc3RlcCk7ZXZlbnQucHJldmVudERlZmF1bHQoKTtyZXR1cm47fX0saXNWYWxpZFZhbHVlOmZ1bmN0aW9uIGlzVmFsaWRWYWx1ZShkYXRlKXtyZXR1cm4gT2JqZWN0KGRhdGVfdXRpbF9bInRpbWVXaXRoaW5SYW5nZSJdKShkYXRlLHRoaXMuc2VsZWN0YWJsZVJhbmdlLHRoaXMuZm9ybWF0KTt9LGFkanVzdFNwaW5uZXJzOmZ1bmN0aW9uIGFkanVzdFNwaW5uZXJzKCl7cmV0dXJuIHRoaXMuJHJlZnMuc3Bpbm5lci5hZGp1c3RTcGlubmVycygpO30sY2hhbmdlU2VsZWN0aW9uUmFuZ2U6ZnVuY3Rpb24gY2hhbmdlU2VsZWN0aW9uUmFuZ2Uoc3RlcCl7dmFyIGxpc3Q9WzAsM10uY29uY2F0KHRoaXMuc2hvd1NlY29uZHM/WzZdOltdKTt2YXIgbWFwcGluZz1bJ2hvdXJzJywnbWludXRlcyddLmNvbmNhdCh0aGlzLnNob3dTZWNvbmRzP1snc2Vjb25kcyddOltdKTt2YXIgaW5kZXg9bGlzdC5pbmRleE9mKHRoaXMuc2VsZWN0aW9uUmFuZ2VbMF0pO3ZhciBuZXh0PShpbmRleCtzdGVwK2xpc3QubGVuZ3RoKSVsaXN0Lmxlbmd0aDt0aGlzLiRyZWZzLnNwaW5uZXIuZW1pdFNlbGVjdFJhbmdlKG1hcHBpbmdbbmV4dF0pO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciBfdGhpczM9dGhpczt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe3JldHVybiBfdGhpczMuaGFuZGxlQ29uZmlybSh0cnVlLHRydWUpO30pO3RoaXMuJGVtaXQoJ21vdW50ZWQnKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC90aW1lLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYW5lbF90aW1ldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXRpbWV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGFuZWwvdGltZS52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciB0aW1lX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQocGFuZWxfdGltZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyx0aW1ldnVlX3R5cGVfdGVtcGxhdGVfaWRfM2Q5MzkwODlfcmVuZGVyLHRpbWV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zZDkzOTA4OV9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHRpbWVfYXBpO310aW1lX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL3RpbWUudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhbmVsX3RpbWU9dGltZV9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9iYXNpYy95ZWFyLXRhYmxlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jODZhYjVlMCYKdmFyIHllYXJfdGFibGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF9jODZhYjVlMF9yZW5kZXI9ZnVuY3Rpb24geWVhcl90YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2M4NmFiNWUwX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidGFibGUiLHtzdGF0aWNDbGFzczoiZWwteWVhci10YWJsZSIsb246e2NsaWNrOl92bS5oYW5kbGVZZWFyVGFibGVDbGlja319LFtfYygidGJvZHkiLFtfYygidHIiLFtfYygidGQiLHtzdGF0aWNDbGFzczoiYXZhaWxhYmxlIixjbGFzczpfdm0uZ2V0Q2VsbFN0eWxlKF92bS5zdGFydFllYXIrMCl9LFtfYygiYSIse3N0YXRpY0NsYXNzOiJjZWxsIn0sW192bS5fdihfdm0uX3MoX3ZtLnN0YXJ0WWVhcikpXSldKSxfYygidGQiLHtzdGF0aWNDbGFzczoiYXZhaWxhYmxlIixjbGFzczpfdm0uZ2V0Q2VsbFN0eWxlKF92bS5zdGFydFllYXIrMSl9LFtfYygiYSIse3N0YXRpY0NsYXNzOiJjZWxsIn0sW192bS5fdihfdm0uX3MoX3ZtLnN0YXJ0WWVhcisxKSldKV0pLF9jKCJ0ZCIse3N0YXRpY0NsYXNzOiJhdmFpbGFibGUiLGNsYXNzOl92bS5nZXRDZWxsU3R5bGUoX3ZtLnN0YXJ0WWVhcisyKX0sW19jKCJhIix7c3RhdGljQ2xhc3M6ImNlbGwifSxbX3ZtLl92KF92bS5fcyhfdm0uc3RhcnRZZWFyKzIpKV0pXSksX2MoInRkIix7c3RhdGljQ2xhc3M6ImF2YWlsYWJsZSIsY2xhc3M6X3ZtLmdldENlbGxTdHlsZShfdm0uc3RhcnRZZWFyKzMpfSxbX2MoImEiLHtzdGF0aWNDbGFzczoiY2VsbCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5zdGFydFllYXIrMykpXSldKV0pLF9jKCJ0ciIsW19jKCJ0ZCIse3N0YXRpY0NsYXNzOiJhdmFpbGFibGUiLGNsYXNzOl92bS5nZXRDZWxsU3R5bGUoX3ZtLnN0YXJ0WWVhcis0KX0sW19jKCJhIix7c3RhdGljQ2xhc3M6ImNlbGwifSxbX3ZtLl92KF92bS5fcyhfdm0uc3RhcnRZZWFyKzQpKV0pXSksX2MoInRkIix7c3RhdGljQ2xhc3M6ImF2YWlsYWJsZSIsY2xhc3M6X3ZtLmdldENlbGxTdHlsZShfdm0uc3RhcnRZZWFyKzUpfSxbX2MoImEiLHtzdGF0aWNDbGFzczoiY2VsbCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5zdGFydFllYXIrNSkpXSldKSxfYygidGQiLHtzdGF0aWNDbGFzczoiYXZhaWxhYmxlIixjbGFzczpfdm0uZ2V0Q2VsbFN0eWxlKF92bS5zdGFydFllYXIrNil9LFtfYygiYSIse3N0YXRpY0NsYXNzOiJjZWxsIn0sW192bS5fdihfdm0uX3MoX3ZtLnN0YXJ0WWVhcis2KSldKV0pLF9jKCJ0ZCIse3N0YXRpY0NsYXNzOiJhdmFpbGFibGUiLGNsYXNzOl92bS5nZXRDZWxsU3R5bGUoX3ZtLnN0YXJ0WWVhcis3KX0sW19jKCJhIix7c3RhdGljQ2xhc3M6ImNlbGwifSxbX3ZtLl92KF92bS5fcyhfdm0uc3RhcnRZZWFyKzcpKV0pXSldKSxfYygidHIiLFtfYygidGQiLHtzdGF0aWNDbGFzczoiYXZhaWxhYmxlIixjbGFzczpfdm0uZ2V0Q2VsbFN0eWxlKF92bS5zdGFydFllYXIrOCl9LFtfYygiYSIse3N0YXRpY0NsYXNzOiJjZWxsIn0sW192bS5fdihfdm0uX3MoX3ZtLnN0YXJ0WWVhcis4KSldKV0pLF9jKCJ0ZCIse3N0YXRpY0NsYXNzOiJhdmFpbGFibGUiLGNsYXNzOl92bS5nZXRDZWxsU3R5bGUoX3ZtLnN0YXJ0WWVhcis5KX0sW19jKCJhIix7c3RhdGljQ2xhc3M6ImNlbGwifSxbX3ZtLl92KF92bS5fcyhfdm0uc3RhcnRZZWFyKzkpKV0pXSksX2MoInRkIiksX2MoInRkIildKV0pXSk7fTt2YXIgeWVhcl90YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2M4NmFiNWUwX3N0YXRpY1JlbmRlckZucz1bXTt5ZWFyX3RhYmxldnVlX3R5cGVfdGVtcGxhdGVfaWRfYzg2YWI1ZTBfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9iYXNpYy95ZWFyLXRhYmxlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jODZhYjVlMCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL2Jhc2ljL3llYXItdGFibGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgeWVhcl90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2RhdGVzSW5ZZWFyPWZ1bmN0aW9uIGRhdGVzSW5ZZWFyKHllYXIpe3ZhciBudW1PZkRheXM9T2JqZWN0KGRhdGVfdXRpbF9bImdldERheUNvdW50T2ZZZWFyIl0pKHllYXIpO3ZhciBmaXJzdERheT1uZXcgRGF0ZSh5ZWFyLDAsMSk7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJyYW5nZSJdKShudW1PZkRheXMpLm1hcChmdW5jdGlvbihuKXtyZXR1cm4gT2JqZWN0KGRhdGVfdXRpbF9bIm5leHREYXRlIl0pKGZpcnN0RGF5LG4pO30pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB5ZWFyX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtwcm9wczp7ZGlzYWJsZWREYXRlOnt9LHZhbHVlOnt9LGRlZmF1bHRWYWx1ZTp7dmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpey8vIG51bGwgb3IgdmFsaWQgRGF0ZSBPYmplY3QKcmV0dXJuIHZhbD09PW51bGx8fHZhbCBpbnN0YW5jZW9mIERhdGUmJk9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkodmFsKTt9fSxkYXRlOnt9fSxjb21wdXRlZDp7c3RhcnRZZWFyOmZ1bmN0aW9uIHN0YXJ0WWVhcigpe3JldHVybiBNYXRoLmZsb29yKHRoaXMuZGF0ZS5nZXRGdWxsWWVhcigpLzEwKSoxMDt9fSxtZXRob2RzOntnZXRDZWxsU3R5bGU6ZnVuY3Rpb24gZ2V0Q2VsbFN0eWxlKHllYXIpe3ZhciBzdHlsZT17fTt2YXIgdG9kYXk9bmV3IERhdGUoKTtzdHlsZS5kaXNhYmxlZD10eXBlb2YgdGhpcy5kaXNhYmxlZERhdGU9PT0nZnVuY3Rpb24nP3llYXJfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19kYXRlc0luWWVhcih5ZWFyKS5ldmVyeSh0aGlzLmRpc2FibGVkRGF0ZSk6ZmFsc2U7c3R5bGUuY3VycmVudD1PYmplY3QodXRpbF9bImFycmF5RmluZEluZGV4Il0pKE9iamVjdCh1dGlsX1siY29lcmNlVHJ1dGh5VmFsdWVUb0FycmF5Il0pKHRoaXMudmFsdWUpLGZ1bmN0aW9uKGRhdGUpe3JldHVybiBkYXRlLmdldEZ1bGxZZWFyKCk9PT15ZWFyO30pPj0wO3N0eWxlLnRvZGF5PXRvZGF5LmdldEZ1bGxZZWFyKCk9PT15ZWFyO3N0eWxlLmRlZmF1bHQ9dGhpcy5kZWZhdWx0VmFsdWUmJnRoaXMuZGVmYXVsdFZhbHVlLmdldEZ1bGxZZWFyKCk9PT15ZWFyO3JldHVybiBzdHlsZTt9LGhhbmRsZVllYXJUYWJsZUNsaWNrOmZ1bmN0aW9uIGhhbmRsZVllYXJUYWJsZUNsaWNrKGV2ZW50KXt2YXIgdGFyZ2V0PWV2ZW50LnRhcmdldDtpZih0YXJnZXQudGFnTmFtZT09PSdBJyl7aWYoT2JqZWN0KGRvbV9bImhhc0NsYXNzIl0pKHRhcmdldC5wYXJlbnROb2RlLCdkaXNhYmxlZCcpKXJldHVybjt2YXIgeWVhcj10YXJnZXQudGV4dENvbnRlbnR8fHRhcmdldC5pbm5lclRleHQ7dGhpcy4kZW1pdCgncGljaycsTnVtYmVyKHllYXIpKTt9fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL2Jhc2ljL3llYXItdGFibGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGJhc2ljX3llYXJfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189eWVhcl90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9iYXNpYy95ZWFyLXRhYmxlLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHllYXJfdGFibGVfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChiYXNpY195ZWFyX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLHllYXJfdGFibGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF9jODZhYjVlMF9yZW5kZXIseWVhcl90YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2M4NmFiNWUwX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgeWVhcl90YWJsZV9hcGk7fXllYXJfdGFibGVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvYmFzaWMveWVhci10YWJsZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgeWVhcl90YWJsZT15ZWFyX3RhYmxlX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL2Jhc2ljL21vbnRoLXRhYmxlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NTRkNGY0MiYKdmFyIG1vbnRoX3RhYmxldnVlX3R5cGVfdGVtcGxhdGVfaWRfNjU0ZDRmNDJfcmVuZGVyPWZ1bmN0aW9uIG1vbnRoX3RhYmxldnVlX3R5cGVfdGVtcGxhdGVfaWRfNjU0ZDRmNDJfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJ0YWJsZSIse3N0YXRpY0NsYXNzOiJlbC1tb250aC10YWJsZSIsb246e2NsaWNrOl92bS5oYW5kbGVNb250aFRhYmxlQ2xpY2ssbW91c2Vtb3ZlOl92bS5oYW5kbGVNb3VzZU1vdmV9fSxbX2MoInRib2R5Iixfdm0uX2woX3ZtLnJvd3MsZnVuY3Rpb24ocm93LGtleSl7cmV0dXJuIF9jKCJ0ciIse2tleTprZXl9LF92bS5fbChyb3csZnVuY3Rpb24oY2VsbCxrZXkpe3JldHVybiBfYygidGQiLHtrZXk6a2V5LGNsYXNzOl92bS5nZXRDZWxsU3R5bGUoY2VsbCl9LFtfYygiZGl2IixbX2MoImEiLHtzdGF0aWNDbGFzczoiY2VsbCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS50KCJlbC5kYXRlcGlja2VyLm1vbnRocy4iK192bS5tb250aHNbY2VsbC50ZXh0XSkpKV0pXSldKTt9KSwwKTt9KSwwKV0pO307dmFyIG1vbnRoX3RhYmxldnVlX3R5cGVfdGVtcGxhdGVfaWRfNjU0ZDRmNDJfc3RhdGljUmVuZGVyRm5zPVtdO21vbnRoX3RhYmxldnVlX3R5cGVfdGVtcGxhdGVfaWRfNjU0ZDRmNDJfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9iYXNpYy9tb250aC10YWJsZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjU0ZDRmNDImCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9iYXNpYy9tb250aC10YWJsZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBtb250aF90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2RhdGVzSW5Nb250aD1mdW5jdGlvbiBkYXRlc0luTW9udGgoeWVhcixtb250aCl7dmFyIG51bU9mRGF5cz1PYmplY3QoZGF0ZV91dGlsX1siZ2V0RGF5Q291bnRPZk1vbnRoIl0pKHllYXIsbW9udGgpO3ZhciBmaXJzdERheT1uZXcgRGF0ZSh5ZWFyLG1vbnRoLDEpO3JldHVybiBPYmplY3QoZGF0ZV91dGlsX1sicmFuZ2UiXSkobnVtT2ZEYXlzKS5tYXAoZnVuY3Rpb24obil7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJuZXh0RGF0ZSJdKShmaXJzdERheSxuKTt9KTt9O3ZhciBjbGVhckRhdGU9ZnVuY3Rpb24gY2xlYXJEYXRlKGRhdGUpe3JldHVybiBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksZGF0ZS5nZXRNb250aCgpKTt9O3ZhciBnZXRNb250aFRpbWVzdGFtcD1mdW5jdGlvbiBnZXRNb250aFRpbWVzdGFtcCh0aW1lKXtpZih0eXBlb2YgdGltZT09PSdudW1iZXInfHx0eXBlb2YgdGltZT09PSdzdHJpbmcnKXtyZXR1cm4gY2xlYXJEYXRlKG5ldyBEYXRlKHRpbWUpKS5nZXRUaW1lKCk7fWVsc2UgaWYodGltZSBpbnN0YW5jZW9mIERhdGUpe3JldHVybiBjbGVhckRhdGUodGltZSkuZ2V0VGltZSgpO31lbHNle3JldHVybiBOYU47fX07LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBtb250aF90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17cHJvcHM6e2Rpc2FibGVkRGF0ZTp7fSx2YWx1ZTp7fSxzZWxlY3Rpb25Nb2RlOntkZWZhdWx0Oidtb250aCd9LG1pbkRhdGU6e30sbWF4RGF0ZTp7fSxkZWZhdWx0VmFsdWU6e3ZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXsvLyBudWxsIG9yIHZhbGlkIERhdGUgT2JqZWN0CnJldHVybiB2YWw9PT1udWxsfHxPYmplY3QoZGF0ZV91dGlsX1siaXNEYXRlIl0pKHZhbCl8fEFycmF5LmlzQXJyYXkodmFsKSYmdmFsLmV2ZXJ5KGRhdGVfdXRpbF9bImlzRGF0ZSJdKTt9fSxkYXRlOnt9LHJhbmdlU3RhdGU6e2RlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm57ZW5kRGF0ZTpudWxsLHNlbGVjdGluZzpmYWxzZX07fX19LG1peGluczpbbG9jYWxlX2RlZmF1bHQuYV0sd2F0Y2g6eydyYW5nZVN0YXRlLmVuZERhdGUnOmZ1bmN0aW9uIHJhbmdlU3RhdGVFbmREYXRlKG5ld1ZhbCl7dGhpcy5tYXJrUmFuZ2UodGhpcy5taW5EYXRlLG5ld1ZhbCk7fSxtaW5EYXRlOmZ1bmN0aW9uIG1pbkRhdGUobmV3VmFsLG9sZFZhbCl7aWYoZ2V0TW9udGhUaW1lc3RhbXAobmV3VmFsKSE9PWdldE1vbnRoVGltZXN0YW1wKG9sZFZhbCkpe3RoaXMubWFya1JhbmdlKHRoaXMubWluRGF0ZSx0aGlzLm1heERhdGUpO319LG1heERhdGU6ZnVuY3Rpb24gbWF4RGF0ZShuZXdWYWwsb2xkVmFsKXtpZihnZXRNb250aFRpbWVzdGFtcChuZXdWYWwpIT09Z2V0TW9udGhUaW1lc3RhbXAob2xkVmFsKSl7dGhpcy5tYXJrUmFuZ2UodGhpcy5taW5EYXRlLHRoaXMubWF4RGF0ZSk7fX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnttb250aHM6WydqYW4nLCdmZWInLCdtYXInLCdhcHInLCdtYXknLCdqdW4nLCdqdWwnLCdhdWcnLCdzZXAnLCdvY3QnLCdub3YnLCdkZWMnXSx0YWJsZVJvd3M6W1tdLFtdLFtdXSxsYXN0Um93Om51bGwsbGFzdENvbHVtbjpudWxsfTt9LG1ldGhvZHM6e2NlbGxNYXRjaGVzRGF0ZTpmdW5jdGlvbiBjZWxsTWF0Y2hlc0RhdGUoY2VsbCxkYXRlKXt2YXIgdmFsdWU9bmV3IERhdGUoZGF0ZSk7cmV0dXJuIHRoaXMuZGF0ZS5nZXRGdWxsWWVhcigpPT09dmFsdWUuZ2V0RnVsbFllYXIoKSYmTnVtYmVyKGNlbGwudGV4dCk9PT12YWx1ZS5nZXRNb250aCgpO30sZ2V0Q2VsbFN0eWxlOmZ1bmN0aW9uIGdldENlbGxTdHlsZShjZWxsKXt2YXIgX3RoaXM9dGhpczt2YXIgc3R5bGU9e307dmFyIHllYXI9dGhpcy5kYXRlLmdldEZ1bGxZZWFyKCk7dmFyIHRvZGF5PW5ldyBEYXRlKCk7dmFyIG1vbnRoPWNlbGwudGV4dDt2YXIgZGVmYXVsdFZhbHVlPXRoaXMuZGVmYXVsdFZhbHVlP0FycmF5LmlzQXJyYXkodGhpcy5kZWZhdWx0VmFsdWUpP3RoaXMuZGVmYXVsdFZhbHVlOlt0aGlzLmRlZmF1bHRWYWx1ZV06W107c3R5bGUuZGlzYWJsZWQ9dHlwZW9mIHRoaXMuZGlzYWJsZWREYXRlPT09J2Z1bmN0aW9uJz9tb250aF90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2RhdGVzSW5Nb250aCh5ZWFyLG1vbnRoKS5ldmVyeSh0aGlzLmRpc2FibGVkRGF0ZSk6ZmFsc2U7c3R5bGUuY3VycmVudD1PYmplY3QodXRpbF9bImFycmF5RmluZEluZGV4Il0pKE9iamVjdCh1dGlsX1siY29lcmNlVHJ1dGh5VmFsdWVUb0FycmF5Il0pKHRoaXMudmFsdWUpLGZ1bmN0aW9uKGRhdGUpe3JldHVybiBkYXRlLmdldEZ1bGxZZWFyKCk9PT15ZWFyJiZkYXRlLmdldE1vbnRoKCk9PT1tb250aDt9KT49MDtzdHlsZS50b2RheT10b2RheS5nZXRGdWxsWWVhcigpPT09eWVhciYmdG9kYXkuZ2V0TW9udGgoKT09PW1vbnRoO3N0eWxlLmRlZmF1bHQ9ZGVmYXVsdFZhbHVlLnNvbWUoZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIF90aGlzLmNlbGxNYXRjaGVzRGF0ZShjZWxsLGRhdGUpO30pO2lmKGNlbGwuaW5SYW5nZSl7c3R5bGVbJ2luLXJhbmdlJ109dHJ1ZTtpZihjZWxsLnN0YXJ0KXtzdHlsZVsnc3RhcnQtZGF0ZSddPXRydWU7fWlmKGNlbGwuZW5kKXtzdHlsZVsnZW5kLWRhdGUnXT10cnVlO319cmV0dXJuIHN0eWxlO30sZ2V0TW9udGhPZkNlbGw6ZnVuY3Rpb24gZ2V0TW9udGhPZkNlbGwobW9udGgpe3ZhciB5ZWFyPXRoaXMuZGF0ZS5nZXRGdWxsWWVhcigpO3JldHVybiBuZXcgRGF0ZSh5ZWFyLG1vbnRoLDEpO30sbWFya1JhbmdlOmZ1bmN0aW9uIG1hcmtSYW5nZShtaW5EYXRlLG1heERhdGUpe21pbkRhdGU9Z2V0TW9udGhUaW1lc3RhbXAobWluRGF0ZSk7bWF4RGF0ZT1nZXRNb250aFRpbWVzdGFtcChtYXhEYXRlKXx8bWluRGF0ZTt2YXIgX3JlZj1bTWF0aC5taW4obWluRGF0ZSxtYXhEYXRlKSxNYXRoLm1heChtaW5EYXRlLG1heERhdGUpXTttaW5EYXRlPV9yZWZbMF07bWF4RGF0ZT1fcmVmWzFdO3ZhciByb3dzPXRoaXMucm93cztmb3IodmFyIGk9MCxrPXJvd3MubGVuZ3RoO2k8aztpKyspe3ZhciByb3c9cm93c1tpXTtmb3IodmFyIGo9MCxsPXJvdy5sZW5ndGg7ajxsO2orKyl7dmFyIGNlbGw9cm93W2pdO3ZhciBpbmRleD1pKjQrajt2YXIgdGltZT1uZXcgRGF0ZSh0aGlzLmRhdGUuZ2V0RnVsbFllYXIoKSxpbmRleCkuZ2V0VGltZSgpO2NlbGwuaW5SYW5nZT1taW5EYXRlJiZ0aW1lPj1taW5EYXRlJiZ0aW1lPD1tYXhEYXRlO2NlbGwuc3RhcnQ9bWluRGF0ZSYmdGltZT09PW1pbkRhdGU7Y2VsbC5lbmQ9bWF4RGF0ZSYmdGltZT09PW1heERhdGU7fX19LGhhbmRsZU1vdXNlTW92ZTpmdW5jdGlvbiBoYW5kbGVNb3VzZU1vdmUoZXZlbnQpe2lmKCF0aGlzLnJhbmdlU3RhdGUuc2VsZWN0aW5nKXJldHVybjt2YXIgdGFyZ2V0PWV2ZW50LnRhcmdldDtpZih0YXJnZXQudGFnTmFtZT09PSdBJyl7dGFyZ2V0PXRhcmdldC5wYXJlbnROb2RlLnBhcmVudE5vZGU7fWlmKHRhcmdldC50YWdOYW1lPT09J0RJVicpe3RhcmdldD10YXJnZXQucGFyZW50Tm9kZTt9aWYodGFyZ2V0LnRhZ05hbWUhPT0nVEQnKXJldHVybjt2YXIgcm93PXRhcmdldC5wYXJlbnROb2RlLnJvd0luZGV4O3ZhciBjb2x1bW49dGFyZ2V0LmNlbGxJbmRleDsvLyBjYW4gbm90IHNlbGVjdCBkaXNhYmxlZCBkYXRlCmlmKHRoaXMucm93c1tyb3ddW2NvbHVtbl0uZGlzYWJsZWQpcmV0dXJuOy8vIG9ubHkgdXBkYXRlIHJhbmdlU3RhdGUgd2hlbiBtb3VzZSBtb3ZlcyB0byBhIG5ldyBjZWxsCi8vIHRoaXMgYXZvaWRzIGZyZXF1ZW50IERhdGUgb2JqZWN0IGNyZWF0aW9uIGFuZCBpbXByb3ZlcyBwZXJmb3JtYW5jZQppZihyb3chPT10aGlzLmxhc3RSb3d8fGNvbHVtbiE9PXRoaXMubGFzdENvbHVtbil7dGhpcy5sYXN0Um93PXJvdzt0aGlzLmxhc3RDb2x1bW49Y29sdW1uO3RoaXMuJGVtaXQoJ2NoYW5nZXJhbmdlJyx7bWluRGF0ZTp0aGlzLm1pbkRhdGUsbWF4RGF0ZTp0aGlzLm1heERhdGUscmFuZ2VTdGF0ZTp7c2VsZWN0aW5nOnRydWUsZW5kRGF0ZTp0aGlzLmdldE1vbnRoT2ZDZWxsKHJvdyo0K2NvbHVtbil9fSk7fX0saGFuZGxlTW9udGhUYWJsZUNsaWNrOmZ1bmN0aW9uIGhhbmRsZU1vbnRoVGFibGVDbGljayhldmVudCl7dmFyIHRhcmdldD1ldmVudC50YXJnZXQ7aWYodGFyZ2V0LnRhZ05hbWU9PT0nQScpe3RhcmdldD10YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlO31pZih0YXJnZXQudGFnTmFtZT09PSdESVYnKXt0YXJnZXQ9dGFyZ2V0LnBhcmVudE5vZGU7fWlmKHRhcmdldC50YWdOYW1lIT09J1REJylyZXR1cm47aWYoT2JqZWN0KGRvbV9bImhhc0NsYXNzIl0pKHRhcmdldCwnZGlzYWJsZWQnKSlyZXR1cm47dmFyIGNvbHVtbj10YXJnZXQuY2VsbEluZGV4O3ZhciByb3c9dGFyZ2V0LnBhcmVudE5vZGUucm93SW5kZXg7dmFyIG1vbnRoPXJvdyo0K2NvbHVtbjt2YXIgbmV3RGF0ZT10aGlzLmdldE1vbnRoT2ZDZWxsKG1vbnRoKTtpZih0aGlzLnNlbGVjdGlvbk1vZGU9PT0ncmFuZ2UnKXtpZighdGhpcy5yYW5nZVN0YXRlLnNlbGVjdGluZyl7dGhpcy4kZW1pdCgncGljaycse21pbkRhdGU6bmV3RGF0ZSxtYXhEYXRlOm51bGx9KTt0aGlzLnJhbmdlU3RhdGUuc2VsZWN0aW5nPXRydWU7fWVsc2V7aWYobmV3RGF0ZT49dGhpcy5taW5EYXRlKXt0aGlzLiRlbWl0KCdwaWNrJyx7bWluRGF0ZTp0aGlzLm1pbkRhdGUsbWF4RGF0ZTpuZXdEYXRlfSk7fWVsc2V7dGhpcy4kZW1pdCgncGljaycse21pbkRhdGU6bmV3RGF0ZSxtYXhEYXRlOnRoaXMubWluRGF0ZX0pO310aGlzLnJhbmdlU3RhdGUuc2VsZWN0aW5nPWZhbHNlO319ZWxzZXt0aGlzLiRlbWl0KCdwaWNrJyxtb250aCk7fX19LGNvbXB1dGVkOntyb3dzOmZ1bmN0aW9uIHJvd3MoKXt2YXIgX3RoaXMyPXRoaXM7Ly8gVE9ETzogcmVmYWN0b3J5IHJvd3MgLyBnZXRDZWxsQ2xhc3Nlcwp2YXIgcm93cz10aGlzLnRhYmxlUm93czt2YXIgZGlzYWJsZWREYXRlPXRoaXMuZGlzYWJsZWREYXRlO3ZhciBzZWxlY3RlZERhdGU9W107dmFyIG5vdz1nZXRNb250aFRpbWVzdGFtcChuZXcgRGF0ZSgpKTtmb3IodmFyIGk9MDtpPDM7aSsrKXt2YXIgcm93PXJvd3NbaV07dmFyIF9sb29wPWZ1bmN0aW9uIF9sb29wKGope3ZhciBjZWxsPXJvd1tqXTtpZighY2VsbCl7Y2VsbD17cm93OmksY29sdW1uOmosdHlwZTonbm9ybWFsJyxpblJhbmdlOmZhbHNlLHN0YXJ0OmZhbHNlLGVuZDpmYWxzZX07fWNlbGwudHlwZT0nbm9ybWFsJzt2YXIgaW5kZXg9aSo0K2o7dmFyIHRpbWU9bmV3IERhdGUoX3RoaXMyLmRhdGUuZ2V0RnVsbFllYXIoKSxpbmRleCkuZ2V0VGltZSgpO2NlbGwuaW5SYW5nZT10aW1lPj1nZXRNb250aFRpbWVzdGFtcChfdGhpczIubWluRGF0ZSkmJnRpbWU8PWdldE1vbnRoVGltZXN0YW1wKF90aGlzMi5tYXhEYXRlKTtjZWxsLnN0YXJ0PV90aGlzMi5taW5EYXRlJiZ0aW1lPT09Z2V0TW9udGhUaW1lc3RhbXAoX3RoaXMyLm1pbkRhdGUpO2NlbGwuZW5kPV90aGlzMi5tYXhEYXRlJiZ0aW1lPT09Z2V0TW9udGhUaW1lc3RhbXAoX3RoaXMyLm1heERhdGUpO3ZhciBpc1RvZGF5PXRpbWU9PT1ub3c7aWYoaXNUb2RheSl7Y2VsbC50eXBlPSd0b2RheSc7fWNlbGwudGV4dD1pbmRleDt2YXIgY2VsbERhdGU9bmV3IERhdGUodGltZSk7Y2VsbC5kaXNhYmxlZD10eXBlb2YgZGlzYWJsZWREYXRlPT09J2Z1bmN0aW9uJyYmZGlzYWJsZWREYXRlKGNlbGxEYXRlKTtjZWxsLnNlbGVjdGVkPU9iamVjdCh1dGlsX1siYXJyYXlGaW5kIl0pKHNlbGVjdGVkRGF0ZSxmdW5jdGlvbihkYXRlKXtyZXR1cm4gZGF0ZS5nZXRUaW1lKCk9PT1jZWxsRGF0ZS5nZXRUaW1lKCk7fSk7X3RoaXMyLiRzZXQocm93LGosY2VsbCk7fTtmb3IodmFyIGo9MDtqPDQ7aisrKXtfbG9vcChqKTt9fXJldHVybiByb3dzO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9iYXNpYy9tb250aC10YWJsZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYmFzaWNfbW9udGhfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bW9udGhfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvYmFzaWMvbW9udGgtdGFibGUudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgbW9udGhfdGFibGVfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChiYXNpY19tb250aF90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxtb250aF90YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzY1NGQ0ZjQyX3JlbmRlcixtb250aF90YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzY1NGQ0ZjQyX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgbW9udGhfdGFibGVfYXBpO31tb250aF90YWJsZV9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9iYXNpYy9tb250aC10YWJsZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbW9udGhfdGFibGU9bW9udGhfdGFibGVfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvYmFzaWMvZGF0ZS10YWJsZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWQxZjMzNDEmCnZhciBkYXRlX3RhYmxldnVlX3R5cGVfdGVtcGxhdGVfaWRfNWQxZjMzNDFfcmVuZGVyPWZ1bmN0aW9uIGRhdGVfdGFibGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF81ZDFmMzM0MV9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInRhYmxlIix7c3RhdGljQ2xhc3M6ImVsLWRhdGUtdGFibGUiLGNsYXNzOnsiaXMtd2Vlay1tb2RlIjpfdm0uc2VsZWN0aW9uTW9kZT09PSJ3ZWVrIn0sYXR0cnM6e2NlbGxzcGFjaW5nOiIwIixjZWxscGFkZGluZzoiMCJ9LG9uOntjbGljazpfdm0uaGFuZGxlQ2xpY2ssbW91c2Vtb3ZlOl92bS5oYW5kbGVNb3VzZU1vdmV9fSxbX2MoInRib2R5IixbX2MoInRyIixbX3ZtLnNob3dXZWVrTnVtYmVyP19jKCJ0aCIsW192bS5fdihfdm0uX3MoX3ZtLnQoImVsLmRhdGVwaWNrZXIud2VlayIpKSldKTpfdm0uX2UoKSxfdm0uX2woX3ZtLldFRUtTLGZ1bmN0aW9uKHdlZWssa2V5KXtyZXR1cm4gX2MoInRoIix7a2V5OmtleX0sW192bS5fdihfdm0uX3MoX3ZtLnQoImVsLmRhdGVwaWNrZXIud2Vla3MuIit3ZWVrKSkpXSk7fSldLDIpLF92bS5fbChfdm0ucm93cyxmdW5jdGlvbihyb3csa2V5KXtyZXR1cm4gX2MoInRyIix7a2V5OmtleSxzdGF0aWNDbGFzczoiZWwtZGF0ZS10YWJsZV9fcm93IixjbGFzczp7Y3VycmVudDpfdm0uaXNXZWVrQWN0aXZlKHJvd1sxXSl9fSxfdm0uX2wocm93LGZ1bmN0aW9uKGNlbGwsa2V5KXtyZXR1cm4gX2MoInRkIix7a2V5OmtleSxjbGFzczpfdm0uZ2V0Q2VsbENsYXNzZXMoY2VsbCl9LFtfYygiZGl2IixbX2MoInNwYW4iLFtfdm0uX3YoIlxuICAgICAgICAgICIrX3ZtLl9zKGNlbGwudGV4dCkrIlxuICAgICAgICAiKV0pXSldKTt9KSwwKTt9KV0sMildKTt9O3ZhciBkYXRlX3RhYmxldnVlX3R5cGVfdGVtcGxhdGVfaWRfNWQxZjMzNDFfc3RhdGljUmVuZGVyRm5zPVtdO2RhdGVfdGFibGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF81ZDFmMzM0MV9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL2Jhc2ljL2RhdGUtdGFibGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTVkMWYzMzQxJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvYmFzaWMvZGF0ZS10YWJsZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBfV0VFS1M9WydzdW4nLCdtb24nLCd0dWUnLCd3ZWQnLCd0aHUnLCdmcmknLCdzYXQnXTt2YXIgZGF0ZV90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2dldERhdGVUaW1lc3RhbXA9ZnVuY3Rpb24gZ2V0RGF0ZVRpbWVzdGFtcCh0aW1lKXtpZih0eXBlb2YgdGltZT09PSdudW1iZXInfHx0eXBlb2YgdGltZT09PSdzdHJpbmcnKXtyZXR1cm4gT2JqZWN0KGRhdGVfdXRpbF9bImNsZWFyVGltZSJdKShuZXcgRGF0ZSh0aW1lKSkuZ2V0VGltZSgpO31lbHNlIGlmKHRpbWUgaW5zdGFuY2VvZiBEYXRlKXtyZXR1cm4gT2JqZWN0KGRhdGVfdXRpbF9bImNsZWFyVGltZSJdKSh0aW1lKS5nZXRUaW1lKCk7fWVsc2V7cmV0dXJuIE5hTjt9fTsvLyByZW1vdmUgdGhlIGZpcnN0IGVsZW1lbnQgdGhhdCBzYXRpc2ZpZXMgYHByZWRgIGZyb20gYXJyCi8vIHJldHVybiBhIG5ldyBhcnJheSBpZiBtb2RpZmljYXRpb24gb2NjdXJzCi8vIHJldHVybiB0aGUgb3JpZ2luYWwgYXJyYXkgb3RoZXJ3aXNlCnZhciBkYXRlX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfcmVtb3ZlRnJvbUFycmF5PWZ1bmN0aW9uIHJlbW92ZUZyb21BcnJheShhcnIscHJlZCl7dmFyIGlkeD10eXBlb2YgcHJlZD09PSdmdW5jdGlvbic/T2JqZWN0KHV0aWxfWyJhcnJheUZpbmRJbmRleCJdKShhcnIscHJlZCk6YXJyLmluZGV4T2YocHJlZCk7cmV0dXJuIGlkeD49MD9bXS5jb25jYXQoYXJyLnNsaWNlKDAsaWR4KSxhcnIuc2xpY2UoaWR4KzEpKTphcnI7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGRhdGVfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e21peGluczpbbG9jYWxlX2RlZmF1bHQuYV0scHJvcHM6e2ZpcnN0RGF5T2ZXZWVrOntkZWZhdWx0OjcsdHlwZTpOdW1iZXIsdmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpe3JldHVybiB2YWw+PTEmJnZhbDw9Nzt9fSx2YWx1ZTp7fSxkZWZhdWx0VmFsdWU6e3ZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXsvLyBlaXRoZXI6IG51bGwsIHZhbGlkIERhdGUgb2JqZWN0LCBBcnJheSBvZiB2YWxpZCBEYXRlIG9iamVjdHMKcmV0dXJuIHZhbD09PW51bGx8fE9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkodmFsKXx8QXJyYXkuaXNBcnJheSh2YWwpJiZ2YWwuZXZlcnkoZGF0ZV91dGlsX1siaXNEYXRlIl0pO319LGRhdGU6e30sc2VsZWN0aW9uTW9kZTp7ZGVmYXVsdDonZGF5J30sc2hvd1dlZWtOdW1iZXI6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxkaXNhYmxlZERhdGU6e30sY2VsbENsYXNzTmFtZTp7fSxtaW5EYXRlOnt9LG1heERhdGU6e30scmFuZ2VTdGF0ZTp7ZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybntlbmREYXRlOm51bGwsc2VsZWN0aW5nOmZhbHNlfTt9fX0sY29tcHV0ZWQ6e29mZnNldERheTpmdW5jdGlvbiBvZmZzZXREYXkoKXt2YXIgd2Vlaz10aGlzLmZpcnN0RGF5T2ZXZWVrOy8vIOWRqOaXpeS4uueVjOmZkO+8jOW3puWPs+WBj+enu+eahOWkqeaVsO+8jDMyMTc2NTQg5L6L5aaC5ZGo5LiA5bCx5pivIC0x77yM55uu55qE5piv6LCD5pW05YmN5Lik6KGM5pel5pyf55qE5L2N572uCnJldHVybiB3ZWVrPjM/Ny13ZWVrOi13ZWVrO30sV0VFS1M6ZnVuY3Rpb24gV0VFS1MoKXt2YXIgd2Vlaz10aGlzLmZpcnN0RGF5T2ZXZWVrO3JldHVybiBfV0VFS1MuY29uY2F0KF9XRUVLUykuc2xpY2Uod2Vlayx3ZWVrKzcpO30seWVhcjpmdW5jdGlvbiB5ZWFyKCl7cmV0dXJuIHRoaXMuZGF0ZS5nZXRGdWxsWWVhcigpO30sbW9udGg6ZnVuY3Rpb24gbW9udGgoKXtyZXR1cm4gdGhpcy5kYXRlLmdldE1vbnRoKCk7fSxzdGFydERhdGU6ZnVuY3Rpb24gc3RhcnREYXRlKCl7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJnZXRTdGFydERhdGVPZk1vbnRoIl0pKHRoaXMueWVhcix0aGlzLm1vbnRoKTt9LHJvd3M6ZnVuY3Rpb24gcm93cygpe3ZhciBfdGhpcz10aGlzOy8vIFRPRE86IHJlZmFjdG9yeSByb3dzIC8gZ2V0Q2VsbENsYXNzZXMKdmFyIGRhdGU9bmV3IERhdGUodGhpcy55ZWFyLHRoaXMubW9udGgsMSk7dmFyIGRheT1PYmplY3QoZGF0ZV91dGlsX1siZ2V0Rmlyc3REYXlPZk1vbnRoIl0pKGRhdGUpOy8vIGRheSBvZiBmaXJzdCBkYXkKdmFyIGRhdGVDb3VudE9mTW9udGg9T2JqZWN0KGRhdGVfdXRpbF9bImdldERheUNvdW50T2ZNb250aCJdKShkYXRlLmdldEZ1bGxZZWFyKCksZGF0ZS5nZXRNb250aCgpKTt2YXIgZGF0ZUNvdW50T2ZMYXN0TW9udGg9T2JqZWN0KGRhdGVfdXRpbF9bImdldERheUNvdW50T2ZNb250aCJdKShkYXRlLmdldEZ1bGxZZWFyKCksZGF0ZS5nZXRNb250aCgpPT09MD8xMTpkYXRlLmdldE1vbnRoKCktMSk7ZGF5PWRheT09PTA/NzpkYXk7dmFyIG9mZnNldD10aGlzLm9mZnNldERheTt2YXIgcm93cz10aGlzLnRhYmxlUm93czt2YXIgY291bnQ9MTt2YXIgc3RhcnREYXRlPXRoaXMuc3RhcnREYXRlO3ZhciBkaXNhYmxlZERhdGU9dGhpcy5kaXNhYmxlZERhdGU7dmFyIGNlbGxDbGFzc05hbWU9dGhpcy5jZWxsQ2xhc3NOYW1lO3ZhciBzZWxlY3RlZERhdGU9dGhpcy5zZWxlY3Rpb25Nb2RlPT09J2RhdGVzJz9PYmplY3QodXRpbF9bImNvZXJjZVRydXRoeVZhbHVlVG9BcnJheSJdKSh0aGlzLnZhbHVlKTpbXTt2YXIgbm93PWRhdGVfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19nZXREYXRlVGltZXN0YW1wKG5ldyBEYXRlKCkpO2Zvcih2YXIgaT0wO2k8NjtpKyspe3ZhciByb3c9cm93c1tpXTtpZih0aGlzLnNob3dXZWVrTnVtYmVyKXtpZighcm93WzBdKXtyb3dbMF09e3R5cGU6J3dlZWsnLHRleHQ6T2JqZWN0KGRhdGVfdXRpbF9bImdldFdlZWtOdW1iZXIiXSkoT2JqZWN0KGRhdGVfdXRpbF9bIm5leHREYXRlIl0pKHN0YXJ0RGF0ZSxpKjcrMSkpfTt9fXZhciBfbG9vcD1mdW5jdGlvbiBfbG9vcChqKXt2YXIgY2VsbD1yb3dbX3RoaXMuc2hvd1dlZWtOdW1iZXI/aisxOmpdO2lmKCFjZWxsKXtjZWxsPXtyb3c6aSxjb2x1bW46aix0eXBlOidub3JtYWwnLGluUmFuZ2U6ZmFsc2Usc3RhcnQ6ZmFsc2UsZW5kOmZhbHNlfTt9Y2VsbC50eXBlPSdub3JtYWwnO3ZhciBpbmRleD1pKjcrajt2YXIgdGltZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dERhdGUiXSkoc3RhcnREYXRlLGluZGV4LW9mZnNldCkuZ2V0VGltZSgpO2NlbGwuaW5SYW5nZT10aW1lPj1kYXRlX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfZ2V0RGF0ZVRpbWVzdGFtcChfdGhpcy5taW5EYXRlKSYmdGltZTw9ZGF0ZV90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2dldERhdGVUaW1lc3RhbXAoX3RoaXMubWF4RGF0ZSk7Y2VsbC5zdGFydD1fdGhpcy5taW5EYXRlJiZ0aW1lPT09ZGF0ZV90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2dldERhdGVUaW1lc3RhbXAoX3RoaXMubWluRGF0ZSk7Y2VsbC5lbmQ9X3RoaXMubWF4RGF0ZSYmdGltZT09PWRhdGVfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19nZXREYXRlVGltZXN0YW1wKF90aGlzLm1heERhdGUpO3ZhciBpc1RvZGF5PXRpbWU9PT1ub3c7aWYoaXNUb2RheSl7Y2VsbC50eXBlPSd0b2RheSc7fWlmKGk+PTAmJmk8PTEpe3ZhciBudW1iZXJPZkRheXNGcm9tUHJldmlvdXNNb250aD1kYXkrb2Zmc2V0PDA/NytkYXkrb2Zmc2V0OmRheStvZmZzZXQ7aWYoaitpKjc+PW51bWJlck9mRGF5c0Zyb21QcmV2aW91c01vbnRoKXtjZWxsLnRleHQ9Y291bnQrKzt9ZWxzZXtjZWxsLnRleHQ9ZGF0ZUNvdW50T2ZMYXN0TW9udGgtKG51bWJlck9mRGF5c0Zyb21QcmV2aW91c01vbnRoLWolNykrMStpKjc7Y2VsbC50eXBlPSdwcmV2LW1vbnRoJzt9fWVsc2V7aWYoY291bnQ8PWRhdGVDb3VudE9mTW9udGgpe2NlbGwudGV4dD1jb3VudCsrO31lbHNle2NlbGwudGV4dD1jb3VudCsrLWRhdGVDb3VudE9mTW9udGg7Y2VsbC50eXBlPSduZXh0LW1vbnRoJzt9fXZhciBjZWxsRGF0ZT1uZXcgRGF0ZSh0aW1lKTtjZWxsLmRpc2FibGVkPXR5cGVvZiBkaXNhYmxlZERhdGU9PT0nZnVuY3Rpb24nJiZkaXNhYmxlZERhdGUoY2VsbERhdGUpO2NlbGwuc2VsZWN0ZWQ9T2JqZWN0KHV0aWxfWyJhcnJheUZpbmQiXSkoc2VsZWN0ZWREYXRlLGZ1bmN0aW9uKGRhdGUpe3JldHVybiBkYXRlLmdldFRpbWUoKT09PWNlbGxEYXRlLmdldFRpbWUoKTt9KTtjZWxsLmN1c3RvbUNsYXNzPXR5cGVvZiBjZWxsQ2xhc3NOYW1lPT09J2Z1bmN0aW9uJyYmY2VsbENsYXNzTmFtZShjZWxsRGF0ZSk7X3RoaXMuJHNldChyb3csX3RoaXMuc2hvd1dlZWtOdW1iZXI/aisxOmosY2VsbCk7fTtmb3IodmFyIGo9MDtqPDc7aisrKXtfbG9vcChqKTt9aWYodGhpcy5zZWxlY3Rpb25Nb2RlPT09J3dlZWsnKXt2YXIgc3RhcnQ9dGhpcy5zaG93V2Vla051bWJlcj8xOjA7dmFyIGVuZD10aGlzLnNob3dXZWVrTnVtYmVyPzc6Njt2YXIgaXNXZWVrQWN0aXZlPXRoaXMuaXNXZWVrQWN0aXZlKHJvd1tzdGFydCsxXSk7cm93W3N0YXJ0XS5pblJhbmdlPWlzV2Vla0FjdGl2ZTtyb3dbc3RhcnRdLnN0YXJ0PWlzV2Vla0FjdGl2ZTtyb3dbZW5kXS5pblJhbmdlPWlzV2Vla0FjdGl2ZTtyb3dbZW5kXS5lbmQ9aXNXZWVrQWN0aXZlO319cmV0dXJuIHJvd3M7fX0sd2F0Y2g6eydyYW5nZVN0YXRlLmVuZERhdGUnOmZ1bmN0aW9uIHJhbmdlU3RhdGVFbmREYXRlKG5ld1ZhbCl7dGhpcy5tYXJrUmFuZ2UodGhpcy5taW5EYXRlLG5ld1ZhbCk7fSxtaW5EYXRlOmZ1bmN0aW9uIG1pbkRhdGUobmV3VmFsLG9sZFZhbCl7aWYoZGF0ZV90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2dldERhdGVUaW1lc3RhbXAobmV3VmFsKSE9PWRhdGVfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19nZXREYXRlVGltZXN0YW1wKG9sZFZhbCkpe3RoaXMubWFya1JhbmdlKHRoaXMubWluRGF0ZSx0aGlzLm1heERhdGUpO319LG1heERhdGU6ZnVuY3Rpb24gbWF4RGF0ZShuZXdWYWwsb2xkVmFsKXtpZihkYXRlX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfZ2V0RGF0ZVRpbWVzdGFtcChuZXdWYWwpIT09ZGF0ZV90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2dldERhdGVUaW1lc3RhbXAob2xkVmFsKSl7dGhpcy5tYXJrUmFuZ2UodGhpcy5taW5EYXRlLHRoaXMubWF4RGF0ZSk7fX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnt0YWJsZVJvd3M6W1tdLFtdLFtdLFtdLFtdLFtdXSxsYXN0Um93Om51bGwsbGFzdENvbHVtbjpudWxsfTt9LG1ldGhvZHM6e2NlbGxNYXRjaGVzRGF0ZTpmdW5jdGlvbiBjZWxsTWF0Y2hlc0RhdGUoY2VsbCxkYXRlKXt2YXIgdmFsdWU9bmV3IERhdGUoZGF0ZSk7cmV0dXJuIHRoaXMueWVhcj09PXZhbHVlLmdldEZ1bGxZZWFyKCkmJnRoaXMubW9udGg9PT12YWx1ZS5nZXRNb250aCgpJiZOdW1iZXIoY2VsbC50ZXh0KT09PXZhbHVlLmdldERhdGUoKTt9LGdldENlbGxDbGFzc2VzOmZ1bmN0aW9uIGdldENlbGxDbGFzc2VzKGNlbGwpe3ZhciBfdGhpczI9dGhpczt2YXIgc2VsZWN0aW9uTW9kZT10aGlzLnNlbGVjdGlvbk1vZGU7dmFyIGRlZmF1bHRWYWx1ZT10aGlzLmRlZmF1bHRWYWx1ZT9BcnJheS5pc0FycmF5KHRoaXMuZGVmYXVsdFZhbHVlKT90aGlzLmRlZmF1bHRWYWx1ZTpbdGhpcy5kZWZhdWx0VmFsdWVdOltdO3ZhciBjbGFzc2VzPVtdO2lmKChjZWxsLnR5cGU9PT0nbm9ybWFsJ3x8Y2VsbC50eXBlPT09J3RvZGF5JykmJiFjZWxsLmRpc2FibGVkKXtjbGFzc2VzLnB1c2goJ2F2YWlsYWJsZScpO2lmKGNlbGwudHlwZT09PSd0b2RheScpe2NsYXNzZXMucHVzaCgndG9kYXknKTt9fWVsc2V7Y2xhc3Nlcy5wdXNoKGNlbGwudHlwZSk7fWlmKGNlbGwudHlwZT09PSdub3JtYWwnJiZkZWZhdWx0VmFsdWUuc29tZShmdW5jdGlvbihkYXRlKXtyZXR1cm4gX3RoaXMyLmNlbGxNYXRjaGVzRGF0ZShjZWxsLGRhdGUpO30pKXtjbGFzc2VzLnB1c2goJ2RlZmF1bHQnKTt9aWYoc2VsZWN0aW9uTW9kZT09PSdkYXknJiYoY2VsbC50eXBlPT09J25vcm1hbCd8fGNlbGwudHlwZT09PSd0b2RheScpJiZ0aGlzLmNlbGxNYXRjaGVzRGF0ZShjZWxsLHRoaXMudmFsdWUpKXtjbGFzc2VzLnB1c2goJ2N1cnJlbnQnKTt9aWYoY2VsbC5pblJhbmdlJiYoY2VsbC50eXBlPT09J25vcm1hbCd8fGNlbGwudHlwZT09PSd0b2RheSd8fHRoaXMuc2VsZWN0aW9uTW9kZT09PSd3ZWVrJykpe2NsYXNzZXMucHVzaCgnaW4tcmFuZ2UnKTtpZihjZWxsLnN0YXJ0KXtjbGFzc2VzLnB1c2goJ3N0YXJ0LWRhdGUnKTt9aWYoY2VsbC5lbmQpe2NsYXNzZXMucHVzaCgnZW5kLWRhdGUnKTt9fWlmKGNlbGwuZGlzYWJsZWQpe2NsYXNzZXMucHVzaCgnZGlzYWJsZWQnKTt9aWYoY2VsbC5zZWxlY3RlZCl7Y2xhc3Nlcy5wdXNoKCdzZWxlY3RlZCcpO31pZihjZWxsLmN1c3RvbUNsYXNzKXtjbGFzc2VzLnB1c2goY2VsbC5jdXN0b21DbGFzcyk7fXJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTt9LGdldERhdGVPZkNlbGw6ZnVuY3Rpb24gZ2V0RGF0ZU9mQ2VsbChyb3csY29sdW1uKXt2YXIgb2Zmc2V0RnJvbVN0YXJ0PXJvdyo3Kyhjb2x1bW4tKHRoaXMuc2hvd1dlZWtOdW1iZXI/MTowKSktdGhpcy5vZmZzZXREYXk7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJuZXh0RGF0ZSJdKSh0aGlzLnN0YXJ0RGF0ZSxvZmZzZXRGcm9tU3RhcnQpO30saXNXZWVrQWN0aXZlOmZ1bmN0aW9uIGlzV2Vla0FjdGl2ZShjZWxsKXtpZih0aGlzLnNlbGVjdGlvbk1vZGUhPT0nd2VlaycpcmV0dXJuIGZhbHNlO3ZhciBuZXdEYXRlPW5ldyBEYXRlKHRoaXMueWVhcix0aGlzLm1vbnRoLDEpO3ZhciB5ZWFyPW5ld0RhdGUuZ2V0RnVsbFllYXIoKTt2YXIgbW9udGg9bmV3RGF0ZS5nZXRNb250aCgpO2lmKGNlbGwudHlwZT09PSdwcmV2LW1vbnRoJyl7bmV3RGF0ZS5zZXRNb250aChtb250aD09PTA/MTE6bW9udGgtMSk7bmV3RGF0ZS5zZXRGdWxsWWVhcihtb250aD09PTA/eWVhci0xOnllYXIpO31pZihjZWxsLnR5cGU9PT0nbmV4dC1tb250aCcpe25ld0RhdGUuc2V0TW9udGgobW9udGg9PT0xMT8wOm1vbnRoKzEpO25ld0RhdGUuc2V0RnVsbFllYXIobW9udGg9PT0xMT95ZWFyKzE6eWVhcik7fW5ld0RhdGUuc2V0RGF0ZShwYXJzZUludChjZWxsLnRleHQsMTApKTtpZihPYmplY3QoZGF0ZV91dGlsX1siaXNEYXRlIl0pKHRoaXMudmFsdWUpKXt2YXIgZGF5T2Zmc2V0PSh0aGlzLnZhbHVlLmdldERheSgpLXRoaXMuZmlyc3REYXlPZldlZWsrNyklNy0xO3ZhciB3ZWVrRGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sicHJldkRhdGUiXSkodGhpcy52YWx1ZSxkYXlPZmZzZXQpO3JldHVybiB3ZWVrRGF0ZS5nZXRUaW1lKCk9PT1uZXdEYXRlLmdldFRpbWUoKTt9cmV0dXJuIGZhbHNlO30sbWFya1JhbmdlOmZ1bmN0aW9uIG1hcmtSYW5nZShtaW5EYXRlLG1heERhdGUpe21pbkRhdGU9ZGF0ZV90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2dldERhdGVUaW1lc3RhbXAobWluRGF0ZSk7bWF4RGF0ZT1kYXRlX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfZ2V0RGF0ZVRpbWVzdGFtcChtYXhEYXRlKXx8bWluRGF0ZTt2YXIgX3JlZj1bTWF0aC5taW4obWluRGF0ZSxtYXhEYXRlKSxNYXRoLm1heChtaW5EYXRlLG1heERhdGUpXTttaW5EYXRlPV9yZWZbMF07bWF4RGF0ZT1fcmVmWzFdO3ZhciBzdGFydERhdGU9dGhpcy5zdGFydERhdGU7dmFyIHJvd3M9dGhpcy5yb3dzO2Zvcih2YXIgaT0wLGs9cm93cy5sZW5ndGg7aTxrO2krKyl7dmFyIHJvdz1yb3dzW2ldO2Zvcih2YXIgaj0wLGw9cm93Lmxlbmd0aDtqPGw7aisrKXtpZih0aGlzLnNob3dXZWVrTnVtYmVyJiZqPT09MCljb250aW51ZTt2YXIgX2NlbGw9cm93W2pdO3ZhciBpbmRleD1pKjcraisodGhpcy5zaG93V2Vla051bWJlcj8tMTowKTt2YXIgdGltZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dERhdGUiXSkoc3RhcnREYXRlLGluZGV4LXRoaXMub2Zmc2V0RGF5KS5nZXRUaW1lKCk7X2NlbGwuaW5SYW5nZT1taW5EYXRlJiZ0aW1lPj1taW5EYXRlJiZ0aW1lPD1tYXhEYXRlO19jZWxsLnN0YXJ0PW1pbkRhdGUmJnRpbWU9PT1taW5EYXRlO19jZWxsLmVuZD1tYXhEYXRlJiZ0aW1lPT09bWF4RGF0ZTt9fX0saGFuZGxlTW91c2VNb3ZlOmZ1bmN0aW9uIGhhbmRsZU1vdXNlTW92ZShldmVudCl7aWYoIXRoaXMucmFuZ2VTdGF0ZS5zZWxlY3RpbmcpcmV0dXJuO3ZhciB0YXJnZXQ9ZXZlbnQudGFyZ2V0O2lmKHRhcmdldC50YWdOYW1lPT09J1NQQU4nKXt0YXJnZXQ9dGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZTt9aWYodGFyZ2V0LnRhZ05hbWU9PT0nRElWJyl7dGFyZ2V0PXRhcmdldC5wYXJlbnROb2RlO31pZih0YXJnZXQudGFnTmFtZSE9PSdURCcpcmV0dXJuO3ZhciByb3c9dGFyZ2V0LnBhcmVudE5vZGUucm93SW5kZXgtMTt2YXIgY29sdW1uPXRhcmdldC5jZWxsSW5kZXg7Ly8gY2FuIG5vdCBzZWxlY3QgZGlzYWJsZWQgZGF0ZQppZih0aGlzLnJvd3Nbcm93XVtjb2x1bW5dLmRpc2FibGVkKXJldHVybjsvLyBvbmx5IHVwZGF0ZSByYW5nZVN0YXRlIHdoZW4gbW91c2UgbW92ZXMgdG8gYSBuZXcgY2VsbAovLyB0aGlzIGF2b2lkcyBmcmVxdWVudCBEYXRlIG9iamVjdCBjcmVhdGlvbiBhbmQgaW1wcm92ZXMgcGVyZm9ybWFuY2UKaWYocm93IT09dGhpcy5sYXN0Um93fHxjb2x1bW4hPT10aGlzLmxhc3RDb2x1bW4pe3RoaXMubGFzdFJvdz1yb3c7dGhpcy5sYXN0Q29sdW1uPWNvbHVtbjt0aGlzLiRlbWl0KCdjaGFuZ2VyYW5nZScse21pbkRhdGU6dGhpcy5taW5EYXRlLG1heERhdGU6dGhpcy5tYXhEYXRlLHJhbmdlU3RhdGU6e3NlbGVjdGluZzp0cnVlLGVuZERhdGU6dGhpcy5nZXREYXRlT2ZDZWxsKHJvdyxjb2x1bW4pfX0pO319LGhhbmRsZUNsaWNrOmZ1bmN0aW9uIGhhbmRsZUNsaWNrKGV2ZW50KXt2YXIgdGFyZ2V0PWV2ZW50LnRhcmdldDtpZih0YXJnZXQudGFnTmFtZT09PSdTUEFOJyl7dGFyZ2V0PXRhcmdldC5wYXJlbnROb2RlLnBhcmVudE5vZGU7fWlmKHRhcmdldC50YWdOYW1lPT09J0RJVicpe3RhcmdldD10YXJnZXQucGFyZW50Tm9kZTt9aWYodGFyZ2V0LnRhZ05hbWUhPT0nVEQnKXJldHVybjt2YXIgcm93PXRhcmdldC5wYXJlbnROb2RlLnJvd0luZGV4LTE7dmFyIGNvbHVtbj10aGlzLnNlbGVjdGlvbk1vZGU9PT0nd2Vlayc/MTp0YXJnZXQuY2VsbEluZGV4O3ZhciBjZWxsPXRoaXMucm93c1tyb3ddW2NvbHVtbl07aWYoY2VsbC5kaXNhYmxlZHx8Y2VsbC50eXBlPT09J3dlZWsnKXJldHVybjt2YXIgbmV3RGF0ZT10aGlzLmdldERhdGVPZkNlbGwocm93LGNvbHVtbik7aWYodGhpcy5zZWxlY3Rpb25Nb2RlPT09J3JhbmdlJyl7aWYoIXRoaXMucmFuZ2VTdGF0ZS5zZWxlY3Rpbmcpe3RoaXMuJGVtaXQoJ3BpY2snLHttaW5EYXRlOm5ld0RhdGUsbWF4RGF0ZTpudWxsfSk7dGhpcy5yYW5nZVN0YXRlLnNlbGVjdGluZz10cnVlO31lbHNle2lmKG5ld0RhdGU+PXRoaXMubWluRGF0ZSl7dGhpcy4kZW1pdCgncGljaycse21pbkRhdGU6dGhpcy5taW5EYXRlLG1heERhdGU6bmV3RGF0ZX0pO31lbHNle3RoaXMuJGVtaXQoJ3BpY2snLHttaW5EYXRlOm5ld0RhdGUsbWF4RGF0ZTp0aGlzLm1pbkRhdGV9KTt9dGhpcy5yYW5nZVN0YXRlLnNlbGVjdGluZz1mYWxzZTt9fWVsc2UgaWYodGhpcy5zZWxlY3Rpb25Nb2RlPT09J2RheScpe3RoaXMuJGVtaXQoJ3BpY2snLG5ld0RhdGUpO31lbHNlIGlmKHRoaXMuc2VsZWN0aW9uTW9kZT09PSd3ZWVrJyl7dmFyIHdlZWtOdW1iZXI9T2JqZWN0KGRhdGVfdXRpbF9bImdldFdlZWtOdW1iZXIiXSkobmV3RGF0ZSk7dmFyIHZhbHVlPW5ld0RhdGUuZ2V0RnVsbFllYXIoKSsndycrd2Vla051bWJlcjt0aGlzLiRlbWl0KCdwaWNrJyx7eWVhcjpuZXdEYXRlLmdldEZ1bGxZZWFyKCksd2Vlazp3ZWVrTnVtYmVyLHZhbHVlOnZhbHVlLGRhdGU6bmV3RGF0ZX0pO31lbHNlIGlmKHRoaXMuc2VsZWN0aW9uTW9kZT09PSdkYXRlcycpe3ZhciBfdmFsdWU9dGhpcy52YWx1ZXx8W107dmFyIG5ld1ZhbHVlPWNlbGwuc2VsZWN0ZWQ/ZGF0ZV90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX3JlbW92ZUZyb21BcnJheShfdmFsdWUsZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGRhdGUuZ2V0VGltZSgpPT09bmV3RGF0ZS5nZXRUaW1lKCk7fSk6W10uY29uY2F0KF92YWx1ZSxbbmV3RGF0ZV0pO3RoaXMuJGVtaXQoJ3BpY2snLG5ld1ZhbHVlKTt9fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL2Jhc2ljL2RhdGUtdGFibGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGJhc2ljX2RhdGVfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189ZGF0ZV90YWJsZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9iYXNpYy9kYXRlLXRhYmxlLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGRhdGVfdGFibGVfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChiYXNpY19kYXRlX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLGRhdGVfdGFibGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF81ZDFmMzM0MV9yZW5kZXIsZGF0ZV90YWJsZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVkMWYzMzQxX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgZGF0ZV90YWJsZV9hcGk7fWRhdGVfdGFibGVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvYmFzaWMvZGF0ZS10YWJsZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZGF0ZV90YWJsZT1kYXRlX3RhYmxlX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9kYXRlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBkYXRldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXttaXhpbnM6W2xvY2FsZV9kZWZhdWx0LmFdLGRpcmVjdGl2ZXM6e0NsaWNrb3V0c2lkZTpjbGlja291dHNpZGVfZGVmYXVsdC5hfSx3YXRjaDp7c2hvd1RpbWU6ZnVuY3Rpb24gc2hvd1RpbWUodmFsKXt2YXIgX3RoaXM9dGhpczsvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9pZighdmFsKXJldHVybjt0aGlzLiRuZXh0VGljayhmdW5jdGlvbihfKXt2YXIgaW5wdXRFbG09X3RoaXMuJHJlZnMuaW5wdXQuJGVsO2lmKGlucHV0RWxtKXtfdGhpcy5waWNrZXJXaWR0aD1pbnB1dEVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCsxMDt9fSk7fSx2YWx1ZTpmdW5jdGlvbiB2YWx1ZSh2YWwpe2lmKHRoaXMuc2VsZWN0aW9uTW9kZT09PSdkYXRlcycmJnRoaXMudmFsdWUpcmV0dXJuO2lmKE9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkodmFsKSl7dGhpcy5kYXRlPW5ldyBEYXRlKHZhbCk7fWVsc2V7dGhpcy5kYXRlPXRoaXMuZ2V0RGVmYXVsdFZhbHVlKCk7fX0sZGVmYXVsdFZhbHVlOmZ1bmN0aW9uIGRlZmF1bHRWYWx1ZSh2YWwpe2lmKCFPYmplY3QoZGF0ZV91dGlsX1siaXNEYXRlIl0pKHRoaXMudmFsdWUpKXt0aGlzLmRhdGU9dmFsP25ldyBEYXRlKHZhbCk6bmV3IERhdGUoKTt9fSx0aW1lUGlja2VyVmlzaWJsZTpmdW5jdGlvbiB0aW1lUGlja2VyVmlzaWJsZSh2YWwpe3ZhciBfdGhpczI9dGhpcztpZih2YWwpdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMyLiRyZWZzLnRpbWVwaWNrZXIuYWRqdXN0U3Bpbm5lcnMoKTt9KTt9LHNlbGVjdGlvbk1vZGU6ZnVuY3Rpb24gc2VsZWN0aW9uTW9kZShuZXdWYWwpe2lmKG5ld1ZhbD09PSdtb250aCcpey8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovaWYodGhpcy5jdXJyZW50VmlldyE9PSd5ZWFyJ3x8dGhpcy5jdXJyZW50VmlldyE9PSdtb250aCcpe3RoaXMuY3VycmVudFZpZXc9J21vbnRoJzt9fWVsc2UgaWYobmV3VmFsPT09J2RhdGVzJyl7dGhpcy5jdXJyZW50Vmlldz0nZGF0ZSc7fX19LG1ldGhvZHM6e3Byb3h5VGltZVBpY2tlckRhdGFQcm9wZXJ0aWVzOmZ1bmN0aW9uIHByb3h5VGltZVBpY2tlckRhdGFQcm9wZXJ0aWVzKCl7dmFyIF90aGlzMz10aGlzO3ZhciBmb3JtYXQ9ZnVuY3Rpb24gZm9ybWF0KHRpbWVGb3JtYXQpe190aGlzMy4kcmVmcy50aW1lcGlja2VyLmZvcm1hdD10aW1lRm9ybWF0O307dmFyIHZhbHVlPWZ1bmN0aW9uIHZhbHVlKF92YWx1ZSl7X3RoaXMzLiRyZWZzLnRpbWVwaWNrZXIudmFsdWU9X3ZhbHVlO307dmFyIGRhdGU9ZnVuY3Rpb24gZGF0ZShfZGF0ZSl7X3RoaXMzLiRyZWZzLnRpbWVwaWNrZXIuZGF0ZT1fZGF0ZTt9O3ZhciBzZWxlY3RhYmxlUmFuZ2U9ZnVuY3Rpb24gc2VsZWN0YWJsZVJhbmdlKF9zZWxlY3RhYmxlUmFuZ2Upe190aGlzMy4kcmVmcy50aW1lcGlja2VyLnNlbGVjdGFibGVSYW5nZT1fc2VsZWN0YWJsZVJhbmdlO307dGhpcy4kd2F0Y2goJ3ZhbHVlJyx2YWx1ZSk7dGhpcy4kd2F0Y2goJ2RhdGUnLGRhdGUpO3RoaXMuJHdhdGNoKCdzZWxlY3RhYmxlUmFuZ2UnLHNlbGVjdGFibGVSYW5nZSk7Zm9ybWF0KHRoaXMudGltZUZvcm1hdCk7dmFsdWUodGhpcy52YWx1ZSk7ZGF0ZSh0aGlzLmRhdGUpO3NlbGVjdGFibGVSYW5nZSh0aGlzLnNlbGVjdGFibGVSYW5nZSk7fSxoYW5kbGVDbGVhcjpmdW5jdGlvbiBoYW5kbGVDbGVhcigpe3RoaXMuZGF0ZT10aGlzLmdldERlZmF1bHRWYWx1ZSgpO3RoaXMuJGVtaXQoJ3BpY2snLG51bGwpO30sZW1pdDpmdW5jdGlvbiBlbWl0KHZhbHVlKXt2YXIgX3RoaXM0PXRoaXM7Zm9yKHZhciBfbGVuPWFyZ3VtZW50cy5sZW5ndGgsYXJncz1BcnJheShfbGVuPjE/X2xlbi0xOjApLF9rZXk9MTtfa2V5PF9sZW47X2tleSsrKXthcmdzW19rZXktMV09YXJndW1lbnRzW19rZXldO31pZighdmFsdWUpe3RoaXMuJGVtaXQuYXBwbHkodGhpcyxbJ3BpY2snLHZhbHVlXS5jb25jYXQoYXJncykpO31lbHNlIGlmKEFycmF5LmlzQXJyYXkodmFsdWUpKXt2YXIgZGF0ZXM9dmFsdWUubWFwKGZ1bmN0aW9uKGRhdGUpe3JldHVybiBfdGhpczQuc2hvd1RpbWU/T2JqZWN0KGRhdGVfdXRpbF9bImNsZWFyTWlsbGlzZWNvbmRzIl0pKGRhdGUpOk9iamVjdChkYXRlX3V0aWxfWyJjbGVhclRpbWUiXSkoZGF0ZSk7fSk7dGhpcy4kZW1pdC5hcHBseSh0aGlzLFsncGljaycsZGF0ZXNdLmNvbmNhdChhcmdzKSk7fWVsc2V7dGhpcy4kZW1pdC5hcHBseSh0aGlzLFsncGljaycsdGhpcy5zaG93VGltZT9PYmplY3QoZGF0ZV91dGlsX1siY2xlYXJNaWxsaXNlY29uZHMiXSkodmFsdWUpOk9iamVjdChkYXRlX3V0aWxfWyJjbGVhclRpbWUiXSkodmFsdWUpXS5jb25jYXQoYXJncykpO310aGlzLnVzZXJJbnB1dERhdGU9bnVsbDt0aGlzLnVzZXJJbnB1dFRpbWU9bnVsbDt9LC8vIHJlc2V0RGF0ZSgpIHsKLy8gICB0aGlzLmRhdGUgPSBuZXcgRGF0ZSh0aGlzLmRhdGUpOwovLyB9LApzaG93TW9udGhQaWNrZXI6ZnVuY3Rpb24gc2hvd01vbnRoUGlja2VyKCl7dGhpcy5jdXJyZW50Vmlldz0nbW9udGgnO30sc2hvd1llYXJQaWNrZXI6ZnVuY3Rpb24gc2hvd1llYXJQaWNrZXIoKXt0aGlzLmN1cnJlbnRWaWV3PSd5ZWFyJzt9LC8vIFhYWDog5rKh55So5YiwCi8vIGhhbmRsZUxhYmVsQ2xpY2soKSB7Ci8vICAgaWYgKHRoaXMuY3VycmVudFZpZXcgPT09ICdkYXRlJykgewovLyAgICAgdGhpcy5zaG93TW9udGhQaWNrZXIoKTsKLy8gICB9IGVsc2UgaWYgKHRoaXMuY3VycmVudFZpZXcgPT09ICdtb250aCcpIHsKLy8gICAgIHRoaXMuc2hvd1llYXJQaWNrZXIoKTsKLy8gICB9Ci8vIH0sCnByZXZNb250aDpmdW5jdGlvbiBwcmV2TW9udGgoKXt0aGlzLmRhdGU9T2JqZWN0KGRhdGVfdXRpbF9bInByZXZNb250aCJdKSh0aGlzLmRhdGUpO30sbmV4dE1vbnRoOmZ1bmN0aW9uIG5leHRNb250aCgpe3RoaXMuZGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKHRoaXMuZGF0ZSk7fSxwcmV2WWVhcjpmdW5jdGlvbiBwcmV2WWVhcigpe2lmKHRoaXMuY3VycmVudFZpZXc9PT0neWVhcicpe3RoaXMuZGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sicHJldlllYXIiXSkodGhpcy5kYXRlLDEwKTt9ZWxzZXt0aGlzLmRhdGU9T2JqZWN0KGRhdGVfdXRpbF9bInByZXZZZWFyIl0pKHRoaXMuZGF0ZSk7fX0sbmV4dFllYXI6ZnVuY3Rpb24gbmV4dFllYXIoKXtpZih0aGlzLmN1cnJlbnRWaWV3PT09J3llYXInKXt0aGlzLmRhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm5leHRZZWFyIl0pKHRoaXMuZGF0ZSwxMCk7fWVsc2V7dGhpcy5kYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0WWVhciJdKSh0aGlzLmRhdGUpO319LGhhbmRsZVNob3J0Y3V0Q2xpY2s6ZnVuY3Rpb24gaGFuZGxlU2hvcnRjdXRDbGljayhzaG9ydGN1dCl7aWYoc2hvcnRjdXQub25DbGljayl7c2hvcnRjdXQub25DbGljayh0aGlzKTt9fSxoYW5kbGVUaW1lUGljazpmdW5jdGlvbiBoYW5kbGVUaW1lUGljayh2YWx1ZSx2aXNpYmxlLGZpcnN0KXtpZihPYmplY3QoZGF0ZV91dGlsX1siaXNEYXRlIl0pKHZhbHVlKSl7dmFyIG5ld0RhdGU9dGhpcy52YWx1ZT9PYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5VGltZSJdKSh0aGlzLnZhbHVlLHZhbHVlLmdldEhvdXJzKCksdmFsdWUuZ2V0TWludXRlcygpLHZhbHVlLmdldFNlY29uZHMoKSk6T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeVdpdGhUaW1lU3RyaW5nIl0pKHRoaXMuZ2V0RGVmYXVsdFZhbHVlKCksdGhpcy5kZWZhdWx0VGltZSk7dGhpcy5kYXRlPW5ld0RhdGU7dGhpcy5lbWl0KHRoaXMuZGF0ZSx0cnVlKTt9ZWxzZXt0aGlzLmVtaXQodmFsdWUsdHJ1ZSk7fWlmKCFmaXJzdCl7dGhpcy50aW1lUGlja2VyVmlzaWJsZT12aXNpYmxlO319LGhhbmRsZVRpbWVQaWNrQ2xvc2U6ZnVuY3Rpb24gaGFuZGxlVGltZVBpY2tDbG9zZSgpe3RoaXMudGltZVBpY2tlclZpc2libGU9ZmFsc2U7fSxoYW5kbGVNb250aFBpY2s6ZnVuY3Rpb24gaGFuZGxlTW9udGhQaWNrKG1vbnRoKXtpZih0aGlzLnNlbGVjdGlvbk1vZGU9PT0nbW9udGgnKXt0aGlzLmRhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeURhdGUiXSkodGhpcy5kYXRlLHRoaXMueWVhcixtb250aCwxKTt0aGlzLmVtaXQodGhpcy5kYXRlKTt9ZWxzZXt0aGlzLmRhdGU9T2JqZWN0KGRhdGVfdXRpbF9bImNoYW5nZVllYXJNb250aEFuZENsYW1wRGF0ZSJdKSh0aGlzLmRhdGUsdGhpcy55ZWFyLG1vbnRoKTsvLyBUT0RPOiBzaG91bGQgZW1pdCBpbnRlcm1lZGlhdGUgdmFsdWUgPz8KLy8gdGhpcy5lbWl0KHRoaXMuZGF0ZSk7CnRoaXMuY3VycmVudFZpZXc9J2RhdGUnO319LGhhbmRsZURhdGVQaWNrOmZ1bmN0aW9uIGhhbmRsZURhdGVQaWNrKHZhbHVlKXtpZih0aGlzLnNlbGVjdGlvbk1vZGU9PT0nZGF5Jyl7dmFyIG5ld0RhdGU9dGhpcy52YWx1ZT9PYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5RGF0ZSJdKSh0aGlzLnZhbHVlLHZhbHVlLmdldEZ1bGxZZWFyKCksdmFsdWUuZ2V0TW9udGgoKSx2YWx1ZS5nZXREYXRlKCkpOk9iamVjdChkYXRlX3V0aWxfWyJtb2RpZnlXaXRoVGltZVN0cmluZyJdKSh2YWx1ZSx0aGlzLmRlZmF1bHRUaW1lKTsvLyBjaGFuZ2UgZGVmYXVsdCB0aW1lIHdoaWxlIG91dCBvZiBzZWxlY3RhYmxlUmFuZ2UKaWYoIXRoaXMuY2hlY2tEYXRlV2l0aGluUmFuZ2UobmV3RGF0ZSkpe25ld0RhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeURhdGUiXSkodGhpcy5zZWxlY3RhYmxlUmFuZ2VbMF1bMF0sdmFsdWUuZ2V0RnVsbFllYXIoKSx2YWx1ZS5nZXRNb250aCgpLHZhbHVlLmdldERhdGUoKSk7fXRoaXMuZGF0ZT1uZXdEYXRlO3RoaXMuZW1pdCh0aGlzLmRhdGUsdGhpcy5zaG93VGltZSk7fWVsc2UgaWYodGhpcy5zZWxlY3Rpb25Nb2RlPT09J3dlZWsnKXt0aGlzLmVtaXQodmFsdWUuZGF0ZSk7fWVsc2UgaWYodGhpcy5zZWxlY3Rpb25Nb2RlPT09J2RhdGVzJyl7dGhpcy5lbWl0KHZhbHVlLHRydWUpOy8vIHNldCBmYWxzZSB0byBrZWVwIHBhbmVsIG9wZW4KfX0saGFuZGxlWWVhclBpY2s6ZnVuY3Rpb24gaGFuZGxlWWVhclBpY2soeWVhcil7aWYodGhpcy5zZWxlY3Rpb25Nb2RlPT09J3llYXInKXt0aGlzLmRhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeURhdGUiXSkodGhpcy5kYXRlLHllYXIsMCwxKTt0aGlzLmVtaXQodGhpcy5kYXRlKTt9ZWxzZXt0aGlzLmRhdGU9T2JqZWN0KGRhdGVfdXRpbF9bImNoYW5nZVllYXJNb250aEFuZENsYW1wRGF0ZSJdKSh0aGlzLmRhdGUseWVhcix0aGlzLm1vbnRoKTsvLyBUT0RPOiBzaG91bGQgZW1pdCBpbnRlcm1lZGlhdGUgdmFsdWUgPz8KLy8gdGhpcy5lbWl0KHRoaXMuZGF0ZSwgdHJ1ZSk7CnRoaXMuY3VycmVudFZpZXc9J21vbnRoJzt9fSxjaGFuZ2VUb05vdzpmdW5jdGlvbiBjaGFuZ2VUb05vdygpey8vIE5PVEU6IG5vdCBhIHBlcm1hbmVudCBzb2x1dGlvbgovLyAgICAgICBjb25zaWRlciBkaXNhYmxlICJub3ciIGJ1dHRvbiBpbiB0aGUgZnV0dXJlCmlmKCghdGhpcy5kaXNhYmxlZERhdGV8fCF0aGlzLmRpc2FibGVkRGF0ZShuZXcgRGF0ZSgpKSkmJnRoaXMuY2hlY2tEYXRlV2l0aGluUmFuZ2UobmV3IERhdGUoKSkpe3RoaXMuZGF0ZT1uZXcgRGF0ZSgpO3RoaXMuZW1pdCh0aGlzLmRhdGUpO319LGNvbmZpcm06ZnVuY3Rpb24gY29uZmlybSgpe2lmKHRoaXMuc2VsZWN0aW9uTW9kZT09PSdkYXRlcycpe3RoaXMuZW1pdCh0aGlzLnZhbHVlKTt9ZWxzZXsvLyB2YWx1ZSB3ZXJlIGVtaXR0ZWQgaW4gaGFuZGxle0RhdGUsVGltZX1QaWNrLCBub3RoaW5nIHRvIHVwZGF0ZSBoZXJlCi8vIGRlYWwgd2l0aCB0aGUgc2NlbmFyaW8gd2hlcmU6IHVzZXIgb3BlbnMgdGhlIHBpY2tlciwgdGhlbiBjb25maXJtIHdpdGhvdXQgZG9pbmcgYW55dGhpbmcKdmFyIHZhbHVlPXRoaXMudmFsdWU/dGhpcy52YWx1ZTpPYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5V2l0aFRpbWVTdHJpbmciXSkodGhpcy5nZXREZWZhdWx0VmFsdWUoKSx0aGlzLmRlZmF1bHRUaW1lKTt0aGlzLmRhdGU9bmV3IERhdGUodmFsdWUpOy8vIHJlZnJlc2ggZGF0ZQp0aGlzLmVtaXQodmFsdWUpO319LHJlc2V0VmlldzpmdW5jdGlvbiByZXNldFZpZXcoKXtpZih0aGlzLnNlbGVjdGlvbk1vZGU9PT0nbW9udGgnKXt0aGlzLmN1cnJlbnRWaWV3PSdtb250aCc7fWVsc2UgaWYodGhpcy5zZWxlY3Rpb25Nb2RlPT09J3llYXInKXt0aGlzLmN1cnJlbnRWaWV3PSd5ZWFyJzt9ZWxzZXt0aGlzLmN1cnJlbnRWaWV3PSdkYXRlJzt9fSxoYW5kbGVFbnRlcjpmdW5jdGlvbiBoYW5kbGVFbnRlcigpe2RvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsdGhpcy5oYW5kbGVLZXlkb3duKTt9LGhhbmRsZUxlYXZlOmZ1bmN0aW9uIGhhbmRsZUxlYXZlKCl7dGhpcy4kZW1pdCgnZG9kZXN0cm95Jyk7ZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJyx0aGlzLmhhbmRsZUtleWRvd24pO30saGFuZGxlS2V5ZG93bjpmdW5jdGlvbiBoYW5kbGVLZXlkb3duKGV2ZW50KXt2YXIga2V5Q29kZT1ldmVudC5rZXlDb2RlO3ZhciBsaXN0PVszOCw0MCwzNywzOV07aWYodGhpcy52aXNpYmxlJiYhdGhpcy50aW1lUGlja2VyVmlzaWJsZSl7aWYobGlzdC5pbmRleE9mKGtleUNvZGUpIT09LTEpe3RoaXMuaGFuZGxlS2V5Q29udHJvbChrZXlDb2RlKTtldmVudC5zdG9wUHJvcGFnYXRpb24oKTtldmVudC5wcmV2ZW50RGVmYXVsdCgpO31pZihrZXlDb2RlPT09MTMmJnRoaXMudXNlcklucHV0RGF0ZT09PW51bGwmJnRoaXMudXNlcklucHV0VGltZT09PW51bGwpey8vIEVudGVyCnRoaXMuZW1pdCh0aGlzLmRhdGUsZmFsc2UpO319fSxoYW5kbGVLZXlDb250cm9sOmZ1bmN0aW9uIGhhbmRsZUtleUNvbnRyb2woa2V5Q29kZSl7dmFyIG1hcHBpbmc9eyd5ZWFyJzp7Mzg6LTQsNDA6NCwzNzotMSwzOToxLG9mZnNldDpmdW5jdGlvbiBvZmZzZXQoZGF0ZSxzdGVwKXtyZXR1cm4gZGF0ZS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkrc3RlcCk7fX0sJ21vbnRoJzp7Mzg6LTQsNDA6NCwzNzotMSwzOToxLG9mZnNldDpmdW5jdGlvbiBvZmZzZXQoZGF0ZSxzdGVwKXtyZXR1cm4gZGF0ZS5zZXRNb250aChkYXRlLmdldE1vbnRoKCkrc3RlcCk7fX0sJ3dlZWsnOnszODotMSw0MDoxLDM3Oi0xLDM5OjEsb2Zmc2V0OmZ1bmN0aW9uIG9mZnNldChkYXRlLHN0ZXApe3JldHVybiBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkrc3RlcCo3KTt9fSwnZGF5Jzp7Mzg6LTcsNDA6NywzNzotMSwzOToxLG9mZnNldDpmdW5jdGlvbiBvZmZzZXQoZGF0ZSxzdGVwKXtyZXR1cm4gZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpK3N0ZXApO319fTt2YXIgbW9kZT10aGlzLnNlbGVjdGlvbk1vZGU7dmFyIHllYXI9My4xNTM2ZTEwO3ZhciBub3c9dGhpcy5kYXRlLmdldFRpbWUoKTt2YXIgbmV3RGF0ZT1uZXcgRGF0ZSh0aGlzLmRhdGUuZ2V0VGltZSgpKTt3aGlsZShNYXRoLmFicyhub3ctbmV3RGF0ZS5nZXRUaW1lKCkpPD15ZWFyKXt2YXIgbWFwPW1hcHBpbmdbbW9kZV07bWFwLm9mZnNldChuZXdEYXRlLG1hcFtrZXlDb2RlXSk7aWYodHlwZW9mIHRoaXMuZGlzYWJsZWREYXRlPT09J2Z1bmN0aW9uJyYmdGhpcy5kaXNhYmxlZERhdGUobmV3RGF0ZSkpe2NvbnRpbnVlO310aGlzLmRhdGU9bmV3RGF0ZTt0aGlzLiRlbWl0KCdwaWNrJyxuZXdEYXRlLHRydWUpO2JyZWFrO319LGhhbmRsZVZpc2libGVUaW1lQ2hhbmdlOmZ1bmN0aW9uIGhhbmRsZVZpc2libGVUaW1lQ2hhbmdlKHZhbHVlKXt2YXIgdGltZT1PYmplY3QoZGF0ZV91dGlsX1sicGFyc2VEYXRlIl0pKHZhbHVlLHRoaXMudGltZUZvcm1hdCk7aWYodGltZSYmdGhpcy5jaGVja0RhdGVXaXRoaW5SYW5nZSh0aW1lKSl7dGhpcy5kYXRlPU9iamVjdChkYXRlX3V0aWxfWyJtb2RpZnlEYXRlIl0pKHRpbWUsdGhpcy55ZWFyLHRoaXMubW9udGgsdGhpcy5tb250aERhdGUpO3RoaXMudXNlcklucHV0VGltZT1udWxsO3RoaXMuJHJlZnMudGltZXBpY2tlci52YWx1ZT10aGlzLmRhdGU7dGhpcy50aW1lUGlja2VyVmlzaWJsZT1mYWxzZTt0aGlzLmVtaXQodGhpcy5kYXRlLHRydWUpO319LGhhbmRsZVZpc2libGVEYXRlQ2hhbmdlOmZ1bmN0aW9uIGhhbmRsZVZpc2libGVEYXRlQ2hhbmdlKHZhbHVlKXt2YXIgZGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sicGFyc2VEYXRlIl0pKHZhbHVlLHRoaXMuZGF0ZUZvcm1hdCk7aWYoZGF0ZSl7aWYodHlwZW9mIHRoaXMuZGlzYWJsZWREYXRlPT09J2Z1bmN0aW9uJyYmdGhpcy5kaXNhYmxlZERhdGUoZGF0ZSkpe3JldHVybjt9dGhpcy5kYXRlPU9iamVjdChkYXRlX3V0aWxfWyJtb2RpZnlUaW1lIl0pKGRhdGUsdGhpcy5kYXRlLmdldEhvdXJzKCksdGhpcy5kYXRlLmdldE1pbnV0ZXMoKSx0aGlzLmRhdGUuZ2V0U2Vjb25kcygpKTt0aGlzLnVzZXJJbnB1dERhdGU9bnVsbDt0aGlzLnJlc2V0VmlldygpO3RoaXMuZW1pdCh0aGlzLmRhdGUsdHJ1ZSk7fX0saXNWYWxpZFZhbHVlOmZ1bmN0aW9uIGlzVmFsaWRWYWx1ZSh2YWx1ZSl7cmV0dXJuIHZhbHVlJiYhaXNOYU4odmFsdWUpJiYodHlwZW9mIHRoaXMuZGlzYWJsZWREYXRlPT09J2Z1bmN0aW9uJz8hdGhpcy5kaXNhYmxlZERhdGUodmFsdWUpOnRydWUpJiZ0aGlzLmNoZWNrRGF0ZVdpdGhpblJhbmdlKHZhbHVlKTt9LGdldERlZmF1bHRWYWx1ZTpmdW5jdGlvbiBnZXREZWZhdWx0VmFsdWUoKXsvLyBpZiBkZWZhdWx0LXZhbHVlIGlzIHNldCwgcmV0dXJuIGl0Ci8vIG90aGVyd2lzZSwgcmV0dXJuIG5vdyAodGhlIG1vbWVudCB0aGlzIG1ldGhvZCBnZXRzIGNhbGxlZCkKcmV0dXJuIHRoaXMuZGVmYXVsdFZhbHVlP25ldyBEYXRlKHRoaXMuZGVmYXVsdFZhbHVlKTpuZXcgRGF0ZSgpO30sY2hlY2tEYXRlV2l0aGluUmFuZ2U6ZnVuY3Rpb24gY2hlY2tEYXRlV2l0aGluUmFuZ2UoZGF0ZSl7cmV0dXJuIHRoaXMuc2VsZWN0YWJsZVJhbmdlLmxlbmd0aD4wP09iamVjdChkYXRlX3V0aWxfWyJ0aW1lV2l0aGluUmFuZ2UiXSkoZGF0ZSx0aGlzLnNlbGVjdGFibGVSYW5nZSx0aGlzLmZvcm1hdHx8J0hIOm1tOnNzJyk6dHJ1ZTt9fSxjb21wb25lbnRzOntUaW1lUGlja2VyOnBhbmVsX3RpbWUsWWVhclRhYmxlOnllYXJfdGFibGUsTW9udGhUYWJsZTptb250aF90YWJsZSxEYXRlVGFibGU6ZGF0ZV90YWJsZSxFbElucHV0OmlucHV0X2RlZmF1bHQuYSxFbEJ1dHRvbjpidXR0b25fZGVmYXVsdC5hfSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57cG9wcGVyQ2xhc3M6JycsZGF0ZTpuZXcgRGF0ZSgpLHZhbHVlOicnLGRlZmF1bHRWYWx1ZTpudWxsLC8vIHVzZSBnZXREZWZhdWx0VmFsdWUoKSBmb3IgdGltZSBjb21wdXRhdGlvbgpkZWZhdWx0VGltZTpudWxsLHNob3dUaW1lOmZhbHNlLHNlbGVjdGlvbk1vZGU6J2RheScsc2hvcnRjdXRzOicnLHZpc2libGU6ZmFsc2UsY3VycmVudFZpZXc6J2RhdGUnLGRpc2FibGVkRGF0ZTonJyxjZWxsQ2xhc3NOYW1lOicnLHNlbGVjdGFibGVSYW5nZTpbXSxmaXJzdERheU9mV2Vlazo3LHNob3dXZWVrTnVtYmVyOmZhbHNlLHRpbWVQaWNrZXJWaXNpYmxlOmZhbHNlLGZvcm1hdDonJyxhcnJvd0NvbnRyb2w6ZmFsc2UsdXNlcklucHV0RGF0ZTpudWxsLHVzZXJJbnB1dFRpbWU6bnVsbH07fSxjb21wdXRlZDp7eWVhcjpmdW5jdGlvbiB5ZWFyKCl7cmV0dXJuIHRoaXMuZGF0ZS5nZXRGdWxsWWVhcigpO30sbW9udGg6ZnVuY3Rpb24gbW9udGgoKXtyZXR1cm4gdGhpcy5kYXRlLmdldE1vbnRoKCk7fSx3ZWVrOmZ1bmN0aW9uIHdlZWsoKXtyZXR1cm4gT2JqZWN0KGRhdGVfdXRpbF9bImdldFdlZWtOdW1iZXIiXSkodGhpcy5kYXRlKTt9LG1vbnRoRGF0ZTpmdW5jdGlvbiBtb250aERhdGUoKXtyZXR1cm4gdGhpcy5kYXRlLmdldERhdGUoKTt9LGZvb3RlclZpc2libGU6ZnVuY3Rpb24gZm9vdGVyVmlzaWJsZSgpe3JldHVybiB0aGlzLnNob3dUaW1lfHx0aGlzLnNlbGVjdGlvbk1vZGU9PT0nZGF0ZXMnO30sdmlzaWJsZVRpbWU6ZnVuY3Rpb24gdmlzaWJsZVRpbWUoKXtpZih0aGlzLnVzZXJJbnB1dFRpbWUhPT1udWxsKXtyZXR1cm4gdGhpcy51c2VySW5wdXRUaW1lO31lbHNle3JldHVybiBPYmplY3QoZGF0ZV91dGlsX1siZm9ybWF0RGF0ZSJdKSh0aGlzLnZhbHVlfHx0aGlzLmRlZmF1bHRWYWx1ZSx0aGlzLnRpbWVGb3JtYXQpO319LHZpc2libGVEYXRlOmZ1bmN0aW9uIHZpc2libGVEYXRlKCl7aWYodGhpcy51c2VySW5wdXREYXRlIT09bnVsbCl7cmV0dXJuIHRoaXMudXNlcklucHV0RGF0ZTt9ZWxzZXtyZXR1cm4gT2JqZWN0KGRhdGVfdXRpbF9bImZvcm1hdERhdGUiXSkodGhpcy52YWx1ZXx8dGhpcy5kZWZhdWx0VmFsdWUsdGhpcy5kYXRlRm9ybWF0KTt9fSx5ZWFyTGFiZWw6ZnVuY3Rpb24geWVhckxhYmVsKCl7dmFyIHllYXJUcmFuc2xhdGlvbj10aGlzLnQoJ2VsLmRhdGVwaWNrZXIueWVhcicpO2lmKHRoaXMuY3VycmVudFZpZXc9PT0neWVhcicpe3ZhciBzdGFydFllYXI9TWF0aC5mbG9vcih0aGlzLnllYXIvMTApKjEwO2lmKHllYXJUcmFuc2xhdGlvbil7cmV0dXJuIHN0YXJ0WWVhcisnICcreWVhclRyYW5zbGF0aW9uKycgLSAnKyhzdGFydFllYXIrOSkrJyAnK3llYXJUcmFuc2xhdGlvbjt9cmV0dXJuIHN0YXJ0WWVhcisnIC0gJysoc3RhcnRZZWFyKzkpO31yZXR1cm4gdGhpcy55ZWFyKycgJyt5ZWFyVHJhbnNsYXRpb247fSx0aW1lRm9ybWF0OmZ1bmN0aW9uIHRpbWVGb3JtYXQoKXtpZih0aGlzLmZvcm1hdCl7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJleHRyYWN0VGltZUZvcm1hdCJdKSh0aGlzLmZvcm1hdCk7fWVsc2V7cmV0dXJuJ0hIOm1tOnNzJzt9fSxkYXRlRm9ybWF0OmZ1bmN0aW9uIGRhdGVGb3JtYXQoKXtpZih0aGlzLmZvcm1hdCl7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJleHRyYWN0RGF0ZUZvcm1hdCJdKSh0aGlzLmZvcm1hdCk7fWVsc2V7cmV0dXJuJ3l5eXktTU0tZGQnO319fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGFuZWwvZGF0ZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFuZWxfZGF0ZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1kYXRldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL2RhdGUudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgZGF0ZV9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhbmVsX2RhdGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sZGF0ZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzI0NDBkNGVhX3JlbmRlcixkYXRldnVlX3R5cGVfdGVtcGxhdGVfaWRfMjQ0MGQ0ZWFfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBkYXRlX2FwaTt9ZGF0ZV9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9kYXRlLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYW5lbF9kYXRlPWRhdGVfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGFuZWwvZGF0ZS1yYW5nZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MjY1Mjg0OWEmCnZhciBkYXRlX3JhbmdldnVlX3R5cGVfdGVtcGxhdGVfaWRfMjY1Mjg0OWFfcmVuZGVyPWZ1bmN0aW9uIGRhdGVfcmFuZ2V2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yNjUyODQ5YV9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInRyYW5zaXRpb24iLHthdHRyczp7bmFtZToiZWwtem9vbS1pbi10b3AifSxvbjp7ImFmdGVyLWxlYXZlIjpmdW5jdGlvbiBhZnRlckxlYXZlKCRldmVudCl7X3ZtLiRlbWl0KCJkb2Rlc3Ryb3kiKTt9fX0sW19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0udmlzaWJsZSxleHByZXNzaW9uOiJ2aXNpYmxlIn1dLHN0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWwgZWwtZGF0ZS1yYW5nZS1waWNrZXIgZWwtcG9wcGVyIixjbGFzczpbeyJoYXMtc2lkZWJhciI6X3ZtLiRzbG90cy5zaWRlYmFyfHxfdm0uc2hvcnRjdXRzLCJoYXMtdGltZSI6X3ZtLnNob3dUaW1lfSxfdm0ucG9wcGVyQ2xhc3NdfSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2JvZHktd3JhcHBlciJ9LFtfdm0uX3QoInNpZGViYXIiKSxfdm0uc2hvcnRjdXRzP19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19zaWRlYmFyIn0sX3ZtLl9sKF92bS5zaG9ydGN1dHMsZnVuY3Rpb24oc2hvcnRjdXQsa2V5KXtyZXR1cm4gX2MoImJ1dHRvbiIse2tleTprZXksc3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9fc2hvcnRjdXQiLGF0dHJzOnt0eXBlOiJidXR0b24ifSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtfdm0uaGFuZGxlU2hvcnRjdXRDbGljayhzaG9ydGN1dCk7fX19LFtfdm0uX3YoX3ZtLl9zKHNob3J0Y3V0LnRleHQpKV0pO30pLDApOl92bS5fZSgpLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19ib2R5In0sW192bS5zaG93VGltZT9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWRhdGUtcmFuZ2UtcGlja2VyX190aW1lLWhlYWRlciJ9LFtfYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1kYXRlLXJhbmdlLXBpY2tlcl9fZWRpdG9ycy13cmFwIn0sW19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWRhdGUtcmFuZ2UtcGlja2VyX190aW1lLXBpY2tlci13cmFwIn0sW19jKCJlbC1pbnB1dCIse3JlZjoibWluSW5wdXQiLHN0YXRpY0NsYXNzOiJlbC1kYXRlLXJhbmdlLXBpY2tlcl9fZWRpdG9yIixhdHRyczp7c2l6ZToic21hbGwiLGRpc2FibGVkOl92bS5yYW5nZVN0YXRlLnNlbGVjdGluZyxwbGFjZWhvbGRlcjpfdm0udCgiZWwuZGF0ZXBpY2tlci5zdGFydERhdGUiKSx2YWx1ZTpfdm0ubWluVmlzaWJsZURhdGV9LG9uOntpbnB1dDpmdW5jdGlvbiBpbnB1dCh2YWwpe3JldHVybiBfdm0uaGFuZGxlRGF0ZUlucHV0KHZhbCwibWluIik7fSxjaGFuZ2U6ZnVuY3Rpb24gY2hhbmdlKHZhbCl7cmV0dXJuIF92bS5oYW5kbGVEYXRlQ2hhbmdlKHZhbCwibWluIik7fX19KV0sMSksX2MoInNwYW4iLHtkaXJlY3RpdmVzOlt7bmFtZToiY2xpY2tvdXRzaWRlIixyYXdOYW1lOiJ2LWNsaWNrb3V0c2lkZSIsdmFsdWU6X3ZtLmhhbmRsZU1pblRpbWVDbG9zZSxleHByZXNzaW9uOiJoYW5kbGVNaW5UaW1lQ2xvc2UifV0sc3RhdGljQ2xhc3M6ImVsLWRhdGUtcmFuZ2UtcGlja2VyX190aW1lLXBpY2tlci13cmFwIn0sW19jKCJlbC1pbnB1dCIse3N0YXRpY0NsYXNzOiJlbC1kYXRlLXJhbmdlLXBpY2tlcl9fZWRpdG9yIixhdHRyczp7c2l6ZToic21hbGwiLGRpc2FibGVkOl92bS5yYW5nZVN0YXRlLnNlbGVjdGluZyxwbGFjZWhvbGRlcjpfdm0udCgiZWwuZGF0ZXBpY2tlci5zdGFydFRpbWUiKSx2YWx1ZTpfdm0ubWluVmlzaWJsZVRpbWV9LG9uOntmb2N1czpmdW5jdGlvbiBmb2N1cygkZXZlbnQpe192bS5taW5UaW1lUGlja2VyVmlzaWJsZT10cnVlO30saW5wdXQ6ZnVuY3Rpb24gaW5wdXQodmFsKXtyZXR1cm4gX3ZtLmhhbmRsZVRpbWVJbnB1dCh2YWwsIm1pbiIpO30sY2hhbmdlOmZ1bmN0aW9uIGNoYW5nZSh2YWwpe3JldHVybiBfdm0uaGFuZGxlVGltZUNoYW5nZSh2YWwsIm1pbiIpO319fSksX2MoInRpbWUtcGlja2VyIix7cmVmOiJtaW5UaW1lUGlja2VyIixhdHRyczp7InRpbWUtYXJyb3ctY29udHJvbCI6X3ZtLmFycm93Q29udHJvbCx2aXNpYmxlOl92bS5taW5UaW1lUGlja2VyVmlzaWJsZX0sb246e3BpY2s6X3ZtLmhhbmRsZU1pblRpbWVQaWNrLG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgkZXZlbnQpe192bS4kcmVmcy5taW5UaW1lUGlja2VyLmZvcm1hdD1fdm0udGltZUZvcm1hdDt9fX0pXSwxKV0pLF9jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWljb24tYXJyb3ctcmlnaHQifSksX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtZGF0ZS1yYW5nZS1waWNrZXJfX2VkaXRvcnMtd3JhcCBpcy1yaWdodCJ9LFtfYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1kYXRlLXJhbmdlLXBpY2tlcl9fdGltZS1waWNrZXItd3JhcCJ9LFtfYygiZWwtaW5wdXQiLHtzdGF0aWNDbGFzczoiZWwtZGF0ZS1yYW5nZS1waWNrZXJfX2VkaXRvciIsYXR0cnM6e3NpemU6InNtYWxsIixkaXNhYmxlZDpfdm0ucmFuZ2VTdGF0ZS5zZWxlY3RpbmcscGxhY2Vob2xkZXI6X3ZtLnQoImVsLmRhdGVwaWNrZXIuZW5kRGF0ZSIpLHZhbHVlOl92bS5tYXhWaXNpYmxlRGF0ZSxyZWFkb25seTohX3ZtLm1pbkRhdGV9LG9uOntpbnB1dDpmdW5jdGlvbiBpbnB1dCh2YWwpe3JldHVybiBfdm0uaGFuZGxlRGF0ZUlucHV0KHZhbCwibWF4Iik7fSxjaGFuZ2U6ZnVuY3Rpb24gY2hhbmdlKHZhbCl7cmV0dXJuIF92bS5oYW5kbGVEYXRlQ2hhbmdlKHZhbCwibWF4Iik7fX19KV0sMSksX2MoInNwYW4iLHtkaXJlY3RpdmVzOlt7bmFtZToiY2xpY2tvdXRzaWRlIixyYXdOYW1lOiJ2LWNsaWNrb3V0c2lkZSIsdmFsdWU6X3ZtLmhhbmRsZU1heFRpbWVDbG9zZSxleHByZXNzaW9uOiJoYW5kbGVNYXhUaW1lQ2xvc2UifV0sc3RhdGljQ2xhc3M6ImVsLWRhdGUtcmFuZ2UtcGlja2VyX190aW1lLXBpY2tlci13cmFwIn0sW19jKCJlbC1pbnB1dCIse3N0YXRpY0NsYXNzOiJlbC1kYXRlLXJhbmdlLXBpY2tlcl9fZWRpdG9yIixhdHRyczp7c2l6ZToic21hbGwiLGRpc2FibGVkOl92bS5yYW5nZVN0YXRlLnNlbGVjdGluZyxwbGFjZWhvbGRlcjpfdm0udCgiZWwuZGF0ZXBpY2tlci5lbmRUaW1lIiksdmFsdWU6X3ZtLm1heFZpc2libGVUaW1lLHJlYWRvbmx5OiFfdm0ubWluRGF0ZX0sb246e2ZvY3VzOmZ1bmN0aW9uIGZvY3VzKCRldmVudCl7X3ZtLm1pbkRhdGUmJihfdm0ubWF4VGltZVBpY2tlclZpc2libGU9dHJ1ZSk7fSxpbnB1dDpmdW5jdGlvbiBpbnB1dCh2YWwpe3JldHVybiBfdm0uaGFuZGxlVGltZUlucHV0KHZhbCwibWF4Iik7fSxjaGFuZ2U6ZnVuY3Rpb24gY2hhbmdlKHZhbCl7cmV0dXJuIF92bS5oYW5kbGVUaW1lQ2hhbmdlKHZhbCwibWF4Iik7fX19KSxfYygidGltZS1waWNrZXIiLHtyZWY6Im1heFRpbWVQaWNrZXIiLGF0dHJzOnsidGltZS1hcnJvdy1jb250cm9sIjpfdm0uYXJyb3dDb250cm9sLHZpc2libGU6X3ZtLm1heFRpbWVQaWNrZXJWaXNpYmxlfSxvbjp7cGljazpfdm0uaGFuZGxlTWF4VGltZVBpY2ssbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCRldmVudCl7X3ZtLiRyZWZzLm1heFRpbWVQaWNrZXIuZm9ybWF0PV92bS50aW1lRm9ybWF0O319fSldLDEpXSldKTpfdm0uX2UoKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9fY29udGVudCBlbC1kYXRlLXJhbmdlLXBpY2tlcl9fY29udGVudCBpcy1sZWZ0In0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtZGF0ZS1yYW5nZS1waWNrZXJfX2hlYWRlciJ9LFtfYygiYnV0dG9uIix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9faWNvbi1idG4gZWwtaWNvbi1kLWFycm93LWxlZnQiLGF0dHJzOnt0eXBlOiJidXR0b24ifSxvbjp7Y2xpY2s6X3ZtLmxlZnRQcmV2WWVhcn19KSxfYygiYnV0dG9uIix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9faWNvbi1idG4gZWwtaWNvbi1hcnJvdy1sZWZ0IixhdHRyczp7dHlwZToiYnV0dG9uIn0sb246e2NsaWNrOl92bS5sZWZ0UHJldk1vbnRofX0pLF92bS51bmxpbmtQYW5lbHM/X2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2ljb24tYnRuIGVsLWljb24tZC1hcnJvdy1yaWdodCIsY2xhc3M6eyJpcy1kaXNhYmxlZCI6IV92bS5lbmFibGVZZWFyQXJyb3d9LGF0dHJzOnt0eXBlOiJidXR0b24iLGRpc2FibGVkOiFfdm0uZW5hYmxlWWVhckFycm93fSxvbjp7Y2xpY2s6X3ZtLmxlZnROZXh0WWVhcn19KTpfdm0uX2UoKSxfdm0udW5saW5rUGFuZWxzP19jKCJidXR0b24iLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19pY29uLWJ0biBlbC1pY29uLWFycm93LXJpZ2h0IixjbGFzczp7ImlzLWRpc2FibGVkIjohX3ZtLmVuYWJsZU1vbnRoQXJyb3d9LGF0dHJzOnt0eXBlOiJidXR0b24iLGRpc2FibGVkOiFfdm0uZW5hYmxlTW9udGhBcnJvd30sb246e2NsaWNrOl92bS5sZWZ0TmV4dE1vbnRofX0pOl92bS5fZSgpLF9jKCJkaXYiLFtfdm0uX3YoX3ZtLl9zKF92bS5sZWZ0TGFiZWwpKV0pXSksX2MoImRhdGUtdGFibGUiLHthdHRyczp7InNlbGVjdGlvbi1tb2RlIjoicmFuZ2UiLGRhdGU6X3ZtLmxlZnREYXRlLCJkZWZhdWx0LXZhbHVlIjpfdm0uZGVmYXVsdFZhbHVlLCJtaW4tZGF0ZSI6X3ZtLm1pbkRhdGUsIm1heC1kYXRlIjpfdm0ubWF4RGF0ZSwicmFuZ2Utc3RhdGUiOl92bS5yYW5nZVN0YXRlLCJkaXNhYmxlZC1kYXRlIjpfdm0uZGlzYWJsZWREYXRlLCJjZWxsLWNsYXNzLW5hbWUiOl92bS5jZWxsQ2xhc3NOYW1lLCJmaXJzdC1kYXktb2Ytd2VlayI6X3ZtLmZpcnN0RGF5T2ZXZWVrfSxvbjp7Y2hhbmdlcmFuZ2U6X3ZtLmhhbmRsZUNoYW5nZVJhbmdlLHBpY2s6X3ZtLmhhbmRsZVJhbmdlUGlja319KV0sMSksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2NvbnRlbnQgZWwtZGF0ZS1yYW5nZS1waWNrZXJfX2NvbnRlbnQgaXMtcmlnaHQifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1kYXRlLXJhbmdlLXBpY2tlcl9faGVhZGVyIn0sW192bS51bmxpbmtQYW5lbHM/X2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2ljb24tYnRuIGVsLWljb24tZC1hcnJvdy1sZWZ0IixjbGFzczp7ImlzLWRpc2FibGVkIjohX3ZtLmVuYWJsZVllYXJBcnJvd30sYXR0cnM6e3R5cGU6ImJ1dHRvbiIsZGlzYWJsZWQ6IV92bS5lbmFibGVZZWFyQXJyb3d9LG9uOntjbGljazpfdm0ucmlnaHRQcmV2WWVhcn19KTpfdm0uX2UoKSxfdm0udW5saW5rUGFuZWxzP19jKCJidXR0b24iLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19pY29uLWJ0biBlbC1pY29uLWFycm93LWxlZnQiLGNsYXNzOnsiaXMtZGlzYWJsZWQiOiFfdm0uZW5hYmxlTW9udGhBcnJvd30sYXR0cnM6e3R5cGU6ImJ1dHRvbiIsZGlzYWJsZWQ6IV92bS5lbmFibGVNb250aEFycm93fSxvbjp7Y2xpY2s6X3ZtLnJpZ2h0UHJldk1vbnRofX0pOl92bS5fZSgpLF9jKCJidXR0b24iLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19pY29uLWJ0biBlbC1pY29uLWQtYXJyb3ctcmlnaHQiLGF0dHJzOnt0eXBlOiJidXR0b24ifSxvbjp7Y2xpY2s6X3ZtLnJpZ2h0TmV4dFllYXJ9fSksX2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2ljb24tYnRuIGVsLWljb24tYXJyb3ctcmlnaHQiLGF0dHJzOnt0eXBlOiJidXR0b24ifSxvbjp7Y2xpY2s6X3ZtLnJpZ2h0TmV4dE1vbnRofX0pLF9jKCJkaXYiLFtfdm0uX3YoX3ZtLl9zKF92bS5yaWdodExhYmVsKSldKV0pLF9jKCJkYXRlLXRhYmxlIix7YXR0cnM6eyJzZWxlY3Rpb24tbW9kZSI6InJhbmdlIixkYXRlOl92bS5yaWdodERhdGUsImRlZmF1bHQtdmFsdWUiOl92bS5kZWZhdWx0VmFsdWUsIm1pbi1kYXRlIjpfdm0ubWluRGF0ZSwibWF4LWRhdGUiOl92bS5tYXhEYXRlLCJyYW5nZS1zdGF0ZSI6X3ZtLnJhbmdlU3RhdGUsImRpc2FibGVkLWRhdGUiOl92bS5kaXNhYmxlZERhdGUsImNlbGwtY2xhc3MtbmFtZSI6X3ZtLmNlbGxDbGFzc05hbWUsImZpcnN0LWRheS1vZi13ZWVrIjpfdm0uZmlyc3REYXlPZldlZWt9LG9uOntjaGFuZ2VyYW5nZTpfdm0uaGFuZGxlQ2hhbmdlUmFuZ2UscGljazpfdm0uaGFuZGxlUmFuZ2VQaWNrfX0pXSwxKV0pXSwyKSxfdm0uc2hvd1RpbWU/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2Zvb3RlciJ9LFtfYygiZWwtYnV0dG9uIix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9fbGluay1idG4iLGF0dHJzOntzaXplOiJtaW5pIix0eXBlOiJ0ZXh0In0sb246e2NsaWNrOl92bS5oYW5kbGVDbGVhcn19LFtfdm0uX3YoIlxuICAgICAgICAiK192bS5fcyhfdm0udCgiZWwuZGF0ZXBpY2tlci5jbGVhciIpKSsiXG4gICAgICAiKV0pLF9jKCJlbC1idXR0b24iLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19saW5rLWJ0biIsYXR0cnM6e3BsYWluOiIiLHNpemU6Im1pbmkiLGRpc2FibGVkOl92bS5idG5EaXNhYmxlZH0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLmhhbmRsZUNvbmZpcm0oZmFsc2UpO319fSxbX3ZtLl92KCJcbiAgICAgICAgIitfdm0uX3MoX3ZtLnQoImVsLmRhdGVwaWNrZXIuY29uZmlybSIpKSsiXG4gICAgICAiKV0pXSwxKTpfdm0uX2UoKV0pXSk7fTt2YXIgZGF0ZV9yYW5nZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzI2NTI4NDlhX3N0YXRpY1JlbmRlckZucz1bXTtkYXRlX3JhbmdldnVlX3R5cGVfdGVtcGxhdGVfaWRfMjY1Mjg0OWFfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9kYXRlLXJhbmdlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yNjUyODQ5YSYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL2RhdGUtcmFuZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgZGF0ZV9yYW5nZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2NhbGNEZWZhdWx0VmFsdWU9ZnVuY3Rpb24gY2FsY0RlZmF1bHRWYWx1ZShkZWZhdWx0VmFsdWUpe2lmKEFycmF5LmlzQXJyYXkoZGVmYXVsdFZhbHVlKSl7cmV0dXJuW25ldyBEYXRlKGRlZmF1bHRWYWx1ZVswXSksbmV3IERhdGUoZGVmYXVsdFZhbHVlWzFdKV07fWVsc2UgaWYoZGVmYXVsdFZhbHVlKXtyZXR1cm5bbmV3IERhdGUoZGVmYXVsdFZhbHVlKSxPYmplY3QoZGF0ZV91dGlsX1sibmV4dERhdGUiXSkobmV3IERhdGUoZGVmYXVsdFZhbHVlKSwxKV07fWVsc2V7cmV0dXJuW25ldyBEYXRlKCksT2JqZWN0KGRhdGVfdXRpbF9bIm5leHREYXRlIl0pKG5ldyBEYXRlKCksMSldO319Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZGF0ZV9yYW5nZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bWl4aW5zOltsb2NhbGVfZGVmYXVsdC5hXSxkaXJlY3RpdmVzOntDbGlja291dHNpZGU6Y2xpY2tvdXRzaWRlX2RlZmF1bHQuYX0sY29tcHV0ZWQ6e2J0bkRpc2FibGVkOmZ1bmN0aW9uIGJ0bkRpc2FibGVkKCl7cmV0dXJuISh0aGlzLm1pbkRhdGUmJnRoaXMubWF4RGF0ZSYmIXRoaXMuc2VsZWN0aW5nJiZ0aGlzLmlzVmFsaWRWYWx1ZShbdGhpcy5taW5EYXRlLHRoaXMubWF4RGF0ZV0pKTt9LGxlZnRMYWJlbDpmdW5jdGlvbiBsZWZ0TGFiZWwoKXtyZXR1cm4gdGhpcy5sZWZ0RGF0ZS5nZXRGdWxsWWVhcigpKycgJyt0aGlzLnQoJ2VsLmRhdGVwaWNrZXIueWVhcicpKycgJyt0aGlzLnQoJ2VsLmRhdGVwaWNrZXIubW9udGgnKyh0aGlzLmxlZnREYXRlLmdldE1vbnRoKCkrMSkpO30scmlnaHRMYWJlbDpmdW5jdGlvbiByaWdodExhYmVsKCl7cmV0dXJuIHRoaXMucmlnaHREYXRlLmdldEZ1bGxZZWFyKCkrJyAnK3RoaXMudCgnZWwuZGF0ZXBpY2tlci55ZWFyJykrJyAnK3RoaXMudCgnZWwuZGF0ZXBpY2tlci5tb250aCcrKHRoaXMucmlnaHREYXRlLmdldE1vbnRoKCkrMSkpO30sbGVmdFllYXI6ZnVuY3Rpb24gbGVmdFllYXIoKXtyZXR1cm4gdGhpcy5sZWZ0RGF0ZS5nZXRGdWxsWWVhcigpO30sbGVmdE1vbnRoOmZ1bmN0aW9uIGxlZnRNb250aCgpe3JldHVybiB0aGlzLmxlZnREYXRlLmdldE1vbnRoKCk7fSxsZWZ0TW9udGhEYXRlOmZ1bmN0aW9uIGxlZnRNb250aERhdGUoKXtyZXR1cm4gdGhpcy5sZWZ0RGF0ZS5nZXREYXRlKCk7fSxyaWdodFllYXI6ZnVuY3Rpb24gcmlnaHRZZWFyKCl7cmV0dXJuIHRoaXMucmlnaHREYXRlLmdldEZ1bGxZZWFyKCk7fSxyaWdodE1vbnRoOmZ1bmN0aW9uIHJpZ2h0TW9udGgoKXtyZXR1cm4gdGhpcy5yaWdodERhdGUuZ2V0TW9udGgoKTt9LHJpZ2h0TW9udGhEYXRlOmZ1bmN0aW9uIHJpZ2h0TW9udGhEYXRlKCl7cmV0dXJuIHRoaXMucmlnaHREYXRlLmdldERhdGUoKTt9LG1pblZpc2libGVEYXRlOmZ1bmN0aW9uIG1pblZpc2libGVEYXRlKCl7aWYodGhpcy5kYXRlVXNlcklucHV0Lm1pbiE9PW51bGwpcmV0dXJuIHRoaXMuZGF0ZVVzZXJJbnB1dC5taW47aWYodGhpcy5taW5EYXRlKXJldHVybiBPYmplY3QoZGF0ZV91dGlsX1siZm9ybWF0RGF0ZSJdKSh0aGlzLm1pbkRhdGUsdGhpcy5kYXRlRm9ybWF0KTtyZXR1cm4nJzt9LG1heFZpc2libGVEYXRlOmZ1bmN0aW9uIG1heFZpc2libGVEYXRlKCl7aWYodGhpcy5kYXRlVXNlcklucHV0Lm1heCE9PW51bGwpcmV0dXJuIHRoaXMuZGF0ZVVzZXJJbnB1dC5tYXg7aWYodGhpcy5tYXhEYXRlfHx0aGlzLm1pbkRhdGUpcmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJmb3JtYXREYXRlIl0pKHRoaXMubWF4RGF0ZXx8dGhpcy5taW5EYXRlLHRoaXMuZGF0ZUZvcm1hdCk7cmV0dXJuJyc7fSxtaW5WaXNpYmxlVGltZTpmdW5jdGlvbiBtaW5WaXNpYmxlVGltZSgpe2lmKHRoaXMudGltZVVzZXJJbnB1dC5taW4hPT1udWxsKXJldHVybiB0aGlzLnRpbWVVc2VySW5wdXQubWluO2lmKHRoaXMubWluRGF0ZSlyZXR1cm4gT2JqZWN0KGRhdGVfdXRpbF9bImZvcm1hdERhdGUiXSkodGhpcy5taW5EYXRlLHRoaXMudGltZUZvcm1hdCk7cmV0dXJuJyc7fSxtYXhWaXNpYmxlVGltZTpmdW5jdGlvbiBtYXhWaXNpYmxlVGltZSgpe2lmKHRoaXMudGltZVVzZXJJbnB1dC5tYXghPT1udWxsKXJldHVybiB0aGlzLnRpbWVVc2VySW5wdXQubWF4O2lmKHRoaXMubWF4RGF0ZXx8dGhpcy5taW5EYXRlKXJldHVybiBPYmplY3QoZGF0ZV91dGlsX1siZm9ybWF0RGF0ZSJdKSh0aGlzLm1heERhdGV8fHRoaXMubWluRGF0ZSx0aGlzLnRpbWVGb3JtYXQpO3JldHVybicnO30sdGltZUZvcm1hdDpmdW5jdGlvbiB0aW1lRm9ybWF0KCl7aWYodGhpcy5mb3JtYXQpe3JldHVybiBPYmplY3QoZGF0ZV91dGlsX1siZXh0cmFjdFRpbWVGb3JtYXQiXSkodGhpcy5mb3JtYXQpO31lbHNle3JldHVybidISDptbTpzcyc7fX0sZGF0ZUZvcm1hdDpmdW5jdGlvbiBkYXRlRm9ybWF0KCl7aWYodGhpcy5mb3JtYXQpe3JldHVybiBPYmplY3QoZGF0ZV91dGlsX1siZXh0cmFjdERhdGVGb3JtYXQiXSkodGhpcy5mb3JtYXQpO31lbHNle3JldHVybid5eXl5LU1NLWRkJzt9fSxlbmFibGVNb250aEFycm93OmZ1bmN0aW9uIGVuYWJsZU1vbnRoQXJyb3coKXt2YXIgbmV4dE1vbnRoPSh0aGlzLmxlZnRNb250aCsxKSUxMjt2YXIgeWVhck9mZnNldD10aGlzLmxlZnRNb250aCsxPj0xMj8xOjA7cmV0dXJuIHRoaXMudW5saW5rUGFuZWxzJiZuZXcgRGF0ZSh0aGlzLmxlZnRZZWFyK3llYXJPZmZzZXQsbmV4dE1vbnRoKTxuZXcgRGF0ZSh0aGlzLnJpZ2h0WWVhcix0aGlzLnJpZ2h0TW9udGgpO30sZW5hYmxlWWVhckFycm93OmZ1bmN0aW9uIGVuYWJsZVllYXJBcnJvdygpe3JldHVybiB0aGlzLnVubGlua1BhbmVscyYmdGhpcy5yaWdodFllYXIqMTIrdGhpcy5yaWdodE1vbnRoLSh0aGlzLmxlZnRZZWFyKjEyK3RoaXMubGVmdE1vbnRoKzEpPj0xMjt9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57cG9wcGVyQ2xhc3M6JycsdmFsdWU6W10sZGVmYXVsdFZhbHVlOm51bGwsZGVmYXVsdFRpbWU6bnVsbCxtaW5EYXRlOicnLG1heERhdGU6JycsbGVmdERhdGU6bmV3IERhdGUoKSxyaWdodERhdGU6T2JqZWN0KGRhdGVfdXRpbF9bIm5leHRNb250aCJdKShuZXcgRGF0ZSgpKSxyYW5nZVN0YXRlOntlbmREYXRlOm51bGwsc2VsZWN0aW5nOmZhbHNlLHJvdzpudWxsLGNvbHVtbjpudWxsfSxzaG93VGltZTpmYWxzZSxzaG9ydGN1dHM6JycsdmlzaWJsZTonJyxkaXNhYmxlZERhdGU6JycsY2VsbENsYXNzTmFtZTonJyxmaXJzdERheU9mV2Vlazo3LG1pblRpbWVQaWNrZXJWaXNpYmxlOmZhbHNlLG1heFRpbWVQaWNrZXJWaXNpYmxlOmZhbHNlLGZvcm1hdDonJyxhcnJvd0NvbnRyb2w6ZmFsc2UsdW5saW5rUGFuZWxzOmZhbHNlLGRhdGVVc2VySW5wdXQ6e21pbjpudWxsLG1heDpudWxsfSx0aW1lVXNlcklucHV0OnttaW46bnVsbCxtYXg6bnVsbH19O30sd2F0Y2g6e21pbkRhdGU6ZnVuY3Rpb24gbWluRGF0ZSh2YWwpe3ZhciBfdGhpcz10aGlzO3RoaXMuZGF0ZVVzZXJJbnB1dC5taW49bnVsbDt0aGlzLnRpbWVVc2VySW5wdXQubWluPW51bGw7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZihfdGhpcy4kcmVmcy5tYXhUaW1lUGlja2VyJiZfdGhpcy5tYXhEYXRlJiZfdGhpcy5tYXhEYXRlPF90aGlzLm1pbkRhdGUpe3ZhciBmb3JtYXQ9J0hIOm1tOnNzJztfdGhpcy4kcmVmcy5tYXhUaW1lUGlja2VyLnNlbGVjdGFibGVSYW5nZT1bW09iamVjdChkYXRlX3V0aWxfWyJwYXJzZURhdGUiXSkoT2JqZWN0KGRhdGVfdXRpbF9bImZvcm1hdERhdGUiXSkoX3RoaXMubWluRGF0ZSxmb3JtYXQpLGZvcm1hdCksT2JqZWN0KGRhdGVfdXRpbF9bInBhcnNlRGF0ZSJdKSgnMjM6NTk6NTknLGZvcm1hdCldXTt9fSk7aWYodmFsJiZ0aGlzLiRyZWZzLm1pblRpbWVQaWNrZXIpe3RoaXMuJHJlZnMubWluVGltZVBpY2tlci5kYXRlPXZhbDt0aGlzLiRyZWZzLm1pblRpbWVQaWNrZXIudmFsdWU9dmFsO319LG1heERhdGU6ZnVuY3Rpb24gbWF4RGF0ZSh2YWwpe3RoaXMuZGF0ZVVzZXJJbnB1dC5tYXg9bnVsbDt0aGlzLnRpbWVVc2VySW5wdXQubWF4PW51bGw7aWYodmFsJiZ0aGlzLiRyZWZzLm1heFRpbWVQaWNrZXIpe3RoaXMuJHJlZnMubWF4VGltZVBpY2tlci5kYXRlPXZhbDt0aGlzLiRyZWZzLm1heFRpbWVQaWNrZXIudmFsdWU9dmFsO319LG1pblRpbWVQaWNrZXJWaXNpYmxlOmZ1bmN0aW9uIG1pblRpbWVQaWNrZXJWaXNpYmxlKHZhbCl7dmFyIF90aGlzMj10aGlzO2lmKHZhbCl7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpczIuJHJlZnMubWluVGltZVBpY2tlci5kYXRlPV90aGlzMi5taW5EYXRlO190aGlzMi4kcmVmcy5taW5UaW1lUGlja2VyLnZhbHVlPV90aGlzMi5taW5EYXRlO190aGlzMi4kcmVmcy5taW5UaW1lUGlja2VyLmFkanVzdFNwaW5uZXJzKCk7fSk7fX0sbWF4VGltZVBpY2tlclZpc2libGU6ZnVuY3Rpb24gbWF4VGltZVBpY2tlclZpc2libGUodmFsKXt2YXIgX3RoaXMzPXRoaXM7aWYodmFsKXt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzMy4kcmVmcy5tYXhUaW1lUGlja2VyLmRhdGU9X3RoaXMzLm1heERhdGU7X3RoaXMzLiRyZWZzLm1heFRpbWVQaWNrZXIudmFsdWU9X3RoaXMzLm1heERhdGU7X3RoaXMzLiRyZWZzLm1heFRpbWVQaWNrZXIuYWRqdXN0U3Bpbm5lcnMoKTt9KTt9fSx2YWx1ZTpmdW5jdGlvbiB2YWx1ZShuZXdWYWwpe2lmKCFuZXdWYWwpe3RoaXMubWluRGF0ZT1udWxsO3RoaXMubWF4RGF0ZT1udWxsO31lbHNlIGlmKEFycmF5LmlzQXJyYXkobmV3VmFsKSl7dGhpcy5taW5EYXRlPU9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkobmV3VmFsWzBdKT9uZXcgRGF0ZShuZXdWYWxbMF0pOm51bGw7dGhpcy5tYXhEYXRlPU9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkobmV3VmFsWzFdKT9uZXcgRGF0ZShuZXdWYWxbMV0pOm51bGw7aWYodGhpcy5taW5EYXRlKXt0aGlzLmxlZnREYXRlPXRoaXMubWluRGF0ZTtpZih0aGlzLnVubGlua1BhbmVscyYmdGhpcy5tYXhEYXRlKXt2YXIgbWluRGF0ZVllYXI9dGhpcy5taW5EYXRlLmdldEZ1bGxZZWFyKCk7dmFyIG1pbkRhdGVNb250aD10aGlzLm1pbkRhdGUuZ2V0TW9udGgoKTt2YXIgbWF4RGF0ZVllYXI9dGhpcy5tYXhEYXRlLmdldEZ1bGxZZWFyKCk7dmFyIG1heERhdGVNb250aD10aGlzLm1heERhdGUuZ2V0TW9udGgoKTt0aGlzLnJpZ2h0RGF0ZT1taW5EYXRlWWVhcj09PW1heERhdGVZZWFyJiZtaW5EYXRlTW9udGg9PT1tYXhEYXRlTW9udGg/T2JqZWN0KGRhdGVfdXRpbF9bIm5leHRNb250aCJdKSh0aGlzLm1heERhdGUpOnRoaXMubWF4RGF0ZTt9ZWxzZXt0aGlzLnJpZ2h0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKHRoaXMubGVmdERhdGUpO319ZWxzZXt0aGlzLmxlZnREYXRlPWRhdGVfcmFuZ2V2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19jYWxjRGVmYXVsdFZhbHVlKHRoaXMuZGVmYXVsdFZhbHVlKVswXTt0aGlzLnJpZ2h0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKHRoaXMubGVmdERhdGUpO319fSxkZWZhdWx0VmFsdWU6ZnVuY3Rpb24gZGVmYXVsdFZhbHVlKHZhbCl7aWYoIUFycmF5LmlzQXJyYXkodGhpcy52YWx1ZSkpe3ZhciBfY2FsY0RlZmF1bHRWYWx1ZT1kYXRlX3JhbmdldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfY2FsY0RlZmF1bHRWYWx1ZSh2YWwpLGxlZnQ9X2NhbGNEZWZhdWx0VmFsdWVbMF0scmlnaHQ9X2NhbGNEZWZhdWx0VmFsdWVbMV07dGhpcy5sZWZ0RGF0ZT1sZWZ0O3RoaXMucmlnaHREYXRlPXZhbCYmdmFsWzFdJiZ0aGlzLnVubGlua1BhbmVscz9yaWdodDpPYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKHRoaXMubGVmdERhdGUpO319fSxtZXRob2RzOntoYW5kbGVDbGVhcjpmdW5jdGlvbiBoYW5kbGVDbGVhcigpe3RoaXMubWluRGF0ZT1udWxsO3RoaXMubWF4RGF0ZT1udWxsO3RoaXMubGVmdERhdGU9ZGF0ZV9yYW5nZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2NhbGNEZWZhdWx0VmFsdWUodGhpcy5kZWZhdWx0VmFsdWUpWzBdO3RoaXMucmlnaHREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0TW9udGgiXSkodGhpcy5sZWZ0RGF0ZSk7dGhpcy4kZW1pdCgncGljaycsbnVsbCk7fSxoYW5kbGVDaGFuZ2VSYW5nZTpmdW5jdGlvbiBoYW5kbGVDaGFuZ2VSYW5nZSh2YWwpe3RoaXMubWluRGF0ZT12YWwubWluRGF0ZTt0aGlzLm1heERhdGU9dmFsLm1heERhdGU7dGhpcy5yYW5nZVN0YXRlPXZhbC5yYW5nZVN0YXRlO30saGFuZGxlRGF0ZUlucHV0OmZ1bmN0aW9uIGhhbmRsZURhdGVJbnB1dCh2YWx1ZSx0eXBlKXt0aGlzLmRhdGVVc2VySW5wdXRbdHlwZV09dmFsdWU7aWYodmFsdWUubGVuZ3RoIT09dGhpcy5kYXRlRm9ybWF0Lmxlbmd0aClyZXR1cm47dmFyIHBhcnNlZFZhbHVlPU9iamVjdChkYXRlX3V0aWxfWyJwYXJzZURhdGUiXSkodmFsdWUsdGhpcy5kYXRlRm9ybWF0KTtpZihwYXJzZWRWYWx1ZSl7aWYodHlwZW9mIHRoaXMuZGlzYWJsZWREYXRlPT09J2Z1bmN0aW9uJyYmdGhpcy5kaXNhYmxlZERhdGUobmV3IERhdGUocGFyc2VkVmFsdWUpKSl7cmV0dXJuO31pZih0eXBlPT09J21pbicpe3RoaXMubWluRGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5RGF0ZSJdKSh0aGlzLm1pbkRhdGV8fG5ldyBEYXRlKCkscGFyc2VkVmFsdWUuZ2V0RnVsbFllYXIoKSxwYXJzZWRWYWx1ZS5nZXRNb250aCgpLHBhcnNlZFZhbHVlLmdldERhdGUoKSk7dGhpcy5sZWZ0RGF0ZT1uZXcgRGF0ZShwYXJzZWRWYWx1ZSk7aWYoIXRoaXMudW5saW5rUGFuZWxzKXt0aGlzLnJpZ2h0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKHRoaXMubGVmdERhdGUpO319ZWxzZXt0aGlzLm1heERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeURhdGUiXSkodGhpcy5tYXhEYXRlfHxuZXcgRGF0ZSgpLHBhcnNlZFZhbHVlLmdldEZ1bGxZZWFyKCkscGFyc2VkVmFsdWUuZ2V0TW9udGgoKSxwYXJzZWRWYWx1ZS5nZXREYXRlKCkpO3RoaXMucmlnaHREYXRlPW5ldyBEYXRlKHBhcnNlZFZhbHVlKTtpZighdGhpcy51bmxpbmtQYW5lbHMpe3RoaXMubGVmdERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bInByZXZNb250aCJdKShwYXJzZWRWYWx1ZSk7fX19fSxoYW5kbGVEYXRlQ2hhbmdlOmZ1bmN0aW9uIGhhbmRsZURhdGVDaGFuZ2UodmFsdWUsdHlwZSl7dmFyIHBhcnNlZFZhbHVlPU9iamVjdChkYXRlX3V0aWxfWyJwYXJzZURhdGUiXSkodmFsdWUsdGhpcy5kYXRlRm9ybWF0KTtpZihwYXJzZWRWYWx1ZSl7aWYodHlwZT09PSdtaW4nKXt0aGlzLm1pbkRhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeURhdGUiXSkodGhpcy5taW5EYXRlLHBhcnNlZFZhbHVlLmdldEZ1bGxZZWFyKCkscGFyc2VkVmFsdWUuZ2V0TW9udGgoKSxwYXJzZWRWYWx1ZS5nZXREYXRlKCkpO2lmKHRoaXMubWluRGF0ZT50aGlzLm1heERhdGUpe3RoaXMubWF4RGF0ZT10aGlzLm1pbkRhdGU7fX1lbHNle3RoaXMubWF4RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5RGF0ZSJdKSh0aGlzLm1heERhdGUscGFyc2VkVmFsdWUuZ2V0RnVsbFllYXIoKSxwYXJzZWRWYWx1ZS5nZXRNb250aCgpLHBhcnNlZFZhbHVlLmdldERhdGUoKSk7aWYodGhpcy5tYXhEYXRlPHRoaXMubWluRGF0ZSl7dGhpcy5taW5EYXRlPXRoaXMubWF4RGF0ZTt9fX19LGhhbmRsZVRpbWVJbnB1dDpmdW5jdGlvbiBoYW5kbGVUaW1lSW5wdXQodmFsdWUsdHlwZSl7dmFyIF90aGlzND10aGlzO3RoaXMudGltZVVzZXJJbnB1dFt0eXBlXT12YWx1ZTtpZih2YWx1ZS5sZW5ndGghPT10aGlzLnRpbWVGb3JtYXQubGVuZ3RoKXJldHVybjt2YXIgcGFyc2VkVmFsdWU9T2JqZWN0KGRhdGVfdXRpbF9bInBhcnNlRGF0ZSJdKSh2YWx1ZSx0aGlzLnRpbWVGb3JtYXQpO2lmKHBhcnNlZFZhbHVlKXtpZih0eXBlPT09J21pbicpe3RoaXMubWluRGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5VGltZSJdKSh0aGlzLm1pbkRhdGUscGFyc2VkVmFsdWUuZ2V0SG91cnMoKSxwYXJzZWRWYWx1ZS5nZXRNaW51dGVzKCkscGFyc2VkVmFsdWUuZ2V0U2Vjb25kcygpKTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbihfKXtyZXR1cm4gX3RoaXM0LiRyZWZzLm1pblRpbWVQaWNrZXIuYWRqdXN0U3Bpbm5lcnMoKTt9KTt9ZWxzZXt0aGlzLm1heERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeVRpbWUiXSkodGhpcy5tYXhEYXRlLHBhcnNlZFZhbHVlLmdldEhvdXJzKCkscGFyc2VkVmFsdWUuZ2V0TWludXRlcygpLHBhcnNlZFZhbHVlLmdldFNlY29uZHMoKSk7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oXyl7cmV0dXJuIF90aGlzNC4kcmVmcy5tYXhUaW1lUGlja2VyLmFkanVzdFNwaW5uZXJzKCk7fSk7fX19LGhhbmRsZVRpbWVDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlVGltZUNoYW5nZSh2YWx1ZSx0eXBlKXt2YXIgcGFyc2VkVmFsdWU9T2JqZWN0KGRhdGVfdXRpbF9bInBhcnNlRGF0ZSJdKSh2YWx1ZSx0aGlzLnRpbWVGb3JtYXQpO2lmKHBhcnNlZFZhbHVlKXtpZih0eXBlPT09J21pbicpe3RoaXMubWluRGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5VGltZSJdKSh0aGlzLm1pbkRhdGUscGFyc2VkVmFsdWUuZ2V0SG91cnMoKSxwYXJzZWRWYWx1ZS5nZXRNaW51dGVzKCkscGFyc2VkVmFsdWUuZ2V0U2Vjb25kcygpKTtpZih0aGlzLm1pbkRhdGU+dGhpcy5tYXhEYXRlKXt0aGlzLm1heERhdGU9dGhpcy5taW5EYXRlO310aGlzLiRyZWZzLm1pblRpbWVQaWNrZXIudmFsdWU9dGhpcy5taW5EYXRlO3RoaXMubWluVGltZVBpY2tlclZpc2libGU9ZmFsc2U7fWVsc2V7dGhpcy5tYXhEYXRlPU9iamVjdChkYXRlX3V0aWxfWyJtb2RpZnlUaW1lIl0pKHRoaXMubWF4RGF0ZSxwYXJzZWRWYWx1ZS5nZXRIb3VycygpLHBhcnNlZFZhbHVlLmdldE1pbnV0ZXMoKSxwYXJzZWRWYWx1ZS5nZXRTZWNvbmRzKCkpO2lmKHRoaXMubWF4RGF0ZTx0aGlzLm1pbkRhdGUpe3RoaXMubWluRGF0ZT10aGlzLm1heERhdGU7fXRoaXMuJHJlZnMubWF4VGltZVBpY2tlci52YWx1ZT10aGlzLm1pbkRhdGU7dGhpcy5tYXhUaW1lUGlja2VyVmlzaWJsZT1mYWxzZTt9fX0saGFuZGxlUmFuZ2VQaWNrOmZ1bmN0aW9uIGhhbmRsZVJhbmdlUGljayh2YWwpe3ZhciBfdGhpczU9dGhpczt2YXIgY2xvc2U9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzFdOnRydWU7dmFyIGRlZmF1bHRUaW1lPXRoaXMuZGVmYXVsdFRpbWV8fFtdO3ZhciBtaW5EYXRlPU9iamVjdChkYXRlX3V0aWxfWyJtb2RpZnlXaXRoVGltZVN0cmluZyJdKSh2YWwubWluRGF0ZSxkZWZhdWx0VGltZVswXSk7dmFyIG1heERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeVdpdGhUaW1lU3RyaW5nIl0pKHZhbC5tYXhEYXRlLGRlZmF1bHRUaW1lWzFdKTtpZih0aGlzLm1heERhdGU9PT1tYXhEYXRlJiZ0aGlzLm1pbkRhdGU9PT1taW5EYXRlKXtyZXR1cm47fXRoaXMub25QaWNrJiZ0aGlzLm9uUGljayh2YWwpO3RoaXMubWF4RGF0ZT1tYXhEYXRlO3RoaXMubWluRGF0ZT1taW5EYXRlOy8vIHdvcmthcm91bmQgZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL2VsZW1lbnQvaXNzdWVzLzc1MzksIHNob3VsZCByZW1vdmUgdGhpcyBibG9jayB3aGVuIHdlIGRvbid0IGhhdmUgdG8gY2FyZSBhYm91dCBDaHJvbWl1bSA1NSAtIDU3CnNldFRpbWVvdXQoZnVuY3Rpb24oKXtfdGhpczUubWF4RGF0ZT1tYXhEYXRlO190aGlzNS5taW5EYXRlPW1pbkRhdGU7fSwxMCk7aWYoIWNsb3NlfHx0aGlzLnNob3dUaW1lKXJldHVybjt0aGlzLmhhbmRsZUNvbmZpcm0oKTt9LGhhbmRsZVNob3J0Y3V0Q2xpY2s6ZnVuY3Rpb24gaGFuZGxlU2hvcnRjdXRDbGljayhzaG9ydGN1dCl7aWYoc2hvcnRjdXQub25DbGljayl7c2hvcnRjdXQub25DbGljayh0aGlzKTt9fSxoYW5kbGVNaW5UaW1lUGljazpmdW5jdGlvbiBoYW5kbGVNaW5UaW1lUGljayh2YWx1ZSx2aXNpYmxlLGZpcnN0KXt0aGlzLm1pbkRhdGU9dGhpcy5taW5EYXRlfHxuZXcgRGF0ZSgpO2lmKHZhbHVlKXt0aGlzLm1pbkRhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeVRpbWUiXSkodGhpcy5taW5EYXRlLHZhbHVlLmdldEhvdXJzKCksdmFsdWUuZ2V0TWludXRlcygpLHZhbHVlLmdldFNlY29uZHMoKSk7fWlmKCFmaXJzdCl7dGhpcy5taW5UaW1lUGlja2VyVmlzaWJsZT12aXNpYmxlO31pZighdGhpcy5tYXhEYXRlfHx0aGlzLm1heERhdGUmJnRoaXMubWF4RGF0ZS5nZXRUaW1lKCk8dGhpcy5taW5EYXRlLmdldFRpbWUoKSl7dGhpcy5tYXhEYXRlPW5ldyBEYXRlKHRoaXMubWluRGF0ZSk7fX0saGFuZGxlTWluVGltZUNsb3NlOmZ1bmN0aW9uIGhhbmRsZU1pblRpbWVDbG9zZSgpe3RoaXMubWluVGltZVBpY2tlclZpc2libGU9ZmFsc2U7fSxoYW5kbGVNYXhUaW1lUGljazpmdW5jdGlvbiBoYW5kbGVNYXhUaW1lUGljayh2YWx1ZSx2aXNpYmxlLGZpcnN0KXtpZih0aGlzLm1heERhdGUmJnZhbHVlKXt0aGlzLm1heERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeVRpbWUiXSkodGhpcy5tYXhEYXRlLHZhbHVlLmdldEhvdXJzKCksdmFsdWUuZ2V0TWludXRlcygpLHZhbHVlLmdldFNlY29uZHMoKSk7fWlmKCFmaXJzdCl7dGhpcy5tYXhUaW1lUGlja2VyVmlzaWJsZT12aXNpYmxlO31pZih0aGlzLm1heERhdGUmJnRoaXMubWluRGF0ZSYmdGhpcy5taW5EYXRlLmdldFRpbWUoKT50aGlzLm1heERhdGUuZ2V0VGltZSgpKXt0aGlzLm1pbkRhdGU9bmV3IERhdGUodGhpcy5tYXhEYXRlKTt9fSxoYW5kbGVNYXhUaW1lQ2xvc2U6ZnVuY3Rpb24gaGFuZGxlTWF4VGltZUNsb3NlKCl7dGhpcy5tYXhUaW1lUGlja2VyVmlzaWJsZT1mYWxzZTt9LC8vIGxlZnRQcmV2KiwgcmlnaHROZXh0KiBuZWVkIHRvIHRha2UgY2FyZSBvZiBgdW5saW5rUGFuZWxzYApsZWZ0UHJldlllYXI6ZnVuY3Rpb24gbGVmdFByZXZZZWFyKCl7dGhpcy5sZWZ0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sicHJldlllYXIiXSkodGhpcy5sZWZ0RGF0ZSk7aWYoIXRoaXMudW5saW5rUGFuZWxzKXt0aGlzLnJpZ2h0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKHRoaXMubGVmdERhdGUpO319LGxlZnRQcmV2TW9udGg6ZnVuY3Rpb24gbGVmdFByZXZNb250aCgpe3RoaXMubGVmdERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bInByZXZNb250aCJdKSh0aGlzLmxlZnREYXRlKTtpZighdGhpcy51bmxpbmtQYW5lbHMpe3RoaXMucmlnaHREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0TW9udGgiXSkodGhpcy5sZWZ0RGF0ZSk7fX0scmlnaHROZXh0WWVhcjpmdW5jdGlvbiByaWdodE5leHRZZWFyKCl7aWYoIXRoaXMudW5saW5rUGFuZWxzKXt0aGlzLmxlZnREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0WWVhciJdKSh0aGlzLmxlZnREYXRlKTt0aGlzLnJpZ2h0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKHRoaXMubGVmdERhdGUpO31lbHNle3RoaXMucmlnaHREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0WWVhciJdKSh0aGlzLnJpZ2h0RGF0ZSk7fX0scmlnaHROZXh0TW9udGg6ZnVuY3Rpb24gcmlnaHROZXh0TW9udGgoKXtpZighdGhpcy51bmxpbmtQYW5lbHMpe3RoaXMubGVmdERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm5leHRNb250aCJdKSh0aGlzLmxlZnREYXRlKTt0aGlzLnJpZ2h0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKHRoaXMubGVmdERhdGUpO31lbHNle3RoaXMucmlnaHREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0TW9udGgiXSkodGhpcy5yaWdodERhdGUpO319LC8vIGxlZnROZXh0KiwgcmlnaHRQcmV2KiBhcmUgY2FsbGVkIHdoZW4gYHVubGlua1BhbmVsc2AgaXMgdHJ1ZQpsZWZ0TmV4dFllYXI6ZnVuY3Rpb24gbGVmdE5leHRZZWFyKCl7dGhpcy5sZWZ0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dFllYXIiXSkodGhpcy5sZWZ0RGF0ZSk7fSxsZWZ0TmV4dE1vbnRoOmZ1bmN0aW9uIGxlZnROZXh0TW9udGgoKXt0aGlzLmxlZnREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0TW9udGgiXSkodGhpcy5sZWZ0RGF0ZSk7fSxyaWdodFByZXZZZWFyOmZ1bmN0aW9uIHJpZ2h0UHJldlllYXIoKXt0aGlzLnJpZ2h0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sicHJldlllYXIiXSkodGhpcy5yaWdodERhdGUpO30scmlnaHRQcmV2TW9udGg6ZnVuY3Rpb24gcmlnaHRQcmV2TW9udGgoKXt0aGlzLnJpZ2h0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sicHJldk1vbnRoIl0pKHRoaXMucmlnaHREYXRlKTt9LGhhbmRsZUNvbmZpcm06ZnVuY3Rpb24gaGFuZGxlQ29uZmlybSgpe3ZhciB2aXNpYmxlPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1swXTpmYWxzZTtpZih0aGlzLmlzVmFsaWRWYWx1ZShbdGhpcy5taW5EYXRlLHRoaXMubWF4RGF0ZV0pKXt0aGlzLiRlbWl0KCdwaWNrJyxbdGhpcy5taW5EYXRlLHRoaXMubWF4RGF0ZV0sdmlzaWJsZSk7fX0saXNWYWxpZFZhbHVlOmZ1bmN0aW9uIGlzVmFsaWRWYWx1ZSh2YWx1ZSl7cmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpJiZ2YWx1ZSYmdmFsdWVbMF0mJnZhbHVlWzFdJiZPYmplY3QoZGF0ZV91dGlsX1siaXNEYXRlIl0pKHZhbHVlWzBdKSYmT2JqZWN0KGRhdGVfdXRpbF9bImlzRGF0ZSJdKSh2YWx1ZVsxXSkmJnZhbHVlWzBdLmdldFRpbWUoKTw9dmFsdWVbMV0uZ2V0VGltZSgpJiYodHlwZW9mIHRoaXMuZGlzYWJsZWREYXRlPT09J2Z1bmN0aW9uJz8hdGhpcy5kaXNhYmxlZERhdGUodmFsdWVbMF0pJiYhdGhpcy5kaXNhYmxlZERhdGUodmFsdWVbMV0pOnRydWUpO30scmVzZXRWaWV3OmZ1bmN0aW9uIHJlc2V0Vmlldygpey8vIE5PVEU6IHRoaXMgaXMgYSBoYWNrIHRvIHJlc2V0IHttaW4sIG1heH1EYXRlIG9uIHBpY2tlciBvcGVuLgovLyBUT0RPOiBjb3JyZWN0IHdheSBvZiBkb2luZyBzbyBpcyB0byByZWZhY3RvciB7bWluLCBtYXh9RGF0ZSB0byBiZSBkZXBlbmRlbnQgb24gdmFsdWUgYW5kIGludGVybmFsIHNlbGVjdGlvbiBzdGF0ZQovLyAgICAgICBhbiBhbHRlcm5hdGl2ZSB3b3VsZCBiZSByZXNldFZpZXcgd2hlbmV2ZXIgcGlja2VyIGJlY29tZXMgdmlzaWJsZSwgc2hvdWxkIGFsc28gaW52ZXN0aWdhdGUgZGF0ZS1wYW5lbCdzIHJlc2V0VmlldwppZih0aGlzLm1pbkRhdGUmJnRoaXMubWF4RGF0ZT09bnVsbCl0aGlzLnJhbmdlU3RhdGUuc2VsZWN0aW5nPWZhbHNlO3RoaXMubWluRGF0ZT10aGlzLnZhbHVlJiZPYmplY3QoZGF0ZV91dGlsX1siaXNEYXRlIl0pKHRoaXMudmFsdWVbMF0pP25ldyBEYXRlKHRoaXMudmFsdWVbMF0pOm51bGw7dGhpcy5tYXhEYXRlPXRoaXMudmFsdWUmJk9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkodGhpcy52YWx1ZVswXSk/bmV3IERhdGUodGhpcy52YWx1ZVsxXSk6bnVsbDt9fSxjb21wb25lbnRzOntUaW1lUGlja2VyOnBhbmVsX3RpbWUsRGF0ZVRhYmxlOmRhdGVfdGFibGUsRWxJbnB1dDppbnB1dF9kZWZhdWx0LmEsRWxCdXR0b246YnV0dG9uX2RlZmF1bHQuYX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL2RhdGUtcmFuZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhbmVsX2RhdGVfcmFuZ2V2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189ZGF0ZV9yYW5nZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9kYXRlLXJhbmdlLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGRhdGVfcmFuZ2VfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYW5lbF9kYXRlX3JhbmdldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLGRhdGVfcmFuZ2V2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yNjUyODQ5YV9yZW5kZXIsZGF0ZV9yYW5nZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzI2NTI4NDlhX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgZGF0ZV9yYW5nZV9hcGk7fWRhdGVfcmFuZ2VfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGFuZWwvZGF0ZS1yYW5nZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZGF0ZV9yYW5nZT1kYXRlX3JhbmdlX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL21vbnRoLXJhbmdlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mMjY0NWZiOCYKdmFyIG1vbnRoX3JhbmdldnVlX3R5cGVfdGVtcGxhdGVfaWRfZjI2NDVmYjhfcmVuZGVyPWZ1bmN0aW9uIG1vbnRoX3JhbmdldnVlX3R5cGVfdGVtcGxhdGVfaWRfZjI2NDVmYjhfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJ0cmFuc2l0aW9uIix7YXR0cnM6e25hbWU6ImVsLXpvb20taW4tdG9wIn0sb246eyJhZnRlci1sZWF2ZSI6ZnVuY3Rpb24gYWZ0ZXJMZWF2ZSgkZXZlbnQpe192bS4kZW1pdCgiZG9kZXN0cm95Iik7fX19LFtfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUsZXhwcmVzc2lvbjoidmlzaWJsZSJ9XSxzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsIGVsLWRhdGUtcmFuZ2UtcGlja2VyIGVsLXBvcHBlciIsY2xhc3M6W3siaGFzLXNpZGViYXIiOl92bS4kc2xvdHMuc2lkZWJhcnx8X3ZtLnNob3J0Y3V0c30sX3ZtLnBvcHBlckNsYXNzXX0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19ib2R5LXdyYXBwZXIifSxbX3ZtLl90KCJzaWRlYmFyIiksX3ZtLnNob3J0Y3V0cz9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9fc2lkZWJhciJ9LF92bS5fbChfdm0uc2hvcnRjdXRzLGZ1bmN0aW9uKHNob3J0Y3V0LGtleSl7cmV0dXJuIF9jKCJidXR0b24iLHtrZXk6a2V5LHN0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX3Nob3J0Y3V0IixhdHRyczp7dHlwZToiYnV0dG9uIn0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLmhhbmRsZVNob3J0Y3V0Q2xpY2soc2hvcnRjdXQpO319fSxbX3ZtLl92KF92bS5fcyhzaG9ydGN1dC50ZXh0KSldKTt9KSwwKTpfdm0uX2UoKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9fYm9keSJ9LFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9fY29udGVudCBlbC1kYXRlLXJhbmdlLXBpY2tlcl9fY29udGVudCBpcy1sZWZ0In0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtZGF0ZS1yYW5nZS1waWNrZXJfX2hlYWRlciJ9LFtfYygiYnV0dG9uIix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9faWNvbi1idG4gZWwtaWNvbi1kLWFycm93LWxlZnQiLGF0dHJzOnt0eXBlOiJidXR0b24ifSxvbjp7Y2xpY2s6X3ZtLmxlZnRQcmV2WWVhcn19KSxfdm0udW5saW5rUGFuZWxzP19jKCJidXR0b24iLHtzdGF0aWNDbGFzczoiZWwtcGlja2VyLXBhbmVsX19pY29uLWJ0biBlbC1pY29uLWQtYXJyb3ctcmlnaHQiLGNsYXNzOnsiaXMtZGlzYWJsZWQiOiFfdm0uZW5hYmxlWWVhckFycm93fSxhdHRyczp7dHlwZToiYnV0dG9uIixkaXNhYmxlZDohX3ZtLmVuYWJsZVllYXJBcnJvd30sb246e2NsaWNrOl92bS5sZWZ0TmV4dFllYXJ9fSk6X3ZtLl9lKCksX2MoImRpdiIsW192bS5fdihfdm0uX3MoX3ZtLmxlZnRMYWJlbCkpXSldKSxfYygibW9udGgtdGFibGUiLHthdHRyczp7InNlbGVjdGlvbi1tb2RlIjoicmFuZ2UiLGRhdGU6X3ZtLmxlZnREYXRlLCJkZWZhdWx0LXZhbHVlIjpfdm0uZGVmYXVsdFZhbHVlLCJtaW4tZGF0ZSI6X3ZtLm1pbkRhdGUsIm1heC1kYXRlIjpfdm0ubWF4RGF0ZSwicmFuZ2Utc3RhdGUiOl92bS5yYW5nZVN0YXRlLCJkaXNhYmxlZC1kYXRlIjpfdm0uZGlzYWJsZWREYXRlfSxvbjp7Y2hhbmdlcmFuZ2U6X3ZtLmhhbmRsZUNoYW5nZVJhbmdlLHBpY2s6X3ZtLmhhbmRsZVJhbmdlUGlja319KV0sMSksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2NvbnRlbnQgZWwtZGF0ZS1yYW5nZS1waWNrZXJfX2NvbnRlbnQgaXMtcmlnaHQifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1kYXRlLXJhbmdlLXBpY2tlcl9faGVhZGVyIn0sW192bS51bmxpbmtQYW5lbHM/X2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC1waWNrZXItcGFuZWxfX2ljb24tYnRuIGVsLWljb24tZC1hcnJvdy1sZWZ0IixjbGFzczp7ImlzLWRpc2FibGVkIjohX3ZtLmVuYWJsZVllYXJBcnJvd30sYXR0cnM6e3R5cGU6ImJ1dHRvbiIsZGlzYWJsZWQ6IV92bS5lbmFibGVZZWFyQXJyb3d9LG9uOntjbGljazpfdm0ucmlnaHRQcmV2WWVhcn19KTpfdm0uX2UoKSxfYygiYnV0dG9uIix7c3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbF9faWNvbi1idG4gZWwtaWNvbi1kLWFycm93LXJpZ2h0IixhdHRyczp7dHlwZToiYnV0dG9uIn0sb246e2NsaWNrOl92bS5yaWdodE5leHRZZWFyfX0pLF9jKCJkaXYiLFtfdm0uX3YoX3ZtLl9zKF92bS5yaWdodExhYmVsKSldKV0pLF9jKCJtb250aC10YWJsZSIse2F0dHJzOnsic2VsZWN0aW9uLW1vZGUiOiJyYW5nZSIsZGF0ZTpfdm0ucmlnaHREYXRlLCJkZWZhdWx0LXZhbHVlIjpfdm0uZGVmYXVsdFZhbHVlLCJtaW4tZGF0ZSI6X3ZtLm1pbkRhdGUsIm1heC1kYXRlIjpfdm0ubWF4RGF0ZSwicmFuZ2Utc3RhdGUiOl92bS5yYW5nZVN0YXRlLCJkaXNhYmxlZC1kYXRlIjpfdm0uZGlzYWJsZWREYXRlfSxvbjp7Y2hhbmdlcmFuZ2U6X3ZtLmhhbmRsZUNoYW5nZVJhbmdlLHBpY2s6X3ZtLmhhbmRsZVJhbmdlUGlja319KV0sMSldKV0sMildKV0pO307dmFyIG1vbnRoX3JhbmdldnVlX3R5cGVfdGVtcGxhdGVfaWRfZjI2NDVmYjhfc3RhdGljUmVuZGVyRm5zPVtdO21vbnRoX3JhbmdldnVlX3R5cGVfdGVtcGxhdGVfaWRfZjI2NDVmYjhfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9tb250aC1yYW5nZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZjI2NDVmYjgmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9tb250aC1yYW5nZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBtb250aF9yYW5nZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2NhbGNEZWZhdWx0VmFsdWU9ZnVuY3Rpb24gY2FsY0RlZmF1bHRWYWx1ZShkZWZhdWx0VmFsdWUpe2lmKEFycmF5LmlzQXJyYXkoZGVmYXVsdFZhbHVlKSl7cmV0dXJuW25ldyBEYXRlKGRlZmF1bHRWYWx1ZVswXSksbmV3IERhdGUoZGVmYXVsdFZhbHVlWzFdKV07fWVsc2UgaWYoZGVmYXVsdFZhbHVlKXtyZXR1cm5bbmV3IERhdGUoZGVmYXVsdFZhbHVlKSxPYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKG5ldyBEYXRlKGRlZmF1bHRWYWx1ZSkpXTt9ZWxzZXtyZXR1cm5bbmV3IERhdGUoKSxPYmplY3QoZGF0ZV91dGlsX1sibmV4dE1vbnRoIl0pKG5ldyBEYXRlKCkpXTt9fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIG1vbnRoX3JhbmdldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXttaXhpbnM6W2xvY2FsZV9kZWZhdWx0LmFdLGRpcmVjdGl2ZXM6e0NsaWNrb3V0c2lkZTpjbGlja291dHNpZGVfZGVmYXVsdC5hfSxjb21wdXRlZDp7YnRuRGlzYWJsZWQ6ZnVuY3Rpb24gYnRuRGlzYWJsZWQoKXtyZXR1cm4hKHRoaXMubWluRGF0ZSYmdGhpcy5tYXhEYXRlJiYhdGhpcy5zZWxlY3RpbmcmJnRoaXMuaXNWYWxpZFZhbHVlKFt0aGlzLm1pbkRhdGUsdGhpcy5tYXhEYXRlXSkpO30sbGVmdExhYmVsOmZ1bmN0aW9uIGxlZnRMYWJlbCgpe3JldHVybiB0aGlzLmxlZnREYXRlLmdldEZ1bGxZZWFyKCkrJyAnK3RoaXMudCgnZWwuZGF0ZXBpY2tlci55ZWFyJyk7fSxyaWdodExhYmVsOmZ1bmN0aW9uIHJpZ2h0TGFiZWwoKXtyZXR1cm4gdGhpcy5yaWdodERhdGUuZ2V0RnVsbFllYXIoKSsnICcrdGhpcy50KCdlbC5kYXRlcGlja2VyLnllYXInKTt9LGxlZnRZZWFyOmZ1bmN0aW9uIGxlZnRZZWFyKCl7cmV0dXJuIHRoaXMubGVmdERhdGUuZ2V0RnVsbFllYXIoKTt9LHJpZ2h0WWVhcjpmdW5jdGlvbiByaWdodFllYXIoKXtyZXR1cm4gdGhpcy5yaWdodERhdGUuZ2V0RnVsbFllYXIoKT09PXRoaXMubGVmdERhdGUuZ2V0RnVsbFllYXIoKT90aGlzLmxlZnREYXRlLmdldEZ1bGxZZWFyKCkrMTp0aGlzLnJpZ2h0RGF0ZS5nZXRGdWxsWWVhcigpO30sZW5hYmxlWWVhckFycm93OmZ1bmN0aW9uIGVuYWJsZVllYXJBcnJvdygpe3JldHVybiB0aGlzLnVubGlua1BhbmVscyYmdGhpcy5yaWdodFllYXI+dGhpcy5sZWZ0WWVhcisxO319LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntwb3BwZXJDbGFzczonJyx2YWx1ZTpbXSxkZWZhdWx0VmFsdWU6bnVsbCxkZWZhdWx0VGltZTpudWxsLG1pbkRhdGU6JycsbWF4RGF0ZTonJyxsZWZ0RGF0ZTpuZXcgRGF0ZSgpLHJpZ2h0RGF0ZTpPYmplY3QoZGF0ZV91dGlsX1sibmV4dFllYXIiXSkobmV3IERhdGUoKSkscmFuZ2VTdGF0ZTp7ZW5kRGF0ZTpudWxsLHNlbGVjdGluZzpmYWxzZSxyb3c6bnVsbCxjb2x1bW46bnVsbH0sc2hvcnRjdXRzOicnLHZpc2libGU6JycsZGlzYWJsZWREYXRlOicnLGZvcm1hdDonJyxhcnJvd0NvbnRyb2w6ZmFsc2UsdW5saW5rUGFuZWxzOmZhbHNlfTt9LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZShuZXdWYWwpe2lmKCFuZXdWYWwpe3RoaXMubWluRGF0ZT1udWxsO3RoaXMubWF4RGF0ZT1udWxsO31lbHNlIGlmKEFycmF5LmlzQXJyYXkobmV3VmFsKSl7dGhpcy5taW5EYXRlPU9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkobmV3VmFsWzBdKT9uZXcgRGF0ZShuZXdWYWxbMF0pOm51bGw7dGhpcy5tYXhEYXRlPU9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkobmV3VmFsWzFdKT9uZXcgRGF0ZShuZXdWYWxbMV0pOm51bGw7aWYodGhpcy5taW5EYXRlKXt0aGlzLmxlZnREYXRlPXRoaXMubWluRGF0ZTtpZih0aGlzLnVubGlua1BhbmVscyYmdGhpcy5tYXhEYXRlKXt2YXIgbWluRGF0ZVllYXI9dGhpcy5taW5EYXRlLmdldEZ1bGxZZWFyKCk7dmFyIG1heERhdGVZZWFyPXRoaXMubWF4RGF0ZS5nZXRGdWxsWWVhcigpO3RoaXMucmlnaHREYXRlPW1pbkRhdGVZZWFyPT09bWF4RGF0ZVllYXI/T2JqZWN0KGRhdGVfdXRpbF9bIm5leHRZZWFyIl0pKHRoaXMubWF4RGF0ZSk6dGhpcy5tYXhEYXRlO31lbHNle3RoaXMucmlnaHREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0WWVhciJdKSh0aGlzLmxlZnREYXRlKTt9fWVsc2V7dGhpcy5sZWZ0RGF0ZT1tb250aF9yYW5nZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2NhbGNEZWZhdWx0VmFsdWUodGhpcy5kZWZhdWx0VmFsdWUpWzBdO3RoaXMucmlnaHREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0WWVhciJdKSh0aGlzLmxlZnREYXRlKTt9fX0sZGVmYXVsdFZhbHVlOmZ1bmN0aW9uIGRlZmF1bHRWYWx1ZSh2YWwpe2lmKCFBcnJheS5pc0FycmF5KHRoaXMudmFsdWUpKXt2YXIgX2NhbGNEZWZhdWx0VmFsdWU9bW9udGhfcmFuZ2V2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19jYWxjRGVmYXVsdFZhbHVlKHZhbCksbGVmdD1fY2FsY0RlZmF1bHRWYWx1ZVswXSxyaWdodD1fY2FsY0RlZmF1bHRWYWx1ZVsxXTt0aGlzLmxlZnREYXRlPWxlZnQ7dGhpcy5yaWdodERhdGU9dmFsJiZ2YWxbMV0mJmxlZnQuZ2V0RnVsbFllYXIoKSE9PXJpZ2h0LmdldEZ1bGxZZWFyKCkmJnRoaXMudW5saW5rUGFuZWxzP3JpZ2h0Ok9iamVjdChkYXRlX3V0aWxfWyJuZXh0WWVhciJdKSh0aGlzLmxlZnREYXRlKTt9fX0sbWV0aG9kczp7aGFuZGxlQ2xlYXI6ZnVuY3Rpb24gaGFuZGxlQ2xlYXIoKXt0aGlzLm1pbkRhdGU9bnVsbDt0aGlzLm1heERhdGU9bnVsbDt0aGlzLmxlZnREYXRlPW1vbnRoX3JhbmdldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfY2FsY0RlZmF1bHRWYWx1ZSh0aGlzLmRlZmF1bHRWYWx1ZSlbMF07dGhpcy5yaWdodERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm5leHRZZWFyIl0pKHRoaXMubGVmdERhdGUpO3RoaXMuJGVtaXQoJ3BpY2snLG51bGwpO30saGFuZGxlQ2hhbmdlUmFuZ2U6ZnVuY3Rpb24gaGFuZGxlQ2hhbmdlUmFuZ2UodmFsKXt0aGlzLm1pbkRhdGU9dmFsLm1pbkRhdGU7dGhpcy5tYXhEYXRlPXZhbC5tYXhEYXRlO3RoaXMucmFuZ2VTdGF0ZT12YWwucmFuZ2VTdGF0ZTt9LGhhbmRsZVJhbmdlUGljazpmdW5jdGlvbiBoYW5kbGVSYW5nZVBpY2sodmFsKXt2YXIgX3RoaXM9dGhpczt2YXIgY2xvc2U9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzFdOnRydWU7dmFyIGRlZmF1bHRUaW1lPXRoaXMuZGVmYXVsdFRpbWV8fFtdO3ZhciBtaW5EYXRlPU9iamVjdChkYXRlX3V0aWxfWyJtb2RpZnlXaXRoVGltZVN0cmluZyJdKSh2YWwubWluRGF0ZSxkZWZhdWx0VGltZVswXSk7dmFyIG1heERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm1vZGlmeVdpdGhUaW1lU3RyaW5nIl0pKHZhbC5tYXhEYXRlLGRlZmF1bHRUaW1lWzFdKTtpZih0aGlzLm1heERhdGU9PT1tYXhEYXRlJiZ0aGlzLm1pbkRhdGU9PT1taW5EYXRlKXtyZXR1cm47fXRoaXMub25QaWNrJiZ0aGlzLm9uUGljayh2YWwpO3RoaXMubWF4RGF0ZT1tYXhEYXRlO3RoaXMubWluRGF0ZT1taW5EYXRlOy8vIHdvcmthcm91bmQgZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS9FbGVtZUZFL2VsZW1lbnQvaXNzdWVzLzc1MzksIHNob3VsZCByZW1vdmUgdGhpcyBibG9jayB3aGVuIHdlIGRvbid0IGhhdmUgdG8gY2FyZSBhYm91dCBDaHJvbWl1bSA1NSAtIDU3CnNldFRpbWVvdXQoZnVuY3Rpb24oKXtfdGhpcy5tYXhEYXRlPW1heERhdGU7X3RoaXMubWluRGF0ZT1taW5EYXRlO30sMTApO2lmKCFjbG9zZSlyZXR1cm47dGhpcy5oYW5kbGVDb25maXJtKCk7fSxoYW5kbGVTaG9ydGN1dENsaWNrOmZ1bmN0aW9uIGhhbmRsZVNob3J0Y3V0Q2xpY2soc2hvcnRjdXQpe2lmKHNob3J0Y3V0Lm9uQ2xpY2spe3Nob3J0Y3V0Lm9uQ2xpY2sodGhpcyk7fX0sLy8gbGVmdFByZXYqLCByaWdodE5leHQqIG5lZWQgdG8gdGFrZSBjYXJlIG9mIGB1bmxpbmtQYW5lbHNgCmxlZnRQcmV2WWVhcjpmdW5jdGlvbiBsZWZ0UHJldlllYXIoKXt0aGlzLmxlZnREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJwcmV2WWVhciJdKSh0aGlzLmxlZnREYXRlKTtpZighdGhpcy51bmxpbmtQYW5lbHMpe3RoaXMucmlnaHREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJwcmV2WWVhciJdKSh0aGlzLnJpZ2h0RGF0ZSk7fX0scmlnaHROZXh0WWVhcjpmdW5jdGlvbiByaWdodE5leHRZZWFyKCl7aWYoIXRoaXMudW5saW5rUGFuZWxzKXt0aGlzLmxlZnREYXRlPU9iamVjdChkYXRlX3V0aWxfWyJuZXh0WWVhciJdKSh0aGlzLmxlZnREYXRlKTt9dGhpcy5yaWdodERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bIm5leHRZZWFyIl0pKHRoaXMucmlnaHREYXRlKTt9LC8vIGxlZnROZXh0KiwgcmlnaHRQcmV2KiBhcmUgY2FsbGVkIHdoZW4gYHVubGlua1BhbmVsc2AgaXMgdHJ1ZQpsZWZ0TmV4dFllYXI6ZnVuY3Rpb24gbGVmdE5leHRZZWFyKCl7dGhpcy5sZWZ0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibmV4dFllYXIiXSkodGhpcy5sZWZ0RGF0ZSk7fSxyaWdodFByZXZZZWFyOmZ1bmN0aW9uIHJpZ2h0UHJldlllYXIoKXt0aGlzLnJpZ2h0RGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sicHJldlllYXIiXSkodGhpcy5yaWdodERhdGUpO30saGFuZGxlQ29uZmlybTpmdW5jdGlvbiBoYW5kbGVDb25maXJtKCl7dmFyIHZpc2libGU9YXJndW1lbnRzLmxlbmd0aD4wJiZhcmd1bWVudHNbMF0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzBdOmZhbHNlO2lmKHRoaXMuaXNWYWxpZFZhbHVlKFt0aGlzLm1pbkRhdGUsdGhpcy5tYXhEYXRlXSkpe3RoaXMuJGVtaXQoJ3BpY2snLFt0aGlzLm1pbkRhdGUsdGhpcy5tYXhEYXRlXSx2aXNpYmxlKTt9fSxpc1ZhbGlkVmFsdWU6ZnVuY3Rpb24gaXNWYWxpZFZhbHVlKHZhbHVlKXtyZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkmJnZhbHVlJiZ2YWx1ZVswXSYmdmFsdWVbMV0mJk9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkodmFsdWVbMF0pJiZPYmplY3QoZGF0ZV91dGlsX1siaXNEYXRlIl0pKHZhbHVlWzFdKSYmdmFsdWVbMF0uZ2V0VGltZSgpPD12YWx1ZVsxXS5nZXRUaW1lKCkmJih0eXBlb2YgdGhpcy5kaXNhYmxlZERhdGU9PT0nZnVuY3Rpb24nPyF0aGlzLmRpc2FibGVkRGF0ZSh2YWx1ZVswXSkmJiF0aGlzLmRpc2FibGVkRGF0ZSh2YWx1ZVsxXSk6dHJ1ZSk7fSxyZXNldFZpZXc6ZnVuY3Rpb24gcmVzZXRWaWV3KCl7Ly8gTk9URTogdGhpcyBpcyBhIGhhY2sgdG8gcmVzZXQge21pbiwgbWF4fURhdGUgb24gcGlja2VyIG9wZW4uCi8vIFRPRE86IGNvcnJlY3Qgd2F5IG9mIGRvaW5nIHNvIGlzIHRvIHJlZmFjdG9yIHttaW4sIG1heH1EYXRlIHRvIGJlIGRlcGVuZGVudCBvbiB2YWx1ZSBhbmQgaW50ZXJuYWwgc2VsZWN0aW9uIHN0YXRlCi8vICAgICAgIGFuIGFsdGVybmF0aXZlIHdvdWxkIGJlIHJlc2V0VmlldyB3aGVuZXZlciBwaWNrZXIgYmVjb21lcyB2aXNpYmxlLCBzaG91bGQgYWxzbyBpbnZlc3RpZ2F0ZSBkYXRlLXBhbmVsJ3MgcmVzZXRWaWV3CnRoaXMubWluRGF0ZT10aGlzLnZhbHVlJiZPYmplY3QoZGF0ZV91dGlsX1siaXNEYXRlIl0pKHRoaXMudmFsdWVbMF0pP25ldyBEYXRlKHRoaXMudmFsdWVbMF0pOm51bGw7dGhpcy5tYXhEYXRlPXRoaXMudmFsdWUmJk9iamVjdChkYXRlX3V0aWxfWyJpc0RhdGUiXSkodGhpcy52YWx1ZVswXSk/bmV3IERhdGUodGhpcy52YWx1ZVsxXSk6bnVsbDt9fSxjb21wb25lbnRzOntNb250aFRhYmxlOm1vbnRoX3RhYmxlLEVsSW5wdXQ6aW5wdXRfZGVmYXVsdC5hLEVsQnV0dG9uOmJ1dHRvbl9kZWZhdWx0LmF9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9tb250aC1yYW5nZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFuZWxfbW9udGhfcmFuZ2V2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bW9udGhfcmFuZ2V2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGFuZWwvbW9udGgtcmFuZ2UudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgbW9udGhfcmFuZ2VfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYW5lbF9tb250aF9yYW5nZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxtb250aF9yYW5nZXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2YyNjQ1ZmI4X3JlbmRlcixtb250aF9yYW5nZXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2YyNjQ1ZmI4X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgbW9udGhfcmFuZ2VfYXBpO31tb250aF9yYW5nZV9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC9tb250aC1yYW5nZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbW9udGhfcmFuZ2U9bW9udGhfcmFuZ2VfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGlja2VyL2RhdGUtcGlja2VyLmpzCnZhciBkYXRlX3BpY2tlcl9nZXRQYW5lbD1mdW5jdGlvbiBnZXRQYW5lbCh0eXBlKXtpZih0eXBlPT09J2RhdGVyYW5nZSd8fHR5cGU9PT0nZGF0ZXRpbWVyYW5nZScpe3JldHVybiBkYXRlX3JhbmdlO31lbHNlIGlmKHR5cGU9PT0nbW9udGhyYW5nZScpe3JldHVybiBtb250aF9yYW5nZTt9cmV0dXJuIHBhbmVsX2RhdGU7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGRhdGVfcGlja2VyPXttaXhpbnM6W3BpY2tlcl0sbmFtZTonRWxEYXRlUGlja2VyJyxwcm9wczp7dHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZGF0ZSd9LHRpbWVBcnJvd0NvbnRyb2w6Qm9vbGVhbn0sd2F0Y2g6e3R5cGU6ZnVuY3Rpb24gdHlwZShfdHlwZSl7aWYodGhpcy5waWNrZXIpe3RoaXMudW5tb3VudFBpY2tlcigpO3RoaXMucGFuZWw9ZGF0ZV9waWNrZXJfZ2V0UGFuZWwoX3R5cGUpO3RoaXMubW91bnRQaWNrZXIoKTt9ZWxzZXt0aGlzLnBhbmVsPWRhdGVfcGlja2VyX2dldFBhbmVsKF90eXBlKTt9fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy5wYW5lbD1kYXRlX3BpY2tlcl9nZXRQYW5lbCh0aGlzLnR5cGUpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9kYXRlX3BpY2tlci5pbnN0YWxsPWZ1bmN0aW9uIGluc3RhbGwoVnVlKXtWdWUuY29tcG9uZW50KGRhdGVfcGlja2VyLm5hbWUsZGF0ZV9waWNrZXIpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19kYXRlX3BpY2tlcj1kYXRlX3BpY2tlcjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC90aW1lLXNlbGVjdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NTFhYjkzMjAmCnZhciB0aW1lX3NlbGVjdHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzUxYWI5MzIwX3JlbmRlcj1mdW5jdGlvbiB0aW1lX3NlbGVjdHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzUxYWI5MzIwX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidHJhbnNpdGlvbiIse2F0dHJzOntuYW1lOiJlbC16b29tLWluLXRvcCJ9LG9uOnsiYmVmb3JlLWVudGVyIjpfdm0uaGFuZGxlTWVudUVudGVyLCJhZnRlci1sZWF2ZSI6ZnVuY3Rpb24gYWZ0ZXJMZWF2ZSgkZXZlbnQpe192bS4kZW1pdCgiZG9kZXN0cm95Iik7fX19LFtfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUsZXhwcmVzc2lvbjoidmlzaWJsZSJ9XSxyZWY6InBvcHBlciIsc3RhdGljQ2xhc3M6ImVsLXBpY2tlci1wYW5lbCB0aW1lLXNlbGVjdCBlbC1wb3BwZXIiLGNsYXNzOl92bS5wb3BwZXJDbGFzcyxzdHlsZTp7d2lkdGg6X3ZtLndpZHRoKyJweCJ9fSxbX2MoImVsLXNjcm9sbGJhciIse2F0dHJzOntub3Jlc2l6ZToiIiwid3JhcC1jbGFzcyI6ImVsLXBpY2tlci1wYW5lbF9fY29udGVudCJ9fSxfdm0uX2woX3ZtLml0ZW1zLGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBfYygiZGl2Iix7a2V5Oml0ZW0udmFsdWUsc3RhdGljQ2xhc3M6InRpbWUtc2VsZWN0LWl0ZW0iLGNsYXNzOntzZWxlY3RlZDpfdm0udmFsdWU9PT1pdGVtLnZhbHVlLGRpc2FibGVkOml0ZW0uZGlzYWJsZWQsZGVmYXVsdDppdGVtLnZhbHVlPT09X3ZtLmRlZmF1bHRWYWx1ZX0sYXR0cnM6e2Rpc2FibGVkOml0ZW0uZGlzYWJsZWR9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVDbGljayhpdGVtKTt9fX0sW192bS5fdihfdm0uX3MoaXRlbS52YWx1ZSkpXSk7fSksMCldLDEpXSk7fTt2YXIgdGltZV9zZWxlY3R2dWVfdHlwZV90ZW1wbGF0ZV9pZF81MWFiOTMyMF9zdGF0aWNSZW5kZXJGbnM9W107dGltZV9zZWxlY3R2dWVfdHlwZV90ZW1wbGF0ZV9pZF81MWFiOTMyMF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL3RpbWUtc2VsZWN0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01MWFiOTMyMCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL3RpbWUtc2VsZWN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIHBhcnNlVGltZT1mdW5jdGlvbiBwYXJzZVRpbWUodGltZSl7dmFyIHZhbHVlcz0odGltZXx8JycpLnNwbGl0KCc6Jyk7aWYodmFsdWVzLmxlbmd0aD49Mil7dmFyIGhvdXJzPXBhcnNlSW50KHZhbHVlc1swXSwxMCk7dmFyIG1pbnV0ZXM9cGFyc2VJbnQodmFsdWVzWzFdLDEwKTtyZXR1cm57aG91cnM6aG91cnMsbWludXRlczptaW51dGVzfTt9LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9yZXR1cm4gbnVsbDt9O3ZhciBjb21wYXJlVGltZT1mdW5jdGlvbiBjb21wYXJlVGltZSh0aW1lMSx0aW1lMil7dmFyIHZhbHVlMT1wYXJzZVRpbWUodGltZTEpO3ZhciB2YWx1ZTI9cGFyc2VUaW1lKHRpbWUyKTt2YXIgbWludXRlczE9dmFsdWUxLm1pbnV0ZXMrdmFsdWUxLmhvdXJzKjYwO3ZhciBtaW51dGVzMj12YWx1ZTIubWludXRlcyt2YWx1ZTIuaG91cnMqNjA7aWYobWludXRlczE9PT1taW51dGVzMil7cmV0dXJuIDA7fXJldHVybiBtaW51dGVzMT5taW51dGVzMj8xOi0xO307dmFyIGZvcm1hdFRpbWU9ZnVuY3Rpb24gZm9ybWF0VGltZSh0aW1lKXtyZXR1cm4odGltZS5ob3VyczwxMD8nMCcrdGltZS5ob3Vyczp0aW1lLmhvdXJzKSsnOicrKHRpbWUubWludXRlczwxMD8nMCcrdGltZS5taW51dGVzOnRpbWUubWludXRlcyk7fTt2YXIgbmV4dFRpbWU9ZnVuY3Rpb24gbmV4dFRpbWUodGltZSxzdGVwKXt2YXIgdGltZVZhbHVlPXBhcnNlVGltZSh0aW1lKTt2YXIgc3RlcFZhbHVlPXBhcnNlVGltZShzdGVwKTt2YXIgbmV4dD17aG91cnM6dGltZVZhbHVlLmhvdXJzLG1pbnV0ZXM6dGltZVZhbHVlLm1pbnV0ZXN9O25leHQubWludXRlcys9c3RlcFZhbHVlLm1pbnV0ZXM7bmV4dC5ob3Vycys9c3RlcFZhbHVlLmhvdXJzO25leHQuaG91cnMrPU1hdGguZmxvb3IobmV4dC5taW51dGVzLzYwKTtuZXh0Lm1pbnV0ZXM9bmV4dC5taW51dGVzJTYwO3JldHVybiBmb3JtYXRUaW1lKG5leHQpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0aW1lX3NlbGVjdHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17Y29tcG9uZW50czp7RWxTY3JvbGxiYXI6c2Nyb2xsYmFyX2RlZmF1bHQuYX0sd2F0Y2g6e3ZhbHVlOmZ1bmN0aW9uIHZhbHVlKHZhbCl7dmFyIF90aGlzPXRoaXM7aWYoIXZhbClyZXR1cm47dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuc2Nyb2xsVG9PcHRpb24oKTt9KTt9fSxtZXRob2RzOntoYW5kbGVDbGljazpmdW5jdGlvbiBoYW5kbGVDbGljayhpdGVtKXtpZighaXRlbS5kaXNhYmxlZCl7dGhpcy4kZW1pdCgncGljaycsaXRlbS52YWx1ZSk7fX0saGFuZGxlQ2xlYXI6ZnVuY3Rpb24gaGFuZGxlQ2xlYXIoKXt0aGlzLiRlbWl0KCdwaWNrJyxudWxsKTt9LHNjcm9sbFRvT3B0aW9uOmZ1bmN0aW9uIHNjcm9sbFRvT3B0aW9uKCl7dmFyIHNlbGVjdG9yPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1swXTonLnNlbGVjdGVkJzt2YXIgbWVudT10aGlzLiRyZWZzLnBvcHBlci5xdWVyeVNlbGVjdG9yKCcuZWwtcGlja2VyLXBhbmVsX19jb250ZW50Jyk7c2Nyb2xsX2ludG9fdmlld19kZWZhdWx0KCkobWVudSxtZW51LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpKTt9LGhhbmRsZU1lbnVFbnRlcjpmdW5jdGlvbiBoYW5kbGVNZW51RW50ZXIoKXt2YXIgX3RoaXMyPXRoaXM7dmFyIHNlbGVjdGVkPXRoaXMuaXRlbXMubWFwKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBpdGVtLnZhbHVlO30pLmluZGV4T2YodGhpcy52YWx1ZSkhPT0tMTt2YXIgaGFzRGVmYXVsdD10aGlzLml0ZW1zLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gaXRlbS52YWx1ZTt9KS5pbmRleE9mKHRoaXMuZGVmYXVsdFZhbHVlKSE9PS0xO3ZhciBvcHRpb249c2VsZWN0ZWQmJicuc2VsZWN0ZWQnfHxoYXNEZWZhdWx0JiYnLmRlZmF1bHQnfHwnLnRpbWUtc2VsZWN0LWl0ZW06bm90KC5kaXNhYmxlZCknO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7cmV0dXJuIF90aGlzMi5zY3JvbGxUb09wdGlvbihvcHRpb24pO30pO30sc2Nyb2xsRG93bjpmdW5jdGlvbiBzY3JvbGxEb3duKHN0ZXApe3ZhciBpdGVtcz10aGlzLml0ZW1zO3ZhciBsZW5ndGg9aXRlbXMubGVuZ3RoO3ZhciB0b3RhbD1pdGVtcy5sZW5ndGg7dmFyIGluZGV4PWl0ZW1zLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gaXRlbS52YWx1ZTt9KS5pbmRleE9mKHRoaXMudmFsdWUpO3doaWxlKHRvdGFsLS0pe2luZGV4PShpbmRleCtzdGVwK2xlbmd0aCklbGVuZ3RoO2lmKCFpdGVtc1tpbmRleF0uZGlzYWJsZWQpe3RoaXMuJGVtaXQoJ3BpY2snLGl0ZW1zW2luZGV4XS52YWx1ZSx0cnVlKTtyZXR1cm47fX19LGlzVmFsaWRWYWx1ZTpmdW5jdGlvbiBpc1ZhbGlkVmFsdWUoZGF0ZSl7cmV0dXJuIHRoaXMuaXRlbXMuZmlsdGVyKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiFpdGVtLmRpc2FibGVkO30pLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gaXRlbS52YWx1ZTt9KS5pbmRleE9mKGRhdGUpIT09LTE7fSxoYW5kbGVLZXlkb3duOmZ1bmN0aW9uIGhhbmRsZUtleWRvd24oZXZlbnQpe3ZhciBrZXlDb2RlPWV2ZW50LmtleUNvZGU7aWYoa2V5Q29kZT09PTM4fHxrZXlDb2RlPT09NDApe3ZhciBtYXBwaW5nPXs0MDoxLDM4Oi0xfTt2YXIgb2Zmc2V0PW1hcHBpbmdba2V5Q29kZS50b1N0cmluZygpXTt0aGlzLnNjcm9sbERvd24ob2Zmc2V0KTtldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm47fX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntwb3BwZXJDbGFzczonJyxzdGFydDonMDk6MDAnLGVuZDonMTg6MDAnLHN0ZXA6JzAwOjMwJyx2YWx1ZTonJyxkZWZhdWx0VmFsdWU6JycsdmlzaWJsZTpmYWxzZSxtaW5UaW1lOicnLG1heFRpbWU6Jycsd2lkdGg6MH07fSxjb21wdXRlZDp7aXRlbXM6ZnVuY3Rpb24gaXRlbXMoKXt2YXIgc3RhcnQ9dGhpcy5zdGFydDt2YXIgZW5kPXRoaXMuZW5kO3ZhciBzdGVwPXRoaXMuc3RlcDt2YXIgcmVzdWx0PVtdO2lmKHN0YXJ0JiZlbmQmJnN0ZXApe3ZhciBjdXJyZW50PXN0YXJ0O3doaWxlKGNvbXBhcmVUaW1lKGN1cnJlbnQsZW5kKTw9MCl7cmVzdWx0LnB1c2goe3ZhbHVlOmN1cnJlbnQsZGlzYWJsZWQ6Y29tcGFyZVRpbWUoY3VycmVudCx0aGlzLm1pblRpbWV8fCctMTotMScpPD0wfHxjb21wYXJlVGltZShjdXJyZW50LHRoaXMubWF4VGltZXx8JzEwMDoxMDAnKT49MH0pO2N1cnJlbnQ9bmV4dFRpbWUoY3VycmVudCxzdGVwKTt9fXJldHVybiByZXN1bHQ7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL3RpbWUtc2VsZWN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYW5lbF90aW1lX3NlbGVjdHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz10aW1lX3NlbGVjdHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC90aW1lLXNlbGVjdC52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciB0aW1lX3NlbGVjdF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhbmVsX3RpbWVfc2VsZWN0dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLHRpbWVfc2VsZWN0dnVlX3R5cGVfdGVtcGxhdGVfaWRfNTFhYjkzMjBfcmVuZGVyLHRpbWVfc2VsZWN0dnVlX3R5cGVfdGVtcGxhdGVfaWRfNTFhYjkzMjBfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciB0aW1lX3NlbGVjdF9hcGk7fXRpbWVfc2VsZWN0X2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL3RpbWUtc2VsZWN0LnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0aW1lX3NlbGVjdD10aW1lX3NlbGVjdF9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9waWNrZXIvdGltZS1zZWxlY3QuanMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwaWNrZXJfdGltZV9zZWxlY3Q9e21peGluczpbcGlja2VyXSxuYW1lOidFbFRpbWVTZWxlY3QnLGNvbXBvbmVudE5hbWU6J0VsVGltZVNlbGVjdCcscHJvcHM6e3R5cGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3RpbWUtc2VsZWN0J319LGJlZm9yZUNyZWF0ZTpmdW5jdGlvbiBiZWZvcmVDcmVhdGUoKXt0aGlzLnBhbmVsPXRpbWVfc2VsZWN0O319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGltZS1zZWxlY3QvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9waWNrZXJfdGltZV9zZWxlY3QuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQocGlja2VyX3RpbWVfc2VsZWN0Lm5hbWUscGlja2VyX3RpbWVfc2VsZWN0KTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfdGltZV9zZWxlY3Q9cGlja2VyX3RpbWVfc2VsZWN0Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL3RpbWUtcmFuZ2UudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWZiMjg2NjBlJgp2YXIgdGltZV9yYW5nZXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2ZiMjg2NjBlX3JlbmRlcj1mdW5jdGlvbiB0aW1lX3JhbmdldnVlX3R5cGVfdGVtcGxhdGVfaWRfZmIyODY2MGVfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJ0cmFuc2l0aW9uIix7YXR0cnM6e25hbWU6ImVsLXpvb20taW4tdG9wIn0sb246eyJhZnRlci1sZWF2ZSI6ZnVuY3Rpb24gYWZ0ZXJMZWF2ZSgkZXZlbnQpe192bS4kZW1pdCgiZG9kZXN0cm95Iik7fX19LFtfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUsZXhwcmVzc2lvbjoidmlzaWJsZSJ9XSxzdGF0aWNDbGFzczoiZWwtdGltZS1yYW5nZS1waWNrZXIgZWwtcGlja2VyLXBhbmVsIGVsLXBvcHBlciIsY2xhc3M6X3ZtLnBvcHBlckNsYXNzfSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10aW1lLXJhbmdlLXBpY2tlcl9fY29udGVudCJ9LFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRpbWUtcmFuZ2UtcGlja2VyX19jZWxsIn0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdGltZS1yYW5nZS1waWNrZXJfX2hlYWRlciJ9LFtfdm0uX3YoX3ZtLl9zKF92bS50KCJlbC5kYXRlcGlja2VyLnN0YXJ0VGltZSIpKSldKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRpbWUtcmFuZ2UtcGlja2VyX19ib2R5IGVsLXRpbWUtcGFuZWxfX2NvbnRlbnQiLGNsYXNzOnsiaGFzLXNlY29uZHMiOl92bS5zaG93U2Vjb25kcywiaXMtYXJyb3ciOl92bS5hcnJvd0NvbnRyb2x9fSxbX2MoInRpbWUtc3Bpbm5lciIse3JlZjoibWluU3Bpbm5lciIsYXR0cnM6eyJzaG93LXNlY29uZHMiOl92bS5zaG93U2Vjb25kcywiYW0tcG0tbW9kZSI6X3ZtLmFtUG1Nb2RlLCJhcnJvdy1jb250cm9sIjpfdm0uYXJyb3dDb250cm9sLGRhdGU6X3ZtLm1pbkRhdGV9LG9uOntjaGFuZ2U6X3ZtLmhhbmRsZU1pbkNoYW5nZSwic2VsZWN0LXJhbmdlIjpfdm0uc2V0TWluU2VsZWN0aW9uUmFuZ2V9fSldLDEpXSksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10aW1lLXJhbmdlLXBpY2tlcl9fY2VsbCJ9LFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRpbWUtcmFuZ2UtcGlja2VyX19oZWFkZXIifSxbX3ZtLl92KF92bS5fcyhfdm0udCgiZWwuZGF0ZXBpY2tlci5lbmRUaW1lIikpKV0pLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdGltZS1yYW5nZS1waWNrZXJfX2JvZHkgZWwtdGltZS1wYW5lbF9fY29udGVudCIsY2xhc3M6eyJoYXMtc2Vjb25kcyI6X3ZtLnNob3dTZWNvbmRzLCJpcy1hcnJvdyI6X3ZtLmFycm93Q29udHJvbH19LFtfYygidGltZS1zcGlubmVyIix7cmVmOiJtYXhTcGlubmVyIixhdHRyczp7InNob3ctc2Vjb25kcyI6X3ZtLnNob3dTZWNvbmRzLCJhbS1wbS1tb2RlIjpfdm0uYW1QbU1vZGUsImFycm93LWNvbnRyb2wiOl92bS5hcnJvd0NvbnRyb2wsZGF0ZTpfdm0ubWF4RGF0ZX0sb246e2NoYW5nZTpfdm0uaGFuZGxlTWF4Q2hhbmdlLCJzZWxlY3QtcmFuZ2UiOl92bS5zZXRNYXhTZWxlY3Rpb25SYW5nZX19KV0sMSldKV0pLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdGltZS1wYW5lbF9fZm9vdGVyIn0sW19jKCJidXR0b24iLHtzdGF0aWNDbGFzczoiZWwtdGltZS1wYW5lbF9fYnRuIGNhbmNlbCIsYXR0cnM6e3R5cGU6ImJ1dHRvbiJ9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVDYW5jZWwoKTt9fX0sW192bS5fdihfdm0uX3MoX3ZtLnQoImVsLmRhdGVwaWNrZXIuY2FuY2VsIikpKV0pLF9jKCJidXR0b24iLHtzdGF0aWNDbGFzczoiZWwtdGltZS1wYW5lbF9fYnRuIGNvbmZpcm0iLGF0dHJzOnt0eXBlOiJidXR0b24iLGRpc2FibGVkOl92bS5idG5EaXNhYmxlZH0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLmhhbmRsZUNvbmZpcm0oKTt9fX0sW192bS5fdihfdm0uX3MoX3ZtLnQoImVsLmRhdGVwaWNrZXIuY29uZmlybSIpKSldKV0pXSldKTt9O3ZhciB0aW1lX3JhbmdldnVlX3R5cGVfdGVtcGxhdGVfaWRfZmIyODY2MGVfc3RhdGljUmVuZGVyRm5zPVtdO3RpbWVfcmFuZ2V2dWVfdHlwZV90ZW1wbGF0ZV9pZF9mYjI4NjYwZV9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL3RpbWUtcmFuZ2UudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWZiMjg2NjBlJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGFuZWwvdGltZS1yYW5nZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBNSU5fVElNRT1PYmplY3QoZGF0ZV91dGlsX1sicGFyc2VEYXRlIl0pKCcwMDowMDowMCcsJ0hIOm1tOnNzJyk7dmFyIE1BWF9USU1FPU9iamVjdChkYXRlX3V0aWxfWyJwYXJzZURhdGUiXSkoJzIzOjU5OjU5JywnSEg6bW06c3MnKTt2YXIgdGltZV9yYW5nZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX21pblRpbWVPZkRheT1mdW5jdGlvbiBtaW5UaW1lT2ZEYXkoZGF0ZSl7cmV0dXJuIE9iamVjdChkYXRlX3V0aWxfWyJtb2RpZnlEYXRlIl0pKE1JTl9USU1FLGRhdGUuZ2V0RnVsbFllYXIoKSxkYXRlLmdldE1vbnRoKCksZGF0ZS5nZXREYXRlKCkpO307dmFyIHRpbWVfcmFuZ2V2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19tYXhUaW1lT2ZEYXk9ZnVuY3Rpb24gbWF4VGltZU9mRGF5KGRhdGUpe3JldHVybiBPYmplY3QoZGF0ZV91dGlsX1sibW9kaWZ5RGF0ZSJdKShNQVhfVElNRSxkYXRlLmdldEZ1bGxZZWFyKCksZGF0ZS5nZXRNb250aCgpLGRhdGUuZ2V0RGF0ZSgpKTt9Oy8vIGluY3JlYXNlIHRpbWUgYnkgYW1vdW50IG9mIG1pbGxpc2Vjb25kcywgYnV0IHdpdGhpbiB0aGUgcmFuZ2Ugb2YgZGF5CnZhciBhZHZhbmNlVGltZT1mdW5jdGlvbiBhZHZhbmNlVGltZShkYXRlLGFtb3VudCl7cmV0dXJuIG5ldyBEYXRlKE1hdGgubWluKGRhdGUuZ2V0VGltZSgpK2Ftb3VudCx0aW1lX3JhbmdldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfbWF4VGltZU9mRGF5KGRhdGUpLmdldFRpbWUoKSkpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0aW1lX3JhbmdldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXttaXhpbnM6W2xvY2FsZV9kZWZhdWx0LmFdLGNvbXBvbmVudHM6e1RpbWVTcGlubmVyOnRpbWVfc3Bpbm5lcn0sY29tcHV0ZWQ6e3Nob3dTZWNvbmRzOmZ1bmN0aW9uIHNob3dTZWNvbmRzKCl7cmV0dXJuKHRoaXMuZm9ybWF0fHwnJykuaW5kZXhPZignc3MnKSE9PS0xO30sb2Zmc2V0OmZ1bmN0aW9uIG9mZnNldCgpe3JldHVybiB0aGlzLnNob3dTZWNvbmRzPzExOjg7fSxzcGlubmVyOmZ1bmN0aW9uIHNwaW5uZXIoKXtyZXR1cm4gdGhpcy5zZWxlY3Rpb25SYW5nZVswXTx0aGlzLm9mZnNldD90aGlzLiRyZWZzLm1pblNwaW5uZXI6dGhpcy4kcmVmcy5tYXhTcGlubmVyO30sYnRuRGlzYWJsZWQ6ZnVuY3Rpb24gYnRuRGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5taW5EYXRlLmdldFRpbWUoKT50aGlzLm1heERhdGUuZ2V0VGltZSgpO30sYW1QbU1vZGU6ZnVuY3Rpb24gYW1QbU1vZGUoKXtpZigodGhpcy5mb3JtYXR8fCcnKS5pbmRleE9mKCdBJykhPT0tMSlyZXR1cm4nQSc7aWYoKHRoaXMuZm9ybWF0fHwnJykuaW5kZXhPZignYScpIT09LTEpcmV0dXJuJ2EnO3JldHVybicnO319LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntwb3BwZXJDbGFzczonJyxtaW5EYXRlOm5ldyBEYXRlKCksbWF4RGF0ZTpuZXcgRGF0ZSgpLHZhbHVlOltdLG9sZFZhbHVlOltuZXcgRGF0ZSgpLG5ldyBEYXRlKCldLGRlZmF1bHRWYWx1ZTpudWxsLGZvcm1hdDonSEg6bW06c3MnLHZpc2libGU6ZmFsc2Usc2VsZWN0aW9uUmFuZ2U6WzAsMl0sYXJyb3dDb250cm9sOmZhbHNlfTt9LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZShfdmFsdWUpe2lmKEFycmF5LmlzQXJyYXkoX3ZhbHVlKSl7dGhpcy5taW5EYXRlPW5ldyBEYXRlKF92YWx1ZVswXSk7dGhpcy5tYXhEYXRlPW5ldyBEYXRlKF92YWx1ZVsxXSk7fWVsc2V7aWYoQXJyYXkuaXNBcnJheSh0aGlzLmRlZmF1bHRWYWx1ZSkpe3RoaXMubWluRGF0ZT1uZXcgRGF0ZSh0aGlzLmRlZmF1bHRWYWx1ZVswXSk7dGhpcy5tYXhEYXRlPW5ldyBEYXRlKHRoaXMuZGVmYXVsdFZhbHVlWzFdKTt9ZWxzZSBpZih0aGlzLmRlZmF1bHRWYWx1ZSl7dGhpcy5taW5EYXRlPW5ldyBEYXRlKHRoaXMuZGVmYXVsdFZhbHVlKTt0aGlzLm1heERhdGU9YWR2YW5jZVRpbWUobmV3IERhdGUodGhpcy5kZWZhdWx0VmFsdWUpLDYwKjYwKjEwMDApO31lbHNle3RoaXMubWluRGF0ZT1uZXcgRGF0ZSgpO3RoaXMubWF4RGF0ZT1hZHZhbmNlVGltZShuZXcgRGF0ZSgpLDYwKjYwKjEwMDApO319fSx2aXNpYmxlOmZ1bmN0aW9uIHZpc2libGUodmFsKXt2YXIgX3RoaXM9dGhpcztpZih2YWwpe3RoaXMub2xkVmFsdWU9dGhpcy52YWx1ZTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe3JldHVybiBfdGhpcy4kcmVmcy5taW5TcGlubmVyLmVtaXRTZWxlY3RSYW5nZSgnaG91cnMnKTt9KTt9fX0sbWV0aG9kczp7aGFuZGxlQ2xlYXI6ZnVuY3Rpb24gaGFuZGxlQ2xlYXIoKXt0aGlzLiRlbWl0KCdwaWNrJyxudWxsKTt9LGhhbmRsZUNhbmNlbDpmdW5jdGlvbiBoYW5kbGVDYW5jZWwoKXt0aGlzLiRlbWl0KCdwaWNrJyx0aGlzLm9sZFZhbHVlKTt9LGhhbmRsZU1pbkNoYW5nZTpmdW5jdGlvbiBoYW5kbGVNaW5DaGFuZ2UoZGF0ZSl7dGhpcy5taW5EYXRlPU9iamVjdChkYXRlX3V0aWxfWyJjbGVhck1pbGxpc2Vjb25kcyJdKShkYXRlKTt0aGlzLmhhbmRsZUNoYW5nZSgpO30saGFuZGxlTWF4Q2hhbmdlOmZ1bmN0aW9uIGhhbmRsZU1heENoYW5nZShkYXRlKXt0aGlzLm1heERhdGU9T2JqZWN0KGRhdGVfdXRpbF9bImNsZWFyTWlsbGlzZWNvbmRzIl0pKGRhdGUpO3RoaXMuaGFuZGxlQ2hhbmdlKCk7fSxoYW5kbGVDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKCl7aWYodGhpcy5pc1ZhbGlkVmFsdWUoW3RoaXMubWluRGF0ZSx0aGlzLm1heERhdGVdKSl7dGhpcy4kcmVmcy5taW5TcGlubmVyLnNlbGVjdGFibGVSYW5nZT1bW3RpbWVfcmFuZ2V2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19taW5UaW1lT2ZEYXkodGhpcy5taW5EYXRlKSx0aGlzLm1heERhdGVdXTt0aGlzLiRyZWZzLm1heFNwaW5uZXIuc2VsZWN0YWJsZVJhbmdlPVtbdGhpcy5taW5EYXRlLHRpbWVfcmFuZ2V2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19tYXhUaW1lT2ZEYXkodGhpcy5tYXhEYXRlKV1dO3RoaXMuJGVtaXQoJ3BpY2snLFt0aGlzLm1pbkRhdGUsdGhpcy5tYXhEYXRlXSx0cnVlKTt9fSxzZXRNaW5TZWxlY3Rpb25SYW5nZTpmdW5jdGlvbiBzZXRNaW5TZWxlY3Rpb25SYW5nZShzdGFydCxlbmQpe3RoaXMuJGVtaXQoJ3NlbGVjdC1yYW5nZScsc3RhcnQsZW5kLCdtaW4nKTt0aGlzLnNlbGVjdGlvblJhbmdlPVtzdGFydCxlbmRdO30sc2V0TWF4U2VsZWN0aW9uUmFuZ2U6ZnVuY3Rpb24gc2V0TWF4U2VsZWN0aW9uUmFuZ2Uoc3RhcnQsZW5kKXt0aGlzLiRlbWl0KCdzZWxlY3QtcmFuZ2UnLHN0YXJ0LGVuZCwnbWF4Jyk7dGhpcy5zZWxlY3Rpb25SYW5nZT1bc3RhcnQrdGhpcy5vZmZzZXQsZW5kK3RoaXMub2Zmc2V0XTt9LGhhbmRsZUNvbmZpcm06ZnVuY3Rpb24gaGFuZGxlQ29uZmlybSgpe3ZhciB2aXNpYmxlPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1swXTpmYWxzZTt2YXIgbWluU2VsZWN0YWJsZVJhbmdlPXRoaXMuJHJlZnMubWluU3Bpbm5lci5zZWxlY3RhYmxlUmFuZ2U7dmFyIG1heFNlbGVjdGFibGVSYW5nZT10aGlzLiRyZWZzLm1heFNwaW5uZXIuc2VsZWN0YWJsZVJhbmdlO3RoaXMubWluRGF0ZT1PYmplY3QoZGF0ZV91dGlsX1sibGltaXRUaW1lUmFuZ2UiXSkodGhpcy5taW5EYXRlLG1pblNlbGVjdGFibGVSYW5nZSx0aGlzLmZvcm1hdCk7dGhpcy5tYXhEYXRlPU9iamVjdChkYXRlX3V0aWxfWyJsaW1pdFRpbWVSYW5nZSJdKSh0aGlzLm1heERhdGUsbWF4U2VsZWN0YWJsZVJhbmdlLHRoaXMuZm9ybWF0KTt0aGlzLiRlbWl0KCdwaWNrJyxbdGhpcy5taW5EYXRlLHRoaXMubWF4RGF0ZV0sdmlzaWJsZSk7fSxhZGp1c3RTcGlubmVyczpmdW5jdGlvbiBhZGp1c3RTcGlubmVycygpe3RoaXMuJHJlZnMubWluU3Bpbm5lci5hZGp1c3RTcGlubmVycygpO3RoaXMuJHJlZnMubWF4U3Bpbm5lci5hZGp1c3RTcGlubmVycygpO30sY2hhbmdlU2VsZWN0aW9uUmFuZ2U6ZnVuY3Rpb24gY2hhbmdlU2VsZWN0aW9uUmFuZ2Uoc3RlcCl7dmFyIGxpc3Q9dGhpcy5zaG93U2Vjb25kcz9bMCwzLDYsMTEsMTQsMTddOlswLDMsOCwxMV07dmFyIG1hcHBpbmc9Wydob3VycycsJ21pbnV0ZXMnXS5jb25jYXQodGhpcy5zaG93U2Vjb25kcz9bJ3NlY29uZHMnXTpbXSk7dmFyIGluZGV4PWxpc3QuaW5kZXhPZih0aGlzLnNlbGVjdGlvblJhbmdlWzBdKTt2YXIgbmV4dD0oaW5kZXgrc3RlcCtsaXN0Lmxlbmd0aCklbGlzdC5sZW5ndGg7dmFyIGhhbGY9bGlzdC5sZW5ndGgvMjtpZihuZXh0PGhhbGYpe3RoaXMuJHJlZnMubWluU3Bpbm5lci5lbWl0U2VsZWN0UmFuZ2UobWFwcGluZ1tuZXh0XSk7fWVsc2V7dGhpcy4kcmVmcy5tYXhTcGlubmVyLmVtaXRTZWxlY3RSYW5nZShtYXBwaW5nW25leHQtaGFsZl0pO319LGlzVmFsaWRWYWx1ZTpmdW5jdGlvbiBpc1ZhbGlkVmFsdWUoZGF0ZSl7cmV0dXJuIEFycmF5LmlzQXJyYXkoZGF0ZSkmJk9iamVjdChkYXRlX3V0aWxfWyJ0aW1lV2l0aGluUmFuZ2UiXSkodGhpcy5taW5EYXRlLHRoaXMuJHJlZnMubWluU3Bpbm5lci5zZWxlY3RhYmxlUmFuZ2UpJiZPYmplY3QoZGF0ZV91dGlsX1sidGltZVdpdGhpblJhbmdlIl0pKHRoaXMubWF4RGF0ZSx0aGlzLiRyZWZzLm1heFNwaW5uZXIuc2VsZWN0YWJsZVJhbmdlKTt9LGhhbmRsZUtleWRvd246ZnVuY3Rpb24gaGFuZGxlS2V5ZG93bihldmVudCl7dmFyIGtleUNvZGU9ZXZlbnQua2V5Q29kZTt2YXIgbWFwcGluZz17Mzg6LTEsNDA6MSwzNzotMSwzOToxfTsvLyBMZWZ0IG9yIFJpZ2h0CmlmKGtleUNvZGU9PT0zN3x8a2V5Q29kZT09PTM5KXt2YXIgc3RlcD1tYXBwaW5nW2tleUNvZGVdO3RoaXMuY2hhbmdlU2VsZWN0aW9uUmFuZ2Uoc3RlcCk7ZXZlbnQucHJldmVudERlZmF1bHQoKTtyZXR1cm47fS8vIFVwIG9yIERvd24KaWYoa2V5Q29kZT09PTM4fHxrZXlDb2RlPT09NDApe3ZhciBfc3RlcD1tYXBwaW5nW2tleUNvZGVdO3RoaXMuc3Bpbm5lci5zY3JvbGxEb3duKF9zdGVwKTtldmVudC5wcmV2ZW50RGVmYXVsdCgpO3JldHVybjt9fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BhbmVsL3RpbWUtcmFuZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhbmVsX3RpbWVfcmFuZ2V2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189dGltZV9yYW5nZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RhdGUtcGlja2VyL3NyYy9wYW5lbC90aW1lLXJhbmdlLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHRpbWVfcmFuZ2VfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYW5lbF90aW1lX3JhbmdldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLHRpbWVfcmFuZ2V2dWVfdHlwZV90ZW1wbGF0ZV9pZF9mYjI4NjYwZV9yZW5kZXIsdGltZV9yYW5nZXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2ZiMjg2NjBlX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgdGltZV9yYW5nZV9hcGk7fXRpbWVfcmFuZ2VfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9kYXRlLXBpY2tlci9zcmMvcGFuZWwvdGltZS1yYW5nZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGltZV9yYW5nZT10aW1lX3JhbmdlX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZGF0ZS1waWNrZXIvc3JjL3BpY2tlci90aW1lLXBpY2tlci5qcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRpbWVfcGlja2VyPXttaXhpbnM6W3BpY2tlcl0sbmFtZTonRWxUaW1lUGlja2VyJyxwcm9wczp7aXNSYW5nZTpCb29sZWFuLGFycm93Q29udHJvbDpCb29sZWFufSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57dHlwZTonJ307fSx3YXRjaDp7aXNSYW5nZTpmdW5jdGlvbiBpc1JhbmdlKF9pc1JhbmdlKXtpZih0aGlzLnBpY2tlcil7dGhpcy51bm1vdW50UGlja2VyKCk7dGhpcy50eXBlPV9pc1JhbmdlPyd0aW1lcmFuZ2UnOid0aW1lJzt0aGlzLnBhbmVsPV9pc1JhbmdlP3RpbWVfcmFuZ2U6cGFuZWxfdGltZTt0aGlzLm1vdW50UGlja2VyKCk7fWVsc2V7dGhpcy50eXBlPV9pc1JhbmdlPyd0aW1lcmFuZ2UnOid0aW1lJzt0aGlzLnBhbmVsPV9pc1JhbmdlP3RpbWVfcmFuZ2U6cGFuZWxfdGltZTt9fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy50eXBlPXRoaXMuaXNSYW5nZT8ndGltZXJhbmdlJzondGltZSc7dGhpcy5wYW5lbD10aGlzLmlzUmFuZ2U/dGltZV9yYW5nZTpwYW5lbF90aW1lO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGltZS1waWNrZXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi90aW1lX3BpY2tlci5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudCh0aW1lX3BpY2tlci5uYW1lLHRpbWVfcGlja2VyKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfdGltZV9waWNrZXI9dGltZV9waWNrZXI7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9wb3BvdmVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01MjA2MDI3MiYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81MjA2MDI3Ml9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzUyMDYwMjcyX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygic3BhbiIsW19jKCJ0cmFuc2l0aW9uIix7YXR0cnM6e25hbWU6X3ZtLnRyYW5zaXRpb259LG9uOnsiYWZ0ZXItZW50ZXIiOl92bS5oYW5kbGVBZnRlckVudGVyLCJhZnRlci1sZWF2ZSI6X3ZtLmhhbmRsZUFmdGVyTGVhdmV9fSxbX2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOiFfdm0uZGlzYWJsZWQmJl92bS5zaG93UG9wcGVyLGV4cHJlc3Npb246IiFkaXNhYmxlZCAmJiBzaG93UG9wcGVyIn1dLHJlZjoicG9wcGVyIixzdGF0aWNDbGFzczoiZWwtcG9wb3ZlciBlbC1wb3BwZXIiLGNsYXNzOltfdm0ucG9wcGVyQ2xhc3MsX3ZtLmNvbnRlbnQmJiJlbC1wb3BvdmVyLS1wbGFpbiJdLHN0eWxlOnt3aWR0aDpfdm0ud2lkdGgrInB4In0sYXR0cnM6e3JvbGU6InRvb2x0aXAiLGlkOl92bS50b29sdGlwSWQsImFyaWEtaGlkZGVuIjpfdm0uZGlzYWJsZWR8fCFfdm0uc2hvd1BvcHBlcj8idHJ1ZSI6ImZhbHNlIn19LFtfdm0udGl0bGU/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1wb3BvdmVyX190aXRsZSIsZG9tUHJvcHM6e3RleHRDb250ZW50Ol92bS5fcyhfdm0udGl0bGUpfX0pOl92bS5fZSgpLF92bS5fdCgiZGVmYXVsdCIsW192bS5fdihfdm0uX3MoX3ZtLmNvbnRlbnQpKV0pXSwyKV0pLF9jKCJzcGFuIix7cmVmOiJ3cmFwcGVyIixzdGF0aWNDbGFzczoiZWwtcG9wb3Zlcl9fcmVmZXJlbmNlLXdyYXBwZXIifSxbX3ZtLl90KCJyZWZlcmVuY2UiKV0sMildLDEpO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81MjA2MDI3Ml9zdGF0aWNSZW5kZXJGbnM9W107bWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzUyMDYwMjcyX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9wb3BvdmVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01MjA2MDI3MiYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvcG9wb3Zlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxQb3BvdmVyJyxtaXhpbnM6W3Z1ZV9wb3BwZXJfZGVmYXVsdC5hXSxwcm9wczp7dHJpZ2dlcjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonY2xpY2snLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsdWUpe3JldHVyblsnY2xpY2snLCdmb2N1cycsJ2hvdmVyJywnbWFudWFsJ10uaW5kZXhPZih2YWx1ZSk+LTE7fX0sb3BlbkRlbGF5Ont0eXBlOk51bWJlcixkZWZhdWx0OjB9LGNsb3NlRGVsYXk6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MjAwfSx0aXRsZTpTdHJpbmcsZGlzYWJsZWQ6Qm9vbGVhbixjb250ZW50OlN0cmluZyxyZWZlcmVuY2U6e30scG9wcGVyQ2xhc3M6U3RyaW5nLHdpZHRoOnt9LHZpc2libGVBcnJvdzp7ZGVmYXVsdDp0cnVlfSxhcnJvd09mZnNldDp7dHlwZTpOdW1iZXIsZGVmYXVsdDowfSx0cmFuc2l0aW9uOnt0eXBlOlN0cmluZyxkZWZhdWx0OidmYWRlLWluLWxpbmVhcid9LHRhYmluZGV4Ont0eXBlOk51bWJlcixkZWZhdWx0OjB9fSxjb21wdXRlZDp7dG9vbHRpcElkOmZ1bmN0aW9uIHRvb2x0aXBJZCgpe3JldHVybidlbC1wb3BvdmVyLScrT2JqZWN0KHV0aWxfWyJnZW5lcmF0ZUlkIl0pKCk7fX0sd2F0Y2g6e3Nob3dQb3BwZXI6ZnVuY3Rpb24gc2hvd1BvcHBlcih2YWwpe2lmKHRoaXMuZGlzYWJsZWQpe3JldHVybjt9dmFsP3RoaXMuJGVtaXQoJ3Nob3cnKTp0aGlzLiRlbWl0KCdoaWRlJyk7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIF90aGlzPXRoaXM7dmFyIHJlZmVyZW5jZT10aGlzLnJlZmVyZW5jZUVsbT10aGlzLnJlZmVyZW5jZXx8dGhpcy4kcmVmcy5yZWZlcmVuY2U7dmFyIHBvcHBlcj10aGlzLnBvcHBlcnx8dGhpcy4kcmVmcy5wb3BwZXI7aWYoIXJlZmVyZW5jZSYmdGhpcy4kcmVmcy53cmFwcGVyLmNoaWxkcmVuKXtyZWZlcmVuY2U9dGhpcy5yZWZlcmVuY2VFbG09dGhpcy4kcmVmcy53cmFwcGVyLmNoaWxkcmVuWzBdO30vLyDlj6/orr/pl67mgKcKaWYocmVmZXJlbmNlKXtPYmplY3QoZG9tX1siYWRkQ2xhc3MiXSkocmVmZXJlbmNlLCdlbC1wb3BvdmVyX19yZWZlcmVuY2UnKTtyZWZlcmVuY2Uuc2V0QXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5Jyx0aGlzLnRvb2x0aXBJZCk7cmVmZXJlbmNlLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLHRoaXMudGFiaW5kZXgpOy8vIHRhYuW6j+WIlwpwb3BwZXIuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsMCk7aWYodGhpcy50cmlnZ2VyIT09J2NsaWNrJyl7T2JqZWN0KGRvbV9bIm9uIl0pKHJlZmVyZW5jZSwnZm9jdXNpbicsZnVuY3Rpb24oKXtfdGhpcy5oYW5kbGVGb2N1cygpO3ZhciBpbnN0YW5jZT1yZWZlcmVuY2UuX192dWVfXztpZihpbnN0YW5jZSYmdHlwZW9mIGluc3RhbmNlLmZvY3VzPT09J2Z1bmN0aW9uJyl7aW5zdGFuY2UuZm9jdXMoKTt9fSk7T2JqZWN0KGRvbV9bIm9uIl0pKHBvcHBlciwnZm9jdXNpbicsdGhpcy5oYW5kbGVGb2N1cyk7T2JqZWN0KGRvbV9bIm9uIl0pKHJlZmVyZW5jZSwnZm9jdXNvdXQnLHRoaXMuaGFuZGxlQmx1cik7T2JqZWN0KGRvbV9bIm9uIl0pKHBvcHBlciwnZm9jdXNvdXQnLHRoaXMuaGFuZGxlQmx1cik7fU9iamVjdChkb21fWyJvbiJdKShyZWZlcmVuY2UsJ2tleWRvd24nLHRoaXMuaGFuZGxlS2V5ZG93bik7T2JqZWN0KGRvbV9bIm9uIl0pKHJlZmVyZW5jZSwnY2xpY2snLHRoaXMuaGFuZGxlQ2xpY2spO31pZih0aGlzLnRyaWdnZXI9PT0nY2xpY2snKXtPYmplY3QoZG9tX1sib24iXSkocmVmZXJlbmNlLCdjbGljaycsdGhpcy5kb1RvZ2dsZSk7T2JqZWN0KGRvbV9bIm9uIl0pKGRvY3VtZW50LCdjbGljaycsdGhpcy5oYW5kbGVEb2N1bWVudENsaWNrKTt9ZWxzZSBpZih0aGlzLnRyaWdnZXI9PT0naG92ZXInKXtPYmplY3QoZG9tX1sib24iXSkocmVmZXJlbmNlLCdtb3VzZWVudGVyJyx0aGlzLmhhbmRsZU1vdXNlRW50ZXIpO09iamVjdChkb21fWyJvbiJdKShwb3BwZXIsJ21vdXNlZW50ZXInLHRoaXMuaGFuZGxlTW91c2VFbnRlcik7T2JqZWN0KGRvbV9bIm9uIl0pKHJlZmVyZW5jZSwnbW91c2VsZWF2ZScsdGhpcy5oYW5kbGVNb3VzZUxlYXZlKTtPYmplY3QoZG9tX1sib24iXSkocG9wcGVyLCdtb3VzZWxlYXZlJyx0aGlzLmhhbmRsZU1vdXNlTGVhdmUpO31lbHNlIGlmKHRoaXMudHJpZ2dlcj09PSdmb2N1cycpe2lmKHRoaXMudGFiaW5kZXg8MCl7Y29uc29sZS53YXJuKCdbRWxlbWVudCBXYXJuXVtQb3BvdmVyXWEgbmVnYXRpdmUgdGFpbmRleCBtZWFucyB0aGF0IHRoZSBlbGVtZW50IGNhbm5vdCBiZSBmb2N1c2VkIGJ5IHRhYiBrZXknKTt9aWYocmVmZXJlbmNlLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0LCB0ZXh0YXJlYScpKXtPYmplY3QoZG9tX1sib24iXSkocmVmZXJlbmNlLCdmb2N1c2luJyx0aGlzLmRvU2hvdyk7T2JqZWN0KGRvbV9bIm9uIl0pKHJlZmVyZW5jZSwnZm9jdXNvdXQnLHRoaXMuZG9DbG9zZSk7fWVsc2V7T2JqZWN0KGRvbV9bIm9uIl0pKHJlZmVyZW5jZSwnbW91c2Vkb3duJyx0aGlzLmRvU2hvdyk7T2JqZWN0KGRvbV9bIm9uIl0pKHJlZmVyZW5jZSwnbW91c2V1cCcsdGhpcy5kb0Nsb3NlKTt9fX0sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7dGhpcy5jbGVhbnVwKCk7fSxkZWFjdGl2YXRlZDpmdW5jdGlvbiBkZWFjdGl2YXRlZCgpe3RoaXMuY2xlYW51cCgpO30sbWV0aG9kczp7ZG9Ub2dnbGU6ZnVuY3Rpb24gZG9Ub2dnbGUoKXt0aGlzLnNob3dQb3BwZXI9IXRoaXMuc2hvd1BvcHBlcjt9LGRvU2hvdzpmdW5jdGlvbiBkb1Nob3coKXt0aGlzLnNob3dQb3BwZXI9dHJ1ZTt9LGRvQ2xvc2U6ZnVuY3Rpb24gZG9DbG9zZSgpe3RoaXMuc2hvd1BvcHBlcj1mYWxzZTt9LGhhbmRsZUZvY3VzOmZ1bmN0aW9uIGhhbmRsZUZvY3VzKCl7T2JqZWN0KGRvbV9bImFkZENsYXNzIl0pKHRoaXMucmVmZXJlbmNlRWxtLCdmb2N1c2luZycpO2lmKHRoaXMudHJpZ2dlcj09PSdjbGljayd8fHRoaXMudHJpZ2dlcj09PSdmb2N1cycpdGhpcy5zaG93UG9wcGVyPXRydWU7fSxoYW5kbGVDbGljazpmdW5jdGlvbiBoYW5kbGVDbGljaygpe09iamVjdChkb21fWyJyZW1vdmVDbGFzcyJdKSh0aGlzLnJlZmVyZW5jZUVsbSwnZm9jdXNpbmcnKTt9LGhhbmRsZUJsdXI6ZnVuY3Rpb24gaGFuZGxlQmx1cigpe09iamVjdChkb21fWyJyZW1vdmVDbGFzcyJdKSh0aGlzLnJlZmVyZW5jZUVsbSwnZm9jdXNpbmcnKTtpZih0aGlzLnRyaWdnZXI9PT0nY2xpY2snfHx0aGlzLnRyaWdnZXI9PT0nZm9jdXMnKXRoaXMuc2hvd1BvcHBlcj1mYWxzZTt9LGhhbmRsZU1vdXNlRW50ZXI6ZnVuY3Rpb24gaGFuZGxlTW91c2VFbnRlcigpe3ZhciBfdGhpczI9dGhpcztjbGVhclRpbWVvdXQodGhpcy5fdGltZXIpO2lmKHRoaXMub3BlbkRlbGF5KXt0aGlzLl90aW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7X3RoaXMyLnNob3dQb3BwZXI9dHJ1ZTt9LHRoaXMub3BlbkRlbGF5KTt9ZWxzZXt0aGlzLnNob3dQb3BwZXI9dHJ1ZTt9fSxoYW5kbGVLZXlkb3duOmZ1bmN0aW9uIGhhbmRsZUtleWRvd24oZXYpe2lmKGV2LmtleUNvZGU9PT0yNyYmdGhpcy50cmlnZ2VyIT09J21hbnVhbCcpey8vIGVzYwp0aGlzLmRvQ2xvc2UoKTt9fSxoYW5kbGVNb3VzZUxlYXZlOmZ1bmN0aW9uIGhhbmRsZU1vdXNlTGVhdmUoKXt2YXIgX3RoaXMzPXRoaXM7Y2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVyKTtpZih0aGlzLmNsb3NlRGVsYXkpe3RoaXMuX3RpbWVyPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtfdGhpczMuc2hvd1BvcHBlcj1mYWxzZTt9LHRoaXMuY2xvc2VEZWxheSk7fWVsc2V7dGhpcy5zaG93UG9wcGVyPWZhbHNlO319LGhhbmRsZURvY3VtZW50Q2xpY2s6ZnVuY3Rpb24gaGFuZGxlRG9jdW1lbnRDbGljayhlKXt2YXIgcmVmZXJlbmNlPXRoaXMucmVmZXJlbmNlfHx0aGlzLiRyZWZzLnJlZmVyZW5jZTt2YXIgcG9wcGVyPXRoaXMucG9wcGVyfHx0aGlzLiRyZWZzLnBvcHBlcjtpZighcmVmZXJlbmNlJiZ0aGlzLiRyZWZzLndyYXBwZXIuY2hpbGRyZW4pe3JlZmVyZW5jZT10aGlzLnJlZmVyZW5jZUVsbT10aGlzLiRyZWZzLndyYXBwZXIuY2hpbGRyZW5bMF07fWlmKCF0aGlzLiRlbHx8IXJlZmVyZW5jZXx8dGhpcy4kZWwuY29udGFpbnMoZS50YXJnZXQpfHxyZWZlcmVuY2UuY29udGFpbnMoZS50YXJnZXQpfHwhcG9wcGVyfHxwb3BwZXIuY29udGFpbnMoZS50YXJnZXQpKXJldHVybjt0aGlzLnNob3dQb3BwZXI9ZmFsc2U7fSxoYW5kbGVBZnRlckVudGVyOmZ1bmN0aW9uIGhhbmRsZUFmdGVyRW50ZXIoKXt0aGlzLiRlbWl0KCdhZnRlci1lbnRlcicpO30saGFuZGxlQWZ0ZXJMZWF2ZTpmdW5jdGlvbiBoYW5kbGVBZnRlckxlYXZlKCl7dGhpcy4kZW1pdCgnYWZ0ZXItbGVhdmUnKTt0aGlzLmRvRGVzdHJveSgpO30sY2xlYW51cDpmdW5jdGlvbiBjbGVhbnVwKCl7aWYodGhpcy5vcGVuRGVsYXl8fHRoaXMuY2xvc2VEZWxheSl7Y2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVyKTt9fX0sZGVzdHJveWVkOmZ1bmN0aW9uIGRlc3Ryb3llZCgpe3ZhciByZWZlcmVuY2U9dGhpcy5yZWZlcmVuY2U7T2JqZWN0KGRvbV9bIm9mZiJdKShyZWZlcmVuY2UsJ2NsaWNrJyx0aGlzLmRvVG9nZ2xlKTtPYmplY3QoZG9tX1sib2ZmIl0pKHJlZmVyZW5jZSwnbW91c2V1cCcsdGhpcy5kb0Nsb3NlKTtPYmplY3QoZG9tX1sib2ZmIl0pKHJlZmVyZW5jZSwnbW91c2Vkb3duJyx0aGlzLmRvU2hvdyk7T2JqZWN0KGRvbV9bIm9mZiJdKShyZWZlcmVuY2UsJ2ZvY3VzaW4nLHRoaXMuZG9TaG93KTtPYmplY3QoZG9tX1sib2ZmIl0pKHJlZmVyZW5jZSwnZm9jdXNvdXQnLHRoaXMuZG9DbG9zZSk7T2JqZWN0KGRvbV9bIm9mZiJdKShyZWZlcmVuY2UsJ21vdXNlZG93bicsdGhpcy5kb1Nob3cpO09iamVjdChkb21fWyJvZmYiXSkocmVmZXJlbmNlLCdtb3VzZXVwJyx0aGlzLmRvQ2xvc2UpO09iamVjdChkb21fWyJvZmYiXSkocmVmZXJlbmNlLCdtb3VzZWxlYXZlJyx0aGlzLmhhbmRsZU1vdXNlTGVhdmUpO09iamVjdChkb21fWyJvZmYiXSkocmVmZXJlbmNlLCdtb3VzZWVudGVyJyx0aGlzLmhhbmRsZU1vdXNlRW50ZXIpO09iamVjdChkb21fWyJvZmYiXSkoZG9jdW1lbnQsJ2NsaWNrJyx0aGlzLmhhbmRsZURvY3VtZW50Q2xpY2spO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcG9wb3Zlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BvcG92ZXIvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81MjA2MDI3Ml9yZW5kZXIsbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzUyMDYwMjcyX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgbWFpbl9hcGk7fW1haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9wb3BvdmVyL3NyYy9tYWluLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBtYWluPW1haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9wb3BvdmVyL3NyYy9kaXJlY3RpdmUuanMKdmFyIGdldFJlZmVyZW5jZT1mdW5jdGlvbiBnZXRSZWZlcmVuY2UoZWwsYmluZGluZyx2bm9kZSl7dmFyIF9yZWY9YmluZGluZy5leHByZXNzaW9uP2JpbmRpbmcudmFsdWU6YmluZGluZy5hcmc7dmFyIHBvcHBlcj12bm9kZS5jb250ZXh0LiRyZWZzW19yZWZdO2lmKHBvcHBlcil7aWYoQXJyYXkuaXNBcnJheShwb3BwZXIpKXtwb3BwZXJbMF0uJHJlZnMucmVmZXJlbmNlPWVsO31lbHNle3BvcHBlci4kcmVmcy5yZWZlcmVuY2U9ZWw7fX19Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZGlyZWN0aXZlPXtiaW5kOmZ1bmN0aW9uIGJpbmQoZWwsYmluZGluZyx2bm9kZSl7Z2V0UmVmZXJlbmNlKGVsLGJpbmRpbmcsdm5vZGUpO30saW5zZXJ0ZWQ6ZnVuY3Rpb24gaW5zZXJ0ZWQoZWwsYmluZGluZyx2bm9kZSl7Z2V0UmVmZXJlbmNlKGVsLGJpbmRpbmcsdm5vZGUpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcG9wb3Zlci9pbmRleC5qcwpleHRlcm5hbF92dWVfZGVmYXVsdC5hLmRpcmVjdGl2ZSgncG9wb3ZlcicsZGlyZWN0aXZlKTsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL21haW4uaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5kaXJlY3RpdmUoJ3BvcG92ZXInLGRpcmVjdGl2ZSk7VnVlLmNvbXBvbmVudChtYWluLm5hbWUsbWFpbik7fTttYWluLmRpcmVjdGl2ZT1kaXJlY3RpdmU7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwb3BvdmVyPW1haW47Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90b29sdGlwL3NyYy9tYWluLmpzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX21haW49e25hbWU6J0VsVG9vbHRpcCcsbWl4aW5zOlt2dWVfcG9wcGVyX2RlZmF1bHQuYV0scHJvcHM6e29wZW5EZWxheTp7dHlwZTpOdW1iZXIsZGVmYXVsdDowfSxkaXNhYmxlZDpCb29sZWFuLG1hbnVhbDpCb29sZWFuLGVmZmVjdDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZGFyayd9LGFycm93T2Zmc2V0Ont0eXBlOk51bWJlcixkZWZhdWx0OjB9LHBvcHBlckNsYXNzOlN0cmluZyxjb250ZW50OlN0cmluZyx2aXNpYmxlQXJyb3c6e2RlZmF1bHQ6dHJ1ZX0sdHJhbnNpdGlvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZWwtZmFkZS1pbi1saW5lYXInfSxwb3BwZXJPcHRpb25zOntkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJue2JvdW5kYXJpZXNQYWRkaW5nOjEwLGdwdUFjY2VsZXJhdGlvbjpmYWxzZX07fX0sZW50ZXJhYmxlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxoaWRlQWZ0ZXI6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MH0sdGFiaW5kZXg6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MH19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnt0b29sdGlwSWQ6J2VsLXRvb2x0aXAtJytPYmplY3QodXRpbF9bImdlbmVyYXRlSWQiXSkoKSx0aW1lb3V0UGVuZGluZzpudWxsLGZvY3VzaW5nOmZhbHNlfTt9LGJlZm9yZUNyZWF0ZTpmdW5jdGlvbiBiZWZvcmVDcmVhdGUoKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLiRpc1NlcnZlcilyZXR1cm47dGhpcy5wb3BwZXJWTT1uZXcgZXh0ZXJuYWxfdnVlX2RlZmF1bHQuYSh7ZGF0YTp7bm9kZTonJ30scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXtyZXR1cm4gdGhpcy5ub2RlO319KS4kbW91bnQoKTt0aGlzLmRlYm91bmNlQ2xvc2U9ZGVib3VuY2VfZGVmYXVsdCgpKDIwMCxmdW5jdGlvbigpe3JldHVybiBfdGhpcy5oYW5kbGVDbG9zZVBvcHBlcigpO30pO30scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX3RoaXMyPXRoaXM7aWYodGhpcy5wb3BwZXJWTSl7dGhpcy5wb3BwZXJWTS5ub2RlPWgoJ3RyYW5zaXRpb24nLHthdHRyczp7bmFtZTp0aGlzLnRyYW5zaXRpb259LG9uOnsnYWZ0ZXJMZWF2ZSc6dGhpcy5kb0Rlc3Ryb3l9fSxbaCgnZGl2Jyx7b246eydtb3VzZWxlYXZlJzpmdW5jdGlvbiBtb3VzZWxlYXZlKCl7X3RoaXMyLnNldEV4cGVjdGVkU3RhdGUoZmFsc2UpO190aGlzMi5kZWJvdW5jZUNsb3NlKCk7fSwnbW91c2VlbnRlcic6ZnVuY3Rpb24gbW91c2VlbnRlcigpe190aGlzMi5zZXRFeHBlY3RlZFN0YXRlKHRydWUpO319LHJlZjoncG9wcGVyJyxhdHRyczp7cm9sZTondG9vbHRpcCcsaWQ6dGhpcy50b29sdGlwSWQsJ2FyaWEtaGlkZGVuJzp0aGlzLmRpc2FibGVkfHwhdGhpcy5zaG93UG9wcGVyPyd0cnVlJzonZmFsc2UnfSxkaXJlY3RpdmVzOlt7bmFtZTonc2hvdycsdmFsdWU6IXRoaXMuZGlzYWJsZWQmJnRoaXMuc2hvd1BvcHBlcn1dLCdjbGFzcyc6WydlbC10b29sdGlwX19wb3BwZXInLCdpcy0nK3RoaXMuZWZmZWN0LHRoaXMucG9wcGVyQ2xhc3NdfSxbdGhpcy4kc2xvdHMuY29udGVudHx8dGhpcy5jb250ZW50XSldKTt9dmFyIGZpcnN0RWxlbWVudD10aGlzLmdldEZpcnN0RWxlbWVudCgpO2lmKCFmaXJzdEVsZW1lbnQpcmV0dXJuIG51bGw7dmFyIGRhdGE9Zmlyc3RFbGVtZW50LmRhdGE9Zmlyc3RFbGVtZW50LmRhdGF8fHt9O2RhdGEuc3RhdGljQ2xhc3M9dGhpcy5hZGRUb29sdGlwQ2xhc3MoZGF0YS5zdGF0aWNDbGFzcyk7cmV0dXJuIGZpcnN0RWxlbWVudDt9LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciBfdGhpczM9dGhpczt0aGlzLnJlZmVyZW5jZUVsbT10aGlzLiRlbDtpZih0aGlzLiRlbC5ub2RlVHlwZT09PTEpe3RoaXMuJGVsLnNldEF0dHJpYnV0ZSgnYXJpYS1kZXNjcmliZWRieScsdGhpcy50b29sdGlwSWQpO3RoaXMuJGVsLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLHRoaXMudGFiaW5kZXgpO09iamVjdChkb21fWyJvbiJdKSh0aGlzLnJlZmVyZW5jZUVsbSwnbW91c2VlbnRlcicsdGhpcy5zaG93KTtPYmplY3QoZG9tX1sib24iXSkodGhpcy5yZWZlcmVuY2VFbG0sJ21vdXNlbGVhdmUnLHRoaXMuaGlkZSk7T2JqZWN0KGRvbV9bIm9uIl0pKHRoaXMucmVmZXJlbmNlRWxtLCdmb2N1cycsZnVuY3Rpb24oKXtpZighX3RoaXMzLiRzbG90cy5kZWZhdWx0fHwhX3RoaXMzLiRzbG90cy5kZWZhdWx0Lmxlbmd0aCl7X3RoaXMzLmhhbmRsZUZvY3VzKCk7cmV0dXJuO312YXIgaW5zdGFuY2U9X3RoaXMzLiRzbG90cy5kZWZhdWx0WzBdLmNvbXBvbmVudEluc3RhbmNlO2lmKGluc3RhbmNlJiZpbnN0YW5jZS5mb2N1cyl7aW5zdGFuY2UuZm9jdXMoKTt9ZWxzZXtfdGhpczMuaGFuZGxlRm9jdXMoKTt9fSk7T2JqZWN0KGRvbV9bIm9uIl0pKHRoaXMucmVmZXJlbmNlRWxtLCdibHVyJyx0aGlzLmhhbmRsZUJsdXIpO09iamVjdChkb21fWyJvbiJdKSh0aGlzLnJlZmVyZW5jZUVsbSwnY2xpY2snLHRoaXMucmVtb3ZlRm9jdXNpbmcpO30vLyBmaXggaXNzdWUgaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudC9pc3N1ZXMvMTQ0MjQKaWYodGhpcy52YWx1ZSYmdGhpcy5wb3BwZXJWTSl7dGhpcy5wb3BwZXJWTS4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZihfdGhpczMudmFsdWUpe190aGlzMy51cGRhdGVQb3BwZXIoKTt9fSk7fX0sd2F0Y2g6e2ZvY3VzaW5nOmZ1bmN0aW9uIGZvY3VzaW5nKHZhbCl7aWYodmFsKXtPYmplY3QoZG9tX1siYWRkQ2xhc3MiXSkodGhpcy5yZWZlcmVuY2VFbG0sJ2ZvY3VzaW5nJyk7fWVsc2V7T2JqZWN0KGRvbV9bInJlbW92ZUNsYXNzIl0pKHRoaXMucmVmZXJlbmNlRWxtLCdmb2N1c2luZycpO319fSxtZXRob2RzOntzaG93OmZ1bmN0aW9uIHNob3coKXt0aGlzLnNldEV4cGVjdGVkU3RhdGUodHJ1ZSk7dGhpcy5oYW5kbGVTaG93UG9wcGVyKCk7fSxoaWRlOmZ1bmN0aW9uIGhpZGUoKXt0aGlzLnNldEV4cGVjdGVkU3RhdGUoZmFsc2UpO3RoaXMuZGVib3VuY2VDbG9zZSgpO30saGFuZGxlRm9jdXM6ZnVuY3Rpb24gaGFuZGxlRm9jdXMoKXt0aGlzLmZvY3VzaW5nPXRydWU7dGhpcy5zaG93KCk7fSxoYW5kbGVCbHVyOmZ1bmN0aW9uIGhhbmRsZUJsdXIoKXt0aGlzLmZvY3VzaW5nPWZhbHNlO3RoaXMuaGlkZSgpO30scmVtb3ZlRm9jdXNpbmc6ZnVuY3Rpb24gcmVtb3ZlRm9jdXNpbmcoKXt0aGlzLmZvY3VzaW5nPWZhbHNlO30sYWRkVG9vbHRpcENsYXNzOmZ1bmN0aW9uIGFkZFRvb2x0aXBDbGFzcyhwcmV2KXtpZighcHJldil7cmV0dXJuJ2VsLXRvb2x0aXAnO31lbHNle3JldHVybidlbC10b29sdGlwICcrcHJldi5yZXBsYWNlKCdlbC10b29sdGlwJywnJyk7fX0saGFuZGxlU2hvd1BvcHBlcjpmdW5jdGlvbiBoYW5kbGVTaG93UG9wcGVyKCl7dmFyIF90aGlzND10aGlzO2lmKCF0aGlzLmV4cGVjdGVkU3RhdGV8fHRoaXMubWFudWFsKXJldHVybjtjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0KTt0aGlzLnRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpe190aGlzNC5zaG93UG9wcGVyPXRydWU7fSx0aGlzLm9wZW5EZWxheSk7aWYodGhpcy5oaWRlQWZ0ZXI+MCl7dGhpcy50aW1lb3V0UGVuZGluZz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7X3RoaXM0LnNob3dQb3BwZXI9ZmFsc2U7fSx0aGlzLmhpZGVBZnRlcik7fX0saGFuZGxlQ2xvc2VQb3BwZXI6ZnVuY3Rpb24gaGFuZGxlQ2xvc2VQb3BwZXIoKXtpZih0aGlzLmVudGVyYWJsZSYmdGhpcy5leHBlY3RlZFN0YXRlfHx0aGlzLm1hbnVhbClyZXR1cm47Y2xlYXJUaW1lb3V0KHRoaXMudGltZW91dCk7aWYodGhpcy50aW1lb3V0UGVuZGluZyl7Y2xlYXJUaW1lb3V0KHRoaXMudGltZW91dFBlbmRpbmcpO310aGlzLnNob3dQb3BwZXI9ZmFsc2U7aWYodGhpcy5kaXNhYmxlZCl7dGhpcy5kb0Rlc3Ryb3koKTt9fSxzZXRFeHBlY3RlZFN0YXRlOmZ1bmN0aW9uIHNldEV4cGVjdGVkU3RhdGUoZXhwZWN0ZWRTdGF0ZSl7aWYoZXhwZWN0ZWRTdGF0ZT09PWZhbHNlKXtjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0UGVuZGluZyk7fXRoaXMuZXhwZWN0ZWRTdGF0ZT1leHBlY3RlZFN0YXRlO30sZ2V0Rmlyc3RFbGVtZW50OmZ1bmN0aW9uIGdldEZpcnN0RWxlbWVudCgpe3ZhciBzbG90cz10aGlzLiRzbG90cy5kZWZhdWx0O2lmKCFBcnJheS5pc0FycmF5KHNsb3RzKSlyZXR1cm4gbnVsbDt2YXIgZWxlbWVudD1udWxsO2Zvcih2YXIgaW5kZXg9MDtpbmRleDxzbG90cy5sZW5ndGg7aW5kZXgrKyl7aWYoc2xvdHNbaW5kZXhdJiZzbG90c1tpbmRleF0udGFnKXtlbGVtZW50PXNsb3RzW2luZGV4XTt9O31yZXR1cm4gZWxlbWVudDt9fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXt0aGlzLnBvcHBlclZNJiZ0aGlzLnBvcHBlclZNLiRkZXN0cm95KCk7fSxkZXN0cm95ZWQ6ZnVuY3Rpb24gZGVzdHJveWVkKCl7dmFyIHJlZmVyZW5jZT10aGlzLnJlZmVyZW5jZUVsbTtpZihyZWZlcmVuY2Uubm9kZVR5cGU9PT0xKXtPYmplY3QoZG9tX1sib2ZmIl0pKHJlZmVyZW5jZSwnbW91c2VlbnRlcicsdGhpcy5zaG93KTtPYmplY3QoZG9tX1sib2ZmIl0pKHJlZmVyZW5jZSwnbW91c2VsZWF2ZScsdGhpcy5oaWRlKTtPYmplY3QoZG9tX1sib2ZmIl0pKHJlZmVyZW5jZSwnZm9jdXMnLHRoaXMuaGFuZGxlRm9jdXMpO09iamVjdChkb21fWyJvZmYiXSkocmVmZXJlbmNlLCdibHVyJyx0aGlzLmhhbmRsZUJsdXIpO09iamVjdChkb21fWyJvZmYiXSkocmVmZXJlbmNlLCdjbGljaycsdGhpcy5yZW1vdmVGb2N1c2luZyk7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdG9vbHRpcC9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHNyY19tYWluLm5hbWUsc3JjX21haW4pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc190b29sdGlwPXNyY19tYWluOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvbWVzc2FnZS1ib3gvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTZiMjliMDEyJgp2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzZiMjliMDEyX3JlbmRlcj1mdW5jdGlvbiBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNmIyOWIwMTJfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJ0cmFuc2l0aW9uIix7YXR0cnM6e25hbWU6Im1zZ2JveC1mYWRlIn19LFtfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUsZXhwcmVzc2lvbjoidmlzaWJsZSJ9XSxzdGF0aWNDbGFzczoiZWwtbWVzc2FnZS1ib3hfX3dyYXBwZXIiLGF0dHJzOnt0YWJpbmRleDoiLTEiLHJvbGU6ImRpYWxvZyIsImFyaWEtbW9kYWwiOiJ0cnVlIiwiYXJpYS1sYWJlbCI6X3ZtLnRpdGxlfHwiZGlhbG9nIn0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldCE9PSRldmVudC5jdXJyZW50VGFyZ2V0KXtyZXR1cm4gbnVsbDt9cmV0dXJuIF92bS5oYW5kbGVXcmFwcGVyQ2xpY2soJGV2ZW50KTt9fX0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtbWVzc2FnZS1ib3giLGNsYXNzOltfdm0uY3VzdG9tQ2xhc3MsX3ZtLmNlbnRlciYmImVsLW1lc3NhZ2UtYm94LS1jZW50ZXIiXX0sW192bS50aXRsZSE9PW51bGw/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1tZXNzYWdlLWJveF9faGVhZGVyIn0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtbWVzc2FnZS1ib3hfX3RpdGxlIn0sW192bS5pY29uJiZfdm0uY2VudGVyP19jKCJkaXYiLHtjbGFzczpbImVsLW1lc3NhZ2UtYm94X19zdGF0dXMiLF92bS5pY29uXX0pOl92bS5fZSgpLF9jKCJzcGFuIixbX3ZtLl92KF92bS5fcyhfdm0udGl0bGUpKV0pXSksX3ZtLnNob3dDbG9zZT9fYygiYnV0dG9uIix7c3RhdGljQ2xhc3M6ImVsLW1lc3NhZ2UtYm94X19oZWFkZXJidG4iLGF0dHJzOnt0eXBlOiJidXR0b24iLCJhcmlhLWxhYmVsIjoiQ2xvc2UifSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtfdm0uaGFuZGxlQWN0aW9uKF92bS5kaXN0aW5ndWlzaENhbmNlbEFuZENsb3NlPyJjbG9zZSI6ImNhbmNlbCIpO30sa2V5ZG93bjpmdW5jdGlvbiBrZXlkb3duKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwiZW50ZXIiLDEzLCRldmVudC5rZXksIkVudGVyIikpe3JldHVybiBudWxsO31fdm0uaGFuZGxlQWN0aW9uKF92bS5kaXN0aW5ndWlzaENhbmNlbEFuZENsb3NlPyJjbG9zZSI6ImNhbmNlbCIpO319fSxbX2MoImkiLHtzdGF0aWNDbGFzczoiZWwtbWVzc2FnZS1ib3hfX2Nsb3NlIGVsLWljb24tY2xvc2UifSldKTpfdm0uX2UoKV0pOl92bS5fZSgpLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtbWVzc2FnZS1ib3hfX2NvbnRlbnQifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1tZXNzYWdlLWJveF9fY29udGFpbmVyIn0sW192bS5pY29uJiYhX3ZtLmNlbnRlciYmX3ZtLm1lc3NhZ2UhPT0iIj9fYygiZGl2Iix7Y2xhc3M6WyJlbC1tZXNzYWdlLWJveF9fc3RhdHVzIixfdm0uaWNvbl19KTpfdm0uX2UoKSxfdm0ubWVzc2FnZSE9PSIiP19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtbWVzc2FnZS1ib3hfX21lc3NhZ2UifSxbX3ZtLl90KCJkZWZhdWx0IixbIV92bS5kYW5nZXJvdXNseVVzZUhUTUxTdHJpbmc/X2MoInAiLFtfdm0uX3YoX3ZtLl9zKF92bS5tZXNzYWdlKSldKTpfYygicCIse2RvbVByb3BzOntpbm5lckhUTUw6X3ZtLl9zKF92bS5tZXNzYWdlKX19KV0pXSwyKTpfdm0uX2UoKV0pLF9jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0uc2hvd0lucHV0LGV4cHJlc3Npb246InNob3dJbnB1dCJ9XSxzdGF0aWNDbGFzczoiZWwtbWVzc2FnZS1ib3hfX2lucHV0In0sW19jKCJlbC1pbnB1dCIse3JlZjoiaW5wdXQiLGF0dHJzOnt0eXBlOl92bS5pbnB1dFR5cGUscGxhY2Vob2xkZXI6X3ZtLmlucHV0UGxhY2Vob2xkZXJ9LG5hdGl2ZU9uOntrZXlkb3duOmZ1bmN0aW9uIGtleWRvd24oJGV2ZW50KXtpZighKCJidXR0b24iaW4gJGV2ZW50KSYmX3ZtLl9rKCRldmVudC5rZXlDb2RlLCJlbnRlciIsMTMsJGV2ZW50LmtleSwiRW50ZXIiKSl7cmV0dXJuIG51bGw7fXJldHVybiBfdm0uaGFuZGxlSW5wdXRFbnRlcigkZXZlbnQpO319LG1vZGVsOnt2YWx1ZTpfdm0uaW5wdXRWYWx1ZSxjYWxsYmFjazpmdW5jdGlvbiBjYWxsYmFjaygkJHYpe192bS5pbnB1dFZhbHVlPSQkdjt9LGV4cHJlc3Npb246ImlucHV0VmFsdWUifX0pLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtbWVzc2FnZS1ib3hfX2Vycm9ybXNnIixzdHlsZTp7dmlzaWJpbGl0eTohIV92bS5lZGl0b3JFcnJvck1lc3NhZ2U/InZpc2libGUiOiJoaWRkZW4ifX0sW192bS5fdihfdm0uX3MoX3ZtLmVkaXRvckVycm9yTWVzc2FnZSkpXSldLDEpXSksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1tZXNzYWdlLWJveF9fYnRucyJ9LFtfdm0uc2hvd0NhbmNlbEJ1dHRvbj9fYygiZWwtYnV0dG9uIix7Y2xhc3M6W192bS5jYW5jZWxCdXR0b25DbGFzc2VzXSxhdHRyczp7bG9hZGluZzpfdm0uY2FuY2VsQnV0dG9uTG9hZGluZyxyb3VuZDpfdm0ucm91bmRCdXR0b24sc2l6ZToic21hbGwifSxvbjp7a2V5ZG93bjpmdW5jdGlvbiBrZXlkb3duKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwiZW50ZXIiLDEzLCRldmVudC5rZXksIkVudGVyIikpe3JldHVybiBudWxsO31fdm0uaGFuZGxlQWN0aW9uKCJjYW5jZWwiKTt9fSxuYXRpdmVPbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtfdm0uaGFuZGxlQWN0aW9uKCJjYW5jZWwiKTt9fX0sW192bS5fdigiXG4gICAgICAgICAgIitfdm0uX3MoX3ZtLmNhbmNlbEJ1dHRvblRleHR8fF92bS50KCJlbC5tZXNzYWdlYm94LmNhbmNlbCIpKSsiXG4gICAgICAgICIpXSk6X3ZtLl9lKCksX2MoImVsLWJ1dHRvbiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5zaG93Q29uZmlybUJ1dHRvbixleHByZXNzaW9uOiJzaG93Q29uZmlybUJ1dHRvbiJ9XSxyZWY6ImNvbmZpcm0iLGNsYXNzOltfdm0uY29uZmlybUJ1dHRvbkNsYXNzZXNdLGF0dHJzOntsb2FkaW5nOl92bS5jb25maXJtQnV0dG9uTG9hZGluZyxyb3VuZDpfdm0ucm91bmRCdXR0b24sc2l6ZToic21hbGwifSxvbjp7a2V5ZG93bjpmdW5jdGlvbiBrZXlkb3duKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwiZW50ZXIiLDEzLCRldmVudC5rZXksIkVudGVyIikpe3JldHVybiBudWxsO31fdm0uaGFuZGxlQWN0aW9uKCJjb25maXJtIik7fX0sbmF0aXZlT246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLmhhbmRsZUFjdGlvbigiY29uZmlybSIpO319fSxbX3ZtLl92KCJcbiAgICAgICAgICAiK192bS5fcyhfdm0uY29uZmlybUJ1dHRvblRleHR8fF92bS50KCJlbC5tZXNzYWdlYm94LmNvbmZpcm0iKSkrIlxuICAgICAgICAiKV0pXSwxKV0pXSldKTt9O3ZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNmIyOWIwMTJfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF82YjI5YjAxMl9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVzc2FnZS1ib3gvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTZiMjliMDEyJgovLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi9sb2NhbGUiCnZhciBsaWJfbG9jYWxlXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDE1KTt2YXIgbGliX2xvY2FsZV9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4obGliX2xvY2FsZV8pOy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3V0aWxzL2FyaWEtZGlhbG9nIgp2YXIgYXJpYV9kaWFsb2dfPV9fd2VicGFja19yZXF1aXJlX18oMzkpO3ZhciBhcmlhX2RpYWxvZ19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oYXJpYV9kaWFsb2dfKTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9tZXNzYWdlLWJveC9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBtZXNzYWdlQm94PXZvaWQgMDt2YXIgdHlwZU1hcD17c3VjY2Vzczonc3VjY2VzcycsaW5mbzonaW5mbycsd2FybmluZzond2FybmluZycsZXJyb3I6J2Vycm9yJ307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBtZXNzYWdlX2JveF9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bWl4aW5zOltwb3B1cF9kZWZhdWx0LmEsbG9jYWxlX2RlZmF1bHQuYV0scHJvcHM6e21vZGFsOntkZWZhdWx0OnRydWV9LGxvY2tTY3JvbGw6e2RlZmF1bHQ6dHJ1ZX0sc2hvd0Nsb3NlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxjbG9zZU9uQ2xpY2tNb2RhbDp7ZGVmYXVsdDp0cnVlfSxjbG9zZU9uUHJlc3NFc2NhcGU6e2RlZmF1bHQ6dHJ1ZX0sY2xvc2VPbkhhc2hDaGFuZ2U6e2RlZmF1bHQ6dHJ1ZX0sY2VudGVyOntkZWZhdWx0OmZhbHNlLHR5cGU6Qm9vbGVhbn0scm91bmRCdXR0b246e2RlZmF1bHQ6ZmFsc2UsdHlwZTpCb29sZWFufX0sY29tcG9uZW50czp7RWxJbnB1dDppbnB1dF9kZWZhdWx0LmEsRWxCdXR0b246YnV0dG9uX2RlZmF1bHQuYX0sY29tcHV0ZWQ6e2ljb246ZnVuY3Rpb24gaWNvbigpe3ZhciB0eXBlPXRoaXMudHlwZSxpY29uQ2xhc3M9dGhpcy5pY29uQ2xhc3M7cmV0dXJuIGljb25DbGFzc3x8KHR5cGUmJnR5cGVNYXBbdHlwZV0/J2VsLWljb24tJyt0eXBlTWFwW3R5cGVdOicnKTt9LGNvbmZpcm1CdXR0b25DbGFzc2VzOmZ1bmN0aW9uIGNvbmZpcm1CdXR0b25DbGFzc2VzKCl7cmV0dXJuJ2VsLWJ1dHRvbi0tcHJpbWFyeSAnK3RoaXMuY29uZmlybUJ1dHRvbkNsYXNzO30sY2FuY2VsQnV0dG9uQ2xhc3NlczpmdW5jdGlvbiBjYW5jZWxCdXR0b25DbGFzc2VzKCl7cmV0dXJuJycrdGhpcy5jYW5jZWxCdXR0b25DbGFzczt9fSxtZXRob2RzOntnZXRTYWZlQ2xvc2U6ZnVuY3Rpb24gZ2V0U2FmZUNsb3NlKCl7dmFyIF90aGlzPXRoaXM7dmFyIGN1cnJlbnRJZD10aGlzLnVpZDtyZXR1cm4gZnVuY3Rpb24oKXtfdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZihjdXJyZW50SWQ9PT1fdGhpcy51aWQpX3RoaXMuZG9DbG9zZSgpO30pO307fSxkb0Nsb3NlOmZ1bmN0aW9uIGRvQ2xvc2UoKXt2YXIgX3RoaXMyPXRoaXM7aWYoIXRoaXMudmlzaWJsZSlyZXR1cm47dGhpcy52aXNpYmxlPWZhbHNlO3RoaXMuX2Nsb3Npbmc9dHJ1ZTt0aGlzLm9uQ2xvc2UmJnRoaXMub25DbG9zZSgpO21lc3NhZ2VCb3guY2xvc2VEaWFsb2coKTsvLyDop6Pnu5EKaWYodGhpcy5sb2NrU2Nyb2xsKXtzZXRUaW1lb3V0KHRoaXMucmVzdG9yZUJvZHlTdHlsZSwyMDApO310aGlzLm9wZW5lZD1mYWxzZTt0aGlzLmRvQWZ0ZXJDbG9zZSgpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtpZihfdGhpczIuYWN0aW9uKV90aGlzMi5jYWxsYmFjayhfdGhpczIuYWN0aW9uLF90aGlzMik7fSk7fSxoYW5kbGVXcmFwcGVyQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlV3JhcHBlckNsaWNrKCl7aWYodGhpcy5jbG9zZU9uQ2xpY2tNb2RhbCl7dGhpcy5oYW5kbGVBY3Rpb24odGhpcy5kaXN0aW5ndWlzaENhbmNlbEFuZENsb3NlPydjbG9zZSc6J2NhbmNlbCcpO319LGhhbmRsZUlucHV0RW50ZXI6ZnVuY3Rpb24gaGFuZGxlSW5wdXRFbnRlcigpe2lmKHRoaXMuaW5wdXRUeXBlIT09J3RleHRhcmVhJyl7cmV0dXJuIHRoaXMuaGFuZGxlQWN0aW9uKCdjb25maXJtJyk7fX0saGFuZGxlQWN0aW9uOmZ1bmN0aW9uIGhhbmRsZUFjdGlvbihhY3Rpb24pe2lmKHRoaXMuJHR5cGU9PT0ncHJvbXB0JyYmYWN0aW9uPT09J2NvbmZpcm0nJiYhdGhpcy52YWxpZGF0ZSgpKXtyZXR1cm47fXRoaXMuYWN0aW9uPWFjdGlvbjtpZih0eXBlb2YgdGhpcy5iZWZvcmVDbG9zZT09PSdmdW5jdGlvbicpe3RoaXMuY2xvc2U9dGhpcy5nZXRTYWZlQ2xvc2UoKTt0aGlzLmJlZm9yZUNsb3NlKGFjdGlvbix0aGlzLHRoaXMuY2xvc2UpO31lbHNle3RoaXMuZG9DbG9zZSgpO319LHZhbGlkYXRlOmZ1bmN0aW9uIHZhbGlkYXRlKCl7aWYodGhpcy4kdHlwZT09PSdwcm9tcHQnKXt2YXIgaW5wdXRQYXR0ZXJuPXRoaXMuaW5wdXRQYXR0ZXJuO2lmKGlucHV0UGF0dGVybiYmIWlucHV0UGF0dGVybi50ZXN0KHRoaXMuaW5wdXRWYWx1ZXx8JycpKXt0aGlzLmVkaXRvckVycm9yTWVzc2FnZT10aGlzLmlucHV0RXJyb3JNZXNzYWdlfHxPYmplY3QobGliX2xvY2FsZV9bInQiXSkoJ2VsLm1lc3NhZ2Vib3guZXJyb3InKTtPYmplY3QoZG9tX1siYWRkQ2xhc3MiXSkodGhpcy5nZXRJbnB1dEVsZW1lbnQoKSwnaW52YWxpZCcpO3JldHVybiBmYWxzZTt9dmFyIGlucHV0VmFsaWRhdG9yPXRoaXMuaW5wdXRWYWxpZGF0b3I7aWYodHlwZW9mIGlucHV0VmFsaWRhdG9yPT09J2Z1bmN0aW9uJyl7dmFyIHZhbGlkYXRlUmVzdWx0PWlucHV0VmFsaWRhdG9yKHRoaXMuaW5wdXRWYWx1ZSk7aWYodmFsaWRhdGVSZXN1bHQ9PT1mYWxzZSl7dGhpcy5lZGl0b3JFcnJvck1lc3NhZ2U9dGhpcy5pbnB1dEVycm9yTWVzc2FnZXx8T2JqZWN0KGxpYl9sb2NhbGVfWyJ0Il0pKCdlbC5tZXNzYWdlYm94LmVycm9yJyk7T2JqZWN0KGRvbV9bImFkZENsYXNzIl0pKHRoaXMuZ2V0SW5wdXRFbGVtZW50KCksJ2ludmFsaWQnKTtyZXR1cm4gZmFsc2U7fWlmKHR5cGVvZiB2YWxpZGF0ZVJlc3VsdD09PSdzdHJpbmcnKXt0aGlzLmVkaXRvckVycm9yTWVzc2FnZT12YWxpZGF0ZVJlc3VsdDtPYmplY3QoZG9tX1siYWRkQ2xhc3MiXSkodGhpcy5nZXRJbnB1dEVsZW1lbnQoKSwnaW52YWxpZCcpO3JldHVybiBmYWxzZTt9fX10aGlzLmVkaXRvckVycm9yTWVzc2FnZT0nJztPYmplY3QoZG9tX1sicmVtb3ZlQ2xhc3MiXSkodGhpcy5nZXRJbnB1dEVsZW1lbnQoKSwnaW52YWxpZCcpO3JldHVybiB0cnVlO30sZ2V0Rmlyc3RGb2N1czpmdW5jdGlvbiBnZXRGaXJzdEZvY3VzKCl7dmFyIGJ0bj10aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcuZWwtbWVzc2FnZS1ib3hfX2J0bnMgLmVsLWJ1dHRvbicpO3ZhciB0aXRsZT10aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcuZWwtbWVzc2FnZS1ib3hfX2J0bnMgLmVsLW1lc3NhZ2UtYm94X190aXRsZScpO3JldHVybiBidG58fHRpdGxlO30sZ2V0SW5wdXRFbGVtZW50OmZ1bmN0aW9uIGdldElucHV0RWxlbWVudCgpe3ZhciBpbnB1dFJlZnM9dGhpcy4kcmVmcy5pbnB1dC4kcmVmcztyZXR1cm4gaW5wdXRSZWZzLmlucHV0fHxpbnB1dFJlZnMudGV4dGFyZWE7fSxoYW5kbGVDbG9zZTpmdW5jdGlvbiBoYW5kbGVDbG9zZSgpe3RoaXMuaGFuZGxlQWN0aW9uKCdjbG9zZScpO319LHdhdGNoOntpbnB1dFZhbHVlOntpbW1lZGlhdGU6dHJ1ZSxoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIodmFsKXt2YXIgX3RoaXMzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oXyl7aWYoX3RoaXMzLiR0eXBlPT09J3Byb21wdCcmJnZhbCE9PW51bGwpe190aGlzMy52YWxpZGF0ZSgpO319KTt9fSx2aXNpYmxlOmZ1bmN0aW9uIHZpc2libGUodmFsKXt2YXIgX3RoaXM0PXRoaXM7aWYodmFsKXt0aGlzLnVpZCsrO2lmKHRoaXMuJHR5cGU9PT0nYWxlcnQnfHx0aGlzLiR0eXBlPT09J2NvbmZpcm0nKXt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzNC4kcmVmcy5jb25maXJtLiRlbC5mb2N1cygpO30pO310aGlzLmZvY3VzQWZ0ZXJDbG9zZWQ9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDttZXNzYWdlQm94PW5ldyBhcmlhX2RpYWxvZ19kZWZhdWx0LmEodGhpcy4kZWwsdGhpcy5mb2N1c0FmdGVyQ2xvc2VkLHRoaXMuZ2V0Rmlyc3RGb2N1cygpKTt9Ly8gcHJvbXB0CmlmKHRoaXMuJHR5cGUhPT0ncHJvbXB0JylyZXR1cm47aWYodmFsKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoX3RoaXM0LiRyZWZzLmlucHV0JiZfdGhpczQuJHJlZnMuaW5wdXQuJGVsKXtfdGhpczQuZ2V0SW5wdXRFbGVtZW50KCkuZm9jdXMoKTt9fSw1MDApO31lbHNle3RoaXMuZWRpdG9yRXJyb3JNZXNzYWdlPScnO09iamVjdChkb21fWyJyZW1vdmVDbGFzcyJdKSh0aGlzLmdldElucHV0RWxlbWVudCgpLCdpbnZhbGlkJyk7fX19LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciBfdGhpczU9dGhpczt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe2lmKF90aGlzNS5jbG9zZU9uSGFzaENoYW5nZSl7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2hhc2hjaGFuZ2UnLF90aGlzNS5jbG9zZSk7fX0pO30sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7aWYodGhpcy5jbG9zZU9uSGFzaENoYW5nZSl7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2hhc2hjaGFuZ2UnLHRoaXMuY2xvc2UpO31zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bWVzc2FnZUJveC5jbG9zZURpYWxvZygpO30pO30sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3VpZDoxLHRpdGxlOnVuZGVmaW5lZCxtZXNzYWdlOicnLHR5cGU6JycsaWNvbkNsYXNzOicnLGN1c3RvbUNsYXNzOicnLHNob3dJbnB1dDpmYWxzZSxpbnB1dFZhbHVlOm51bGwsaW5wdXRQbGFjZWhvbGRlcjonJyxpbnB1dFR5cGU6J3RleHQnLGlucHV0UGF0dGVybjpudWxsLGlucHV0VmFsaWRhdG9yOm51bGwsaW5wdXRFcnJvck1lc3NhZ2U6Jycsc2hvd0NvbmZpcm1CdXR0b246dHJ1ZSxzaG93Q2FuY2VsQnV0dG9uOmZhbHNlLGFjdGlvbjonJyxjb25maXJtQnV0dG9uVGV4dDonJyxjYW5jZWxCdXR0b25UZXh0OicnLGNvbmZpcm1CdXR0b25Mb2FkaW5nOmZhbHNlLGNhbmNlbEJ1dHRvbkxvYWRpbmc6ZmFsc2UsY29uZmlybUJ1dHRvbkNsYXNzOicnLGNvbmZpcm1CdXR0b25EaXNhYmxlZDpmYWxzZSxjYW5jZWxCdXR0b25DbGFzczonJyxlZGl0b3JFcnJvck1lc3NhZ2U6bnVsbCxjYWxsYmFjazpudWxsLGRhbmdlcm91c2x5VXNlSFRNTFN0cmluZzpmYWxzZSxmb2N1c0FmdGVyQ2xvc2VkOm51bGwsaXNPbkNvbXBvc2l0aW9uOmZhbHNlLGRpc3Rpbmd1aXNoQ2FuY2VsQW5kQ2xvc2U6ZmFsc2V9O319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVzc2FnZS1ib3gvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX21lc3NhZ2VfYm94X3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPW1lc3NhZ2VfYm94X3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVzc2FnZS1ib3gvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19tZXNzYWdlX2JveF9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNmIyOWIwMTJfcmVuZGVyLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF82YjI5YjAxMl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHNyY19tYWluX2FwaTt9c3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9tZXNzYWdlLWJveC9zcmMvbWFpbi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbWVzc2FnZV9ib3hfc3JjX21haW49c3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvdXRpbHMvdmRvbSIKdmFyIHZkb21fPV9fd2VicGFja19yZXF1aXJlX18oMjMpOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVzc2FnZS1ib3gvc3JjL21haW4uanMKdmFyIG1haW5fdHlwZW9mPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZfdHlwZW9mMihTeW1ib2wuaXRlcmF0b3IpPT09InN5bWJvbCI/ZnVuY3Rpb24ob2JqKXtyZXR1cm4gX3R5cGVvZjIob2JqKTt9OmZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiYmdHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9iai5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmb2JqIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjpfdHlwZW9mMihvYmopO307dmFyIG1haW5fZGVmYXVsdHM9e3RpdGxlOm51bGwsbWVzc2FnZTonJyx0eXBlOicnLGljb25DbGFzczonJyxzaG93SW5wdXQ6ZmFsc2Usc2hvd0Nsb3NlOnRydWUsbW9kYWxGYWRlOnRydWUsbG9ja1Njcm9sbDp0cnVlLGNsb3NlT25DbGlja01vZGFsOnRydWUsY2xvc2VPblByZXNzRXNjYXBlOnRydWUsY2xvc2VPbkhhc2hDaGFuZ2U6dHJ1ZSxpbnB1dFZhbHVlOm51bGwsaW5wdXRQbGFjZWhvbGRlcjonJyxpbnB1dFR5cGU6J3RleHQnLGlucHV0UGF0dGVybjpudWxsLGlucHV0VmFsaWRhdG9yOm51bGwsaW5wdXRFcnJvck1lc3NhZ2U6Jycsc2hvd0NvbmZpcm1CdXR0b246dHJ1ZSxzaG93Q2FuY2VsQnV0dG9uOmZhbHNlLGNvbmZpcm1CdXR0b25Qb3NpdGlvbjoncmlnaHQnLGNvbmZpcm1CdXR0b25IaWdobGlnaHQ6ZmFsc2UsY2FuY2VsQnV0dG9uSGlnaGxpZ2h0OmZhbHNlLGNvbmZpcm1CdXR0b25UZXh0OicnLGNhbmNlbEJ1dHRvblRleHQ6JycsY29uZmlybUJ1dHRvbkNsYXNzOicnLGNhbmNlbEJ1dHRvbkNsYXNzOicnLGN1c3RvbUNsYXNzOicnLGJlZm9yZUNsb3NlOm51bGwsZGFuZ2Vyb3VzbHlVc2VIVE1MU3RyaW5nOmZhbHNlLGNlbnRlcjpmYWxzZSxyb3VuZEJ1dHRvbjpmYWxzZSxkaXN0aW5ndWlzaENhbmNlbEFuZENsb3NlOmZhbHNlfTt2YXIgTWVzc2FnZUJveENvbnN0cnVjdG9yPWV4dGVybmFsX3Z1ZV9kZWZhdWx0LmEuZXh0ZW5kKG1lc3NhZ2VfYm94X3NyY19tYWluKTt2YXIgY3VycmVudE1zZz12b2lkIDAsbWFpbl9pbnN0YW5jZT12b2lkIDA7dmFyIG1zZ1F1ZXVlPVtdO3ZhciBkZWZhdWx0Q2FsbGJhY2s9ZnVuY3Rpb24gZGVmYXVsdENhbGxiYWNrKGFjdGlvbil7aWYoY3VycmVudE1zZyl7dmFyIGNhbGxiYWNrPWN1cnJlbnRNc2cuY2FsbGJhY2s7aWYodHlwZW9mIGNhbGxiYWNrPT09J2Z1bmN0aW9uJyl7aWYobWFpbl9pbnN0YW5jZS5zaG93SW5wdXQpe2NhbGxiYWNrKG1haW5faW5zdGFuY2UuaW5wdXRWYWx1ZSxhY3Rpb24pO31lbHNle2NhbGxiYWNrKGFjdGlvbik7fX1pZihjdXJyZW50TXNnLnJlc29sdmUpe2lmKGFjdGlvbj09PSdjb25maXJtJyl7aWYobWFpbl9pbnN0YW5jZS5zaG93SW5wdXQpe2N1cnJlbnRNc2cucmVzb2x2ZSh7dmFsdWU6bWFpbl9pbnN0YW5jZS5pbnB1dFZhbHVlLGFjdGlvbjphY3Rpb259KTt9ZWxzZXtjdXJyZW50TXNnLnJlc29sdmUoYWN0aW9uKTt9fWVsc2UgaWYoY3VycmVudE1zZy5yZWplY3QmJihhY3Rpb249PT0nY2FuY2VsJ3x8YWN0aW9uPT09J2Nsb3NlJykpe2N1cnJlbnRNc2cucmVqZWN0KGFjdGlvbik7fX19fTt2YXIgaW5pdEluc3RhbmNlPWZ1bmN0aW9uIGluaXRJbnN0YW5jZSgpe21haW5faW5zdGFuY2U9bmV3IE1lc3NhZ2VCb3hDb25zdHJ1Y3Rvcih7ZWw6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyl9KTttYWluX2luc3RhbmNlLmNhbGxiYWNrPWRlZmF1bHRDYWxsYmFjazt9O3ZhciBtYWluX3Nob3dOZXh0TXNnPWZ1bmN0aW9uIHNob3dOZXh0TXNnKCl7aWYoIW1haW5faW5zdGFuY2Upe2luaXRJbnN0YW5jZSgpO31tYWluX2luc3RhbmNlLmFjdGlvbj0nJztpZighbWFpbl9pbnN0YW5jZS52aXNpYmxlfHxtYWluX2luc3RhbmNlLmNsb3NlVGltZXIpe2lmKG1zZ1F1ZXVlLmxlbmd0aD4wKXtjdXJyZW50TXNnPW1zZ1F1ZXVlLnNoaWZ0KCk7dmFyIG9wdGlvbnM9Y3VycmVudE1zZy5vcHRpb25zO2Zvcih2YXIgcHJvcCBpbiBvcHRpb25zKXtpZihvcHRpb25zLmhhc093blByb3BlcnR5KHByb3ApKXttYWluX2luc3RhbmNlW3Byb3BdPW9wdGlvbnNbcHJvcF07fX1pZihvcHRpb25zLmNhbGxiYWNrPT09dW5kZWZpbmVkKXttYWluX2luc3RhbmNlLmNhbGxiYWNrPWRlZmF1bHRDYWxsYmFjazt9dmFyIG9sZENiPW1haW5faW5zdGFuY2UuY2FsbGJhY2s7bWFpbl9pbnN0YW5jZS5jYWxsYmFjaz1mdW5jdGlvbihhY3Rpb24saW5zdGFuY2Upe29sZENiKGFjdGlvbixpbnN0YW5jZSk7c2hvd05leHRNc2coKTt9O2lmKE9iamVjdCh2ZG9tX1siaXNWTm9kZSJdKShtYWluX2luc3RhbmNlLm1lc3NhZ2UpKXttYWluX2luc3RhbmNlLiRzbG90cy5kZWZhdWx0PVttYWluX2luc3RhbmNlLm1lc3NhZ2VdO21haW5faW5zdGFuY2UubWVzc2FnZT1udWxsO31lbHNle2RlbGV0ZSBtYWluX2luc3RhbmNlLiRzbG90cy5kZWZhdWx0O31bJ21vZGFsJywnc2hvd0Nsb3NlJywnY2xvc2VPbkNsaWNrTW9kYWwnLCdjbG9zZU9uUHJlc3NFc2NhcGUnLCdjbG9zZU9uSGFzaENoYW5nZSddLmZvckVhY2goZnVuY3Rpb24ocHJvcCl7aWYobWFpbl9pbnN0YW5jZVtwcm9wXT09PXVuZGVmaW5lZCl7bWFpbl9pbnN0YW5jZVtwcm9wXT10cnVlO319KTtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1haW5faW5zdGFuY2UuJGVsKTtleHRlcm5hbF92dWVfZGVmYXVsdC5hLm5leHRUaWNrKGZ1bmN0aW9uKCl7bWFpbl9pbnN0YW5jZS52aXNpYmxlPXRydWU7fSk7fX19O3ZhciBtYWluX01lc3NhZ2VCb3g9ZnVuY3Rpb24gTWVzc2FnZUJveChvcHRpb25zLGNhbGxiYWNrKXtpZihleHRlcm5hbF92dWVfZGVmYXVsdC5hLnByb3RvdHlwZS4kaXNTZXJ2ZXIpcmV0dXJuO2lmKHR5cGVvZiBvcHRpb25zPT09J3N0cmluZyd8fE9iamVjdCh2ZG9tX1siaXNWTm9kZSJdKShvcHRpb25zKSl7b3B0aW9ucz17bWVzc2FnZTpvcHRpb25zfTtpZih0eXBlb2YgYXJndW1lbnRzWzFdPT09J3N0cmluZycpe29wdGlvbnMudGl0bGU9YXJndW1lbnRzWzFdO319ZWxzZSBpZihvcHRpb25zLmNhbGxiYWNrJiYhY2FsbGJhY2spe2NhbGxiYWNrPW9wdGlvbnMuY2FsbGJhY2s7fWlmKHR5cGVvZiBQcm9taXNlIT09J3VuZGVmaW5lZCcpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7Ly8gZXNsaW50LWRpc2FibGUtbGluZQptc2dRdWV1ZS5wdXNoKHtvcHRpb25zOm1lcmdlX2RlZmF1bHQoKSh7fSxtYWluX2RlZmF1bHRzLE1lc3NhZ2VCb3guZGVmYXVsdHMsb3B0aW9ucyksY2FsbGJhY2s6Y2FsbGJhY2sscmVzb2x2ZTpyZXNvbHZlLHJlamVjdDpyZWplY3R9KTttYWluX3Nob3dOZXh0TXNnKCk7fSk7fWVsc2V7bXNnUXVldWUucHVzaCh7b3B0aW9uczptZXJnZV9kZWZhdWx0KCkoe30sbWFpbl9kZWZhdWx0cyxNZXNzYWdlQm94LmRlZmF1bHRzLG9wdGlvbnMpLGNhbGxiYWNrOmNhbGxiYWNrfSk7bWFpbl9zaG93TmV4dE1zZygpO319O21haW5fTWVzc2FnZUJveC5zZXREZWZhdWx0cz1mdW5jdGlvbihkZWZhdWx0cyl7bWFpbl9NZXNzYWdlQm94LmRlZmF1bHRzPWRlZmF1bHRzO307bWFpbl9NZXNzYWdlQm94LmFsZXJ0PWZ1bmN0aW9uKG1lc3NhZ2UsdGl0bGUsb3B0aW9ucyl7aWYoKHR5cGVvZiB0aXRsZT09PSd1bmRlZmluZWQnPyd1bmRlZmluZWQnOm1haW5fdHlwZW9mKHRpdGxlKSk9PT0nb2JqZWN0Jyl7b3B0aW9ucz10aXRsZTt0aXRsZT0nJzt9ZWxzZSBpZih0aXRsZT09PXVuZGVmaW5lZCl7dGl0bGU9Jyc7fXJldHVybiBtYWluX01lc3NhZ2VCb3gobWVyZ2VfZGVmYXVsdCgpKHt0aXRsZTp0aXRsZSxtZXNzYWdlOm1lc3NhZ2UsJHR5cGU6J2FsZXJ0JyxjbG9zZU9uUHJlc3NFc2NhcGU6ZmFsc2UsY2xvc2VPbkNsaWNrTW9kYWw6ZmFsc2V9LG9wdGlvbnMpKTt9O21haW5fTWVzc2FnZUJveC5jb25maXJtPWZ1bmN0aW9uKG1lc3NhZ2UsdGl0bGUsb3B0aW9ucyl7aWYoKHR5cGVvZiB0aXRsZT09PSd1bmRlZmluZWQnPyd1bmRlZmluZWQnOm1haW5fdHlwZW9mKHRpdGxlKSk9PT0nb2JqZWN0Jyl7b3B0aW9ucz10aXRsZTt0aXRsZT0nJzt9ZWxzZSBpZih0aXRsZT09PXVuZGVmaW5lZCl7dGl0bGU9Jyc7fXJldHVybiBtYWluX01lc3NhZ2VCb3gobWVyZ2VfZGVmYXVsdCgpKHt0aXRsZTp0aXRsZSxtZXNzYWdlOm1lc3NhZ2UsJHR5cGU6J2NvbmZpcm0nLHNob3dDYW5jZWxCdXR0b246dHJ1ZX0sb3B0aW9ucykpO307bWFpbl9NZXNzYWdlQm94LnByb21wdD1mdW5jdGlvbihtZXNzYWdlLHRpdGxlLG9wdGlvbnMpe2lmKCh0eXBlb2YgdGl0bGU9PT0ndW5kZWZpbmVkJz8ndW5kZWZpbmVkJzptYWluX3R5cGVvZih0aXRsZSkpPT09J29iamVjdCcpe29wdGlvbnM9dGl0bGU7dGl0bGU9Jyc7fWVsc2UgaWYodGl0bGU9PT11bmRlZmluZWQpe3RpdGxlPScnO31yZXR1cm4gbWFpbl9NZXNzYWdlQm94KG1lcmdlX2RlZmF1bHQoKSh7dGl0bGU6dGl0bGUsbWVzc2FnZTptZXNzYWdlLHNob3dDYW5jZWxCdXR0b246dHJ1ZSxzaG93SW5wdXQ6dHJ1ZSwkdHlwZToncHJvbXB0J30sb3B0aW9ucykpO307bWFpbl9NZXNzYWdlQm94LmNsb3NlPWZ1bmN0aW9uKCl7bWFpbl9pbnN0YW5jZS5kb0Nsb3NlKCk7bWFpbl9pbnN0YW5jZS52aXNpYmxlPWZhbHNlO21zZ1F1ZXVlPVtdO2N1cnJlbnRNc2c9bnVsbDt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfbWVzc2FnZV9ib3hfc3JjX21haW49bWFpbl9NZXNzYWdlQm94Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVzc2FnZS1ib3gvaW5kZXguanMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBtZXNzYWdlX2JveD1wYWNrYWdlc19tZXNzYWdlX2JveF9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2JyZWFkY3J1bWIvc3JjL2JyZWFkY3J1bWIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTRiNDY0YzA2Jgp2YXIgYnJlYWRjcnVtYnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzRiNDY0YzA2X3JlbmRlcj1mdW5jdGlvbiBicmVhZGNydW1idnVlX3R5cGVfdGVtcGxhdGVfaWRfNGI0NjRjMDZfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtYnJlYWRjcnVtYiIsYXR0cnM6eyJhcmlhLWxhYmVsIjoiQnJlYWRjcnVtYiIscm9sZToibmF2aWdhdGlvbiJ9fSxbX3ZtLl90KCJkZWZhdWx0IildLDIpO307dmFyIGJyZWFkY3J1bWJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF80YjQ2NGMwNl9zdGF0aWNSZW5kZXJGbnM9W107YnJlYWRjcnVtYnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzRiNDY0YzA2X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9icmVhZGNydW1iL3NyYy9icmVhZGNydW1iLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00YjQ2NGMwNiYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvYnJlYWRjcnVtYi9zcmMvYnJlYWRjcnVtYi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYnJlYWRjcnVtYnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxCcmVhZGNydW1iJyxwcm9wczp7c2VwYXJhdG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OicvJ30sc2VwYXJhdG9yQ2xhc3M6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Jyd9fSxwcm92aWRlOmZ1bmN0aW9uIHByb3ZpZGUoKXtyZXR1cm57ZWxCcmVhZGNydW1iOnRoaXN9O30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIGl0ZW1zPXRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5lbC1icmVhZGNydW1iX19pdGVtJyk7aWYoaXRlbXMubGVuZ3RoKXtpdGVtc1tpdGVtcy5sZW5ndGgtMV0uc2V0QXR0cmlidXRlKCdhcmlhLWN1cnJlbnQnLCdwYWdlJyk7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYnJlYWRjcnVtYi9zcmMvYnJlYWRjcnVtYi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2JyZWFkY3J1bWJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189YnJlYWRjcnVtYnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2JyZWFkY3J1bWIvc3JjL2JyZWFkY3J1bWIudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgYnJlYWRjcnVtYl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19icmVhZGNydW1idnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLGJyZWFkY3J1bWJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF80YjQ2NGMwNl9yZW5kZXIsYnJlYWRjcnVtYnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzRiNDY0YzA2X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgYnJlYWRjcnVtYl9hcGk7fWJyZWFkY3J1bWJfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9icmVhZGNydW1iL3NyYy9icmVhZGNydW1iLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBicmVhZGNydW1iPWJyZWFkY3J1bWJfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9icmVhZGNydW1iL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovYnJlYWRjcnVtYi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChicmVhZGNydW1iLm5hbWUsYnJlYWRjcnVtYik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2JyZWFkY3J1bWI9YnJlYWRjcnVtYjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2JyZWFkY3J1bWIvc3JjL2JyZWFkY3J1bWItaXRlbS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZmNmOWVhYWMmCnZhciBicmVhZGNydW1iX2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF9mY2Y5ZWFhY19yZW5kZXI9ZnVuY3Rpb24gYnJlYWRjcnVtYl9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfZmNmOWVhYWNfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWJyZWFkY3J1bWJfX2l0ZW0ifSxbX2MoInNwYW4iLHtyZWY6ImxpbmsiLGNsYXNzOlsiZWwtYnJlYWRjcnVtYl9faW5uZXIiLF92bS50bz8iaXMtbGluayI6IiJdLGF0dHJzOntyb2xlOiJsaW5rIn19LFtfdm0uX3QoImRlZmF1bHQiKV0sMiksX3ZtLnNlcGFyYXRvckNsYXNzP19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWJyZWFkY3J1bWJfX3NlcGFyYXRvciIsY2xhc3M6X3ZtLnNlcGFyYXRvckNsYXNzfSk6X2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtYnJlYWRjcnVtYl9fc2VwYXJhdG9yIixhdHRyczp7cm9sZToicHJlc2VudGF0aW9uIn19LFtfdm0uX3YoX3ZtLl9zKF92bS5zZXBhcmF0b3IpKV0pXSk7fTt2YXIgYnJlYWRjcnVtYl9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfZmNmOWVhYWNfc3RhdGljUmVuZGVyRm5zPVtdO2JyZWFkY3J1bWJfaXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2ZjZjllYWFjX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9icmVhZGNydW1iL3NyYy9icmVhZGNydW1iLWl0ZW0udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWZjZjllYWFjJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9icmVhZGNydW1iL3NyYy9icmVhZGNydW1iLWl0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGJyZWFkY3J1bWJfaXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxCcmVhZGNydW1iSXRlbScscHJvcHM6e3RvOnt9LHJlcGxhY2U6Qm9vbGVhbn0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3NlcGFyYXRvcjonJyxzZXBhcmF0b3JDbGFzczonJ307fSxpbmplY3Q6WydlbEJyZWFkY3J1bWInXSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXM9dGhpczt0aGlzLnNlcGFyYXRvcj10aGlzLmVsQnJlYWRjcnVtYi5zZXBhcmF0b3I7dGhpcy5zZXBhcmF0b3JDbGFzcz10aGlzLmVsQnJlYWRjcnVtYi5zZXBhcmF0b3JDbGFzczt2YXIgbGluaz10aGlzLiRyZWZzLmxpbms7bGluay5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCdsaW5rJyk7bGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsZnVuY3Rpb24oXyl7dmFyIHRvPV90aGlzLnRvLCRyb3V0ZXI9X3RoaXMuJHJvdXRlcjtpZighdG98fCEkcm91dGVyKXJldHVybjtfdGhpcy5yZXBsYWNlPyRyb3V0ZXIucmVwbGFjZSh0byk6JHJvdXRlci5wdXNoKHRvKTt9KTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2JyZWFkY3J1bWIvc3JjL2JyZWFkY3J1bWItaXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2JyZWFkY3J1bWJfaXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1icmVhZGNydW1iX2l0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9icmVhZGNydW1iL3NyYy9icmVhZGNydW1iLWl0ZW0udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgYnJlYWRjcnVtYl9pdGVtX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2JyZWFkY3J1bWJfaXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxicmVhZGNydW1iX2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF9mY2Y5ZWFhY19yZW5kZXIsYnJlYWRjcnVtYl9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfZmNmOWVhYWNfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBicmVhZGNydW1iX2l0ZW1fYXBpO31icmVhZGNydW1iX2l0ZW1fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9icmVhZGNydW1iL3NyYy9icmVhZGNydW1iLWl0ZW0udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGJyZWFkY3J1bWJfaXRlbT1icmVhZGNydW1iX2l0ZW1fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9icmVhZGNydW1iLWl0ZW0vaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9icmVhZGNydW1iX2l0ZW0uaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoYnJlYWRjcnVtYl9pdGVtLm5hbWUsYnJlYWRjcnVtYl9pdGVtKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfYnJlYWRjcnVtYl9pdGVtPWJyZWFkY3J1bWJfaXRlbTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2Zvcm0vc3JjL2Zvcm0udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWExYjVmZjM0Jgp2YXIgZm9ybXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2ExYjVmZjM0X3JlbmRlcj1mdW5jdGlvbiBmb3JtdnVlX3R5cGVfdGVtcGxhdGVfaWRfYTFiNWZmMzRfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJmb3JtIix7c3RhdGljQ2xhc3M6ImVsLWZvcm0iLGNsYXNzOltfdm0ubGFiZWxQb3NpdGlvbj8iZWwtZm9ybS0tbGFiZWwtIitfdm0ubGFiZWxQb3NpdGlvbjoiIix7ImVsLWZvcm0tLWlubGluZSI6X3ZtLmlubGluZX1dfSxbX3ZtLl90KCJkZWZhdWx0IildLDIpO307dmFyIGZvcm12dWVfdHlwZV90ZW1wbGF0ZV9pZF9hMWI1ZmYzNF9zdGF0aWNSZW5kZXJGbnM9W107Zm9ybXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2ExYjVmZjM0X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9mb3JtL3NyYy9mb3JtLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1hMWI1ZmYzNCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZm9ybS9zcmMvZm9ybS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZm9ybXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxGb3JtJyxjb21wb25lbnROYW1lOidFbEZvcm0nLHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybntlbEZvcm06dGhpc307fSxwcm9wczp7bW9kZWw6T2JqZWN0LHJ1bGVzOk9iamVjdCxsYWJlbFBvc2l0aW9uOlN0cmluZyxsYWJlbFdpZHRoOlN0cmluZyxsYWJlbFN1ZmZpeDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30saW5saW5lOkJvb2xlYW4saW5saW5lTWVzc2FnZTpCb29sZWFuLHN0YXR1c0ljb246Qm9vbGVhbixzaG93TWVzc2FnZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sc2l6ZTpTdHJpbmcsZGlzYWJsZWQ6Qm9vbGVhbix2YWxpZGF0ZU9uUnVsZUNoYW5nZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0saGlkZVJlcXVpcmVkQXN0ZXJpc2s6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfX0sd2F0Y2g6e3J1bGVzOmZ1bmN0aW9uIHJ1bGVzKCl7Ly8gcmVtb3ZlIHRoZW4gYWRkIGV2ZW50IGxpc3RlbmVycyBvbiBmb3JtLWl0ZW0gYWZ0ZXIgZm9ybSBydWxlcyBjaGFuZ2UKdGhpcy5maWVsZHMuZm9yRWFjaChmdW5jdGlvbihmaWVsZCl7ZmllbGQucmVtb3ZlVmFsaWRhdGVFdmVudHMoKTtmaWVsZC5hZGRWYWxpZGF0ZUV2ZW50cygpO30pO2lmKHRoaXMudmFsaWRhdGVPblJ1bGVDaGFuZ2Upe3RoaXMudmFsaWRhdGUoZnVuY3Rpb24oKXt9KTt9fX0sY29tcHV0ZWQ6e2F1dG9MYWJlbFdpZHRoOmZ1bmN0aW9uIGF1dG9MYWJlbFdpZHRoKCl7aWYoIXRoaXMucG90ZW50aWFsTGFiZWxXaWR0aEFyci5sZW5ndGgpcmV0dXJuIDA7dmFyIG1heD1NYXRoLm1heC5hcHBseShNYXRoLHRoaXMucG90ZW50aWFsTGFiZWxXaWR0aEFycik7cmV0dXJuIG1heD9tYXgrJ3B4JzonJzt9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57ZmllbGRzOltdLHBvdGVudGlhbExhYmVsV2lkdGhBcnI6W10vLyB1c2UgdGhpcyBhcnJheSB0byBjYWxjdWxhdGUgYXV0byB3aWR0aAp9O30sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kb24oJ2VsLmZvcm0uYWRkRmllbGQnLGZ1bmN0aW9uKGZpZWxkKXtpZihmaWVsZCl7X3RoaXMuZmllbGRzLnB1c2goZmllbGQpO319KTsvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3RoaXMuJG9uKCdlbC5mb3JtLnJlbW92ZUZpZWxkJyxmdW5jdGlvbihmaWVsZCl7aWYoZmllbGQucHJvcCl7X3RoaXMuZmllbGRzLnNwbGljZShfdGhpcy5maWVsZHMuaW5kZXhPZihmaWVsZCksMSk7fX0pO30sbWV0aG9kczp7cmVzZXRGaWVsZHM6ZnVuY3Rpb24gcmVzZXRGaWVsZHMoKXtpZighdGhpcy5tb2RlbCl7Y29uc29sZS53YXJuKCdbRWxlbWVudCBXYXJuXVtGb3JtXW1vZGVsIGlzIHJlcXVpcmVkIGZvciByZXNldEZpZWxkcyB0byB3b3JrLicpO3JldHVybjt9dGhpcy5maWVsZHMuZm9yRWFjaChmdW5jdGlvbihmaWVsZCl7ZmllbGQucmVzZXRGaWVsZCgpO30pO30sY2xlYXJWYWxpZGF0ZTpmdW5jdGlvbiBjbGVhclZhbGlkYXRlKCl7dmFyIHByb3BzPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1swXTpbXTt2YXIgZmllbGRzPXByb3BzLmxlbmd0aD90eXBlb2YgcHJvcHM9PT0nc3RyaW5nJz90aGlzLmZpZWxkcy5maWx0ZXIoZnVuY3Rpb24oZmllbGQpe3JldHVybiBwcm9wcz09PWZpZWxkLnByb3A7fSk6dGhpcy5maWVsZHMuZmlsdGVyKGZ1bmN0aW9uKGZpZWxkKXtyZXR1cm4gcHJvcHMuaW5kZXhPZihmaWVsZC5wcm9wKT4tMTt9KTp0aGlzLmZpZWxkcztmaWVsZHMuZm9yRWFjaChmdW5jdGlvbihmaWVsZCl7ZmllbGQuY2xlYXJWYWxpZGF0ZSgpO30pO30sdmFsaWRhdGU6ZnVuY3Rpb24gdmFsaWRhdGUoY2FsbGJhY2spe3ZhciBfdGhpczI9dGhpcztpZighdGhpcy5tb2RlbCl7Y29uc29sZS53YXJuKCdbRWxlbWVudCBXYXJuXVtGb3JtXW1vZGVsIGlzIHJlcXVpcmVkIGZvciB2YWxpZGF0ZSB0byB3b3JrIScpO3JldHVybjt9dmFyIHByb21pc2U9dm9pZCAwOy8vIGlmIG5vIGNhbGxiYWNrLCByZXR1cm4gcHJvbWlzZQppZih0eXBlb2YgY2FsbGJhY2shPT0nZnVuY3Rpb24nJiZ3aW5kb3cuUHJvbWlzZSl7cHJvbWlzZT1uZXcgd2luZG93LlByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe2NhbGxiYWNrPWZ1bmN0aW9uIGNhbGxiYWNrKHZhbGlkKXt2YWxpZD9yZXNvbHZlKHZhbGlkKTpyZWplY3QodmFsaWQpO307fSk7fXZhciB2YWxpZD10cnVlO3ZhciBjb3VudD0wOy8vIOWmguaenOmcgOimgemqjOivgeeahGZpZWxkc+S4uuepuu+8jOiwg+eUqOmqjOivgeaXtueri+WIu+i/lOWbnmNhbGxiYWNrCmlmKHRoaXMuZmllbGRzLmxlbmd0aD09PTAmJmNhbGxiYWNrKXtjYWxsYmFjayh0cnVlKTt9dmFyIGludmFsaWRGaWVsZHM9e307dGhpcy5maWVsZHMuZm9yRWFjaChmdW5jdGlvbihmaWVsZCl7ZmllbGQudmFsaWRhdGUoJycsZnVuY3Rpb24obWVzc2FnZSxmaWVsZCl7aWYobWVzc2FnZSl7dmFsaWQ9ZmFsc2U7fWludmFsaWRGaWVsZHM9bWVyZ2VfZGVmYXVsdCgpKHt9LGludmFsaWRGaWVsZHMsZmllbGQpO2lmKHR5cGVvZiBjYWxsYmFjaz09PSdmdW5jdGlvbicmJisrY291bnQ9PT1fdGhpczIuZmllbGRzLmxlbmd0aCl7Y2FsbGJhY2sodmFsaWQsaW52YWxpZEZpZWxkcyk7fX0pO30pO2lmKHByb21pc2Upe3JldHVybiBwcm9taXNlO319LHZhbGlkYXRlRmllbGQ6ZnVuY3Rpb24gdmFsaWRhdGVGaWVsZChwcm9wcyxjYil7cHJvcHM9W10uY29uY2F0KHByb3BzKTt2YXIgZmllbGRzPXRoaXMuZmllbGRzLmZpbHRlcihmdW5jdGlvbihmaWVsZCl7cmV0dXJuIHByb3BzLmluZGV4T2YoZmllbGQucHJvcCkhPT0tMTt9KTtpZighZmllbGRzLmxlbmd0aCl7Y29uc29sZS53YXJuKCdbRWxlbWVudCBXYXJuXXBsZWFzZSBwYXNzIGNvcnJlY3QgcHJvcHMhJyk7cmV0dXJuO31maWVsZHMuZm9yRWFjaChmdW5jdGlvbihmaWVsZCl7ZmllbGQudmFsaWRhdGUoJycsY2IpO30pO30sZ2V0TGFiZWxXaWR0aEluZGV4OmZ1bmN0aW9uIGdldExhYmVsV2lkdGhJbmRleCh3aWR0aCl7dmFyIGluZGV4PXRoaXMucG90ZW50aWFsTGFiZWxXaWR0aEFyci5pbmRleE9mKHdpZHRoKTsvLyBpdCdzIGltcG9zc2libGUKaWYoaW5kZXg9PT0tMSl7dGhyb3cgbmV3IEVycm9yKCdbRWxlbWVudEZvcm1ddW5wZWN0ZWQgd2lkdGggJyx3aWR0aCk7fXJldHVybiBpbmRleDt9LHJlZ2lzdGVyTGFiZWxXaWR0aDpmdW5jdGlvbiByZWdpc3RlckxhYmVsV2lkdGgodmFsLG9sZFZhbCl7aWYodmFsJiZvbGRWYWwpe3ZhciBpbmRleD10aGlzLmdldExhYmVsV2lkdGhJbmRleChvbGRWYWwpO3RoaXMucG90ZW50aWFsTGFiZWxXaWR0aEFyci5zcGxpY2UoaW5kZXgsMSx2YWwpO31lbHNlIGlmKHZhbCl7dGhpcy5wb3RlbnRpYWxMYWJlbFdpZHRoQXJyLnB1c2godmFsKTt9fSxkZXJlZ2lzdGVyTGFiZWxXaWR0aDpmdW5jdGlvbiBkZXJlZ2lzdGVyTGFiZWxXaWR0aCh2YWwpe3ZhciBpbmRleD10aGlzLmdldExhYmVsV2lkdGhJbmRleCh2YWwpO3RoaXMucG90ZW50aWFsTGFiZWxXaWR0aEFyci5zcGxpY2UoaW5kZXgsMSk7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZm9ybS9zcmMvZm9ybS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2Zvcm12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189Zm9ybXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2Zvcm0vc3JjL2Zvcm0udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgZm9ybV9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19mb3JtdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLGZvcm12dWVfdHlwZV90ZW1wbGF0ZV9pZF9hMWI1ZmYzNF9yZW5kZXIsZm9ybXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2ExYjVmZjM0X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgZm9ybV9hcGk7fWZvcm1fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9mb3JtL3NyYy9mb3JtLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfZm9ybT1mb3JtX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZm9ybS9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY19mb3JtLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHNyY19mb3JtLm5hbWUsc3JjX2Zvcm0pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19mb3JtPXNyY19mb3JtOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZm9ybS9zcmMvZm9ybS1pdGVtLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1iNmYzZGI2YyYKdmFyIGZvcm1faXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2I2ZjNkYjZjX3JlbmRlcj1mdW5jdGlvbiBmb3JtX2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF9iNmYzZGI2Y19yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1mb3JtLWl0ZW0iLGNsYXNzOlt7ImVsLWZvcm0taXRlbS0tZmVlZGJhY2siOl92bS5lbEZvcm0mJl92bS5lbEZvcm0uc3RhdHVzSWNvbiwiaXMtZXJyb3IiOl92bS52YWxpZGF0ZVN0YXRlPT09ImVycm9yIiwiaXMtdmFsaWRhdGluZyI6X3ZtLnZhbGlkYXRlU3RhdGU9PT0idmFsaWRhdGluZyIsImlzLXN1Y2Nlc3MiOl92bS52YWxpZGF0ZVN0YXRlPT09InN1Y2Nlc3MiLCJpcy1yZXF1aXJlZCI6X3ZtLmlzUmVxdWlyZWR8fF92bS5yZXF1aXJlZCwiaXMtbm8tYXN0ZXJpc2siOl92bS5lbEZvcm0mJl92bS5lbEZvcm0uaGlkZVJlcXVpcmVkQXN0ZXJpc2t9LF92bS5zaXplQ2xhc3M/ImVsLWZvcm0taXRlbS0tIitfdm0uc2l6ZUNsYXNzOiIiXX0sW19jKCJsYWJlbC13cmFwIix7YXR0cnM6eyJpcy1hdXRvLXdpZHRoIjpfdm0ubGFiZWxTdHlsZSYmX3ZtLmxhYmVsU3R5bGUud2lkdGg9PT0iYXV0byIsInVwZGF0ZS1hbGwiOl92bS5mb3JtLmxhYmVsV2lkdGg9PT0iYXV0byJ9fSxbX3ZtLmxhYmVsfHxfdm0uJHNsb3RzLmxhYmVsP19jKCJsYWJlbCIse3N0YXRpY0NsYXNzOiJlbC1mb3JtLWl0ZW1fX2xhYmVsIixzdHlsZTpfdm0ubGFiZWxTdHlsZSxhdHRyczp7Zm9yOl92bS5sYWJlbEZvcn19LFtfdm0uX3QoImxhYmVsIixbX3ZtLl92KF92bS5fcyhfdm0ubGFiZWwrX3ZtLmZvcm0ubGFiZWxTdWZmaXgpKV0pXSwyKTpfdm0uX2UoKV0pLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtZm9ybS1pdGVtX19jb250ZW50IixzdHlsZTpfdm0uY29udGVudFN0eWxlfSxbX3ZtLl90KCJkZWZhdWx0IiksX2MoInRyYW5zaXRpb24iLHthdHRyczp7bmFtZToiZWwtem9vbS1pbi10b3AifX0sW192bS52YWxpZGF0ZVN0YXRlPT09ImVycm9yIiYmX3ZtLnNob3dNZXNzYWdlJiZfdm0uZm9ybS5zaG93TWVzc2FnZT9fdm0uX3QoImVycm9yIixbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1mb3JtLWl0ZW1fX2Vycm9yIixjbGFzczp7ImVsLWZvcm0taXRlbV9fZXJyb3ItLWlubGluZSI6dHlwZW9mIF92bS5pbmxpbmVNZXNzYWdlPT09ImJvb2xlYW4iP192bS5pbmxpbmVNZXNzYWdlOl92bS5lbEZvcm0mJl92bS5lbEZvcm0uaW5saW5lTWVzc2FnZXx8ZmFsc2V9fSxbX3ZtLl92KCJcbiAgICAgICAgICAiK192bS5fcyhfdm0udmFsaWRhdGVNZXNzYWdlKSsiXG4gICAgICAgICIpXSldLHtlcnJvcjpfdm0udmFsaWRhdGVNZXNzYWdlfSk6X3ZtLl9lKCldLDIpXSwyKV0sMSk7fTt2YXIgZm9ybV9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfYjZmM2RiNmNfc3RhdGljUmVuZGVyRm5zPVtdO2Zvcm1faXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2I2ZjNkYjZjX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9mb3JtL3NyYy9mb3JtLWl0ZW0udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWI2ZjNkYjZjJgovLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJhc3luYy12YWxpZGF0b3IiCnZhciBleHRlcm5hbF9hc3luY192YWxpZGF0b3JfPV9fd2VicGFja19yZXF1aXJlX18oNDApO3ZhciBleHRlcm5hbF9hc3luY192YWxpZGF0b3JfZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGV4dGVybmFsX2FzeW5jX3ZhbGlkYXRvcl8pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2Zvcm0vc3JjL2xhYmVsLXdyYXAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGxhYmVsX3dyYXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e3Byb3BzOntpc0F1dG9XaWR0aDpCb29sZWFuLHVwZGF0ZUFsbDpCb29sZWFufSxpbmplY3Q6WydlbEZvcm0nLCdlbEZvcm1JdGVtJ10scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcigpe3ZhciBoPWFyZ3VtZW50c1swXTt2YXIgc2xvdHM9dGhpcy4kc2xvdHMuZGVmYXVsdDtpZighc2xvdHMpcmV0dXJuIG51bGw7aWYodGhpcy5pc0F1dG9XaWR0aCl7dmFyIGF1dG9MYWJlbFdpZHRoPXRoaXMuZWxGb3JtLmF1dG9MYWJlbFdpZHRoO3ZhciBzdHlsZT17fTtpZihhdXRvTGFiZWxXaWR0aCYmYXV0b0xhYmVsV2lkdGghPT0nYXV0bycpe3ZhciBtYXJnaW5MZWZ0PXBhcnNlSW50KGF1dG9MYWJlbFdpZHRoLDEwKS10aGlzLmNvbXB1dGVkV2lkdGg7aWYobWFyZ2luTGVmdCl7c3R5bGUubWFyZ2luTGVmdD1tYXJnaW5MZWZ0KydweCc7fX1yZXR1cm4gaCgnZGl2Jyx7J2NsYXNzJzonZWwtZm9ybS1pdGVtX19sYWJlbC13cmFwJyxzdHlsZTpzdHlsZX0sW3Nsb3RzXSk7fWVsc2V7cmV0dXJuIHNsb3RzWzBdO319LG1ldGhvZHM6e2dldExhYmVsV2lkdGg6ZnVuY3Rpb24gZ2V0TGFiZWxXaWR0aCgpe2lmKHRoaXMuJGVsJiZ0aGlzLiRlbC5maXJzdEVsZW1lbnRDaGlsZCl7dmFyIGNvbXB1dGVkV2lkdGg9d2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy4kZWwuZmlyc3RFbGVtZW50Q2hpbGQpLndpZHRoO3JldHVybiBNYXRoLmNlaWwocGFyc2VGbG9hdChjb21wdXRlZFdpZHRoKSk7fWVsc2V7cmV0dXJuIDA7fX0sdXBkYXRlTGFiZWxXaWR0aDpmdW5jdGlvbiB1cGRhdGVMYWJlbFdpZHRoKCl7dmFyIGFjdGlvbj1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMF06J3VwZGF0ZSc7aWYodGhpcy4kc2xvdHMuZGVmYXVsdCYmdGhpcy5pc0F1dG9XaWR0aCYmdGhpcy4kZWwuZmlyc3RFbGVtZW50Q2hpbGQpe2lmKGFjdGlvbj09PSd1cGRhdGUnKXt0aGlzLmNvbXB1dGVkV2lkdGg9dGhpcy5nZXRMYWJlbFdpZHRoKCk7fWVsc2UgaWYoYWN0aW9uPT09J3JlbW92ZScpe3RoaXMuZWxGb3JtLmRlcmVnaXN0ZXJMYWJlbFdpZHRoKHRoaXMuY29tcHV0ZWRXaWR0aCk7fX19fSx3YXRjaDp7Y29tcHV0ZWRXaWR0aDpmdW5jdGlvbiBjb21wdXRlZFdpZHRoKHZhbCxvbGRWYWwpe2lmKHRoaXMudXBkYXRlQWxsKXt0aGlzLmVsRm9ybS5yZWdpc3RlckxhYmVsV2lkdGgodmFsLG9sZFZhbCk7dGhpcy5lbEZvcm1JdGVtLnVwZGF0ZUNvbXB1dGVkTGFiZWxXaWR0aCh2YWwpO319fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57Y29tcHV0ZWRXaWR0aDowfTt9LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3RoaXMudXBkYXRlTGFiZWxXaWR0aCgndXBkYXRlJyk7fSx1cGRhdGVkOmZ1bmN0aW9uIHVwZGF0ZWQoKXt0aGlzLnVwZGF0ZUxhYmVsV2lkdGgoJ3VwZGF0ZScpO30sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7dGhpcy51cGRhdGVMYWJlbFdpZHRoKCdyZW1vdmUnKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2Zvcm0vc3JjL2xhYmVsLXdyYXAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19sYWJlbF93cmFwdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWxhYmVsX3dyYXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9mb3JtL3NyYy9sYWJlbC13cmFwLnZ1ZQp2YXIgbGFiZWxfd3JhcF9yZW5kZXIsbGFiZWxfd3JhcF9zdGF0aWNSZW5kZXJGbnM7Lyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBsYWJlbF93cmFwX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2xhYmVsX3dyYXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbGFiZWxfd3JhcF9yZW5kZXIsbGFiZWxfd3JhcF9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGxhYmVsX3dyYXBfYXBpO31sYWJlbF93cmFwX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvZm9ybS9zcmMvbGFiZWwtd3JhcC52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbGFiZWxfd3JhcD1sYWJlbF93cmFwX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2Zvcm0vc3JjL2Zvcm0taXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZm9ybV9pdGVtdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbEZvcm1JdGVtJyxjb21wb25lbnROYW1lOidFbEZvcm1JdGVtJyxtaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hXSxwcm92aWRlOmZ1bmN0aW9uIHByb3ZpZGUoKXtyZXR1cm57ZWxGb3JtSXRlbTp0aGlzfTt9LGluamVjdDpbJ2VsRm9ybSddLHByb3BzOntsYWJlbDpTdHJpbmcsbGFiZWxXaWR0aDpTdHJpbmcscHJvcDpTdHJpbmcscmVxdWlyZWQ6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnVuZGVmaW5lZH0scnVsZXM6W09iamVjdCxBcnJheV0sZXJyb3I6U3RyaW5nLHZhbGlkYXRlU3RhdHVzOlN0cmluZyxmb3I6U3RyaW5nLGlubGluZU1lc3NhZ2U6e3R5cGU6W1N0cmluZyxCb29sZWFuXSxkZWZhdWx0OicnfSxzaG93TWVzc2FnZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sc2l6ZTpTdHJpbmd9LGNvbXBvbmVudHM6ey8vIHVzZSB0aGlzIGNvbXBvbmVudCB0byBjYWxjdWxhdGUgYXV0byB3aWR0aApMYWJlbFdyYXA6bGFiZWxfd3JhcH0sd2F0Y2g6e2Vycm9yOntpbW1lZGlhdGU6dHJ1ZSxoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIodmFsdWUpe3RoaXMudmFsaWRhdGVNZXNzYWdlPXZhbHVlO3RoaXMudmFsaWRhdGVTdGF0ZT12YWx1ZT8nZXJyb3InOicnO319LHZhbGlkYXRlU3RhdHVzOmZ1bmN0aW9uIHZhbGlkYXRlU3RhdHVzKHZhbHVlKXt0aGlzLnZhbGlkYXRlU3RhdGU9dmFsdWU7fX0sY29tcHV0ZWQ6e2xhYmVsRm9yOmZ1bmN0aW9uIGxhYmVsRm9yKCl7cmV0dXJuIHRoaXMuZm9yfHx0aGlzLnByb3A7fSxsYWJlbFN0eWxlOmZ1bmN0aW9uIGxhYmVsU3R5bGUoKXt2YXIgcmV0PXt9O2lmKHRoaXMuZm9ybS5sYWJlbFBvc2l0aW9uPT09J3RvcCcpcmV0dXJuIHJldDt2YXIgbGFiZWxXaWR0aD10aGlzLmxhYmVsV2lkdGh8fHRoaXMuZm9ybS5sYWJlbFdpZHRoO2lmKGxhYmVsV2lkdGgpe3JldC53aWR0aD1sYWJlbFdpZHRoO31yZXR1cm4gcmV0O30sY29udGVudFN0eWxlOmZ1bmN0aW9uIGNvbnRlbnRTdHlsZSgpe3ZhciByZXQ9e307dmFyIGxhYmVsPXRoaXMubGFiZWw7aWYodGhpcy5mb3JtLmxhYmVsUG9zaXRpb249PT0ndG9wJ3x8dGhpcy5mb3JtLmlubGluZSlyZXR1cm4gcmV0O2lmKCFsYWJlbCYmIXRoaXMubGFiZWxXaWR0aCYmdGhpcy5pc05lc3RlZClyZXR1cm4gcmV0O3ZhciBsYWJlbFdpZHRoPXRoaXMubGFiZWxXaWR0aHx8dGhpcy5mb3JtLmxhYmVsV2lkdGg7aWYobGFiZWxXaWR0aD09PSdhdXRvJyl7aWYodGhpcy5sYWJlbFdpZHRoPT09J2F1dG8nKXtyZXQubWFyZ2luTGVmdD10aGlzLmNvbXB1dGVkTGFiZWxXaWR0aDt9ZWxzZSBpZih0aGlzLmZvcm0ubGFiZWxXaWR0aD09PSdhdXRvJyl7cmV0Lm1hcmdpbkxlZnQ9dGhpcy5lbEZvcm0uYXV0b0xhYmVsV2lkdGg7fX1lbHNle3JldC5tYXJnaW5MZWZ0PWxhYmVsV2lkdGg7fXJldHVybiByZXQ7fSxmb3JtOmZ1bmN0aW9uIGZvcm0oKXt2YXIgcGFyZW50PXRoaXMuJHBhcmVudDt2YXIgcGFyZW50TmFtZT1wYXJlbnQuJG9wdGlvbnMuY29tcG9uZW50TmFtZTt3aGlsZShwYXJlbnROYW1lIT09J0VsRm9ybScpe2lmKHBhcmVudE5hbWU9PT0nRWxGb3JtSXRlbScpe3RoaXMuaXNOZXN0ZWQ9dHJ1ZTt9cGFyZW50PXBhcmVudC4kcGFyZW50O3BhcmVudE5hbWU9cGFyZW50LiRvcHRpb25zLmNvbXBvbmVudE5hbWU7fXJldHVybiBwYXJlbnQ7fSxmaWVsZFZhbHVlOmZ1bmN0aW9uIGZpZWxkVmFsdWUoKXt2YXIgbW9kZWw9dGhpcy5mb3JtLm1vZGVsO2lmKCFtb2RlbHx8IXRoaXMucHJvcCl7cmV0dXJuO312YXIgcGF0aD10aGlzLnByb3A7aWYocGF0aC5pbmRleE9mKCc6JykhPT0tMSl7cGF0aD1wYXRoLnJlcGxhY2UoLzovLCcuJyk7fXJldHVybiBPYmplY3QodXRpbF9bImdldFByb3BCeVBhdGgiXSkobW9kZWwscGF0aCx0cnVlKS52O30saXNSZXF1aXJlZDpmdW5jdGlvbiBpc1JlcXVpcmVkKCl7dmFyIHJ1bGVzPXRoaXMuZ2V0UnVsZXMoKTt2YXIgaXNSZXF1aXJlZD1mYWxzZTtpZihydWxlcyYmcnVsZXMubGVuZ3RoKXtydWxlcy5ldmVyeShmdW5jdGlvbihydWxlKXtpZihydWxlLnJlcXVpcmVkKXtpc1JlcXVpcmVkPXRydWU7cmV0dXJuIGZhbHNlO31yZXR1cm4gdHJ1ZTt9KTt9cmV0dXJuIGlzUmVxdWlyZWQ7fSxfZm9ybVNpemU6ZnVuY3Rpb24gX2Zvcm1TaXplKCl7cmV0dXJuIHRoaXMuZWxGb3JtLnNpemU7fSxlbEZvcm1JdGVtU2l6ZTpmdW5jdGlvbiBlbEZvcm1JdGVtU2l6ZSgpe3JldHVybiB0aGlzLnNpemV8fHRoaXMuX2Zvcm1TaXplO30sc2l6ZUNsYXNzOmZ1bmN0aW9uIHNpemVDbGFzcygpe3JldHVybiB0aGlzLmVsRm9ybUl0ZW1TaXplfHwodGhpcy4kRUxFTUVOVHx8e30pLnNpemU7fX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3ZhbGlkYXRlU3RhdGU6JycsdmFsaWRhdGVNZXNzYWdlOicnLHZhbGlkYXRlRGlzYWJsZWQ6ZmFsc2UsdmFsaWRhdG9yOnt9LGlzTmVzdGVkOmZhbHNlLGNvbXB1dGVkTGFiZWxXaWR0aDonJ307fSxtZXRob2RzOnt2YWxpZGF0ZTpmdW5jdGlvbiB2YWxpZGF0ZSh0cmlnZ2VyKXt2YXIgX3RoaXM9dGhpczt2YXIgY2FsbGJhY2s9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzFdOnV0aWxfWyJub29wIl07dGhpcy52YWxpZGF0ZURpc2FibGVkPWZhbHNlO3ZhciBydWxlcz10aGlzLmdldEZpbHRlcmVkUnVsZSh0cmlnZ2VyKTtpZigoIXJ1bGVzfHxydWxlcy5sZW5ndGg9PT0wKSYmdGhpcy5yZXF1aXJlZD09PXVuZGVmaW5lZCl7Y2FsbGJhY2soKTtyZXR1cm4gdHJ1ZTt9dGhpcy52YWxpZGF0ZVN0YXRlPSd2YWxpZGF0aW5nJzt2YXIgZGVzY3JpcHRvcj17fTtpZihydWxlcyYmcnVsZXMubGVuZ3RoPjApe3J1bGVzLmZvckVhY2goZnVuY3Rpb24ocnVsZSl7ZGVsZXRlIHJ1bGUudHJpZ2dlcjt9KTt9ZGVzY3JpcHRvclt0aGlzLnByb3BdPXJ1bGVzO3ZhciB2YWxpZGF0b3I9bmV3IGV4dGVybmFsX2FzeW5jX3ZhbGlkYXRvcl9kZWZhdWx0LmEoZGVzY3JpcHRvcik7dmFyIG1vZGVsPXt9O21vZGVsW3RoaXMucHJvcF09dGhpcy5maWVsZFZhbHVlO3ZhbGlkYXRvci52YWxpZGF0ZShtb2RlbCx7Zmlyc3RGaWVsZHM6dHJ1ZX0sZnVuY3Rpb24oZXJyb3JzLGludmFsaWRGaWVsZHMpe190aGlzLnZhbGlkYXRlU3RhdGU9IWVycm9ycz8nc3VjY2Vzcyc6J2Vycm9yJztfdGhpcy52YWxpZGF0ZU1lc3NhZ2U9ZXJyb3JzP2Vycm9yc1swXS5tZXNzYWdlOicnO2NhbGxiYWNrKF90aGlzLnZhbGlkYXRlTWVzc2FnZSxpbnZhbGlkRmllbGRzKTtfdGhpcy5lbEZvcm0mJl90aGlzLmVsRm9ybS4kZW1pdCgndmFsaWRhdGUnLF90aGlzLnByb3AsIWVycm9ycyxfdGhpcy52YWxpZGF0ZU1lc3NhZ2V8fG51bGwpO30pO30sY2xlYXJWYWxpZGF0ZTpmdW5jdGlvbiBjbGVhclZhbGlkYXRlKCl7dGhpcy52YWxpZGF0ZVN0YXRlPScnO3RoaXMudmFsaWRhdGVNZXNzYWdlPScnO3RoaXMudmFsaWRhdGVEaXNhYmxlZD1mYWxzZTt9LHJlc2V0RmllbGQ6ZnVuY3Rpb24gcmVzZXRGaWVsZCgpe3ZhciBfdGhpczI9dGhpczt0aGlzLnZhbGlkYXRlU3RhdGU9Jyc7dGhpcy52YWxpZGF0ZU1lc3NhZ2U9Jyc7dmFyIG1vZGVsPXRoaXMuZm9ybS5tb2RlbDt2YXIgdmFsdWU9dGhpcy5maWVsZFZhbHVlO3ZhciBwYXRoPXRoaXMucHJvcDtpZihwYXRoLmluZGV4T2YoJzonKSE9PS0xKXtwYXRoPXBhdGgucmVwbGFjZSgvOi8sJy4nKTt9dmFyIHByb3A9T2JqZWN0KHV0aWxfWyJnZXRQcm9wQnlQYXRoIl0pKG1vZGVsLHBhdGgsdHJ1ZSk7dGhpcy52YWxpZGF0ZURpc2FibGVkPXRydWU7aWYoQXJyYXkuaXNBcnJheSh2YWx1ZSkpe3Byb3Aub1twcm9wLmtdPVtdLmNvbmNhdCh0aGlzLmluaXRpYWxWYWx1ZSk7fWVsc2V7cHJvcC5vW3Byb3Aua109dGhpcy5pbml0aWFsVmFsdWU7fS8vIHJlc2V0IHZhbGlkYXRlRGlzYWJsZWQgYWZ0ZXIgb25GaWVsZENoYW5nZSB0cmlnZ2VyZWQKdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpczIudmFsaWRhdGVEaXNhYmxlZD1mYWxzZTt9KTt0aGlzLmJyb2FkY2FzdCgnRWxUaW1lU2VsZWN0JywnZmllbGRSZXNldCcsdGhpcy5pbml0aWFsVmFsdWUpO30sZ2V0UnVsZXM6ZnVuY3Rpb24gZ2V0UnVsZXMoKXt2YXIgZm9ybVJ1bGVzPXRoaXMuZm9ybS5ydWxlczt2YXIgc2VsZlJ1bGVzPXRoaXMucnVsZXM7dmFyIHJlcXVpcmVkUnVsZT10aGlzLnJlcXVpcmVkIT09dW5kZWZpbmVkP3tyZXF1aXJlZDohIXRoaXMucmVxdWlyZWR9OltdO3ZhciBwcm9wPU9iamVjdCh1dGlsX1siZ2V0UHJvcEJ5UGF0aCJdKShmb3JtUnVsZXMsdGhpcy5wcm9wfHwnJyk7Zm9ybVJ1bGVzPWZvcm1SdWxlcz9wcm9wLm9bdGhpcy5wcm9wfHwnJ118fHByb3AudjpbXTtyZXR1cm5bXS5jb25jYXQoc2VsZlJ1bGVzfHxmb3JtUnVsZXN8fFtdKS5jb25jYXQocmVxdWlyZWRSdWxlKTt9LGdldEZpbHRlcmVkUnVsZTpmdW5jdGlvbiBnZXRGaWx0ZXJlZFJ1bGUodHJpZ2dlcil7dmFyIHJ1bGVzPXRoaXMuZ2V0UnVsZXMoKTtyZXR1cm4gcnVsZXMuZmlsdGVyKGZ1bmN0aW9uKHJ1bGUpe2lmKCFydWxlLnRyaWdnZXJ8fHRyaWdnZXI9PT0nJylyZXR1cm4gdHJ1ZTtpZihBcnJheS5pc0FycmF5KHJ1bGUudHJpZ2dlcikpe3JldHVybiBydWxlLnRyaWdnZXIuaW5kZXhPZih0cmlnZ2VyKT4tMTt9ZWxzZXtyZXR1cm4gcnVsZS50cmlnZ2VyPT09dHJpZ2dlcjt9fSkubWFwKGZ1bmN0aW9uKHJ1bGUpe3JldHVybiBtZXJnZV9kZWZhdWx0KCkoe30scnVsZSk7fSk7fSxvbkZpZWxkQmx1cjpmdW5jdGlvbiBvbkZpZWxkQmx1cigpe3RoaXMudmFsaWRhdGUoJ2JsdXInKTt9LG9uRmllbGRDaGFuZ2U6ZnVuY3Rpb24gb25GaWVsZENoYW5nZSgpe2lmKHRoaXMudmFsaWRhdGVEaXNhYmxlZCl7dGhpcy52YWxpZGF0ZURpc2FibGVkPWZhbHNlO3JldHVybjt9dGhpcy52YWxpZGF0ZSgnY2hhbmdlJyk7fSx1cGRhdGVDb21wdXRlZExhYmVsV2lkdGg6ZnVuY3Rpb24gdXBkYXRlQ29tcHV0ZWRMYWJlbFdpZHRoKHdpZHRoKXt0aGlzLmNvbXB1dGVkTGFiZWxXaWR0aD13aWR0aD93aWR0aCsncHgnOicnO30sYWRkVmFsaWRhdGVFdmVudHM6ZnVuY3Rpb24gYWRkVmFsaWRhdGVFdmVudHMoKXt2YXIgcnVsZXM9dGhpcy5nZXRSdWxlcygpO2lmKHJ1bGVzLmxlbmd0aHx8dGhpcy5yZXF1aXJlZCE9PXVuZGVmaW5lZCl7dGhpcy4kb24oJ2VsLmZvcm0uYmx1cicsdGhpcy5vbkZpZWxkQmx1cik7dGhpcy4kb24oJ2VsLmZvcm0uY2hhbmdlJyx0aGlzLm9uRmllbGRDaGFuZ2UpO319LHJlbW92ZVZhbGlkYXRlRXZlbnRzOmZ1bmN0aW9uIHJlbW92ZVZhbGlkYXRlRXZlbnRzKCl7dGhpcy4kb2ZmKCk7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7aWYodGhpcy5wcm9wKXt0aGlzLmRpc3BhdGNoKCdFbEZvcm0nLCdlbC5mb3JtLmFkZEZpZWxkJyxbdGhpc10pO3ZhciBpbml0aWFsVmFsdWU9dGhpcy5maWVsZFZhbHVlO2lmKEFycmF5LmlzQXJyYXkoaW5pdGlhbFZhbHVlKSl7aW5pdGlhbFZhbHVlPVtdLmNvbmNhdChpbml0aWFsVmFsdWUpO31PYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywnaW5pdGlhbFZhbHVlJyx7dmFsdWU6aW5pdGlhbFZhbHVlfSk7dGhpcy5hZGRWYWxpZGF0ZUV2ZW50cygpO319LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpe3RoaXMuZGlzcGF0Y2goJ0VsRm9ybScsJ2VsLmZvcm0ucmVtb3ZlRmllbGQnLFt0aGlzXSk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9mb3JtL3NyYy9mb3JtLWl0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19mb3JtX2l0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189Zm9ybV9pdGVtdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZm9ybS9zcmMvZm9ybS1pdGVtLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGZvcm1faXRlbV9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19mb3JtX2l0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sZm9ybV9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfYjZmM2RiNmNfcmVuZGVyLGZvcm1faXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkX2I2ZjNkYjZjX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgZm9ybV9pdGVtX2FwaTt9Zm9ybV9pdGVtX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvZm9ybS9zcmMvZm9ybS1pdGVtLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBmb3JtX2l0ZW09Zm9ybV9pdGVtX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZm9ybS1pdGVtL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovZm9ybV9pdGVtLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGZvcm1faXRlbS5uYW1lLGZvcm1faXRlbSk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2Zvcm1faXRlbT1mb3JtX2l0ZW07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy90YWJzL3NyYy90YWItYmFyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yMDMxZjMzYSYKdmFyIHRhYl9iYXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yMDMxZjMzYV9yZW5kZXI9ZnVuY3Rpb24gdGFiX2JhcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzIwMzFmMzNhX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRhYnNfX2FjdGl2ZS1iYXIiLGNsYXNzOiJpcy0iK192bS5yb290VGFicy50YWJQb3NpdGlvbixzdHlsZTpfdm0uYmFyU3R5bGV9KTt9O3ZhciB0YWJfYmFydnVlX3R5cGVfdGVtcGxhdGVfaWRfMjAzMWYzM2Ffc3RhdGljUmVuZGVyRm5zPVtdO3RhYl9iYXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yMDMxZjMzYV9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFicy9zcmMvdGFiLWJhci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MjAzMWYzM2EmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RhYnMvc3JjL3RhYi1iYXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRhYl9iYXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J1RhYkJhcicscHJvcHM6e3RhYnM6QXJyYXl9LGluamVjdDpbJ3Jvb3RUYWJzJ10sY29tcHV0ZWQ6e2JhclN0eWxlOntnZXQ6ZnVuY3Rpb24gZ2V0KCl7dmFyIF90aGlzPXRoaXM7dmFyIHN0eWxlPXt9O3ZhciBvZmZzZXQ9MDt2YXIgdGFiU2l6ZT0wO3ZhciBzaXplTmFtZT1bJ3RvcCcsJ2JvdHRvbSddLmluZGV4T2YodGhpcy5yb290VGFicy50YWJQb3NpdGlvbikhPT0tMT8nd2lkdGgnOidoZWlnaHQnO3ZhciBzaXplRGlyPXNpemVOYW1lPT09J3dpZHRoJz8neCc6J3knO3ZhciBmaXJzdFVwcGVyQ2FzZT1mdW5jdGlvbiBmaXJzdFVwcGVyQ2FzZShzdHIpe3JldHVybiBzdHIudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8oIHxeKVthLXpdL2csZnVuY3Rpb24oTCl7cmV0dXJuIEwudG9VcHBlckNhc2UoKTt9KTt9O3RoaXMudGFicy5ldmVyeShmdW5jdGlvbih0YWIsaW5kZXgpe3ZhciAkZWw9T2JqZWN0KHV0aWxfWyJhcnJheUZpbmQiXSkoX3RoaXMuJHBhcmVudC4kcmVmcy50YWJzfHxbXSxmdW5jdGlvbih0KXtyZXR1cm4gdC5pZC5yZXBsYWNlKCd0YWItJywnJyk9PT10YWIucGFuZU5hbWU7fSk7aWYoISRlbCl7cmV0dXJuIGZhbHNlO31pZighdGFiLmFjdGl2ZSl7b2Zmc2V0Kz0kZWxbJ2NsaWVudCcrZmlyc3RVcHBlckNhc2Uoc2l6ZU5hbWUpXTtyZXR1cm4gdHJ1ZTt9ZWxzZXt0YWJTaXplPSRlbFsnY2xpZW50JytmaXJzdFVwcGVyQ2FzZShzaXplTmFtZSldO3ZhciB0YWJTdHlsZXM9d2luZG93LmdldENvbXB1dGVkU3R5bGUoJGVsKTtpZihzaXplTmFtZT09PSd3aWR0aCcmJl90aGlzLnRhYnMubGVuZ3RoPjEpe3RhYlNpemUtPXBhcnNlRmxvYXQodGFiU3R5bGVzLnBhZGRpbmdMZWZ0KStwYXJzZUZsb2F0KHRhYlN0eWxlcy5wYWRkaW5nUmlnaHQpO31pZihzaXplTmFtZT09PSd3aWR0aCcpe29mZnNldCs9cGFyc2VGbG9hdCh0YWJTdHlsZXMucGFkZGluZ0xlZnQpO31yZXR1cm4gZmFsc2U7fX0pO3ZhciB0cmFuc2Zvcm09J3RyYW5zbGF0ZScrZmlyc3RVcHBlckNhc2Uoc2l6ZURpcikrJygnK29mZnNldCsncHgpJztzdHlsZVtzaXplTmFtZV09dGFiU2l6ZSsncHgnO3N0eWxlLnRyYW5zZm9ybT10cmFuc2Zvcm07c3R5bGUubXNUcmFuc2Zvcm09dHJhbnNmb3JtO3N0eWxlLndlYmtpdFRyYW5zZm9ybT10cmFuc2Zvcm07cmV0dXJuIHN0eWxlO319fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJzL3NyYy90YWItYmFyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfdGFiX2JhcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz10YWJfYmFydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFicy9zcmMvdGFiLWJhci52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciB0YWJfYmFyX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3RhYl9iYXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sdGFiX2JhcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzIwMzFmMzNhX3JlbmRlcix0YWJfYmFydnVlX3R5cGVfdGVtcGxhdGVfaWRfMjAzMWYzM2Ffc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciB0YWJfYmFyX2FwaTt9dGFiX2Jhcl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3RhYnMvc3JjL3RhYi1iYXIudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRhYl9iYXI9dGFiX2Jhcl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy90YWJzL3NyYy90YWItbmF2LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKZnVuY3Rpb24gbm9vcCgpe312YXIgdGFiX25hdnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2ZpcnN0VXBwZXJDYXNlPWZ1bmN0aW9uIGZpcnN0VXBwZXJDYXNlKHN0cil7cmV0dXJuIHN0ci50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLyggfF4pW2Etel0vZyxmdW5jdGlvbihMKXtyZXR1cm4gTC50b1VwcGVyQ2FzZSgpO30pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0YWJfbmF2dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidUYWJOYXYnLGNvbXBvbmVudHM6e1RhYkJhcjp0YWJfYmFyfSxpbmplY3Q6Wydyb290VGFicyddLHByb3BzOntwYW5lczpBcnJheSxjdXJyZW50TmFtZTpTdHJpbmcsZWRpdGFibGU6Qm9vbGVhbixvblRhYkNsaWNrOnt0eXBlOkZ1bmN0aW9uLGRlZmF1bHQ6bm9vcH0sb25UYWJSZW1vdmU6e3R5cGU6RnVuY3Rpb24sZGVmYXVsdDpub29wfSx0eXBlOlN0cmluZyxzdHJldGNoOkJvb2xlYW59LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntzY3JvbGxhYmxlOmZhbHNlLG5hdk9mZnNldDowLGlzRm9jdXM6ZmFsc2UsZm9jdXNhYmxlOnRydWV9O30sY29tcHV0ZWQ6e25hdlN0eWxlOmZ1bmN0aW9uIG5hdlN0eWxlKCl7dmFyIGRpcj1bJ3RvcCcsJ2JvdHRvbSddLmluZGV4T2YodGhpcy5yb290VGFicy50YWJQb3NpdGlvbikhPT0tMT8nWCc6J1knO3JldHVybnt0cmFuc2Zvcm06J3RyYW5zbGF0ZScrZGlyKycoLScrdGhpcy5uYXZPZmZzZXQrJ3B4KSd9O30sc2l6ZU5hbWU6ZnVuY3Rpb24gc2l6ZU5hbWUoKXtyZXR1cm5bJ3RvcCcsJ2JvdHRvbSddLmluZGV4T2YodGhpcy5yb290VGFicy50YWJQb3NpdGlvbikhPT0tMT8nd2lkdGgnOidoZWlnaHQnO319LG1ldGhvZHM6e3Njcm9sbFByZXY6ZnVuY3Rpb24gc2Nyb2xsUHJldigpe3ZhciBjb250YWluZXJTaXplPXRoaXMuJHJlZnMubmF2U2Nyb2xsWydvZmZzZXQnK3RhYl9uYXZ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19maXJzdFVwcGVyQ2FzZSh0aGlzLnNpemVOYW1lKV07dmFyIGN1cnJlbnRPZmZzZXQ9dGhpcy5uYXZPZmZzZXQ7aWYoIWN1cnJlbnRPZmZzZXQpcmV0dXJuO3ZhciBuZXdPZmZzZXQ9Y3VycmVudE9mZnNldD5jb250YWluZXJTaXplP2N1cnJlbnRPZmZzZXQtY29udGFpbmVyU2l6ZTowO3RoaXMubmF2T2Zmc2V0PW5ld09mZnNldDt9LHNjcm9sbE5leHQ6ZnVuY3Rpb24gc2Nyb2xsTmV4dCgpe3ZhciBuYXZTaXplPXRoaXMuJHJlZnMubmF2WydvZmZzZXQnK3RhYl9uYXZ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19maXJzdFVwcGVyQ2FzZSh0aGlzLnNpemVOYW1lKV07dmFyIGNvbnRhaW5lclNpemU9dGhpcy4kcmVmcy5uYXZTY3JvbGxbJ29mZnNldCcrdGFiX25hdnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2ZpcnN0VXBwZXJDYXNlKHRoaXMuc2l6ZU5hbWUpXTt2YXIgY3VycmVudE9mZnNldD10aGlzLm5hdk9mZnNldDtpZihuYXZTaXplLWN1cnJlbnRPZmZzZXQ8PWNvbnRhaW5lclNpemUpcmV0dXJuO3ZhciBuZXdPZmZzZXQ9bmF2U2l6ZS1jdXJyZW50T2Zmc2V0PmNvbnRhaW5lclNpemUqMj9jdXJyZW50T2Zmc2V0K2NvbnRhaW5lclNpemU6bmF2U2l6ZS1jb250YWluZXJTaXplO3RoaXMubmF2T2Zmc2V0PW5ld09mZnNldDt9LHNjcm9sbFRvQWN0aXZlVGFiOmZ1bmN0aW9uIHNjcm9sbFRvQWN0aXZlVGFiKCl7aWYoIXRoaXMuc2Nyb2xsYWJsZSlyZXR1cm47dmFyIG5hdj10aGlzLiRyZWZzLm5hdjt2YXIgYWN0aXZlVGFiPXRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoJy5pcy1hY3RpdmUnKTtpZighYWN0aXZlVGFiKXJldHVybjt2YXIgbmF2U2Nyb2xsPXRoaXMuJHJlZnMubmF2U2Nyb2xsO3ZhciBpc0hvcml6b250YWw9Wyd0b3AnLCdib3R0b20nXS5pbmRleE9mKHRoaXMucm9vdFRhYnMudGFiUG9zaXRpb24pIT09LTE7dmFyIGFjdGl2ZVRhYkJvdW5kaW5nPWFjdGl2ZVRhYi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt2YXIgbmF2U2Nyb2xsQm91bmRpbmc9bmF2U2Nyb2xsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3ZhciBtYXhPZmZzZXQ9aXNIb3Jpem9udGFsP25hdi5vZmZzZXRXaWR0aC1uYXZTY3JvbGxCb3VuZGluZy53aWR0aDpuYXYub2Zmc2V0SGVpZ2h0LW5hdlNjcm9sbEJvdW5kaW5nLmhlaWdodDt2YXIgY3VycmVudE9mZnNldD10aGlzLm5hdk9mZnNldDt2YXIgbmV3T2Zmc2V0PWN1cnJlbnRPZmZzZXQ7aWYoaXNIb3Jpem9udGFsKXtpZihhY3RpdmVUYWJCb3VuZGluZy5sZWZ0PG5hdlNjcm9sbEJvdW5kaW5nLmxlZnQpe25ld09mZnNldD1jdXJyZW50T2Zmc2V0LShuYXZTY3JvbGxCb3VuZGluZy5sZWZ0LWFjdGl2ZVRhYkJvdW5kaW5nLmxlZnQpO31pZihhY3RpdmVUYWJCb3VuZGluZy5yaWdodD5uYXZTY3JvbGxCb3VuZGluZy5yaWdodCl7bmV3T2Zmc2V0PWN1cnJlbnRPZmZzZXQrYWN0aXZlVGFiQm91bmRpbmcucmlnaHQtbmF2U2Nyb2xsQm91bmRpbmcucmlnaHQ7fX1lbHNle2lmKGFjdGl2ZVRhYkJvdW5kaW5nLnRvcDxuYXZTY3JvbGxCb3VuZGluZy50b3Ape25ld09mZnNldD1jdXJyZW50T2Zmc2V0LShuYXZTY3JvbGxCb3VuZGluZy50b3AtYWN0aXZlVGFiQm91bmRpbmcudG9wKTt9aWYoYWN0aXZlVGFiQm91bmRpbmcuYm90dG9tPm5hdlNjcm9sbEJvdW5kaW5nLmJvdHRvbSl7bmV3T2Zmc2V0PWN1cnJlbnRPZmZzZXQrKGFjdGl2ZVRhYkJvdW5kaW5nLmJvdHRvbS1uYXZTY3JvbGxCb3VuZGluZy5ib3R0b20pO319bmV3T2Zmc2V0PU1hdGgubWF4KG5ld09mZnNldCwwKTt0aGlzLm5hdk9mZnNldD1NYXRoLm1pbihuZXdPZmZzZXQsbWF4T2Zmc2V0KTt9LHVwZGF0ZTpmdW5jdGlvbiB1cGRhdGUoKXtpZighdGhpcy4kcmVmcy5uYXYpcmV0dXJuO3ZhciBzaXplTmFtZT10aGlzLnNpemVOYW1lO3ZhciBuYXZTaXplPXRoaXMuJHJlZnMubmF2WydvZmZzZXQnK3RhYl9uYXZ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19maXJzdFVwcGVyQ2FzZShzaXplTmFtZSldO3ZhciBjb250YWluZXJTaXplPXRoaXMuJHJlZnMubmF2U2Nyb2xsWydvZmZzZXQnK3RhYl9uYXZ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19maXJzdFVwcGVyQ2FzZShzaXplTmFtZSldO3ZhciBjdXJyZW50T2Zmc2V0PXRoaXMubmF2T2Zmc2V0O2lmKGNvbnRhaW5lclNpemU8bmF2U2l6ZSl7dmFyIF9jdXJyZW50T2Zmc2V0PXRoaXMubmF2T2Zmc2V0O3RoaXMuc2Nyb2xsYWJsZT10aGlzLnNjcm9sbGFibGV8fHt9O3RoaXMuc2Nyb2xsYWJsZS5wcmV2PV9jdXJyZW50T2Zmc2V0O3RoaXMuc2Nyb2xsYWJsZS5uZXh0PV9jdXJyZW50T2Zmc2V0K2NvbnRhaW5lclNpemU8bmF2U2l6ZTtpZihuYXZTaXplLV9jdXJyZW50T2Zmc2V0PGNvbnRhaW5lclNpemUpe3RoaXMubmF2T2Zmc2V0PW5hdlNpemUtY29udGFpbmVyU2l6ZTt9fWVsc2V7dGhpcy5zY3JvbGxhYmxlPWZhbHNlO2lmKGN1cnJlbnRPZmZzZXQ+MCl7dGhpcy5uYXZPZmZzZXQ9MDt9fX0sY2hhbmdlVGFiOmZ1bmN0aW9uIGNoYW5nZVRhYihlKXt2YXIga2V5Q29kZT1lLmtleUNvZGU7dmFyIG5leHRJbmRleD12b2lkIDA7dmFyIGN1cnJlbnRJbmRleD12b2lkIDAsdGFiTGlzdD12b2lkIDA7aWYoWzM3LDM4LDM5LDQwXS5pbmRleE9mKGtleUNvZGUpIT09LTEpey8vIOW3puWPs+S4iuS4i+mUruabtOaNonRhYgp0YWJMaXN0PWUuY3VycmVudFRhcmdldC5xdWVyeVNlbGVjdG9yQWxsKCdbcm9sZT10YWJdJyk7Y3VycmVudEluZGV4PUFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwodGFiTGlzdCxlLnRhcmdldCk7fWVsc2V7cmV0dXJuO31pZihrZXlDb2RlPT09Mzd8fGtleUNvZGU9PT0zOCl7Ly8gbGVmdAppZihjdXJyZW50SW5kZXg9PT0wKXsvLyBmaXJzdApuZXh0SW5kZXg9dGFiTGlzdC5sZW5ndGgtMTt9ZWxzZXtuZXh0SW5kZXg9Y3VycmVudEluZGV4LTE7fX1lbHNley8vIHJpZ2h0CmlmKGN1cnJlbnRJbmRleDx0YWJMaXN0Lmxlbmd0aC0xKXsvLyBub3QgbGFzdApuZXh0SW5kZXg9Y3VycmVudEluZGV4KzE7fWVsc2V7bmV4dEluZGV4PTA7fX10YWJMaXN0W25leHRJbmRleF0uZm9jdXMoKTsvLyDmlLnlj5jnhKbngrnlhYPntKAKdGFiTGlzdFtuZXh0SW5kZXhdLmNsaWNrKCk7Ly8g6YCJ5Lit5LiL5LiA5LiqdGFiCnRoaXMuc2V0Rm9jdXMoKTt9LHNldEZvY3VzOmZ1bmN0aW9uIHNldEZvY3VzKCl7aWYodGhpcy5mb2N1c2FibGUpe3RoaXMuaXNGb2N1cz10cnVlO319LHJlbW92ZUZvY3VzOmZ1bmN0aW9uIHJlbW92ZUZvY3VzKCl7dGhpcy5pc0ZvY3VzPWZhbHNlO30sdmlzaWJpbGl0eUNoYW5nZUhhbmRsZXI6ZnVuY3Rpb24gdmlzaWJpbGl0eUNoYW5nZUhhbmRsZXIoKXt2YXIgX3RoaXM9dGhpczt2YXIgdmlzaWJpbGl0eT1kb2N1bWVudC52aXNpYmlsaXR5U3RhdGU7aWYodmlzaWJpbGl0eT09PSdoaWRkZW4nKXt0aGlzLmZvY3VzYWJsZT1mYWxzZTt9ZWxzZSBpZih2aXNpYmlsaXR5PT09J3Zpc2libGUnKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7X3RoaXMuZm9jdXNhYmxlPXRydWU7fSw1MCk7fX0sd2luZG93Qmx1ckhhbmRsZXI6ZnVuY3Rpb24gd2luZG93Qmx1ckhhbmRsZXIoKXt0aGlzLmZvY3VzYWJsZT1mYWxzZTt9LHdpbmRvd0ZvY3VzSGFuZGxlcjpmdW5jdGlvbiB3aW5kb3dGb2N1c0hhbmRsZXIoKXt2YXIgX3RoaXMyPXRoaXM7c2V0VGltZW91dChmdW5jdGlvbigpe190aGlzMi5mb2N1c2FibGU9dHJ1ZTt9LDUwKTt9fSx1cGRhdGVkOmZ1bmN0aW9uIHVwZGF0ZWQoKXt0aGlzLnVwZGF0ZSgpO30scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX3RoaXMzPXRoaXM7dmFyIHR5cGU9dGhpcy50eXBlLHBhbmVzPXRoaXMucGFuZXMsZWRpdGFibGU9dGhpcy5lZGl0YWJsZSxzdHJldGNoPXRoaXMuc3RyZXRjaCxvblRhYkNsaWNrPXRoaXMub25UYWJDbGljayxvblRhYlJlbW92ZT10aGlzLm9uVGFiUmVtb3ZlLG5hdlN0eWxlPXRoaXMubmF2U3R5bGUsc2Nyb2xsYWJsZT10aGlzLnNjcm9sbGFibGUsc2Nyb2xsTmV4dD10aGlzLnNjcm9sbE5leHQsc2Nyb2xsUHJldj10aGlzLnNjcm9sbFByZXYsY2hhbmdlVGFiPXRoaXMuY2hhbmdlVGFiLHNldEZvY3VzPXRoaXMuc2V0Rm9jdXMscmVtb3ZlRm9jdXM9dGhpcy5yZW1vdmVGb2N1czt2YXIgc2Nyb2xsQnRuPXNjcm9sbGFibGU/W2goJ3NwYW4nLHsnY2xhc3MnOlsnZWwtdGFic19fbmF2LXByZXYnLHNjcm9sbGFibGUucHJldj8nJzonaXMtZGlzYWJsZWQnXSxvbjp7J2NsaWNrJzpzY3JvbGxQcmV2fX0sW2goJ2knLHsnY2xhc3MnOidlbC1pY29uLWFycm93LWxlZnQnfSldKSxoKCdzcGFuJyx7J2NsYXNzJzpbJ2VsLXRhYnNfX25hdi1uZXh0JyxzY3JvbGxhYmxlLm5leHQ/Jyc6J2lzLWRpc2FibGVkJ10sb246eydjbGljayc6c2Nyb2xsTmV4dH19LFtoKCdpJyx7J2NsYXNzJzonZWwtaWNvbi1hcnJvdy1yaWdodCd9KV0pXTpudWxsO3ZhciB0YWJzPXRoaXMuX2wocGFuZXMsZnVuY3Rpb24ocGFuZSxpbmRleCl7dmFyIF9yZWY7dmFyIHRhYk5hbWU9cGFuZS5uYW1lfHxwYW5lLmluZGV4fHxpbmRleDt2YXIgY2xvc2FibGU9cGFuZS5pc0Nsb3NhYmxlfHxlZGl0YWJsZTtwYW5lLmluZGV4PScnK2luZGV4O3ZhciBidG5DbG9zZT1jbG9zYWJsZT9oKCdzcGFuJyx7J2NsYXNzJzonZWwtaWNvbi1jbG9zZScsb246eydjbGljayc6ZnVuY3Rpb24gY2xpY2soZXYpe29uVGFiUmVtb3ZlKHBhbmUsZXYpO319fSk6bnVsbDt2YXIgdGFiTGFiZWxDb250ZW50PXBhbmUuJHNsb3RzLmxhYmVsfHxwYW5lLmxhYmVsO3ZhciB0YWJpbmRleD1wYW5lLmFjdGl2ZT8wOi0xO3JldHVybiBoKCdkaXYnLHsnY2xhc3MnOihfcmVmPXsnZWwtdGFic19faXRlbSc6dHJ1ZX0sX3JlZlsnaXMtJytfdGhpczMucm9vdFRhYnMudGFiUG9zaXRpb25dPXRydWUsX3JlZlsnaXMtYWN0aXZlJ109cGFuZS5hY3RpdmUsX3JlZlsnaXMtZGlzYWJsZWQnXT1wYW5lLmRpc2FibGVkLF9yZWZbJ2lzLWNsb3NhYmxlJ109Y2xvc2FibGUsX3JlZlsnaXMtZm9jdXMnXT1fdGhpczMuaXNGb2N1cyxfcmVmKSxhdHRyczp7aWQ6J3RhYi0nK3RhYk5hbWUsJ2FyaWEtY29udHJvbHMnOidwYW5lLScrdGFiTmFtZSxyb2xlOid0YWInLCdhcmlhLXNlbGVjdGVkJzpwYW5lLmFjdGl2ZSx0YWJpbmRleDp0YWJpbmRleH0sa2V5Oid0YWItJyt0YWJOYW1lLHJlZjondGFicycscmVmSW5Gb3I6dHJ1ZSxvbjp7J2ZvY3VzJzpmdW5jdGlvbiBmb2N1cygpe3NldEZvY3VzKCk7fSwnYmx1cic6ZnVuY3Rpb24gYmx1cigpe3JlbW92ZUZvY3VzKCk7fSwnY2xpY2snOmZ1bmN0aW9uIGNsaWNrKGV2KXtyZW1vdmVGb2N1cygpO29uVGFiQ2xpY2socGFuZSx0YWJOYW1lLGV2KTt9LCdrZXlkb3duJzpmdW5jdGlvbiBrZXlkb3duKGV2KXtpZihjbG9zYWJsZSYmKGV2LmtleUNvZGU9PT00Nnx8ZXYua2V5Q29kZT09PTgpKXtvblRhYlJlbW92ZShwYW5lLGV2KTt9fX19LFt0YWJMYWJlbENvbnRlbnQsYnRuQ2xvc2VdKTt9KTtyZXR1cm4gaCgnZGl2Jyx7J2NsYXNzJzpbJ2VsLXRhYnNfX25hdi13cmFwJyxzY3JvbGxhYmxlPydpcy1zY3JvbGxhYmxlJzonJywnaXMtJyt0aGlzLnJvb3RUYWJzLnRhYlBvc2l0aW9uXX0sW3Njcm9sbEJ0bixoKCdkaXYnLHsnY2xhc3MnOlsnZWwtdGFic19fbmF2LXNjcm9sbCddLHJlZjonbmF2U2Nyb2xsJ30sW2goJ2RpdicseydjbGFzcyc6WydlbC10YWJzX19uYXYnLCdpcy0nK3RoaXMucm9vdFRhYnMudGFiUG9zaXRpb24sc3RyZXRjaCYmWyd0b3AnLCdib3R0b20nXS5pbmRleE9mKHRoaXMucm9vdFRhYnMudGFiUG9zaXRpb24pIT09LTE/J2lzLXN0cmV0Y2gnOicnXSxyZWY6J25hdicsc3R5bGU6bmF2U3R5bGUsYXR0cnM6e3JvbGU6J3RhYmxpc3QnfSxvbjp7J2tleWRvd24nOmNoYW5nZVRhYn19LFshdHlwZT9oKCd0YWItYmFyJyx7YXR0cnM6e3RhYnM6cGFuZXN9fSk6bnVsbCx0YWJzXSldKV0pO30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIF90aGlzND10aGlzO09iamVjdChyZXNpemVfZXZlbnRfWyJhZGRSZXNpemVMaXN0ZW5lciJdKSh0aGlzLiRlbCx0aGlzLnVwZGF0ZSk7ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsdGhpcy52aXNpYmlsaXR5Q2hhbmdlSGFuZGxlcik7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLHRoaXMud2luZG93Qmx1ckhhbmRsZXIpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsdGhpcy53aW5kb3dGb2N1c0hhbmRsZXIpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtfdGhpczQuc2Nyb2xsVG9BY3RpdmVUYWIoKTt9LDApO30sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7aWYodGhpcy4kZWwmJnRoaXMudXBkYXRlKU9iamVjdChyZXNpemVfZXZlbnRfWyJyZW1vdmVSZXNpemVMaXN0ZW5lciJdKSh0aGlzLiRlbCx0aGlzLnVwZGF0ZSk7ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsdGhpcy52aXNpYmlsaXR5Q2hhbmdlSGFuZGxlcik7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2JsdXInLHRoaXMud2luZG93Qmx1ckhhbmRsZXIpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1cycsdGhpcy53aW5kb3dGb2N1c0hhbmRsZXIpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFicy9zcmMvdGFiLW5hdi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3RhYl9uYXZ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189dGFiX25hdnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYnMvc3JjL3RhYi1uYXYudnVlCnZhciB0YWJfbmF2X3JlbmRlcix0YWJfbmF2X3N0YXRpY1JlbmRlckZuczsvKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHRhYl9uYXZfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfdGFiX25hdnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyx0YWJfbmF2X3JlbmRlcix0YWJfbmF2X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgdGFiX25hdl9hcGk7fXRhYl9uYXZfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy90YWJzL3NyYy90YWItbmF2LnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0YWJfbmF2PXRhYl9uYXZfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvdGFicy9zcmMvdGFicy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGFic3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxUYWJzJyxjb21wb25lbnRzOntUYWJOYXY6dGFiX25hdn0scHJvcHM6e3R5cGU6U3RyaW5nLGFjdGl2ZU5hbWU6U3RyaW5nLGNsb3NhYmxlOkJvb2xlYW4sYWRkYWJsZTpCb29sZWFuLHZhbHVlOnt9LGVkaXRhYmxlOkJvb2xlYW4sdGFiUG9zaXRpb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3RvcCd9LGJlZm9yZUxlYXZlOkZ1bmN0aW9uLHN0cmV0Y2g6Qm9vbGVhbn0scHJvdmlkZTpmdW5jdGlvbiBwcm92aWRlKCl7cmV0dXJue3Jvb3RUYWJzOnRoaXN9O30sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2N1cnJlbnROYW1lOnRoaXMudmFsdWV8fHRoaXMuYWN0aXZlTmFtZSxwYW5lczpbXX07fSx3YXRjaDp7YWN0aXZlTmFtZTpmdW5jdGlvbiBhY3RpdmVOYW1lKHZhbHVlKXt0aGlzLnNldEN1cnJlbnROYW1lKHZhbHVlKTt9LHZhbHVlOmZ1bmN0aW9uIHZhbHVlKF92YWx1ZSl7dGhpcy5zZXRDdXJyZW50TmFtZShfdmFsdWUpO30sY3VycmVudE5hbWU6ZnVuY3Rpb24gY3VycmVudE5hbWUodmFsdWUpe3ZhciBfdGhpcz10aGlzO2lmKHRoaXMuJHJlZnMubmF2KXt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzLiRyZWZzLm5hdi4kbmV4dFRpY2soZnVuY3Rpb24oXyl7X3RoaXMuJHJlZnMubmF2LnNjcm9sbFRvQWN0aXZlVGFiKCk7fSk7fSk7fX19LG1ldGhvZHM6e2NhbGNQYW5lSW5zdGFuY2VzOmZ1bmN0aW9uIGNhbGNQYW5lSW5zdGFuY2VzKCl7dmFyIF90aGlzMj10aGlzO3ZhciBpc0ZvcmNlVXBkYXRlPWFyZ3VtZW50cy5sZW5ndGg+MCYmYXJndW1lbnRzWzBdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1swXTpmYWxzZTtpZih0aGlzLiRzbG90cy5kZWZhdWx0KXt2YXIgcGFuZVNsb3RzPXRoaXMuJHNsb3RzLmRlZmF1bHQuZmlsdGVyKGZ1bmN0aW9uKHZub2RlKXtyZXR1cm4gdm5vZGUudGFnJiZ2bm9kZS5jb21wb25lbnRPcHRpb25zJiZ2bm9kZS5jb21wb25lbnRPcHRpb25zLkN0b3Iub3B0aW9ucy5uYW1lPT09J0VsVGFiUGFuZSc7fSk7Ly8gdXBkYXRlIGluZGVlZAp2YXIgcGFuZXM9cGFuZVNsb3RzLm1hcChmdW5jdGlvbihfcmVmKXt2YXIgY29tcG9uZW50SW5zdGFuY2U9X3JlZi5jb21wb25lbnRJbnN0YW5jZTtyZXR1cm4gY29tcG9uZW50SW5zdGFuY2U7fSk7dmFyIHBhbmVzQ2hhbmdlZD0hKHBhbmVzLmxlbmd0aD09PXRoaXMucGFuZXMubGVuZ3RoJiZwYW5lcy5ldmVyeShmdW5jdGlvbihwYW5lLGluZGV4KXtyZXR1cm4gcGFuZT09PV90aGlzMi5wYW5lc1tpbmRleF07fSkpO2lmKGlzRm9yY2VVcGRhdGV8fHBhbmVzQ2hhbmdlZCl7dGhpcy5wYW5lcz1wYW5lczt9fWVsc2UgaWYodGhpcy5wYW5lcy5sZW5ndGghPT0wKXt0aGlzLnBhbmVzPVtdO319LGhhbmRsZVRhYkNsaWNrOmZ1bmN0aW9uIGhhbmRsZVRhYkNsaWNrKHRhYix0YWJOYW1lLGV2ZW50KXtpZih0YWIuZGlzYWJsZWQpcmV0dXJuO3RoaXMuc2V0Q3VycmVudE5hbWUodGFiTmFtZSk7dGhpcy4kZW1pdCgndGFiLWNsaWNrJyx0YWIsZXZlbnQpO30saGFuZGxlVGFiUmVtb3ZlOmZ1bmN0aW9uIGhhbmRsZVRhYlJlbW92ZShwYW5lLGV2KXtpZihwYW5lLmRpc2FibGVkKXJldHVybjtldi5zdG9wUHJvcGFnYXRpb24oKTt0aGlzLiRlbWl0KCdlZGl0JyxwYW5lLm5hbWUsJ3JlbW92ZScpO3RoaXMuJGVtaXQoJ3RhYi1yZW1vdmUnLHBhbmUubmFtZSk7fSxoYW5kbGVUYWJBZGQ6ZnVuY3Rpb24gaGFuZGxlVGFiQWRkKCl7dGhpcy4kZW1pdCgnZWRpdCcsbnVsbCwnYWRkJyk7dGhpcy4kZW1pdCgndGFiLWFkZCcpO30sc2V0Q3VycmVudE5hbWU6ZnVuY3Rpb24gc2V0Q3VycmVudE5hbWUodmFsdWUpe3ZhciBfdGhpczM9dGhpczt2YXIgY2hhbmdlQ3VycmVudE5hbWU9ZnVuY3Rpb24gY2hhbmdlQ3VycmVudE5hbWUoKXtfdGhpczMuY3VycmVudE5hbWU9dmFsdWU7X3RoaXMzLiRlbWl0KCdpbnB1dCcsdmFsdWUpO307aWYodGhpcy5jdXJyZW50TmFtZSE9PXZhbHVlJiZ0aGlzLmJlZm9yZUxlYXZlKXt2YXIgYmVmb3JlPXRoaXMuYmVmb3JlTGVhdmUodmFsdWUsdGhpcy5jdXJyZW50TmFtZSk7aWYoYmVmb3JlJiZiZWZvcmUudGhlbil7YmVmb3JlLnRoZW4oZnVuY3Rpb24oKXtjaGFuZ2VDdXJyZW50TmFtZSgpO190aGlzMy4kcmVmcy5uYXYmJl90aGlzMy4kcmVmcy5uYXYucmVtb3ZlRm9jdXMoKTt9LGZ1bmN0aW9uKCl7Ly8gaHR0cHM6Ly9naXRodWIuY29tL0VsZW1lRkUvZWxlbWVudC9wdWxsLzE0ODE2Ci8vIGlnbm9yZSBwcm9taXNlIHJlamVjdGlvbiBpbiBgYmVmb3JlLWxlYXZlYCBob29rCn0pO31lbHNlIGlmKGJlZm9yZSE9PWZhbHNlKXtjaGFuZ2VDdXJyZW50TmFtZSgpO319ZWxzZXtjaGFuZ2VDdXJyZW50TmFtZSgpO319fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBfcmVmMjt2YXIgdHlwZT10aGlzLnR5cGUsaGFuZGxlVGFiQ2xpY2s9dGhpcy5oYW5kbGVUYWJDbGljayxoYW5kbGVUYWJSZW1vdmU9dGhpcy5oYW5kbGVUYWJSZW1vdmUsaGFuZGxlVGFiQWRkPXRoaXMuaGFuZGxlVGFiQWRkLGN1cnJlbnROYW1lPXRoaXMuY3VycmVudE5hbWUscGFuZXM9dGhpcy5wYW5lcyxlZGl0YWJsZT10aGlzLmVkaXRhYmxlLGFkZGFibGU9dGhpcy5hZGRhYmxlLHRhYlBvc2l0aW9uPXRoaXMudGFiUG9zaXRpb24sc3RyZXRjaD10aGlzLnN0cmV0Y2g7dmFyIG5ld0J1dHRvbj1lZGl0YWJsZXx8YWRkYWJsZT9oKCdzcGFuJyx7J2NsYXNzJzonZWwtdGFic19fbmV3LXRhYicsb246eydjbGljayc6aGFuZGxlVGFiQWRkLCdrZXlkb3duJzpmdW5jdGlvbiBrZXlkb3duKGV2KXtpZihldi5rZXlDb2RlPT09MTMpe2hhbmRsZVRhYkFkZCgpO319fSxhdHRyczp7dGFiaW5kZXg6JzAnfX0sW2goJ2knLHsnY2xhc3MnOidlbC1pY29uLXBsdXMnfSldKTpudWxsO3ZhciBuYXZEYXRhPXtwcm9wczp7Y3VycmVudE5hbWU6Y3VycmVudE5hbWUsb25UYWJDbGljazpoYW5kbGVUYWJDbGljayxvblRhYlJlbW92ZTpoYW5kbGVUYWJSZW1vdmUsZWRpdGFibGU6ZWRpdGFibGUsdHlwZTp0eXBlLHBhbmVzOnBhbmVzLHN0cmV0Y2g6c3RyZXRjaH0scmVmOiduYXYnfTt2YXIgaGVhZGVyPWgoJ2RpdicseydjbGFzcyc6WydlbC10YWJzX19oZWFkZXInLCdpcy0nK3RhYlBvc2l0aW9uXX0sW25ld0J1dHRvbixoKCd0YWItbmF2JyxuYXZEYXRhKV0pO3ZhciBwYW5lbHM9aCgnZGl2Jyx7J2NsYXNzJzonZWwtdGFic19fY29udGVudCd9LFt0aGlzLiRzbG90cy5kZWZhdWx0XSk7cmV0dXJuIGgoJ2RpdicseydjbGFzcyc6KF9yZWYyPXsnZWwtdGFicyc6dHJ1ZSwnZWwtdGFicy0tY2FyZCc6dHlwZT09PSdjYXJkJ30sX3JlZjJbJ2VsLXRhYnMtLScrdGFiUG9zaXRpb25dPXRydWUsX3JlZjJbJ2VsLXRhYnMtLWJvcmRlci1jYXJkJ109dHlwZT09PSdib3JkZXItY2FyZCcsX3JlZjIpfSxbdGFiUG9zaXRpb24hPT0nYm90dG9tJz9baGVhZGVyLHBhbmVsc106W3BhbmVscyxoZWFkZXJdXSk7fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXtpZighdGhpcy5jdXJyZW50TmFtZSl7dGhpcy5zZXRDdXJyZW50TmFtZSgnMCcpO310aGlzLiRvbigndGFiLW5hdi11cGRhdGUnLHRoaXMuY2FsY1BhbmVJbnN0YW5jZXMuYmluZChudWxsLHRydWUpKTt9LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3RoaXMuY2FsY1BhbmVJbnN0YW5jZXMoKTt9LHVwZGF0ZWQ6ZnVuY3Rpb24gdXBkYXRlZCgpe3RoaXMuY2FsY1BhbmVJbnN0YW5jZXMoKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYnMvc3JjL3RhYnMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY190YWJzdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXRhYnN2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90YWJzL3NyYy90YWJzLnZ1ZQp2YXIgdGFic19yZW5kZXIsdGFic19zdGF0aWNSZW5kZXJGbnM7Lyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciB0YWJzX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3RhYnN2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sdGFic19yZW5kZXIsdGFic19zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHRhYnNfYXBpO310YWJzX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvdGFicy9zcmMvdGFicy52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGFicz10YWJzX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFicy9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3RhYnMuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQodGFicy5uYW1lLHRhYnMpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc190YWJzPXRhYnM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy90YWJzL3NyYy90YWItcGFuZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9OTE0NWEwNzAmCnZhciB0YWJfcGFuZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzkxNDVhMDcwX3JlbmRlcj1mdW5jdGlvbiB0YWJfcGFuZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzkxNDVhMDcwX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiFfdm0ubGF6eXx8X3ZtLmxvYWRlZHx8X3ZtLmFjdGl2ZT9fYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLmFjdGl2ZSxleHByZXNzaW9uOiJhY3RpdmUifV0sc3RhdGljQ2xhc3M6ImVsLXRhYi1wYW5lIixhdHRyczp7cm9sZToidGFicGFuZWwiLCJhcmlhLWhpZGRlbiI6IV92bS5hY3RpdmUsaWQ6InBhbmUtIitfdm0ucGFuZU5hbWUsImFyaWEtbGFiZWxsZWRieSI6InRhYi0iK192bS5wYW5lTmFtZX19LFtfdm0uX3QoImRlZmF1bHQiKV0sMik6X3ZtLl9lKCk7fTt2YXIgdGFiX3BhbmV2dWVfdHlwZV90ZW1wbGF0ZV9pZF85MTQ1YTA3MF9zdGF0aWNSZW5kZXJGbnM9W107dGFiX3BhbmV2dWVfdHlwZV90ZW1wbGF0ZV9pZF85MTQ1YTA3MF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFicy9zcmMvdGFiLXBhbmUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTkxNDVhMDcwJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy90YWJzL3NyYy90YWItcGFuZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGFiX3BhbmV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsVGFiUGFuZScsY29tcG9uZW50TmFtZTonRWxUYWJQYW5lJyxwcm9wczp7bGFiZWw6U3RyaW5nLGxhYmVsQ29udGVudDpGdW5jdGlvbixuYW1lOlN0cmluZyxjbG9zYWJsZTpCb29sZWFuLGRpc2FibGVkOkJvb2xlYW4sbGF6eTpCb29sZWFufSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aW5kZXg6bnVsbCxsb2FkZWQ6ZmFsc2V9O30sY29tcHV0ZWQ6e2lzQ2xvc2FibGU6ZnVuY3Rpb24gaXNDbG9zYWJsZSgpe3JldHVybiB0aGlzLmNsb3NhYmxlfHx0aGlzLiRwYXJlbnQuY2xvc2FibGU7fSxhY3RpdmU6ZnVuY3Rpb24gYWN0aXZlKCl7dmFyIGFjdGl2ZT10aGlzLiRwYXJlbnQuY3VycmVudE5hbWU9PT0odGhpcy5uYW1lfHx0aGlzLmluZGV4KTtpZihhY3RpdmUpe3RoaXMubG9hZGVkPXRydWU7fXJldHVybiBhY3RpdmU7fSxwYW5lTmFtZTpmdW5jdGlvbiBwYW5lTmFtZSgpe3JldHVybiB0aGlzLm5hbWV8fHRoaXMuaW5kZXg7fX0sdXBkYXRlZDpmdW5jdGlvbiB1cGRhdGVkKCl7dGhpcy4kcGFyZW50LiRlbWl0KCd0YWItbmF2LXVwZGF0ZScpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFicy9zcmMvdGFiLXBhbmUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY190YWJfcGFuZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz10YWJfcGFuZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhYnMvc3JjL3RhYi1wYW5lLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHRhYl9wYW5lX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3RhYl9wYW5ldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLHRhYl9wYW5ldnVlX3R5cGVfdGVtcGxhdGVfaWRfOTE0NWEwNzBfcmVuZGVyLHRhYl9wYW5ldnVlX3R5cGVfdGVtcGxhdGVfaWRfOTE0NWEwNzBfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciB0YWJfcGFuZV9hcGk7fXRhYl9wYW5lX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvdGFicy9zcmMvdGFiLXBhbmUudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRhYl9wYW5lPXRhYl9wYW5lX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGFiLXBhbmUvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi90YWJfcGFuZS5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudCh0YWJfcGFuZS5uYW1lLHRhYl9wYW5lKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfdGFiX3BhbmU9dGFiX3BhbmU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvdGFnL3NyYy90YWcudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRhZ3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxUYWcnLHByb3BzOnt0ZXh0OlN0cmluZyxjbG9zYWJsZTpCb29sZWFuLHR5cGU6U3RyaW5nLGhpdDpCb29sZWFuLGRpc2FibGVUcmFuc2l0aW9uczpCb29sZWFuLGNvbG9yOlN0cmluZyxzaXplOlN0cmluZyxlZmZlY3Q6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2xpZ2h0Jyx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7cmV0dXJuWydkYXJrJywnbGlnaHQnLCdwbGFpbiddLmluZGV4T2YodmFsKSE9PS0xO319fSxtZXRob2RzOntoYW5kbGVDbG9zZTpmdW5jdGlvbiBoYW5kbGVDbG9zZShldmVudCl7ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7dGhpcy4kZW1pdCgnY2xvc2UnLGV2ZW50KTt9LGhhbmRsZUNsaWNrOmZ1bmN0aW9uIGhhbmRsZUNsaWNrKGV2ZW50KXt0aGlzLiRlbWl0KCdjbGljaycsZXZlbnQpO319LGNvbXB1dGVkOnt0YWdTaXplOmZ1bmN0aW9uIHRhZ1NpemUoKXtyZXR1cm4gdGhpcy5zaXplfHwodGhpcy4kRUxFTUVOVHx8e30pLnNpemU7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgdHlwZT10aGlzLnR5cGUsdGFnU2l6ZT10aGlzLnRhZ1NpemUsaGl0PXRoaXMuaGl0LGVmZmVjdD10aGlzLmVmZmVjdDt2YXIgY2xhc3Nlcz1bJ2VsLXRhZycsdHlwZT8nZWwtdGFnLS0nK3R5cGU6JycsdGFnU2l6ZT8nZWwtdGFnLS0nK3RhZ1NpemU6JycsZWZmZWN0PydlbC10YWctLScrZWZmZWN0OicnLGhpdCYmJ2lzLWhpdCddO3ZhciB0YWdFbD1oKCdzcGFuJyx7J2NsYXNzJzpjbGFzc2VzLHN0eWxlOntiYWNrZ3JvdW5kQ29sb3I6dGhpcy5jb2xvcn0sb246eydjbGljayc6dGhpcy5oYW5kbGVDbGlja319LFt0aGlzLiRzbG90cy5kZWZhdWx0LHRoaXMuY2xvc2FibGUmJmgoJ2knLHsnY2xhc3MnOidlbC10YWdfX2Nsb3NlIGVsLWljb24tY2xvc2UnLG9uOnsnY2xpY2snOnRoaXMuaGFuZGxlQ2xvc2V9fSldKTtyZXR1cm4gdGhpcy5kaXNhYmxlVHJhbnNpdGlvbnM/dGFnRWw6aCgndHJhbnNpdGlvbicse2F0dHJzOntuYW1lOidlbC16b29tLWluLWNlbnRlcid9fSxbdGFnRWxdKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhZy9zcmMvdGFnLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfdGFndnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXRhZ3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhZy9zcmMvdGFnLnZ1ZQp2YXIgdGFnX3JlbmRlcix0YWdfc3RhdGljUmVuZGVyRm5zOy8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgdGFnX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3RhZ3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyx0YWdfcmVuZGVyLHRhZ19zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHRhZ19hcGk7fXRhZ19jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3RhZy9zcmMvdGFnLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfdGFnPXRhZ19jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RhZy9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY190YWcuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoc3JjX3RhZy5uYW1lLHNyY190YWcpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc190YWc9c3JjX3RhZzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RyZWUvc3JjL3RyZWUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTU0NzU3NWE2Jgp2YXIgdHJlZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzU0NzU3NWE2X3JlbmRlcj1mdW5jdGlvbiB0cmVldnVlX3R5cGVfdGVtcGxhdGVfaWRfNTQ3NTc1YTZfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdHJlZSIsY2xhc3M6eyJlbC10cmVlLS1oaWdobGlnaHQtY3VycmVudCI6X3ZtLmhpZ2hsaWdodEN1cnJlbnQsImlzLWRyYWdnaW5nIjohIV92bS5kcmFnU3RhdGUuZHJhZ2dpbmdOb2RlLCJpcy1kcm9wLW5vdC1hbGxvdyI6IV92bS5kcmFnU3RhdGUuYWxsb3dEcm9wLCJpcy1kcm9wLWlubmVyIjpfdm0uZHJhZ1N0YXRlLmRyb3BUeXBlPT09ImlubmVyIn0sYXR0cnM6e3JvbGU6InRyZWUifX0sW192bS5fbChfdm0ucm9vdC5jaGlsZE5vZGVzLGZ1bmN0aW9uKGNoaWxkKXtyZXR1cm4gX2MoImVsLXRyZWUtbm9kZSIse2tleTpfdm0uZ2V0Tm9kZUtleShjaGlsZCksYXR0cnM6e25vZGU6Y2hpbGQscHJvcHM6X3ZtLnByb3BzLCJyZW5kZXItYWZ0ZXItZXhwYW5kIjpfdm0ucmVuZGVyQWZ0ZXJFeHBhbmQsInNob3ctY2hlY2tib3giOl92bS5zaG93Q2hlY2tib3gsInJlbmRlci1jb250ZW50Ijpfdm0ucmVuZGVyQ29udGVudH0sb246eyJub2RlLWV4cGFuZCI6X3ZtLmhhbmRsZU5vZGVFeHBhbmR9fSk7fSksX3ZtLmlzRW1wdHk/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10cmVlX19lbXB0eS1ibG9jayJ9LFtfYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC10cmVlX19lbXB0eS10ZXh0In0sW192bS5fdihfdm0uX3MoX3ZtLmVtcHR5VGV4dCkpXSldKTpfdm0uX2UoKSxfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLmRyYWdTdGF0ZS5zaG93RHJvcEluZGljYXRvcixleHByZXNzaW9uOiJkcmFnU3RhdGUuc2hvd0Ryb3BJbmRpY2F0b3IifV0scmVmOiJkcm9wSW5kaWNhdG9yIixzdGF0aWNDbGFzczoiZWwtdHJlZV9fZHJvcC1pbmRpY2F0b3IifSldLDIpO307dmFyIHRyZWV2dWVfdHlwZV90ZW1wbGF0ZV9pZF81NDc1NzVhNl9zdGF0aWNSZW5kZXJGbnM9W107dHJlZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzU0NzU3NWE2X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90cmVlL3NyYy90cmVlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01NDc1NzVhNiYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90cmVlL3NyYy9tb2RlbC91dGlsLmpzCnZhciBOT0RFX0tFWT0nJHRyZWVOb2RlSWQnO3ZhciBtYXJrTm9kZURhdGE9ZnVuY3Rpb24gbWFya05vZGVEYXRhKG5vZGUsZGF0YSl7aWYoIWRhdGF8fGRhdGFbTk9ERV9LRVldKXJldHVybjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZGF0YSxOT0RFX0tFWSx7dmFsdWU6bm9kZS5pZCxlbnVtZXJhYmxlOmZhbHNlLGNvbmZpZ3VyYWJsZTpmYWxzZSx3cml0YWJsZTpmYWxzZX0pO307dmFyIHV0aWxfZ2V0Tm9kZUtleT1mdW5jdGlvbiBnZXROb2RlS2V5KGtleSxkYXRhKXtpZigha2V5KXJldHVybiBkYXRhW05PREVfS0VZXTtyZXR1cm4gZGF0YVtrZXldO307dmFyIGZpbmROZWFyZXN0Q29tcG9uZW50PWZ1bmN0aW9uIGZpbmROZWFyZXN0Q29tcG9uZW50KGVsZW1lbnQsY29tcG9uZW50TmFtZSl7dmFyIHRhcmdldD1lbGVtZW50O3doaWxlKHRhcmdldCYmdGFyZ2V0LnRhZ05hbWUhPT0nQk9EWScpe2lmKHRhcmdldC5fX3Z1ZV9fJiZ0YXJnZXQuX192dWVfXy4kb3B0aW9ucy5uYW1lPT09Y29tcG9uZW50TmFtZSl7cmV0dXJuIHRhcmdldC5fX3Z1ZV9fO310YXJnZXQ9dGFyZ2V0LnBhcmVudE5vZGU7fXJldHVybiBudWxsO307Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90cmVlL3NyYy9tb2RlbC9ub2RlLmpzCnZhciBfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHxmYWxzZTtkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT10cnVlO2lmKCJ2YWx1ZSJpbiBkZXNjcmlwdG9yKWRlc2NyaXB0b3Iud3JpdGFibGU9dHJ1ZTtPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpO319cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe2lmKHByb3RvUHJvcHMpZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyk7aWYoc3RhdGljUHJvcHMpZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyk7cmV0dXJuIENvbnN0cnVjdG9yO307fSgpO2Z1bmN0aW9uIG5vZGVfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3Rvcikpe3Rocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpO319dmFyIGdldENoaWxkU3RhdGU9ZnVuY3Rpb24gZ2V0Q2hpbGRTdGF0ZShub2RlKXt2YXIgYWxsPXRydWU7dmFyIG5vbmU9dHJ1ZTt2YXIgYWxsV2l0aG91dERpc2FibGU9dHJ1ZTtmb3IodmFyIGk9MCxqPW5vZGUubGVuZ3RoO2k8ajtpKyspe3ZhciBuPW5vZGVbaV07aWYobi5jaGVja2VkIT09dHJ1ZXx8bi5pbmRldGVybWluYXRlKXthbGw9ZmFsc2U7aWYoIW4uZGlzYWJsZWQpe2FsbFdpdGhvdXREaXNhYmxlPWZhbHNlO319aWYobi5jaGVja2VkIT09ZmFsc2V8fG4uaW5kZXRlcm1pbmF0ZSl7bm9uZT1mYWxzZTt9fXJldHVybnthbGw6YWxsLG5vbmU6bm9uZSxhbGxXaXRob3V0RGlzYWJsZTphbGxXaXRob3V0RGlzYWJsZSxoYWxmOiFhbGwmJiFub25lfTt9O3ZhciByZUluaXRDaGVja2VkPWZ1bmN0aW9uIHJlSW5pdENoZWNrZWQobm9kZSl7aWYobm9kZS5jaGlsZE5vZGVzLmxlbmd0aD09PTApcmV0dXJuO3ZhciBfZ2V0Q2hpbGRTdGF0ZT1nZXRDaGlsZFN0YXRlKG5vZGUuY2hpbGROb2RlcyksYWxsPV9nZXRDaGlsZFN0YXRlLmFsbCxub25lPV9nZXRDaGlsZFN0YXRlLm5vbmUsaGFsZj1fZ2V0Q2hpbGRTdGF0ZS5oYWxmO2lmKGFsbCl7bm9kZS5jaGVja2VkPXRydWU7bm9kZS5pbmRldGVybWluYXRlPWZhbHNlO31lbHNlIGlmKGhhbGYpe25vZGUuY2hlY2tlZD1mYWxzZTtub2RlLmluZGV0ZXJtaW5hdGU9dHJ1ZTt9ZWxzZSBpZihub25lKXtub2RlLmNoZWNrZWQ9ZmFsc2U7bm9kZS5pbmRldGVybWluYXRlPWZhbHNlO312YXIgcGFyZW50PW5vZGUucGFyZW50O2lmKCFwYXJlbnR8fHBhcmVudC5sZXZlbD09PTApcmV0dXJuO2lmKCFub2RlLnN0b3JlLmNoZWNrU3RyaWN0bHkpe3JlSW5pdENoZWNrZWQocGFyZW50KTt9fTt2YXIgZ2V0UHJvcGVydHlGcm9tRGF0YT1mdW5jdGlvbiBnZXRQcm9wZXJ0eUZyb21EYXRhKG5vZGUscHJvcCl7dmFyIHByb3BzPW5vZGUuc3RvcmUucHJvcHM7dmFyIGRhdGE9bm9kZS5kYXRhfHx7fTt2YXIgY29uZmlnPXByb3BzW3Byb3BdO2lmKHR5cGVvZiBjb25maWc9PT0nZnVuY3Rpb24nKXtyZXR1cm4gY29uZmlnKGRhdGEsbm9kZSk7fWVsc2UgaWYodHlwZW9mIGNvbmZpZz09PSdzdHJpbmcnKXtyZXR1cm4gZGF0YVtjb25maWddO31lbHNlIGlmKHR5cGVvZiBjb25maWc9PT0ndW5kZWZpbmVkJyl7dmFyIGRhdGFQcm9wPWRhdGFbcHJvcF07cmV0dXJuIGRhdGFQcm9wPT09dW5kZWZpbmVkPycnOmRhdGFQcm9wO319O3ZhciBub2RlSWRTZWVkPTA7dmFyIG5vZGVfTm9kZT1mdW5jdGlvbigpe2Z1bmN0aW9uIE5vZGUob3B0aW9ucyl7bm9kZV9jbGFzc0NhbGxDaGVjayh0aGlzLE5vZGUpO3RoaXMuaWQ9bm9kZUlkU2VlZCsrO3RoaXMudGV4dD1udWxsO3RoaXMuY2hlY2tlZD1mYWxzZTt0aGlzLmluZGV0ZXJtaW5hdGU9ZmFsc2U7dGhpcy5kYXRhPW51bGw7dGhpcy5leHBhbmRlZD1mYWxzZTt0aGlzLnBhcmVudD1udWxsO3RoaXMudmlzaWJsZT10cnVlO3RoaXMuaXNDdXJyZW50PWZhbHNlO2Zvcih2YXIgbmFtZSBpbiBvcHRpb25zKXtpZihvcHRpb25zLmhhc093blByb3BlcnR5KG5hbWUpKXt0aGlzW25hbWVdPW9wdGlvbnNbbmFtZV07fX0vLyBpbnRlcm5hbAp0aGlzLmxldmVsPTA7dGhpcy5sb2FkZWQ9ZmFsc2U7dGhpcy5jaGlsZE5vZGVzPVtdO3RoaXMubG9hZGluZz1mYWxzZTtpZih0aGlzLnBhcmVudCl7dGhpcy5sZXZlbD10aGlzLnBhcmVudC5sZXZlbCsxO312YXIgc3RvcmU9dGhpcy5zdG9yZTtpZighc3RvcmUpe3Rocm93IG5ldyBFcnJvcignW05vZGVdc3RvcmUgaXMgcmVxdWlyZWQhJyk7fXN0b3JlLnJlZ2lzdGVyTm9kZSh0aGlzKTt2YXIgcHJvcHM9c3RvcmUucHJvcHM7aWYocHJvcHMmJnR5cGVvZiBwcm9wcy5pc0xlYWYhPT0ndW5kZWZpbmVkJyl7dmFyIGlzTGVhZj1nZXRQcm9wZXJ0eUZyb21EYXRhKHRoaXMsJ2lzTGVhZicpO2lmKHR5cGVvZiBpc0xlYWY9PT0nYm9vbGVhbicpe3RoaXMuaXNMZWFmQnlVc2VyPWlzTGVhZjt9fWlmKHN0b3JlLmxhenkhPT10cnVlJiZ0aGlzLmRhdGEpe3RoaXMuc2V0RGF0YSh0aGlzLmRhdGEpO2lmKHN0b3JlLmRlZmF1bHRFeHBhbmRBbGwpe3RoaXMuZXhwYW5kZWQ9dHJ1ZTt9fWVsc2UgaWYodGhpcy5sZXZlbD4wJiZzdG9yZS5sYXp5JiZzdG9yZS5kZWZhdWx0RXhwYW5kQWxsKXt0aGlzLmV4cGFuZCgpO31pZighQXJyYXkuaXNBcnJheSh0aGlzLmRhdGEpKXttYXJrTm9kZURhdGEodGhpcyx0aGlzLmRhdGEpO31pZighdGhpcy5kYXRhKXJldHVybjt2YXIgZGVmYXVsdEV4cGFuZGVkS2V5cz1zdG9yZS5kZWZhdWx0RXhwYW5kZWRLZXlzO3ZhciBrZXk9c3RvcmUua2V5O2lmKGtleSYmZGVmYXVsdEV4cGFuZGVkS2V5cyYmZGVmYXVsdEV4cGFuZGVkS2V5cy5pbmRleE9mKHRoaXMua2V5KSE9PS0xKXt0aGlzLmV4cGFuZChudWxsLHN0b3JlLmF1dG9FeHBhbmRQYXJlbnQpO31pZihrZXkmJnN0b3JlLmN1cnJlbnROb2RlS2V5IT09dW5kZWZpbmVkJiZ0aGlzLmtleT09PXN0b3JlLmN1cnJlbnROb2RlS2V5KXtzdG9yZS5jdXJyZW50Tm9kZT10aGlzO3N0b3JlLmN1cnJlbnROb2RlLmlzQ3VycmVudD10cnVlO31pZihzdG9yZS5sYXp5KXtzdG9yZS5faW5pdERlZmF1bHRDaGVja2VkTm9kZSh0aGlzKTt9dGhpcy51cGRhdGVMZWFmU3RhdGUoKTt9Tm9kZS5wcm90b3R5cGUuc2V0RGF0YT1mdW5jdGlvbiBzZXREYXRhKGRhdGEpe2lmKCFBcnJheS5pc0FycmF5KGRhdGEpKXttYXJrTm9kZURhdGEodGhpcyxkYXRhKTt9dGhpcy5kYXRhPWRhdGE7dGhpcy5jaGlsZE5vZGVzPVtdO3ZhciBjaGlsZHJlbj12b2lkIDA7aWYodGhpcy5sZXZlbD09PTAmJnRoaXMuZGF0YSBpbnN0YW5jZW9mIEFycmF5KXtjaGlsZHJlbj10aGlzLmRhdGE7fWVsc2V7Y2hpbGRyZW49Z2V0UHJvcGVydHlGcm9tRGF0YSh0aGlzLCdjaGlsZHJlbicpfHxbXTt9Zm9yKHZhciBpPTAsaj1jaGlsZHJlbi5sZW5ndGg7aTxqO2krKyl7dGhpcy5pbnNlcnRDaGlsZCh7ZGF0YTpjaGlsZHJlbltpXX0pO319O05vZGUucHJvdG90eXBlLmNvbnRhaW5zPWZ1bmN0aW9uIGNvbnRhaW5zKHRhcmdldCl7dmFyIGRlZXA9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzFdOnRydWU7dmFyIHdhbGs9ZnVuY3Rpb24gd2FsayhwYXJlbnQpe3ZhciBjaGlsZHJlbj1wYXJlbnQuY2hpbGROb2Rlc3x8W107dmFyIHJlc3VsdD1mYWxzZTtmb3IodmFyIGk9MCxqPWNoaWxkcmVuLmxlbmd0aDtpPGo7aSsrKXt2YXIgY2hpbGQ9Y2hpbGRyZW5baV07aWYoY2hpbGQ9PT10YXJnZXR8fGRlZXAmJndhbGsoY2hpbGQpKXtyZXN1bHQ9dHJ1ZTticmVhazt9fXJldHVybiByZXN1bHQ7fTtyZXR1cm4gd2Fsayh0aGlzKTt9O05vZGUucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbiByZW1vdmUoKXt2YXIgcGFyZW50PXRoaXMucGFyZW50O2lmKHBhcmVudCl7cGFyZW50LnJlbW92ZUNoaWxkKHRoaXMpO319O05vZGUucHJvdG90eXBlLmluc2VydENoaWxkPWZ1bmN0aW9uIGluc2VydENoaWxkKGNoaWxkLGluZGV4LGJhdGNoKXtpZighY2hpbGQpdGhyb3cgbmV3IEVycm9yKCdpbnNlcnRDaGlsZCBlcnJvcjogY2hpbGQgaXMgcmVxdWlyZWQuJyk7aWYoIShjaGlsZCBpbnN0YW5jZW9mIE5vZGUpKXtpZighYmF0Y2gpe3ZhciBjaGlsZHJlbj10aGlzLmdldENoaWxkcmVuKHRydWUpO2lmKGNoaWxkcmVuLmluZGV4T2YoY2hpbGQuZGF0YSk9PT0tMSl7aWYodHlwZW9mIGluZGV4PT09J3VuZGVmaW5lZCd8fGluZGV4PDApe2NoaWxkcmVuLnB1c2goY2hpbGQuZGF0YSk7fWVsc2V7Y2hpbGRyZW4uc3BsaWNlKGluZGV4LDAsY2hpbGQuZGF0YSk7fX19bWVyZ2VfZGVmYXVsdCgpKGNoaWxkLHtwYXJlbnQ6dGhpcyxzdG9yZTp0aGlzLnN0b3JlfSk7Y2hpbGQ9bmV3IE5vZGUoY2hpbGQpO31jaGlsZC5sZXZlbD10aGlzLmxldmVsKzE7aWYodHlwZW9mIGluZGV4PT09J3VuZGVmaW5lZCd8fGluZGV4PDApe3RoaXMuY2hpbGROb2Rlcy5wdXNoKGNoaWxkKTt9ZWxzZXt0aGlzLmNoaWxkTm9kZXMuc3BsaWNlKGluZGV4LDAsY2hpbGQpO310aGlzLnVwZGF0ZUxlYWZTdGF0ZSgpO307Tm9kZS5wcm90b3R5cGUuaW5zZXJ0QmVmb3JlPWZ1bmN0aW9uIGluc2VydEJlZm9yZShjaGlsZCxyZWYpe3ZhciBpbmRleD12b2lkIDA7aWYocmVmKXtpbmRleD10aGlzLmNoaWxkTm9kZXMuaW5kZXhPZihyZWYpO310aGlzLmluc2VydENoaWxkKGNoaWxkLGluZGV4KTt9O05vZGUucHJvdG90eXBlLmluc2VydEFmdGVyPWZ1bmN0aW9uIGluc2VydEFmdGVyKGNoaWxkLHJlZil7dmFyIGluZGV4PXZvaWQgMDtpZihyZWYpe2luZGV4PXRoaXMuY2hpbGROb2Rlcy5pbmRleE9mKHJlZik7aWYoaW5kZXghPT0tMSlpbmRleCs9MTt9dGhpcy5pbnNlcnRDaGlsZChjaGlsZCxpbmRleCk7fTtOb2RlLnByb3RvdHlwZS5yZW1vdmVDaGlsZD1mdW5jdGlvbiByZW1vdmVDaGlsZChjaGlsZCl7dmFyIGNoaWxkcmVuPXRoaXMuZ2V0Q2hpbGRyZW4oKXx8W107dmFyIGRhdGFJbmRleD1jaGlsZHJlbi5pbmRleE9mKGNoaWxkLmRhdGEpO2lmKGRhdGFJbmRleD4tMSl7Y2hpbGRyZW4uc3BsaWNlKGRhdGFJbmRleCwxKTt9dmFyIGluZGV4PXRoaXMuY2hpbGROb2Rlcy5pbmRleE9mKGNoaWxkKTtpZihpbmRleD4tMSl7dGhpcy5zdG9yZSYmdGhpcy5zdG9yZS5kZXJlZ2lzdGVyTm9kZShjaGlsZCk7Y2hpbGQucGFyZW50PW51bGw7dGhpcy5jaGlsZE5vZGVzLnNwbGljZShpbmRleCwxKTt9dGhpcy51cGRhdGVMZWFmU3RhdGUoKTt9O05vZGUucHJvdG90eXBlLnJlbW92ZUNoaWxkQnlEYXRhPWZ1bmN0aW9uIHJlbW92ZUNoaWxkQnlEYXRhKGRhdGEpe3ZhciB0YXJnZXROb2RlPW51bGw7Zm9yKHZhciBpPTA7aTx0aGlzLmNoaWxkTm9kZXMubGVuZ3RoO2krKyl7aWYodGhpcy5jaGlsZE5vZGVzW2ldLmRhdGE9PT1kYXRhKXt0YXJnZXROb2RlPXRoaXMuY2hpbGROb2Rlc1tpXTticmVhazt9fWlmKHRhcmdldE5vZGUpe3RoaXMucmVtb3ZlQ2hpbGQodGFyZ2V0Tm9kZSk7fX07Tm9kZS5wcm90b3R5cGUuZXhwYW5kPWZ1bmN0aW9uIGV4cGFuZChjYWxsYmFjayxleHBhbmRQYXJlbnQpe3ZhciBfdGhpcz10aGlzO3ZhciBkb25lPWZ1bmN0aW9uIGRvbmUoKXtpZihleHBhbmRQYXJlbnQpe3ZhciBwYXJlbnQ9X3RoaXMucGFyZW50O3doaWxlKHBhcmVudC5sZXZlbD4wKXtwYXJlbnQuZXhwYW5kZWQ9dHJ1ZTtwYXJlbnQ9cGFyZW50LnBhcmVudDt9fV90aGlzLmV4cGFuZGVkPXRydWU7aWYoY2FsbGJhY2spY2FsbGJhY2soKTt9O2lmKHRoaXMuc2hvdWxkTG9hZERhdGEoKSl7dGhpcy5sb2FkRGF0YShmdW5jdGlvbihkYXRhKXtpZihkYXRhIGluc3RhbmNlb2YgQXJyYXkpe2lmKF90aGlzLmNoZWNrZWQpe190aGlzLnNldENoZWNrZWQodHJ1ZSx0cnVlKTt9ZWxzZSBpZighX3RoaXMuc3RvcmUuY2hlY2tTdHJpY3RseSl7cmVJbml0Q2hlY2tlZChfdGhpcyk7fWRvbmUoKTt9fSk7fWVsc2V7ZG9uZSgpO319O05vZGUucHJvdG90eXBlLmRvQ3JlYXRlQ2hpbGRyZW49ZnVuY3Rpb24gZG9DcmVhdGVDaGlsZHJlbihhcnJheSl7dmFyIF90aGlzMj10aGlzO3ZhciBkZWZhdWx0UHJvcHM9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzFdOnt9O2FycmF5LmZvckVhY2goZnVuY3Rpb24oaXRlbSl7X3RoaXMyLmluc2VydENoaWxkKG1lcmdlX2RlZmF1bHQoKSh7ZGF0YTppdGVtfSxkZWZhdWx0UHJvcHMpLHVuZGVmaW5lZCx0cnVlKTt9KTt9O05vZGUucHJvdG90eXBlLmNvbGxhcHNlPWZ1bmN0aW9uIGNvbGxhcHNlKCl7dGhpcy5leHBhbmRlZD1mYWxzZTt9O05vZGUucHJvdG90eXBlLnNob3VsZExvYWREYXRhPWZ1bmN0aW9uIHNob3VsZExvYWREYXRhKCl7cmV0dXJuIHRoaXMuc3RvcmUubGF6eT09PXRydWUmJnRoaXMuc3RvcmUubG9hZCYmIXRoaXMubG9hZGVkO307Tm9kZS5wcm90b3R5cGUudXBkYXRlTGVhZlN0YXRlPWZ1bmN0aW9uIHVwZGF0ZUxlYWZTdGF0ZSgpe2lmKHRoaXMuc3RvcmUubGF6eT09PXRydWUmJnRoaXMubG9hZGVkIT09dHJ1ZSYmdHlwZW9mIHRoaXMuaXNMZWFmQnlVc2VyIT09J3VuZGVmaW5lZCcpe3RoaXMuaXNMZWFmPXRoaXMuaXNMZWFmQnlVc2VyO3JldHVybjt9dmFyIGNoaWxkTm9kZXM9dGhpcy5jaGlsZE5vZGVzO2lmKCF0aGlzLnN0b3JlLmxhenl8fHRoaXMuc3RvcmUubGF6eT09PXRydWUmJnRoaXMubG9hZGVkPT09dHJ1ZSl7dGhpcy5pc0xlYWY9IWNoaWxkTm9kZXN8fGNoaWxkTm9kZXMubGVuZ3RoPT09MDtyZXR1cm47fXRoaXMuaXNMZWFmPWZhbHNlO307Tm9kZS5wcm90b3R5cGUuc2V0Q2hlY2tlZD1mdW5jdGlvbiBzZXRDaGVja2VkKHZhbHVlLGRlZXAscmVjdXJzaW9uLHBhc3NWYWx1ZSl7dmFyIF90aGlzMz10aGlzO3RoaXMuaW5kZXRlcm1pbmF0ZT12YWx1ZT09PSdoYWxmJzt0aGlzLmNoZWNrZWQ9dmFsdWU9PT10cnVlO2lmKHRoaXMuc3RvcmUuY2hlY2tTdHJpY3RseSlyZXR1cm47aWYoISh0aGlzLnNob3VsZExvYWREYXRhKCkmJiF0aGlzLnN0b3JlLmNoZWNrRGVzY2VuZGFudHMpKXt2YXIgX2dldENoaWxkU3RhdGUyPWdldENoaWxkU3RhdGUodGhpcy5jaGlsZE5vZGVzKSxhbGw9X2dldENoaWxkU3RhdGUyLmFsbCxhbGxXaXRob3V0RGlzYWJsZT1fZ2V0Q2hpbGRTdGF0ZTIuYWxsV2l0aG91dERpc2FibGU7aWYoIXRoaXMuaXNMZWFmJiYhYWxsJiZhbGxXaXRob3V0RGlzYWJsZSl7dGhpcy5jaGVja2VkPWZhbHNlO3ZhbHVlPWZhbHNlO312YXIgaGFuZGxlRGVzY2VuZGFudHM9ZnVuY3Rpb24gaGFuZGxlRGVzY2VuZGFudHMoKXtpZihkZWVwKXt2YXIgY2hpbGROb2Rlcz1fdGhpczMuY2hpbGROb2Rlcztmb3IodmFyIGk9MCxqPWNoaWxkTm9kZXMubGVuZ3RoO2k8ajtpKyspe3ZhciBjaGlsZD1jaGlsZE5vZGVzW2ldO3Bhc3NWYWx1ZT1wYXNzVmFsdWV8fHZhbHVlIT09ZmFsc2U7dmFyIGlzQ2hlY2s9Y2hpbGQuZGlzYWJsZWQ/Y2hpbGQuY2hlY2tlZDpwYXNzVmFsdWU7Y2hpbGQuc2V0Q2hlY2tlZChpc0NoZWNrLGRlZXAsdHJ1ZSxwYXNzVmFsdWUpO312YXIgX2dldENoaWxkU3RhdGUzPWdldENoaWxkU3RhdGUoY2hpbGROb2RlcyksaGFsZj1fZ2V0Q2hpbGRTdGF0ZTMuaGFsZixfYWxsPV9nZXRDaGlsZFN0YXRlMy5hbGw7aWYoIV9hbGwpe190aGlzMy5jaGVja2VkPV9hbGw7X3RoaXMzLmluZGV0ZXJtaW5hdGU9aGFsZjt9fX07aWYodGhpcy5zaG91bGRMb2FkRGF0YSgpKXsvLyBPbmx5IHdvcmsgb24gbGF6eSBsb2FkIGRhdGEuCnRoaXMubG9hZERhdGEoZnVuY3Rpb24oKXtoYW5kbGVEZXNjZW5kYW50cygpO3JlSW5pdENoZWNrZWQoX3RoaXMzKTt9LHtjaGVja2VkOnZhbHVlIT09ZmFsc2V9KTtyZXR1cm47fWVsc2V7aGFuZGxlRGVzY2VuZGFudHMoKTt9fXZhciBwYXJlbnQ9dGhpcy5wYXJlbnQ7aWYoIXBhcmVudHx8cGFyZW50LmxldmVsPT09MClyZXR1cm47aWYoIXJlY3Vyc2lvbil7cmVJbml0Q2hlY2tlZChwYXJlbnQpO319O05vZGUucHJvdG90eXBlLmdldENoaWxkcmVuPWZ1bmN0aW9uIGdldENoaWxkcmVuKCl7dmFyIGZvcmNlSW5pdD1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMF06ZmFsc2U7Ly8gdGhpcyBpcyBkYXRhCmlmKHRoaXMubGV2ZWw9PT0wKXJldHVybiB0aGlzLmRhdGE7dmFyIGRhdGE9dGhpcy5kYXRhO2lmKCFkYXRhKXJldHVybiBudWxsO3ZhciBwcm9wcz10aGlzLnN0b3JlLnByb3BzO3ZhciBjaGlsZHJlbj0nY2hpbGRyZW4nO2lmKHByb3BzKXtjaGlsZHJlbj1wcm9wcy5jaGlsZHJlbnx8J2NoaWxkcmVuJzt9aWYoZGF0YVtjaGlsZHJlbl09PT11bmRlZmluZWQpe2RhdGFbY2hpbGRyZW5dPW51bGw7fWlmKGZvcmNlSW5pdCYmIWRhdGFbY2hpbGRyZW5dKXtkYXRhW2NoaWxkcmVuXT1bXTt9cmV0dXJuIGRhdGFbY2hpbGRyZW5dO307Tm9kZS5wcm90b3R5cGUudXBkYXRlQ2hpbGRyZW49ZnVuY3Rpb24gdXBkYXRlQ2hpbGRyZW4oKXt2YXIgX3RoaXM0PXRoaXM7dmFyIG5ld0RhdGE9dGhpcy5nZXRDaGlsZHJlbigpfHxbXTt2YXIgb2xkRGF0YT10aGlzLmNoaWxkTm9kZXMubWFwKGZ1bmN0aW9uKG5vZGUpe3JldHVybiBub2RlLmRhdGE7fSk7dmFyIG5ld0RhdGFNYXA9e307dmFyIG5ld05vZGVzPVtdO25ld0RhdGEuZm9yRWFjaChmdW5jdGlvbihpdGVtLGluZGV4KXt2YXIga2V5PWl0ZW1bTk9ERV9LRVldO3ZhciBpc05vZGVFeGlzdHM9ISFrZXkmJk9iamVjdCh1dGlsX1siYXJyYXlGaW5kSW5kZXgiXSkob2xkRGF0YSxmdW5jdGlvbihkYXRhKXtyZXR1cm4gZGF0YVtOT0RFX0tFWV09PT1rZXk7fSk+PTA7aWYoaXNOb2RlRXhpc3RzKXtuZXdEYXRhTWFwW2tleV09e2luZGV4OmluZGV4LGRhdGE6aXRlbX07fWVsc2V7bmV3Tm9kZXMucHVzaCh7aW5kZXg6aW5kZXgsZGF0YTppdGVtfSk7fX0pO2lmKCF0aGlzLnN0b3JlLmxhenkpe29sZERhdGEuZm9yRWFjaChmdW5jdGlvbihpdGVtKXtpZighbmV3RGF0YU1hcFtpdGVtW05PREVfS0VZXV0pX3RoaXM0LnJlbW92ZUNoaWxkQnlEYXRhKGl0ZW0pO30pO31uZXdOb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKF9yZWYpe3ZhciBpbmRleD1fcmVmLmluZGV4LGRhdGE9X3JlZi5kYXRhO190aGlzNC5pbnNlcnRDaGlsZCh7ZGF0YTpkYXRhfSxpbmRleCk7fSk7dGhpcy51cGRhdGVMZWFmU3RhdGUoKTt9O05vZGUucHJvdG90eXBlLmxvYWREYXRhPWZ1bmN0aW9uIGxvYWREYXRhKGNhbGxiYWNrKXt2YXIgX3RoaXM1PXRoaXM7dmFyIGRlZmF1bHRQcm9wcz1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMV06e307aWYodGhpcy5zdG9yZS5sYXp5PT09dHJ1ZSYmdGhpcy5zdG9yZS5sb2FkJiYhdGhpcy5sb2FkZWQmJighdGhpcy5sb2FkaW5nfHxPYmplY3Qua2V5cyhkZWZhdWx0UHJvcHMpLmxlbmd0aCkpe3RoaXMubG9hZGluZz10cnVlO3ZhciByZXNvbHZlPWZ1bmN0aW9uIHJlc29sdmUoY2hpbGRyZW4pe190aGlzNS5sb2FkZWQ9dHJ1ZTtfdGhpczUubG9hZGluZz1mYWxzZTtfdGhpczUuY2hpbGROb2Rlcz1bXTtfdGhpczUuZG9DcmVhdGVDaGlsZHJlbihjaGlsZHJlbixkZWZhdWx0UHJvcHMpO190aGlzNS51cGRhdGVMZWFmU3RhdGUoKTtpZihjYWxsYmFjayl7Y2FsbGJhY2suY2FsbChfdGhpczUsY2hpbGRyZW4pO319O3RoaXMuc3RvcmUubG9hZCh0aGlzLHJlc29sdmUpO31lbHNle2lmKGNhbGxiYWNrKXtjYWxsYmFjay5jYWxsKHRoaXMpO319fTtfY3JlYXRlQ2xhc3MoTm9kZSxbe2tleTonbGFiZWwnLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gZ2V0UHJvcGVydHlGcm9tRGF0YSh0aGlzLCdsYWJlbCcpO319LHtrZXk6J2tleScsZ2V0OmZ1bmN0aW9uIGdldCgpe3ZhciBub2RlS2V5PXRoaXMuc3RvcmUua2V5O2lmKHRoaXMuZGF0YSlyZXR1cm4gdGhpcy5kYXRhW25vZGVLZXldO3JldHVybiBudWxsO319LHtrZXk6J2Rpc2FibGVkJyxnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIGdldFByb3BlcnR5RnJvbURhdGEodGhpcywnZGlzYWJsZWQnKTt9fSx7a2V5OiduZXh0U2libGluZycsZ2V0OmZ1bmN0aW9uIGdldCgpe3ZhciBwYXJlbnQ9dGhpcy5wYXJlbnQ7aWYocGFyZW50KXt2YXIgaW5kZXg9cGFyZW50LmNoaWxkTm9kZXMuaW5kZXhPZih0aGlzKTtpZihpbmRleD4tMSl7cmV0dXJuIHBhcmVudC5jaGlsZE5vZGVzW2luZGV4KzFdO319cmV0dXJuIG51bGw7fX0se2tleToncHJldmlvdXNTaWJsaW5nJyxnZXQ6ZnVuY3Rpb24gZ2V0KCl7dmFyIHBhcmVudD10aGlzLnBhcmVudDtpZihwYXJlbnQpe3ZhciBpbmRleD1wYXJlbnQuY2hpbGROb2Rlcy5pbmRleE9mKHRoaXMpO2lmKGluZGV4Pi0xKXtyZXR1cm4gaW5kZXg+MD9wYXJlbnQuY2hpbGROb2Rlc1tpbmRleC0xXTpudWxsO319cmV0dXJuIG51bGw7fX1dKTtyZXR1cm4gTm9kZTt9KCk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBtb2RlbF9ub2RlPW5vZGVfTm9kZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RyZWUvc3JjL21vZGVsL3RyZWUtc3RvcmUuanMKdmFyIHRyZWVfc3RvcmVfdHlwZW9mPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZfdHlwZW9mMihTeW1ib2wuaXRlcmF0b3IpPT09InN5bWJvbCI/ZnVuY3Rpb24ob2JqKXtyZXR1cm4gX3R5cGVvZjIob2JqKTt9OmZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiYmdHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9iai5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmb2JqIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjpfdHlwZW9mMihvYmopO307ZnVuY3Rpb24gdHJlZV9zdG9yZV9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl7dGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7fX12YXIgdHJlZV9zdG9yZV9UcmVlU3RvcmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBUcmVlU3RvcmUob3B0aW9ucyl7dmFyIF90aGlzPXRoaXM7dHJlZV9zdG9yZV9jbGFzc0NhbGxDaGVjayh0aGlzLFRyZWVTdG9yZSk7dGhpcy5jdXJyZW50Tm9kZT1udWxsO3RoaXMuY3VycmVudE5vZGVLZXk9bnVsbDtmb3IodmFyIG9wdGlvbiBpbiBvcHRpb25zKXtpZihvcHRpb25zLmhhc093blByb3BlcnR5KG9wdGlvbikpe3RoaXNbb3B0aW9uXT1vcHRpb25zW29wdGlvbl07fX10aGlzLm5vZGVzTWFwPXt9O3RoaXMucm9vdD1uZXcgbW9kZWxfbm9kZSh7ZGF0YTp0aGlzLmRhdGEsc3RvcmU6dGhpc30pO2lmKHRoaXMubGF6eSYmdGhpcy5sb2FkKXt2YXIgbG9hZEZuPXRoaXMubG9hZDtsb2FkRm4odGhpcy5yb290LGZ1bmN0aW9uKGRhdGEpe190aGlzLnJvb3QuZG9DcmVhdGVDaGlsZHJlbihkYXRhKTtfdGhpcy5faW5pdERlZmF1bHRDaGVja2VkTm9kZXMoKTt9KTt9ZWxzZXt0aGlzLl9pbml0RGVmYXVsdENoZWNrZWROb2RlcygpO319VHJlZVN0b3JlLnByb3RvdHlwZS5maWx0ZXI9ZnVuY3Rpb24gZmlsdGVyKHZhbHVlKXt2YXIgZmlsdGVyTm9kZU1ldGhvZD10aGlzLmZpbHRlck5vZGVNZXRob2Q7dmFyIGxhenk9dGhpcy5sYXp5O3ZhciB0cmF2ZXJzZT1mdW5jdGlvbiB0cmF2ZXJzZShub2RlKXt2YXIgY2hpbGROb2Rlcz1ub2RlLnJvb3Q/bm9kZS5yb290LmNoaWxkTm9kZXM6bm9kZS5jaGlsZE5vZGVzO2NoaWxkTm9kZXMuZm9yRWFjaChmdW5jdGlvbihjaGlsZCl7Y2hpbGQudmlzaWJsZT1maWx0ZXJOb2RlTWV0aG9kLmNhbGwoY2hpbGQsdmFsdWUsY2hpbGQuZGF0YSxjaGlsZCk7dHJhdmVyc2UoY2hpbGQpO30pO2lmKCFub2RlLnZpc2libGUmJmNoaWxkTm9kZXMubGVuZ3RoKXt2YXIgYWxsSGlkZGVuPXRydWU7YWxsSGlkZGVuPSFjaGlsZE5vZGVzLnNvbWUoZnVuY3Rpb24oY2hpbGQpe3JldHVybiBjaGlsZC52aXNpYmxlO30pO2lmKG5vZGUucm9vdCl7bm9kZS5yb290LnZpc2libGU9YWxsSGlkZGVuPT09ZmFsc2U7fWVsc2V7bm9kZS52aXNpYmxlPWFsbEhpZGRlbj09PWZhbHNlO319aWYoIXZhbHVlKXJldHVybjtpZihub2RlLnZpc2libGUmJiFub2RlLmlzTGVhZiYmIWxhenkpbm9kZS5leHBhbmQoKTt9O3RyYXZlcnNlKHRoaXMpO307VHJlZVN0b3JlLnByb3RvdHlwZS5zZXREYXRhPWZ1bmN0aW9uIHNldERhdGEobmV3VmFsKXt2YXIgaW5zdGFuY2VDaGFuZ2VkPW5ld1ZhbCE9PXRoaXMucm9vdC5kYXRhO2lmKGluc3RhbmNlQ2hhbmdlZCl7dGhpcy5yb290LnNldERhdGEobmV3VmFsKTt0aGlzLl9pbml0RGVmYXVsdENoZWNrZWROb2RlcygpO31lbHNle3RoaXMucm9vdC51cGRhdGVDaGlsZHJlbigpO319O1RyZWVTdG9yZS5wcm90b3R5cGUuZ2V0Tm9kZT1mdW5jdGlvbiBnZXROb2RlKGRhdGEpe2lmKGRhdGEgaW5zdGFuY2VvZiBtb2RlbF9ub2RlKXJldHVybiBkYXRhO3ZhciBrZXk9KHR5cGVvZiBkYXRhPT09J3VuZGVmaW5lZCc/J3VuZGVmaW5lZCc6dHJlZV9zdG9yZV90eXBlb2YoZGF0YSkpIT09J29iamVjdCc/ZGF0YTp1dGlsX2dldE5vZGVLZXkodGhpcy5rZXksZGF0YSk7cmV0dXJuIHRoaXMubm9kZXNNYXBba2V5XXx8bnVsbDt9O1RyZWVTdG9yZS5wcm90b3R5cGUuaW5zZXJ0QmVmb3JlPWZ1bmN0aW9uIGluc2VydEJlZm9yZShkYXRhLHJlZkRhdGEpe3ZhciByZWZOb2RlPXRoaXMuZ2V0Tm9kZShyZWZEYXRhKTtyZWZOb2RlLnBhcmVudC5pbnNlcnRCZWZvcmUoe2RhdGE6ZGF0YX0scmVmTm9kZSk7fTtUcmVlU3RvcmUucHJvdG90eXBlLmluc2VydEFmdGVyPWZ1bmN0aW9uIGluc2VydEFmdGVyKGRhdGEscmVmRGF0YSl7dmFyIHJlZk5vZGU9dGhpcy5nZXROb2RlKHJlZkRhdGEpO3JlZk5vZGUucGFyZW50Lmluc2VydEFmdGVyKHtkYXRhOmRhdGF9LHJlZk5vZGUpO307VHJlZVN0b3JlLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24gcmVtb3ZlKGRhdGEpe3ZhciBub2RlPXRoaXMuZ2V0Tm9kZShkYXRhKTtpZihub2RlJiZub2RlLnBhcmVudCl7aWYobm9kZT09PXRoaXMuY3VycmVudE5vZGUpe3RoaXMuY3VycmVudE5vZGU9bnVsbDt9bm9kZS5wYXJlbnQucmVtb3ZlQ2hpbGQobm9kZSk7fX07VHJlZVN0b3JlLnByb3RvdHlwZS5hcHBlbmQ9ZnVuY3Rpb24gYXBwZW5kKGRhdGEscGFyZW50RGF0YSl7dmFyIHBhcmVudE5vZGU9cGFyZW50RGF0YT90aGlzLmdldE5vZGUocGFyZW50RGF0YSk6dGhpcy5yb290O2lmKHBhcmVudE5vZGUpe3BhcmVudE5vZGUuaW5zZXJ0Q2hpbGQoe2RhdGE6ZGF0YX0pO319O1RyZWVTdG9yZS5wcm90b3R5cGUuX2luaXREZWZhdWx0Q2hlY2tlZE5vZGVzPWZ1bmN0aW9uIF9pbml0RGVmYXVsdENoZWNrZWROb2Rlcygpe3ZhciBfdGhpczI9dGhpczt2YXIgZGVmYXVsdENoZWNrZWRLZXlzPXRoaXMuZGVmYXVsdENoZWNrZWRLZXlzfHxbXTt2YXIgbm9kZXNNYXA9dGhpcy5ub2Rlc01hcDtkZWZhdWx0Q2hlY2tlZEtleXMuZm9yRWFjaChmdW5jdGlvbihjaGVja2VkS2V5KXt2YXIgbm9kZT1ub2Rlc01hcFtjaGVja2VkS2V5XTtpZihub2RlKXtub2RlLnNldENoZWNrZWQodHJ1ZSwhX3RoaXMyLmNoZWNrU3RyaWN0bHkpO319KTt9O1RyZWVTdG9yZS5wcm90b3R5cGUuX2luaXREZWZhdWx0Q2hlY2tlZE5vZGU9ZnVuY3Rpb24gX2luaXREZWZhdWx0Q2hlY2tlZE5vZGUobm9kZSl7dmFyIGRlZmF1bHRDaGVja2VkS2V5cz10aGlzLmRlZmF1bHRDaGVja2VkS2V5c3x8W107aWYoZGVmYXVsdENoZWNrZWRLZXlzLmluZGV4T2Yobm9kZS5rZXkpIT09LTEpe25vZGUuc2V0Q2hlY2tlZCh0cnVlLCF0aGlzLmNoZWNrU3RyaWN0bHkpO319O1RyZWVTdG9yZS5wcm90b3R5cGUuc2V0RGVmYXVsdENoZWNrZWRLZXk9ZnVuY3Rpb24gc2V0RGVmYXVsdENoZWNrZWRLZXkobmV3VmFsKXtpZihuZXdWYWwhPT10aGlzLmRlZmF1bHRDaGVja2VkS2V5cyl7dGhpcy5kZWZhdWx0Q2hlY2tlZEtleXM9bmV3VmFsO3RoaXMuX2luaXREZWZhdWx0Q2hlY2tlZE5vZGVzKCk7fX07VHJlZVN0b3JlLnByb3RvdHlwZS5yZWdpc3Rlck5vZGU9ZnVuY3Rpb24gcmVnaXN0ZXJOb2RlKG5vZGUpe3ZhciBrZXk9dGhpcy5rZXk7aWYoIWtleXx8IW5vZGV8fCFub2RlLmRhdGEpcmV0dXJuO3ZhciBub2RlS2V5PW5vZGUua2V5O2lmKG5vZGVLZXkhPT11bmRlZmluZWQpdGhpcy5ub2Rlc01hcFtub2RlLmtleV09bm9kZTt9O1RyZWVTdG9yZS5wcm90b3R5cGUuZGVyZWdpc3Rlck5vZGU9ZnVuY3Rpb24gZGVyZWdpc3Rlck5vZGUobm9kZSl7dmFyIF90aGlzMz10aGlzO3ZhciBrZXk9dGhpcy5rZXk7aWYoIWtleXx8IW5vZGV8fCFub2RlLmRhdGEpcmV0dXJuO25vZGUuY2hpbGROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKXtfdGhpczMuZGVyZWdpc3Rlck5vZGUoY2hpbGQpO30pO2RlbGV0ZSB0aGlzLm5vZGVzTWFwW25vZGUua2V5XTt9O1RyZWVTdG9yZS5wcm90b3R5cGUuZ2V0Q2hlY2tlZE5vZGVzPWZ1bmN0aW9uIGdldENoZWNrZWROb2Rlcygpe3ZhciBsZWFmT25seT1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMF06ZmFsc2U7dmFyIGluY2x1ZGVIYWxmQ2hlY2tlZD1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMV06ZmFsc2U7dmFyIGNoZWNrZWROb2Rlcz1bXTt2YXIgdHJhdmVyc2U9ZnVuY3Rpb24gdHJhdmVyc2Uobm9kZSl7dmFyIGNoaWxkTm9kZXM9bm9kZS5yb290P25vZGUucm9vdC5jaGlsZE5vZGVzOm5vZGUuY2hpbGROb2RlcztjaGlsZE5vZGVzLmZvckVhY2goZnVuY3Rpb24oY2hpbGQpe2lmKChjaGlsZC5jaGVja2VkfHxpbmNsdWRlSGFsZkNoZWNrZWQmJmNoaWxkLmluZGV0ZXJtaW5hdGUpJiYoIWxlYWZPbmx5fHxsZWFmT25seSYmY2hpbGQuaXNMZWFmKSl7Y2hlY2tlZE5vZGVzLnB1c2goY2hpbGQuZGF0YSk7fXRyYXZlcnNlKGNoaWxkKTt9KTt9O3RyYXZlcnNlKHRoaXMpO3JldHVybiBjaGVja2VkTm9kZXM7fTtUcmVlU3RvcmUucHJvdG90eXBlLmdldENoZWNrZWRLZXlzPWZ1bmN0aW9uIGdldENoZWNrZWRLZXlzKCl7dmFyIF90aGlzND10aGlzO3ZhciBsZWFmT25seT1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMF06ZmFsc2U7cmV0dXJuIHRoaXMuZ2V0Q2hlY2tlZE5vZGVzKGxlYWZPbmx5KS5tYXAoZnVuY3Rpb24oZGF0YSl7cmV0dXJuKGRhdGF8fHt9KVtfdGhpczQua2V5XTt9KTt9O1RyZWVTdG9yZS5wcm90b3R5cGUuZ2V0SGFsZkNoZWNrZWROb2Rlcz1mdW5jdGlvbiBnZXRIYWxmQ2hlY2tlZE5vZGVzKCl7dmFyIG5vZGVzPVtdO3ZhciB0cmF2ZXJzZT1mdW5jdGlvbiB0cmF2ZXJzZShub2RlKXt2YXIgY2hpbGROb2Rlcz1ub2RlLnJvb3Q/bm9kZS5yb290LmNoaWxkTm9kZXM6bm9kZS5jaGlsZE5vZGVzO2NoaWxkTm9kZXMuZm9yRWFjaChmdW5jdGlvbihjaGlsZCl7aWYoY2hpbGQuaW5kZXRlcm1pbmF0ZSl7bm9kZXMucHVzaChjaGlsZC5kYXRhKTt9dHJhdmVyc2UoY2hpbGQpO30pO307dHJhdmVyc2UodGhpcyk7cmV0dXJuIG5vZGVzO307VHJlZVN0b3JlLnByb3RvdHlwZS5nZXRIYWxmQ2hlY2tlZEtleXM9ZnVuY3Rpb24gZ2V0SGFsZkNoZWNrZWRLZXlzKCl7dmFyIF90aGlzNT10aGlzO3JldHVybiB0aGlzLmdldEhhbGZDaGVja2VkTm9kZXMoKS5tYXAoZnVuY3Rpb24oZGF0YSl7cmV0dXJuKGRhdGF8fHt9KVtfdGhpczUua2V5XTt9KTt9O1RyZWVTdG9yZS5wcm90b3R5cGUuX2dldEFsbE5vZGVzPWZ1bmN0aW9uIF9nZXRBbGxOb2Rlcygpe3ZhciBhbGxOb2Rlcz1bXTt2YXIgbm9kZXNNYXA9dGhpcy5ub2Rlc01hcDtmb3IodmFyIG5vZGVLZXkgaW4gbm9kZXNNYXApe2lmKG5vZGVzTWFwLmhhc093blByb3BlcnR5KG5vZGVLZXkpKXthbGxOb2Rlcy5wdXNoKG5vZGVzTWFwW25vZGVLZXldKTt9fXJldHVybiBhbGxOb2Rlczt9O1RyZWVTdG9yZS5wcm90b3R5cGUudXBkYXRlQ2hpbGRyZW49ZnVuY3Rpb24gdXBkYXRlQ2hpbGRyZW4oa2V5LGRhdGEpe3ZhciBub2RlPXRoaXMubm9kZXNNYXBba2V5XTtpZighbm9kZSlyZXR1cm47dmFyIGNoaWxkTm9kZXM9bm9kZS5jaGlsZE5vZGVzO2Zvcih2YXIgaT1jaGlsZE5vZGVzLmxlbmd0aC0xO2k+PTA7aS0tKXt2YXIgY2hpbGQ9Y2hpbGROb2Rlc1tpXTt0aGlzLnJlbW92ZShjaGlsZC5kYXRhKTt9Zm9yKHZhciBfaT0wLGo9ZGF0YS5sZW5ndGg7X2k8ajtfaSsrKXt2YXIgX2NoaWxkPWRhdGFbX2ldO3RoaXMuYXBwZW5kKF9jaGlsZCxub2RlLmRhdGEpO319O1RyZWVTdG9yZS5wcm90b3R5cGUuX3NldENoZWNrZWRLZXlzPWZ1bmN0aW9uIF9zZXRDaGVja2VkS2V5cyhrZXkpe3ZhciBsZWFmT25seT1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMV06ZmFsc2U7dmFyIGNoZWNrZWRLZXlzPWFyZ3VtZW50c1syXTt2YXIgYWxsTm9kZXM9dGhpcy5fZ2V0QWxsTm9kZXMoKS5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGIubGV2ZWwtYS5sZXZlbDt9KTt2YXIgY2FjaGU9T2JqZWN0LmNyZWF0ZShudWxsKTt2YXIga2V5cz1PYmplY3Qua2V5cyhjaGVja2VkS2V5cyk7YWxsTm9kZXMuZm9yRWFjaChmdW5jdGlvbihub2RlKXtyZXR1cm4gbm9kZS5zZXRDaGVja2VkKGZhbHNlLGZhbHNlKTt9KTtmb3IodmFyIGk9MCxqPWFsbE5vZGVzLmxlbmd0aDtpPGo7aSsrKXt2YXIgbm9kZT1hbGxOb2Rlc1tpXTt2YXIgbm9kZUtleT1ub2RlLmRhdGFba2V5XS50b1N0cmluZygpO3ZhciBjaGVja2VkPWtleXMuaW5kZXhPZihub2RlS2V5KT4tMTtpZighY2hlY2tlZCl7aWYobm9kZS5jaGVja2VkJiYhY2FjaGVbbm9kZUtleV0pe25vZGUuc2V0Q2hlY2tlZChmYWxzZSxmYWxzZSk7fWNvbnRpbnVlO312YXIgcGFyZW50PW5vZGUucGFyZW50O3doaWxlKHBhcmVudCYmcGFyZW50LmxldmVsPjApe2NhY2hlW3BhcmVudC5kYXRhW2tleV1dPXRydWU7cGFyZW50PXBhcmVudC5wYXJlbnQ7fWlmKG5vZGUuaXNMZWFmfHx0aGlzLmNoZWNrU3RyaWN0bHkpe25vZGUuc2V0Q2hlY2tlZCh0cnVlLGZhbHNlKTtjb250aW51ZTt9bm9kZS5zZXRDaGVja2VkKHRydWUsdHJ1ZSk7aWYobGVhZk9ubHkpeyhmdW5jdGlvbigpe25vZGUuc2V0Q2hlY2tlZChmYWxzZSxmYWxzZSk7dmFyIHRyYXZlcnNlPWZ1bmN0aW9uIHRyYXZlcnNlKG5vZGUpe3ZhciBjaGlsZE5vZGVzPW5vZGUuY2hpbGROb2RlcztjaGlsZE5vZGVzLmZvckVhY2goZnVuY3Rpb24oY2hpbGQpe2lmKCFjaGlsZC5pc0xlYWYpe2NoaWxkLnNldENoZWNrZWQoZmFsc2UsZmFsc2UpO310cmF2ZXJzZShjaGlsZCk7fSk7fTt0cmF2ZXJzZShub2RlKTt9KSgpO319fTtUcmVlU3RvcmUucHJvdG90eXBlLnNldENoZWNrZWROb2Rlcz1mdW5jdGlvbiBzZXRDaGVja2VkTm9kZXMoYXJyYXkpe3ZhciBsZWFmT25seT1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMV06ZmFsc2U7dmFyIGtleT10aGlzLmtleTt2YXIgY2hlY2tlZEtleXM9e307YXJyYXkuZm9yRWFjaChmdW5jdGlvbihpdGVtKXtjaGVja2VkS2V5c1soaXRlbXx8e30pW2tleV1dPXRydWU7fSk7dGhpcy5fc2V0Q2hlY2tlZEtleXMoa2V5LGxlYWZPbmx5LGNoZWNrZWRLZXlzKTt9O1RyZWVTdG9yZS5wcm90b3R5cGUuc2V0Q2hlY2tlZEtleXM9ZnVuY3Rpb24gc2V0Q2hlY2tlZEtleXMoa2V5cyl7dmFyIGxlYWZPbmx5PWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1sxXTpmYWxzZTt0aGlzLmRlZmF1bHRDaGVja2VkS2V5cz1rZXlzO3ZhciBrZXk9dGhpcy5rZXk7dmFyIGNoZWNrZWRLZXlzPXt9O2tleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpe2NoZWNrZWRLZXlzW2tleV09dHJ1ZTt9KTt0aGlzLl9zZXRDaGVja2VkS2V5cyhrZXksbGVhZk9ubHksY2hlY2tlZEtleXMpO307VHJlZVN0b3JlLnByb3RvdHlwZS5zZXREZWZhdWx0RXhwYW5kZWRLZXlzPWZ1bmN0aW9uIHNldERlZmF1bHRFeHBhbmRlZEtleXMoa2V5cyl7dmFyIF90aGlzNj10aGlzO2tleXM9a2V5c3x8W107dGhpcy5kZWZhdWx0RXhwYW5kZWRLZXlzPWtleXM7a2V5cy5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7dmFyIG5vZGU9X3RoaXM2LmdldE5vZGUoa2V5KTtpZihub2RlKW5vZGUuZXhwYW5kKG51bGwsX3RoaXM2LmF1dG9FeHBhbmRQYXJlbnQpO30pO307VHJlZVN0b3JlLnByb3RvdHlwZS5zZXRDaGVja2VkPWZ1bmN0aW9uIHNldENoZWNrZWQoZGF0YSxjaGVja2VkLGRlZXApe3ZhciBub2RlPXRoaXMuZ2V0Tm9kZShkYXRhKTtpZihub2RlKXtub2RlLnNldENoZWNrZWQoISFjaGVja2VkLGRlZXApO319O1RyZWVTdG9yZS5wcm90b3R5cGUuZ2V0Q3VycmVudE5vZGU9ZnVuY3Rpb24gZ2V0Q3VycmVudE5vZGUoKXtyZXR1cm4gdGhpcy5jdXJyZW50Tm9kZTt9O1RyZWVTdG9yZS5wcm90b3R5cGUuc2V0Q3VycmVudE5vZGU9ZnVuY3Rpb24gc2V0Q3VycmVudE5vZGUoY3VycmVudE5vZGUpe3ZhciBwcmV2Q3VycmVudE5vZGU9dGhpcy5jdXJyZW50Tm9kZTtpZihwcmV2Q3VycmVudE5vZGUpe3ByZXZDdXJyZW50Tm9kZS5pc0N1cnJlbnQ9ZmFsc2U7fXRoaXMuY3VycmVudE5vZGU9Y3VycmVudE5vZGU7dGhpcy5jdXJyZW50Tm9kZS5pc0N1cnJlbnQ9dHJ1ZTt9O1RyZWVTdG9yZS5wcm90b3R5cGUuc2V0VXNlckN1cnJlbnROb2RlPWZ1bmN0aW9uIHNldFVzZXJDdXJyZW50Tm9kZShub2RlKXt2YXIga2V5PW5vZGVbdGhpcy5rZXldO3ZhciBjdXJyTm9kZT10aGlzLm5vZGVzTWFwW2tleV07dGhpcy5zZXRDdXJyZW50Tm9kZShjdXJyTm9kZSk7fTtUcmVlU3RvcmUucHJvdG90eXBlLnNldEN1cnJlbnROb2RlS2V5PWZ1bmN0aW9uIHNldEN1cnJlbnROb2RlS2V5KGtleSl7aWYoa2V5PT09bnVsbHx8a2V5PT09dW5kZWZpbmVkKXt0aGlzLmN1cnJlbnROb2RlJiYodGhpcy5jdXJyZW50Tm9kZS5pc0N1cnJlbnQ9ZmFsc2UpO3RoaXMuY3VycmVudE5vZGU9bnVsbDtyZXR1cm47fXZhciBub2RlPXRoaXMuZ2V0Tm9kZShrZXkpO2lmKG5vZGUpe3RoaXMuc2V0Q3VycmVudE5vZGUobm9kZSk7fX07cmV0dXJuIFRyZWVTdG9yZTt9KCk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0cmVlX3N0b3JlPXRyZWVfc3RvcmVfVHJlZVN0b3JlOzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RyZWUvc3JjL3RyZWUtbm9kZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9M2JhM2VmMGUmCnZhciB0cmVlX25vZGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zYmEzZWYwZV9yZW5kZXI9ZnVuY3Rpb24gdHJlZV9ub2RldnVlX3R5cGVfdGVtcGxhdGVfaWRfM2JhM2VmMGVfcmVuZGVyKCl7dmFyIHRoaXMkMT10aGlzO3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLm5vZGUudmlzaWJsZSxleHByZXNzaW9uOiJub2RlLnZpc2libGUifV0scmVmOiJub2RlIixzdGF0aWNDbGFzczoiZWwtdHJlZS1ub2RlIixjbGFzczp7ImlzLWV4cGFuZGVkIjpfdm0uZXhwYW5kZWQsImlzLWN1cnJlbnQiOl92bS5ub2RlLmlzQ3VycmVudCwiaXMtaGlkZGVuIjohX3ZtLm5vZGUudmlzaWJsZSwiaXMtZm9jdXNhYmxlIjohX3ZtLm5vZGUuZGlzYWJsZWQsImlzLWNoZWNrZWQiOiFfdm0ubm9kZS5kaXNhYmxlZCYmX3ZtLm5vZGUuY2hlY2tlZH0sYXR0cnM6e3JvbGU6InRyZWVpdGVtIix0YWJpbmRleDoiLTEiLCJhcmlhLWV4cGFuZGVkIjpfdm0uZXhwYW5kZWQsImFyaWEtZGlzYWJsZWQiOl92bS5ub2RlLmRpc2FibGVkLCJhcmlhLWNoZWNrZWQiOl92bS5ub2RlLmNoZWNrZWQsZHJhZ2dhYmxlOl92bS50cmVlLmRyYWdnYWJsZX0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uaGFuZGxlQ2xpY2soJGV2ZW50KTt9LGNvbnRleHRtZW51OmZ1bmN0aW9uIGNvbnRleHRtZW51KCRldmVudCl7cmV0dXJuIHRoaXMkMS5oYW5kbGVDb250ZXh0TWVudSgkZXZlbnQpO30sZHJhZ3N0YXJ0OmZ1bmN0aW9uIGRyYWdzdGFydCgkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLmhhbmRsZURyYWdTdGFydCgkZXZlbnQpO30sZHJhZ292ZXI6ZnVuY3Rpb24gZHJhZ292ZXIoJGV2ZW50KXskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5oYW5kbGVEcmFnT3ZlcigkZXZlbnQpO30sZHJhZ2VuZDpmdW5jdGlvbiBkcmFnZW5kKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uaGFuZGxlRHJhZ0VuZCgkZXZlbnQpO30sZHJvcDpmdW5jdGlvbiBkcm9wKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uaGFuZGxlRHJvcCgkZXZlbnQpO319fSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10cmVlLW5vZGVfX2NvbnRlbnQiLHN0eWxlOnsicGFkZGluZy1sZWZ0IjooX3ZtLm5vZGUubGV2ZWwtMSkqX3ZtLnRyZWUuaW5kZW50KyJweCJ9fSxbX2MoInNwYW4iLHtjbGFzczpbeyJpcy1sZWFmIjpfdm0ubm9kZS5pc0xlYWYsZXhwYW5kZWQ6IV92bS5ub2RlLmlzTGVhZiYmX3ZtLmV4cGFuZGVkfSwiZWwtdHJlZS1ub2RlX19leHBhbmQtaWNvbiIsX3ZtLnRyZWUuaWNvbkNsYXNzP192bS50cmVlLmljb25DbGFzczoiZWwtaWNvbi1jYXJldC1yaWdodCJdLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLmhhbmRsZUV4cGFuZEljb25DbGljaygkZXZlbnQpO319fSksX3ZtLnNob3dDaGVja2JveD9fYygiZWwtY2hlY2tib3giLHthdHRyczp7aW5kZXRlcm1pbmF0ZTpfdm0ubm9kZS5pbmRldGVybWluYXRlLGRpc2FibGVkOiEhX3ZtLm5vZGUuZGlzYWJsZWR9LG9uOntjaGFuZ2U6X3ZtLmhhbmRsZUNoZWNrQ2hhbmdlfSxuYXRpdmVPbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7fX0sbW9kZWw6e3ZhbHVlOl92bS5ub2RlLmNoZWNrZWQsY2FsbGJhY2s6ZnVuY3Rpb24gY2FsbGJhY2soJCR2KXtfdm0uJHNldChfdm0ubm9kZSwiY2hlY2tlZCIsJCR2KTt9LGV4cHJlc3Npb246Im5vZGUuY2hlY2tlZCJ9fSk6X3ZtLl9lKCksX3ZtLm5vZGUubG9hZGluZz9fYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC10cmVlLW5vZGVfX2xvYWRpbmctaWNvbiBlbC1pY29uLWxvYWRpbmcifSk6X3ZtLl9lKCksX2MoIm5vZGUtY29udGVudCIse2F0dHJzOntub2RlOl92bS5ub2RlfX0pXSwxKSxfYygiZWwtY29sbGFwc2UtdHJhbnNpdGlvbiIsWyFfdm0ucmVuZGVyQWZ0ZXJFeHBhbmR8fF92bS5jaGlsZE5vZGVSZW5kZXJlZD9fYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLmV4cGFuZGVkLGV4cHJlc3Npb246ImV4cGFuZGVkIn1dLHN0YXRpY0NsYXNzOiJlbC10cmVlLW5vZGVfX2NoaWxkcmVuIixhdHRyczp7cm9sZToiZ3JvdXAiLCJhcmlhLWV4cGFuZGVkIjpfdm0uZXhwYW5kZWR9fSxfdm0uX2woX3ZtLm5vZGUuY2hpbGROb2RlcyxmdW5jdGlvbihjaGlsZCl7cmV0dXJuIF9jKCJlbC10cmVlLW5vZGUiLHtrZXk6X3ZtLmdldE5vZGVLZXkoY2hpbGQpLGF0dHJzOnsicmVuZGVyLWNvbnRlbnQiOl92bS5yZW5kZXJDb250ZW50LCJyZW5kZXItYWZ0ZXItZXhwYW5kIjpfdm0ucmVuZGVyQWZ0ZXJFeHBhbmQsInNob3ctY2hlY2tib3giOl92bS5zaG93Q2hlY2tib3gsbm9kZTpjaGlsZH0sb246eyJub2RlLWV4cGFuZCI6X3ZtLmhhbmRsZUNoaWxkTm9kZUV4cGFuZH19KTt9KSwxKTpfdm0uX2UoKV0pXSwxKTt9O3ZhciB0cmVlX25vZGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zYmEzZWYwZV9zdGF0aWNSZW5kZXJGbnM9W107dHJlZV9ub2RldnVlX3R5cGVfdGVtcGxhdGVfaWRfM2JhM2VmMGVfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RyZWUvc3JjL3RyZWUtbm9kZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9M2JhM2VmMGUmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RyZWUvc3JjL3RyZWUtbm9kZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdHJlZV9ub2RldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbFRyZWVOb2RlJyxjb21wb25lbnROYW1lOidFbFRyZWVOb2RlJyxtaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hXSxwcm9wczp7bm9kZTp7ZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybnt9O319LHByb3BzOnt9LHJlbmRlckNvbnRlbnQ6RnVuY3Rpb24scmVuZGVyQWZ0ZXJFeHBhbmQ6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LHNob3dDaGVja2JveDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9fSxjb21wb25lbnRzOntFbENvbGxhcHNlVHJhbnNpdGlvbjpjb2xsYXBzZV90cmFuc2l0aW9uX2RlZmF1bHQuYSxFbENoZWNrYm94OmNoZWNrYm94X2RlZmF1bHQuYSxOb2RlQ29udGVudDp7cHJvcHM6e25vZGU6e3JlcXVpcmVkOnRydWV9fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBwYXJlbnQ9dGhpcy4kcGFyZW50O3ZhciB0cmVlPXBhcmVudC50cmVlO3ZhciBub2RlPXRoaXMubm9kZTt2YXIgZGF0YT1ub2RlLmRhdGEsc3RvcmU9bm9kZS5zdG9yZTtyZXR1cm4gcGFyZW50LnJlbmRlckNvbnRlbnQ/cGFyZW50LnJlbmRlckNvbnRlbnQuY2FsbChwYXJlbnQuX3JlbmRlclByb3h5LGgse19zZWxmOnRyZWUuJHZub2RlLmNvbnRleHQsbm9kZTpub2RlLGRhdGE6ZGF0YSxzdG9yZTpzdG9yZX0pOnRyZWUuJHNjb3BlZFNsb3RzLmRlZmF1bHQ/dHJlZS4kc2NvcGVkU2xvdHMuZGVmYXVsdCh7bm9kZTpub2RlLGRhdGE6ZGF0YX0pOmgoJ3NwYW4nLHsnY2xhc3MnOidlbC10cmVlLW5vZGVfX2xhYmVsJ30sW25vZGUubGFiZWxdKTt9fX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3RyZWU6bnVsbCxleHBhbmRlZDpmYWxzZSxjaGlsZE5vZGVSZW5kZXJlZDpmYWxzZSxvbGRDaGVja2VkOm51bGwsb2xkSW5kZXRlcm1pbmF0ZTpudWxsfTt9LHdhdGNoOnsnbm9kZS5pbmRldGVybWluYXRlJzpmdW5jdGlvbiBub2RlSW5kZXRlcm1pbmF0ZSh2YWwpe3RoaXMuaGFuZGxlU2VsZWN0Q2hhbmdlKHRoaXMubm9kZS5jaGVja2VkLHZhbCk7fSwnbm9kZS5jaGVja2VkJzpmdW5jdGlvbiBub2RlQ2hlY2tlZCh2YWwpe3RoaXMuaGFuZGxlU2VsZWN0Q2hhbmdlKHZhbCx0aGlzLm5vZGUuaW5kZXRlcm1pbmF0ZSk7fSwnbm9kZS5leHBhbmRlZCc6ZnVuY3Rpb24gbm9kZUV4cGFuZGVkKHZhbCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtyZXR1cm4gX3RoaXMuZXhwYW5kZWQ9dmFsO30pO2lmKHZhbCl7dGhpcy5jaGlsZE5vZGVSZW5kZXJlZD10cnVlO319fSxtZXRob2RzOntnZXROb2RlS2V5OmZ1bmN0aW9uIGdldE5vZGVLZXkobm9kZSl7cmV0dXJuIHV0aWxfZ2V0Tm9kZUtleSh0aGlzLnRyZWUubm9kZUtleSxub2RlLmRhdGEpO30saGFuZGxlU2VsZWN0Q2hhbmdlOmZ1bmN0aW9uIGhhbmRsZVNlbGVjdENoYW5nZShjaGVja2VkLGluZGV0ZXJtaW5hdGUpe2lmKHRoaXMub2xkQ2hlY2tlZCE9PWNoZWNrZWQmJnRoaXMub2xkSW5kZXRlcm1pbmF0ZSE9PWluZGV0ZXJtaW5hdGUpe3RoaXMudHJlZS4kZW1pdCgnY2hlY2stY2hhbmdlJyx0aGlzLm5vZGUuZGF0YSxjaGVja2VkLGluZGV0ZXJtaW5hdGUpO310aGlzLm9sZENoZWNrZWQ9Y2hlY2tlZDt0aGlzLmluZGV0ZXJtaW5hdGU9aW5kZXRlcm1pbmF0ZTt9LGhhbmRsZUNsaWNrOmZ1bmN0aW9uIGhhbmRsZUNsaWNrKCl7dmFyIHN0b3JlPXRoaXMudHJlZS5zdG9yZTtzdG9yZS5zZXRDdXJyZW50Tm9kZSh0aGlzLm5vZGUpO3RoaXMudHJlZS4kZW1pdCgnY3VycmVudC1jaGFuZ2UnLHN0b3JlLmN1cnJlbnROb2RlP3N0b3JlLmN1cnJlbnROb2RlLmRhdGE6bnVsbCxzdG9yZS5jdXJyZW50Tm9kZSk7dGhpcy50cmVlLmN1cnJlbnROb2RlPXRoaXM7aWYodGhpcy50cmVlLmV4cGFuZE9uQ2xpY2tOb2RlKXt0aGlzLmhhbmRsZUV4cGFuZEljb25DbGljaygpO31pZih0aGlzLnRyZWUuY2hlY2tPbkNsaWNrTm9kZSYmIXRoaXMubm9kZS5kaXNhYmxlZCl7dGhpcy5oYW5kbGVDaGVja0NoYW5nZShudWxsLHt0YXJnZXQ6e2NoZWNrZWQ6IXRoaXMubm9kZS5jaGVja2VkfX0pO310aGlzLnRyZWUuJGVtaXQoJ25vZGUtY2xpY2snLHRoaXMubm9kZS5kYXRhLHRoaXMubm9kZSx0aGlzKTt9LGhhbmRsZUNvbnRleHRNZW51OmZ1bmN0aW9uIGhhbmRsZUNvbnRleHRNZW51KGV2ZW50KXtpZih0aGlzLnRyZWUuX2V2ZW50c1snbm9kZS1jb250ZXh0bWVudSddJiZ0aGlzLnRyZWUuX2V2ZW50c1snbm9kZS1jb250ZXh0bWVudSddLmxlbmd0aD4wKXtldmVudC5zdG9wUHJvcGFnYXRpb24oKTtldmVudC5wcmV2ZW50RGVmYXVsdCgpO310aGlzLnRyZWUuJGVtaXQoJ25vZGUtY29udGV4dG1lbnUnLGV2ZW50LHRoaXMubm9kZS5kYXRhLHRoaXMubm9kZSx0aGlzKTt9LGhhbmRsZUV4cGFuZEljb25DbGljazpmdW5jdGlvbiBoYW5kbGVFeHBhbmRJY29uQ2xpY2soKXtpZih0aGlzLm5vZGUuaXNMZWFmKXJldHVybjtpZih0aGlzLmV4cGFuZGVkKXt0aGlzLnRyZWUuJGVtaXQoJ25vZGUtY29sbGFwc2UnLHRoaXMubm9kZS5kYXRhLHRoaXMubm9kZSx0aGlzKTt0aGlzLm5vZGUuY29sbGFwc2UoKTt9ZWxzZXt0aGlzLm5vZGUuZXhwYW5kKCk7dGhpcy4kZW1pdCgnbm9kZS1leHBhbmQnLHRoaXMubm9kZS5kYXRhLHRoaXMubm9kZSx0aGlzKTt9fSxoYW5kbGVDaGVja0NoYW5nZTpmdW5jdGlvbiBoYW5kbGVDaGVja0NoYW5nZSh2YWx1ZSxldil7dmFyIF90aGlzMj10aGlzO3RoaXMubm9kZS5zZXRDaGVja2VkKGV2LnRhcmdldC5jaGVja2VkLCF0aGlzLnRyZWUuY2hlY2tTdHJpY3RseSk7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXt2YXIgc3RvcmU9X3RoaXMyLnRyZWUuc3RvcmU7X3RoaXMyLnRyZWUuJGVtaXQoJ2NoZWNrJyxfdGhpczIubm9kZS5kYXRhLHtjaGVja2VkTm9kZXM6c3RvcmUuZ2V0Q2hlY2tlZE5vZGVzKCksY2hlY2tlZEtleXM6c3RvcmUuZ2V0Q2hlY2tlZEtleXMoKSxoYWxmQ2hlY2tlZE5vZGVzOnN0b3JlLmdldEhhbGZDaGVja2VkTm9kZXMoKSxoYWxmQ2hlY2tlZEtleXM6c3RvcmUuZ2V0SGFsZkNoZWNrZWRLZXlzKCl9KTt9KTt9LGhhbmRsZUNoaWxkTm9kZUV4cGFuZDpmdW5jdGlvbiBoYW5kbGVDaGlsZE5vZGVFeHBhbmQobm9kZURhdGEsbm9kZSxpbnN0YW5jZSl7dGhpcy5icm9hZGNhc3QoJ0VsVHJlZU5vZGUnLCd0cmVlLW5vZGUtZXhwYW5kJyxub2RlKTt0aGlzLnRyZWUuJGVtaXQoJ25vZGUtZXhwYW5kJyxub2RlRGF0YSxub2RlLGluc3RhbmNlKTt9LGhhbmRsZURyYWdTdGFydDpmdW5jdGlvbiBoYW5kbGVEcmFnU3RhcnQoZXZlbnQpe2lmKCF0aGlzLnRyZWUuZHJhZ2dhYmxlKXJldHVybjt0aGlzLnRyZWUuJGVtaXQoJ3RyZWUtbm9kZS1kcmFnLXN0YXJ0JyxldmVudCx0aGlzKTt9LGhhbmRsZURyYWdPdmVyOmZ1bmN0aW9uIGhhbmRsZURyYWdPdmVyKGV2ZW50KXtpZighdGhpcy50cmVlLmRyYWdnYWJsZSlyZXR1cm47dGhpcy50cmVlLiRlbWl0KCd0cmVlLW5vZGUtZHJhZy1vdmVyJyxldmVudCx0aGlzKTtldmVudC5wcmV2ZW50RGVmYXVsdCgpO30saGFuZGxlRHJvcDpmdW5jdGlvbiBoYW5kbGVEcm9wKGV2ZW50KXtldmVudC5wcmV2ZW50RGVmYXVsdCgpO30saGFuZGxlRHJhZ0VuZDpmdW5jdGlvbiBoYW5kbGVEcmFnRW5kKGV2ZW50KXtpZighdGhpcy50cmVlLmRyYWdnYWJsZSlyZXR1cm47dGhpcy50cmVlLiRlbWl0KCd0cmVlLW5vZGUtZHJhZy1lbmQnLGV2ZW50LHRoaXMpO319LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpe3ZhciBfdGhpczM9dGhpczt2YXIgcGFyZW50PXRoaXMuJHBhcmVudDtpZihwYXJlbnQuaXNUcmVlKXt0aGlzLnRyZWU9cGFyZW50O31lbHNle3RoaXMudHJlZT1wYXJlbnQudHJlZTt9dmFyIHRyZWU9dGhpcy50cmVlO2lmKCF0cmVlKXtjb25zb2xlLndhcm4oJ0NhbiBub3QgZmluZCBub2RlXCdzIHRyZWUuJyk7fXZhciBwcm9wcz10cmVlLnByb3BzfHx7fTt2YXIgY2hpbGRyZW5LZXk9cHJvcHNbJ2NoaWxkcmVuJ118fCdjaGlsZHJlbic7dGhpcy4kd2F0Y2goJ25vZGUuZGF0YS4nK2NoaWxkcmVuS2V5LGZ1bmN0aW9uKCl7X3RoaXMzLm5vZGUudXBkYXRlQ2hpbGRyZW4oKTt9KTtpZih0aGlzLm5vZGUuZXhwYW5kZWQpe3RoaXMuZXhwYW5kZWQ9dHJ1ZTt0aGlzLmNoaWxkTm9kZVJlbmRlcmVkPXRydWU7fWlmKHRoaXMudHJlZS5hY2NvcmRpb24pe3RoaXMuJG9uKCd0cmVlLW5vZGUtZXhwYW5kJyxmdW5jdGlvbihub2RlKXtpZihfdGhpczMubm9kZSE9PW5vZGUpe190aGlzMy5ub2RlLmNvbGxhcHNlKCk7fX0pO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RyZWUvc3JjL3RyZWUtbm9kZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3RyZWVfbm9kZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz10cmVlX25vZGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90cmVlL3NyYy90cmVlLW5vZGUudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgdHJlZV9ub2RlX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3RyZWVfbm9kZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyx0cmVlX25vZGV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zYmEzZWYwZV9yZW5kZXIsdHJlZV9ub2RldnVlX3R5cGVfdGVtcGxhdGVfaWRfM2JhM2VmMGVfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciB0cmVlX25vZGVfYXBpO310cmVlX25vZGVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy90cmVlL3NyYy90cmVlLW5vZGUudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRyZWVfbm9kZT10cmVlX25vZGVfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvdHJlZS9zcmMvdHJlZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdHJlZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxUcmVlJyxtaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hXSxjb21wb25lbnRzOntFbFRyZWVOb2RlOnRyZWVfbm9kZX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3N0b3JlOm51bGwscm9vdDpudWxsLGN1cnJlbnROb2RlOm51bGwsdHJlZUl0ZW1zOm51bGwsY2hlY2tib3hJdGVtczpbXSxkcmFnU3RhdGU6e3Nob3dEcm9wSW5kaWNhdG9yOmZhbHNlLGRyYWdnaW5nTm9kZTpudWxsLGRyb3BOb2RlOm51bGwsYWxsb3dEcm9wOnRydWV9fTt9LHByb3BzOntkYXRhOnt0eXBlOkFycmF5fSxlbXB0eVRleHQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm4gT2JqZWN0KGxpYl9sb2NhbGVfWyJ0Il0pKCdlbC50cmVlLmVtcHR5VGV4dCcpO319LHJlbmRlckFmdGVyRXhwYW5kOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxub2RlS2V5OlN0cmluZyxjaGVja1N0cmljdGx5OkJvb2xlYW4sZGVmYXVsdEV4cGFuZEFsbDpCb29sZWFuLGV4cGFuZE9uQ2xpY2tOb2RlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxjaGVja09uQ2xpY2tOb2RlOkJvb2xlYW4sY2hlY2tEZXNjZW5kYW50czp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LGF1dG9FeHBhbmRQYXJlbnQ6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGRlZmF1bHRDaGVja2VkS2V5czpBcnJheSxkZWZhdWx0RXhwYW5kZWRLZXlzOkFycmF5LGN1cnJlbnROb2RlS2V5OltTdHJpbmcsTnVtYmVyXSxyZW5kZXJDb250ZW50OkZ1bmN0aW9uLHNob3dDaGVja2JveDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LGRyYWdnYWJsZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LGFsbG93RHJhZzpGdW5jdGlvbixhbGxvd0Ryb3A6RnVuY3Rpb24scHJvcHM6e2RlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm57Y2hpbGRyZW46J2NoaWxkcmVuJyxsYWJlbDonbGFiZWwnLGRpc2FibGVkOidkaXNhYmxlZCd9O319LGxhenk6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxoaWdobGlnaHRDdXJyZW50OkJvb2xlYW4sbG9hZDpGdW5jdGlvbixmaWx0ZXJOb2RlTWV0aG9kOkZ1bmN0aW9uLGFjY29yZGlvbjpCb29sZWFuLGluZGVudDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxOH0saWNvbkNsYXNzOlN0cmluZ30sY29tcHV0ZWQ6e2NoaWxkcmVuOntzZXQ6ZnVuY3Rpb24gc2V0KHZhbHVlKXt0aGlzLmRhdGE9dmFsdWU7fSxnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuZGF0YTt9fSx0cmVlSXRlbUFycmF5OmZ1bmN0aW9uIHRyZWVJdGVtQXJyYXkoKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcy50cmVlSXRlbXMpO30saXNFbXB0eTpmdW5jdGlvbiBpc0VtcHR5KCl7dmFyIGNoaWxkTm9kZXM9dGhpcy5yb290LmNoaWxkTm9kZXM7cmV0dXJuIWNoaWxkTm9kZXN8fGNoaWxkTm9kZXMubGVuZ3RoPT09MHx8Y2hpbGROb2Rlcy5ldmVyeShmdW5jdGlvbihfcmVmKXt2YXIgdmlzaWJsZT1fcmVmLnZpc2libGU7cmV0dXJuIXZpc2libGU7fSk7fX0sd2F0Y2g6e2RlZmF1bHRDaGVja2VkS2V5czpmdW5jdGlvbiBkZWZhdWx0Q2hlY2tlZEtleXMobmV3VmFsKXt0aGlzLnN0b3JlLnNldERlZmF1bHRDaGVja2VkS2V5KG5ld1ZhbCk7fSxkZWZhdWx0RXhwYW5kZWRLZXlzOmZ1bmN0aW9uIGRlZmF1bHRFeHBhbmRlZEtleXMobmV3VmFsKXt0aGlzLnN0b3JlLmRlZmF1bHRFeHBhbmRlZEtleXM9bmV3VmFsO3RoaXMuc3RvcmUuc2V0RGVmYXVsdEV4cGFuZGVkS2V5cyhuZXdWYWwpO30sZGF0YTpmdW5jdGlvbiBkYXRhKG5ld1ZhbCl7dGhpcy5zdG9yZS5zZXREYXRhKG5ld1ZhbCk7fSxjaGVja2JveEl0ZW1zOmZ1bmN0aW9uIGNoZWNrYm94SXRlbXModmFsKXtBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHZhbCxmdW5jdGlvbihjaGVja2JveCl7Y2hlY2tib3guc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsLTEpO30pO30sY2hlY2tTdHJpY3RseTpmdW5jdGlvbiBjaGVja1N0cmljdGx5KG5ld1ZhbCl7dGhpcy5zdG9yZS5jaGVja1N0cmljdGx5PW5ld1ZhbDt9fSxtZXRob2RzOntmaWx0ZXI6ZnVuY3Rpb24gZmlsdGVyKHZhbHVlKXtpZighdGhpcy5maWx0ZXJOb2RlTWV0aG9kKXRocm93IG5ldyBFcnJvcignW1RyZWVdIGZpbHRlck5vZGVNZXRob2QgaXMgcmVxdWlyZWQgd2hlbiBmaWx0ZXInKTt0aGlzLnN0b3JlLmZpbHRlcih2YWx1ZSk7fSxnZXROb2RlS2V5OmZ1bmN0aW9uIGdldE5vZGVLZXkobm9kZSl7cmV0dXJuIHV0aWxfZ2V0Tm9kZUtleSh0aGlzLm5vZGVLZXksbm9kZS5kYXRhKTt9LGdldE5vZGVQYXRoOmZ1bmN0aW9uIGdldE5vZGVQYXRoKGRhdGEpe2lmKCF0aGlzLm5vZGVLZXkpdGhyb3cgbmV3IEVycm9yKCdbVHJlZV0gbm9kZUtleSBpcyByZXF1aXJlZCBpbiBnZXROb2RlUGF0aCcpO3ZhciBub2RlPXRoaXMuc3RvcmUuZ2V0Tm9kZShkYXRhKTtpZighbm9kZSlyZXR1cm5bXTt2YXIgcGF0aD1bbm9kZS5kYXRhXTt2YXIgcGFyZW50PW5vZGUucGFyZW50O3doaWxlKHBhcmVudCYmcGFyZW50IT09dGhpcy5yb290KXtwYXRoLnB1c2gocGFyZW50LmRhdGEpO3BhcmVudD1wYXJlbnQucGFyZW50O31yZXR1cm4gcGF0aC5yZXZlcnNlKCk7fSxnZXRDaGVja2VkTm9kZXM6ZnVuY3Rpb24gZ2V0Q2hlY2tlZE5vZGVzKGxlYWZPbmx5LGluY2x1ZGVIYWxmQ2hlY2tlZCl7cmV0dXJuIHRoaXMuc3RvcmUuZ2V0Q2hlY2tlZE5vZGVzKGxlYWZPbmx5LGluY2x1ZGVIYWxmQ2hlY2tlZCk7fSxnZXRDaGVja2VkS2V5czpmdW5jdGlvbiBnZXRDaGVja2VkS2V5cyhsZWFmT25seSl7cmV0dXJuIHRoaXMuc3RvcmUuZ2V0Q2hlY2tlZEtleXMobGVhZk9ubHkpO30sZ2V0Q3VycmVudE5vZGU6ZnVuY3Rpb24gZ2V0Q3VycmVudE5vZGUoKXt2YXIgY3VycmVudE5vZGU9dGhpcy5zdG9yZS5nZXRDdXJyZW50Tm9kZSgpO3JldHVybiBjdXJyZW50Tm9kZT9jdXJyZW50Tm9kZS5kYXRhOm51bGw7fSxnZXRDdXJyZW50S2V5OmZ1bmN0aW9uIGdldEN1cnJlbnRLZXkoKXtpZighdGhpcy5ub2RlS2V5KXRocm93IG5ldyBFcnJvcignW1RyZWVdIG5vZGVLZXkgaXMgcmVxdWlyZWQgaW4gZ2V0Q3VycmVudEtleScpO3ZhciBjdXJyZW50Tm9kZT10aGlzLmdldEN1cnJlbnROb2RlKCk7cmV0dXJuIGN1cnJlbnROb2RlP2N1cnJlbnROb2RlW3RoaXMubm9kZUtleV06bnVsbDt9LHNldENoZWNrZWROb2RlczpmdW5jdGlvbiBzZXRDaGVja2VkTm9kZXMobm9kZXMsbGVhZk9ubHkpe2lmKCF0aGlzLm5vZGVLZXkpdGhyb3cgbmV3IEVycm9yKCdbVHJlZV0gbm9kZUtleSBpcyByZXF1aXJlZCBpbiBzZXRDaGVja2VkTm9kZXMnKTt0aGlzLnN0b3JlLnNldENoZWNrZWROb2Rlcyhub2RlcyxsZWFmT25seSk7fSxzZXRDaGVja2VkS2V5czpmdW5jdGlvbiBzZXRDaGVja2VkS2V5cyhrZXlzLGxlYWZPbmx5KXtpZighdGhpcy5ub2RlS2V5KXRocm93IG5ldyBFcnJvcignW1RyZWVdIG5vZGVLZXkgaXMgcmVxdWlyZWQgaW4gc2V0Q2hlY2tlZEtleXMnKTt0aGlzLnN0b3JlLnNldENoZWNrZWRLZXlzKGtleXMsbGVhZk9ubHkpO30sc2V0Q2hlY2tlZDpmdW5jdGlvbiBzZXRDaGVja2VkKGRhdGEsY2hlY2tlZCxkZWVwKXt0aGlzLnN0b3JlLnNldENoZWNrZWQoZGF0YSxjaGVja2VkLGRlZXApO30sZ2V0SGFsZkNoZWNrZWROb2RlczpmdW5jdGlvbiBnZXRIYWxmQ2hlY2tlZE5vZGVzKCl7cmV0dXJuIHRoaXMuc3RvcmUuZ2V0SGFsZkNoZWNrZWROb2RlcygpO30sZ2V0SGFsZkNoZWNrZWRLZXlzOmZ1bmN0aW9uIGdldEhhbGZDaGVja2VkS2V5cygpe3JldHVybiB0aGlzLnN0b3JlLmdldEhhbGZDaGVja2VkS2V5cygpO30sc2V0Q3VycmVudE5vZGU6ZnVuY3Rpb24gc2V0Q3VycmVudE5vZGUobm9kZSl7aWYoIXRoaXMubm9kZUtleSl0aHJvdyBuZXcgRXJyb3IoJ1tUcmVlXSBub2RlS2V5IGlzIHJlcXVpcmVkIGluIHNldEN1cnJlbnROb2RlJyk7dGhpcy5zdG9yZS5zZXRVc2VyQ3VycmVudE5vZGUobm9kZSk7fSxzZXRDdXJyZW50S2V5OmZ1bmN0aW9uIHNldEN1cnJlbnRLZXkoa2V5KXtpZighdGhpcy5ub2RlS2V5KXRocm93IG5ldyBFcnJvcignW1RyZWVdIG5vZGVLZXkgaXMgcmVxdWlyZWQgaW4gc2V0Q3VycmVudEtleScpO3RoaXMuc3RvcmUuc2V0Q3VycmVudE5vZGVLZXkoa2V5KTt9LGdldE5vZGU6ZnVuY3Rpb24gZ2V0Tm9kZShkYXRhKXtyZXR1cm4gdGhpcy5zdG9yZS5nZXROb2RlKGRhdGEpO30scmVtb3ZlOmZ1bmN0aW9uIHJlbW92ZShkYXRhKXt0aGlzLnN0b3JlLnJlbW92ZShkYXRhKTt9LGFwcGVuZDpmdW5jdGlvbiBhcHBlbmQoZGF0YSxwYXJlbnROb2RlKXt0aGlzLnN0b3JlLmFwcGVuZChkYXRhLHBhcmVudE5vZGUpO30saW5zZXJ0QmVmb3JlOmZ1bmN0aW9uIGluc2VydEJlZm9yZShkYXRhLHJlZk5vZGUpe3RoaXMuc3RvcmUuaW5zZXJ0QmVmb3JlKGRhdGEscmVmTm9kZSk7fSxpbnNlcnRBZnRlcjpmdW5jdGlvbiBpbnNlcnRBZnRlcihkYXRhLHJlZk5vZGUpe3RoaXMuc3RvcmUuaW5zZXJ0QWZ0ZXIoZGF0YSxyZWZOb2RlKTt9LGhhbmRsZU5vZGVFeHBhbmQ6ZnVuY3Rpb24gaGFuZGxlTm9kZUV4cGFuZChub2RlRGF0YSxub2RlLGluc3RhbmNlKXt0aGlzLmJyb2FkY2FzdCgnRWxUcmVlTm9kZScsJ3RyZWUtbm9kZS1leHBhbmQnLG5vZGUpO3RoaXMuJGVtaXQoJ25vZGUtZXhwYW5kJyxub2RlRGF0YSxub2RlLGluc3RhbmNlKTt9LHVwZGF0ZUtleUNoaWxkcmVuOmZ1bmN0aW9uIHVwZGF0ZUtleUNoaWxkcmVuKGtleSxkYXRhKXtpZighdGhpcy5ub2RlS2V5KXRocm93IG5ldyBFcnJvcignW1RyZWVdIG5vZGVLZXkgaXMgcmVxdWlyZWQgaW4gdXBkYXRlS2V5Q2hpbGQnKTt0aGlzLnN0b3JlLnVwZGF0ZUNoaWxkcmVuKGtleSxkYXRhKTt9LGluaXRUYWJJbmRleDpmdW5jdGlvbiBpbml0VGFiSW5kZXgoKXt0aGlzLnRyZWVJdGVtcz10aGlzLiRlbC5xdWVyeVNlbGVjdG9yQWxsKCcuaXMtZm9jdXNhYmxlW3JvbGU9dHJlZWl0ZW1dJyk7dGhpcy5jaGVja2JveEl0ZW1zPXRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9Y2hlY2tib3hdJyk7dmFyIGNoZWNrZWRJdGVtPXRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5pcy1jaGVja2VkW3JvbGU9dHJlZWl0ZW1dJyk7aWYoY2hlY2tlZEl0ZW0ubGVuZ3RoKXtjaGVja2VkSXRlbVswXS5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywwKTtyZXR1cm47fXRoaXMudHJlZUl0ZW1zWzBdJiZ0aGlzLnRyZWVJdGVtc1swXS5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywwKTt9LGhhbmRsZUtleWRvd246ZnVuY3Rpb24gaGFuZGxlS2V5ZG93bihldil7dmFyIGN1cnJlbnRJdGVtPWV2LnRhcmdldDtpZihjdXJyZW50SXRlbS5jbGFzc05hbWUuaW5kZXhPZignZWwtdHJlZS1ub2RlJyk9PT0tMSlyZXR1cm47dmFyIGtleUNvZGU9ZXYua2V5Q29kZTt0aGlzLnRyZWVJdGVtcz10aGlzLiRlbC5xdWVyeVNlbGVjdG9yQWxsKCcuaXMtZm9jdXNhYmxlW3JvbGU9dHJlZWl0ZW1dJyk7dmFyIGN1cnJlbnRJbmRleD10aGlzLnRyZWVJdGVtQXJyYXkuaW5kZXhPZihjdXJyZW50SXRlbSk7dmFyIG5leHRJbmRleD12b2lkIDA7aWYoWzM4LDQwXS5pbmRleE9mKGtleUNvZGUpPi0xKXsvLyB1cOOAgWRvd24KZXYucHJldmVudERlZmF1bHQoKTtpZihrZXlDb2RlPT09Mzgpey8vIHVwCm5leHRJbmRleD1jdXJyZW50SW5kZXghPT0wP2N1cnJlbnRJbmRleC0xOjA7fWVsc2V7bmV4dEluZGV4PWN1cnJlbnRJbmRleDx0aGlzLnRyZWVJdGVtQXJyYXkubGVuZ3RoLTE/Y3VycmVudEluZGV4KzE6MDt9dGhpcy50cmVlSXRlbUFycmF5W25leHRJbmRleF0uZm9jdXMoKTsvLyDpgInkuK0KfWlmKFszNywzOV0uaW5kZXhPZihrZXlDb2RlKT4tMSl7Ly8gbGVmdOOAgXJpZ2h0IOWxleW8gApldi5wcmV2ZW50RGVmYXVsdCgpO2N1cnJlbnRJdGVtLmNsaWNrKCk7Ly8g6YCJ5LitCn12YXIgaGFzSW5wdXQ9Y3VycmVudEl0ZW0ucXVlcnlTZWxlY3RvcignW3R5cGU9ImNoZWNrYm94Il0nKTtpZihbMTMsMzJdLmluZGV4T2Yoa2V5Q29kZSk+LTEmJmhhc0lucHV0KXsvLyBzcGFjZSBlbnRlcumAieS4rWNoZWNrYm94CmV2LnByZXZlbnREZWZhdWx0KCk7aGFzSW5wdXQuY2xpY2soKTt9fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dmFyIF90aGlzPXRoaXM7dGhpcy5pc1RyZWU9dHJ1ZTt0aGlzLnN0b3JlPW5ldyB0cmVlX3N0b3JlKHtrZXk6dGhpcy5ub2RlS2V5LGRhdGE6dGhpcy5kYXRhLGxhenk6dGhpcy5sYXp5LHByb3BzOnRoaXMucHJvcHMsbG9hZDp0aGlzLmxvYWQsY3VycmVudE5vZGVLZXk6dGhpcy5jdXJyZW50Tm9kZUtleSxjaGVja1N0cmljdGx5OnRoaXMuY2hlY2tTdHJpY3RseSxjaGVja0Rlc2NlbmRhbnRzOnRoaXMuY2hlY2tEZXNjZW5kYW50cyxkZWZhdWx0Q2hlY2tlZEtleXM6dGhpcy5kZWZhdWx0Q2hlY2tlZEtleXMsZGVmYXVsdEV4cGFuZGVkS2V5czp0aGlzLmRlZmF1bHRFeHBhbmRlZEtleXMsYXV0b0V4cGFuZFBhcmVudDp0aGlzLmF1dG9FeHBhbmRQYXJlbnQsZGVmYXVsdEV4cGFuZEFsbDp0aGlzLmRlZmF1bHRFeHBhbmRBbGwsZmlsdGVyTm9kZU1ldGhvZDp0aGlzLmZpbHRlck5vZGVNZXRob2R9KTt0aGlzLnJvb3Q9dGhpcy5zdG9yZS5yb290O3ZhciBkcmFnU3RhdGU9dGhpcy5kcmFnU3RhdGU7dGhpcy4kb24oJ3RyZWUtbm9kZS1kcmFnLXN0YXJ0JyxmdW5jdGlvbihldmVudCx0cmVlTm9kZSl7aWYodHlwZW9mIF90aGlzLmFsbG93RHJhZz09PSdmdW5jdGlvbicmJiFfdGhpcy5hbGxvd0RyYWcodHJlZU5vZGUubm9kZSkpe2V2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIGZhbHNlO31ldmVudC5kYXRhVHJhbnNmZXIuZWZmZWN0QWxsb3dlZD0nbW92ZSc7Ly8gd3JhcCBpbiB0cnkgY2F0Y2ggdG8gYWRkcmVzcyBJRSdzIGVycm9yIHdoZW4gZmlyc3QgcGFyYW0gaXMgJ3RleHQvcGxhaW4nCnRyeXsvLyBzZXREYXRhIGlzIHJlcXVpcmVkIGZvciBkcmFnZ2FibGUgdG8gd29yayBpbiBGaXJlRm94Ci8vIHRoZSBjb250ZW50IGhhcyB0byBiZSAnJyBzbyBkcmFnZ2luZyBhIG5vZGUgb3V0IG9mIHRoZSB0cmVlIHdvbid0IG9wZW4gYSBuZXcgdGFiIGluIEZpcmVGb3gKZXZlbnQuZGF0YVRyYW5zZmVyLnNldERhdGEoJ3RleHQvcGxhaW4nLCcnKTt9Y2F0Y2goZSl7fWRyYWdTdGF0ZS5kcmFnZ2luZ05vZGU9dHJlZU5vZGU7X3RoaXMuJGVtaXQoJ25vZGUtZHJhZy1zdGFydCcsdHJlZU5vZGUubm9kZSxldmVudCk7fSk7dGhpcy4kb24oJ3RyZWUtbm9kZS1kcmFnLW92ZXInLGZ1bmN0aW9uKGV2ZW50LHRyZWVOb2RlKXt2YXIgZHJvcE5vZGU9ZmluZE5lYXJlc3RDb21wb25lbnQoZXZlbnQudGFyZ2V0LCdFbFRyZWVOb2RlJyk7dmFyIG9sZERyb3BOb2RlPWRyYWdTdGF0ZS5kcm9wTm9kZTtpZihvbGREcm9wTm9kZSYmb2xkRHJvcE5vZGUhPT1kcm9wTm9kZSl7T2JqZWN0KGRvbV9bInJlbW92ZUNsYXNzIl0pKG9sZERyb3BOb2RlLiRlbCwnaXMtZHJvcC1pbm5lcicpO312YXIgZHJhZ2dpbmdOb2RlPWRyYWdTdGF0ZS5kcmFnZ2luZ05vZGU7aWYoIWRyYWdnaW5nTm9kZXx8IWRyb3BOb2RlKXJldHVybjt2YXIgZHJvcFByZXY9dHJ1ZTt2YXIgZHJvcElubmVyPXRydWU7dmFyIGRyb3BOZXh0PXRydWU7dmFyIHVzZXJBbGxvd0Ryb3BJbm5lcj10cnVlO2lmKHR5cGVvZiBfdGhpcy5hbGxvd0Ryb3A9PT0nZnVuY3Rpb24nKXtkcm9wUHJldj1fdGhpcy5hbGxvd0Ryb3AoZHJhZ2dpbmdOb2RlLm5vZGUsZHJvcE5vZGUubm9kZSwncHJldicpO3VzZXJBbGxvd0Ryb3BJbm5lcj1kcm9wSW5uZXI9X3RoaXMuYWxsb3dEcm9wKGRyYWdnaW5nTm9kZS5ub2RlLGRyb3BOb2RlLm5vZGUsJ2lubmVyJyk7ZHJvcE5leHQ9X3RoaXMuYWxsb3dEcm9wKGRyYWdnaW5nTm9kZS5ub2RlLGRyb3BOb2RlLm5vZGUsJ25leHQnKTt9ZXZlbnQuZGF0YVRyYW5zZmVyLmRyb3BFZmZlY3Q9ZHJvcElubmVyPydtb3ZlJzonbm9uZSc7aWYoKGRyb3BQcmV2fHxkcm9wSW5uZXJ8fGRyb3BOZXh0KSYmb2xkRHJvcE5vZGUhPT1kcm9wTm9kZSl7aWYob2xkRHJvcE5vZGUpe190aGlzLiRlbWl0KCdub2RlLWRyYWctbGVhdmUnLGRyYWdnaW5nTm9kZS5ub2RlLG9sZERyb3BOb2RlLm5vZGUsZXZlbnQpO31fdGhpcy4kZW1pdCgnbm9kZS1kcmFnLWVudGVyJyxkcmFnZ2luZ05vZGUubm9kZSxkcm9wTm9kZS5ub2RlLGV2ZW50KTt9aWYoZHJvcFByZXZ8fGRyb3BJbm5lcnx8ZHJvcE5leHQpe2RyYWdTdGF0ZS5kcm9wTm9kZT1kcm9wTm9kZTt9aWYoZHJvcE5vZGUubm9kZS5uZXh0U2libGluZz09PWRyYWdnaW5nTm9kZS5ub2RlKXtkcm9wTmV4dD1mYWxzZTt9aWYoZHJvcE5vZGUubm9kZS5wcmV2aW91c1NpYmxpbmc9PT1kcmFnZ2luZ05vZGUubm9kZSl7ZHJvcFByZXY9ZmFsc2U7fWlmKGRyb3BOb2RlLm5vZGUuY29udGFpbnMoZHJhZ2dpbmdOb2RlLm5vZGUsZmFsc2UpKXtkcm9wSW5uZXI9ZmFsc2U7fWlmKGRyYWdnaW5nTm9kZS5ub2RlPT09ZHJvcE5vZGUubm9kZXx8ZHJhZ2dpbmdOb2RlLm5vZGUuY29udGFpbnMoZHJvcE5vZGUubm9kZSkpe2Ryb3BQcmV2PWZhbHNlO2Ryb3BJbm5lcj1mYWxzZTtkcm9wTmV4dD1mYWxzZTt9dmFyIHRhcmdldFBvc2l0aW9uPWRyb3BOb2RlLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt2YXIgdHJlZVBvc2l0aW9uPV90aGlzLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt2YXIgZHJvcFR5cGU9dm9pZCAwO3ZhciBwcmV2UGVyY2VudD1kcm9wUHJldj9kcm9wSW5uZXI/MC4yNTpkcm9wTmV4dD8wLjQ1OjE6LTE7dmFyIG5leHRQZXJjZW50PWRyb3BOZXh0P2Ryb3BJbm5lcj8wLjc1OmRyb3BQcmV2PzAuNTU6MDoxO3ZhciBpbmRpY2F0b3JUb3A9LTk5OTk7dmFyIGRpc3RhbmNlPWV2ZW50LmNsaWVudFktdGFyZ2V0UG9zaXRpb24udG9wO2lmKGRpc3RhbmNlPHRhcmdldFBvc2l0aW9uLmhlaWdodCpwcmV2UGVyY2VudCl7ZHJvcFR5cGU9J2JlZm9yZSc7fWVsc2UgaWYoZGlzdGFuY2U+dGFyZ2V0UG9zaXRpb24uaGVpZ2h0Km5leHRQZXJjZW50KXtkcm9wVHlwZT0nYWZ0ZXInO31lbHNlIGlmKGRyb3BJbm5lcil7ZHJvcFR5cGU9J2lubmVyJzt9ZWxzZXtkcm9wVHlwZT0nbm9uZSc7fXZhciBpY29uUG9zaXRpb249ZHJvcE5vZGUuJGVsLnF1ZXJ5U2VsZWN0b3IoJy5lbC10cmVlLW5vZGVfX2V4cGFuZC1pY29uJykuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7dmFyIGRyb3BJbmRpY2F0b3I9X3RoaXMuJHJlZnMuZHJvcEluZGljYXRvcjtpZihkcm9wVHlwZT09PSdiZWZvcmUnKXtpbmRpY2F0b3JUb3A9aWNvblBvc2l0aW9uLnRvcC10cmVlUG9zaXRpb24udG9wO31lbHNlIGlmKGRyb3BUeXBlPT09J2FmdGVyJyl7aW5kaWNhdG9yVG9wPWljb25Qb3NpdGlvbi5ib3R0b20tdHJlZVBvc2l0aW9uLnRvcDt9ZHJvcEluZGljYXRvci5zdHlsZS50b3A9aW5kaWNhdG9yVG9wKydweCc7ZHJvcEluZGljYXRvci5zdHlsZS5sZWZ0PWljb25Qb3NpdGlvbi5yaWdodC10cmVlUG9zaXRpb24ubGVmdCsncHgnO2lmKGRyb3BUeXBlPT09J2lubmVyJyl7T2JqZWN0KGRvbV9bImFkZENsYXNzIl0pKGRyb3BOb2RlLiRlbCwnaXMtZHJvcC1pbm5lcicpO31lbHNle09iamVjdChkb21fWyJyZW1vdmVDbGFzcyJdKShkcm9wTm9kZS4kZWwsJ2lzLWRyb3AtaW5uZXInKTt9ZHJhZ1N0YXRlLnNob3dEcm9wSW5kaWNhdG9yPWRyb3BUeXBlPT09J2JlZm9yZSd8fGRyb3BUeXBlPT09J2FmdGVyJztkcmFnU3RhdGUuYWxsb3dEcm9wPWRyYWdTdGF0ZS5zaG93RHJvcEluZGljYXRvcnx8dXNlckFsbG93RHJvcElubmVyO2RyYWdTdGF0ZS5kcm9wVHlwZT1kcm9wVHlwZTtfdGhpcy4kZW1pdCgnbm9kZS1kcmFnLW92ZXInLGRyYWdnaW5nTm9kZS5ub2RlLGRyb3BOb2RlLm5vZGUsZXZlbnQpO30pO3RoaXMuJG9uKCd0cmVlLW5vZGUtZHJhZy1lbmQnLGZ1bmN0aW9uKGV2ZW50KXt2YXIgZHJhZ2dpbmdOb2RlPWRyYWdTdGF0ZS5kcmFnZ2luZ05vZGUsZHJvcFR5cGU9ZHJhZ1N0YXRlLmRyb3BUeXBlLGRyb3BOb2RlPWRyYWdTdGF0ZS5kcm9wTm9kZTtldmVudC5wcmV2ZW50RGVmYXVsdCgpO2V2ZW50LmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0PSdtb3ZlJztpZihkcmFnZ2luZ05vZGUmJmRyb3BOb2RlKXt2YXIgZHJhZ2dpbmdOb2RlQ29weT17ZGF0YTpkcmFnZ2luZ05vZGUubm9kZS5kYXRhfTtpZihkcm9wVHlwZSE9PSdub25lJyl7ZHJhZ2dpbmdOb2RlLm5vZGUucmVtb3ZlKCk7fWlmKGRyb3BUeXBlPT09J2JlZm9yZScpe2Ryb3BOb2RlLm5vZGUucGFyZW50Lmluc2VydEJlZm9yZShkcmFnZ2luZ05vZGVDb3B5LGRyb3BOb2RlLm5vZGUpO31lbHNlIGlmKGRyb3BUeXBlPT09J2FmdGVyJyl7ZHJvcE5vZGUubm9kZS5wYXJlbnQuaW5zZXJ0QWZ0ZXIoZHJhZ2dpbmdOb2RlQ29weSxkcm9wTm9kZS5ub2RlKTt9ZWxzZSBpZihkcm9wVHlwZT09PSdpbm5lcicpe2Ryb3BOb2RlLm5vZGUuaW5zZXJ0Q2hpbGQoZHJhZ2dpbmdOb2RlQ29weSk7fWlmKGRyb3BUeXBlIT09J25vbmUnKXtfdGhpcy5zdG9yZS5yZWdpc3Rlck5vZGUoZHJhZ2dpbmdOb2RlQ29weSk7fU9iamVjdChkb21fWyJyZW1vdmVDbGFzcyJdKShkcm9wTm9kZS4kZWwsJ2lzLWRyb3AtaW5uZXInKTtfdGhpcy4kZW1pdCgnbm9kZS1kcmFnLWVuZCcsZHJhZ2dpbmdOb2RlLm5vZGUsZHJvcE5vZGUubm9kZSxkcm9wVHlwZSxldmVudCk7aWYoZHJvcFR5cGUhPT0nbm9uZScpe190aGlzLiRlbWl0KCdub2RlLWRyb3AnLGRyYWdnaW5nTm9kZS5ub2RlLGRyb3BOb2RlLm5vZGUsZHJvcFR5cGUsZXZlbnQpO319aWYoZHJhZ2dpbmdOb2RlJiYhZHJvcE5vZGUpe190aGlzLiRlbWl0KCdub2RlLWRyYWctZW5kJyxkcmFnZ2luZ05vZGUubm9kZSxudWxsLGRyb3BUeXBlLGV2ZW50KTt9ZHJhZ1N0YXRlLnNob3dEcm9wSW5kaWNhdG9yPWZhbHNlO2RyYWdTdGF0ZS5kcmFnZ2luZ05vZGU9bnVsbDtkcmFnU3RhdGUuZHJvcE5vZGU9bnVsbDtkcmFnU3RhdGUuYWxsb3dEcm9wPXRydWU7fSk7fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLmluaXRUYWJJbmRleCgpO3RoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLHRoaXMuaGFuZGxlS2V5ZG93bik7fSx1cGRhdGVkOmZ1bmN0aW9uIHVwZGF0ZWQoKXt0aGlzLnRyZWVJdGVtcz10aGlzLiRlbC5xdWVyeVNlbGVjdG9yQWxsKCdbcm9sZT10cmVlaXRlbV0nKTt0aGlzLmNoZWNrYm94SXRlbXM9dGhpcy4kZWwucXVlcnlTZWxlY3RvckFsbCgnaW5wdXRbdHlwZT1jaGVja2JveF0nKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RyZWUvc3JjL3RyZWUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY190cmVldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXRyZWV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90cmVlL3NyYy90cmVlLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHRyZWVfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfdHJlZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyx0cmVldnVlX3R5cGVfdGVtcGxhdGVfaWRfNTQ3NTc1YTZfcmVuZGVyLHRyZWV2dWVfdHlwZV90ZW1wbGF0ZV9pZF81NDc1NzVhNl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHRyZWVfYXBpO310cmVlX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvdHJlZS9zcmMvdHJlZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3RyZWU9dHJlZV9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RyZWUvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9zcmNfdHJlZS5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChzcmNfdHJlZS5uYW1lLHNyY190cmVlKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfdHJlZT1zcmNfdHJlZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2FsZXJ0L3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02ZTUzMzQxYiYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF82ZTUzMzQxYl9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzZlNTMzNDFiX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidHJhbnNpdGlvbiIse2F0dHJzOntuYW1lOiJlbC1hbGVydC1mYWRlIn19LFtfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUsZXhwcmVzc2lvbjoidmlzaWJsZSJ9XSxzdGF0aWNDbGFzczoiZWwtYWxlcnQiLGNsYXNzOltfdm0udHlwZUNsYXNzLF92bS5jZW50ZXI/ImlzLWNlbnRlciI6IiIsImlzLSIrX3ZtLmVmZmVjdF0sYXR0cnM6e3JvbGU6ImFsZXJ0In19LFtfdm0uc2hvd0ljb24/X2MoImkiLHtzdGF0aWNDbGFzczoiZWwtYWxlcnRfX2ljb24iLGNsYXNzOltfdm0uaWNvbkNsYXNzLF92bS5pc0JpZ0ljb25dfSk6X3ZtLl9lKCksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1hbGVydF9fY29udGVudCJ9LFtfdm0udGl0bGV8fF92bS4kc2xvdHMudGl0bGU/X2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtYWxlcnRfX3RpdGxlIixjbGFzczpbX3ZtLmlzQm9sZFRpdGxlXX0sW192bS5fdCgidGl0bGUiLFtfdm0uX3YoX3ZtLl9zKF92bS50aXRsZSkpXSldLDIpOl92bS5fZSgpLF92bS4kc2xvdHMuZGVmYXVsdCYmIV92bS5kZXNjcmlwdGlvbj9fYygicCIse3N0YXRpY0NsYXNzOiJlbC1hbGVydF9fZGVzY3JpcHRpb24ifSxbX3ZtLl90KCJkZWZhdWx0IildLDIpOl92bS5fZSgpLF92bS5kZXNjcmlwdGlvbiYmIV92bS4kc2xvdHMuZGVmYXVsdD9fYygicCIse3N0YXRpY0NsYXNzOiJlbC1hbGVydF9fZGVzY3JpcHRpb24ifSxbX3ZtLl92KF92bS5fcyhfdm0uZGVzY3JpcHRpb24pKV0pOl92bS5fZSgpLF9jKCJpIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLmNsb3NhYmxlLGV4cHJlc3Npb246ImNsb3NhYmxlIn1dLHN0YXRpY0NsYXNzOiJlbC1hbGVydF9fY2xvc2VidG4iLGNsYXNzOnsiaXMtY3VzdG9tZWQiOl92bS5jbG9zZVRleHQhPT0iIiwiZWwtaWNvbi1jbG9zZSI6X3ZtLmNsb3NlVGV4dD09PSIifSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtfdm0uY2xvc2UoKTt9fX0sW192bS5fdihfdm0uX3MoX3ZtLmNsb3NlVGV4dCkpXSldKV0pXSk7fTt2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzZlNTMzNDFiX3N0YXRpY1JlbmRlckZucz1bXTttYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNmU1MzM0MWJfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2FsZXJ0L3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02ZTUzMzQxYiYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvYWxlcnQvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgVFlQRV9DTEFTU0VTX01BUD17J3N1Y2Nlc3MnOidlbC1pY29uLXN1Y2Nlc3MnLCd3YXJuaW5nJzonZWwtaWNvbi13YXJuaW5nJywnZXJyb3InOidlbC1pY29uLWVycm9yJ307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBhbGVydF9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxBbGVydCcscHJvcHM6e3RpdGxlOnt0eXBlOlN0cmluZyxkZWZhdWx0OicnfSxkZXNjcmlwdGlvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30sdHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonaW5mbyd9LGNsb3NhYmxlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxjbG9zZVRleHQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Jyd9LHNob3dJY29uOkJvb2xlYW4sY2VudGVyOkJvb2xlYW4sZWZmZWN0Ont0eXBlOlN0cmluZyxkZWZhdWx0OidsaWdodCcsdmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih2YWx1ZSl7cmV0dXJuWydsaWdodCcsJ2RhcmsnXS5pbmRleE9mKHZhbHVlKSE9PS0xO319fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57dmlzaWJsZTp0cnVlfTt9LG1ldGhvZHM6e2Nsb3NlOmZ1bmN0aW9uIGNsb3NlKCl7dGhpcy52aXNpYmxlPWZhbHNlO3RoaXMuJGVtaXQoJ2Nsb3NlJyk7fX0sY29tcHV0ZWQ6e3R5cGVDbGFzczpmdW5jdGlvbiB0eXBlQ2xhc3MoKXtyZXR1cm4nZWwtYWxlcnQtLScrdGhpcy50eXBlO30saWNvbkNsYXNzOmZ1bmN0aW9uIGljb25DbGFzcygpe3JldHVybiBUWVBFX0NMQVNTRVNfTUFQW3RoaXMudHlwZV18fCdlbC1pY29uLWluZm8nO30saXNCaWdJY29uOmZ1bmN0aW9uIGlzQmlnSWNvbigpe3JldHVybiB0aGlzLmRlc2NyaXB0aW9ufHx0aGlzLiRzbG90cy5kZWZhdWx0Pydpcy1iaWcnOicnO30saXNCb2xkVGl0bGU6ZnVuY3Rpb24gaXNCb2xkVGl0bGUoKXtyZXR1cm4gdGhpcy5kZXNjcmlwdGlvbnx8dGhpcy4kc2xvdHMuZGVmYXVsdD8naXMtYm9sZCc6Jyc7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYWxlcnQvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2FsZXJ0X3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWFsZXJ0X3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYWxlcnQvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgYWxlcnRfc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19hbGVydF9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNmU1MzM0MWJfcmVuZGVyLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF82ZTUzMzQxYl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGFsZXJ0X3NyY19tYWluX2FwaTt9YWxlcnRfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9hbGVydC9zcmMvbWFpbi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYWxlcnRfc3JjX21haW49YWxlcnRfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9hbGVydC9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2FsZXJ0X3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGFsZXJ0X3NyY19tYWluLm5hbWUsYWxlcnRfc3JjX21haW4pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19hbGVydD1hbGVydF9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL25vdGlmaWNhdGlvbi9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDNkYmMzZDgmCnZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNDNkYmMzZDhfcmVuZGVyPWZ1bmN0aW9uIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF80M2RiYzNkOF9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInRyYW5zaXRpb24iLHthdHRyczp7bmFtZToiZWwtbm90aWZpY2F0aW9uLWZhZGUifX0sW19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0udmlzaWJsZSxleHByZXNzaW9uOiJ2aXNpYmxlIn1dLGNsYXNzOlsiZWwtbm90aWZpY2F0aW9uIixfdm0uY3VzdG9tQ2xhc3MsX3ZtLmhvcml6b250YWxDbGFzc10sc3R5bGU6X3ZtLnBvc2l0aW9uU3R5bGUsYXR0cnM6e3JvbGU6ImFsZXJ0In0sb246e21vdXNlZW50ZXI6ZnVuY3Rpb24gbW91c2VlbnRlcigkZXZlbnQpe192bS5jbGVhclRpbWVyKCk7fSxtb3VzZWxlYXZlOmZ1bmN0aW9uIG1vdXNlbGVhdmUoJGV2ZW50KXtfdm0uc3RhcnRUaW1lcigpO30sY2xpY2s6X3ZtLmNsaWNrfX0sW192bS50eXBlfHxfdm0uaWNvbkNsYXNzP19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLW5vdGlmaWNhdGlvbl9faWNvbiIsY2xhc3M6W192bS50eXBlQ2xhc3MsX3ZtLmljb25DbGFzc119KTpfdm0uX2UoKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLW5vdGlmaWNhdGlvbl9fZ3JvdXAiLGNsYXNzOnsiaXMtd2l0aC1pY29uIjpfdm0udHlwZUNsYXNzfHxfdm0uaWNvbkNsYXNzfX0sW19jKCJoMiIse3N0YXRpY0NsYXNzOiJlbC1ub3RpZmljYXRpb25fX3RpdGxlIixkb21Qcm9wczp7dGV4dENvbnRlbnQ6X3ZtLl9zKF92bS50aXRsZSl9fSksX2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5tZXNzYWdlLGV4cHJlc3Npb246Im1lc3NhZ2UifV0sc3RhdGljQ2xhc3M6ImVsLW5vdGlmaWNhdGlvbl9fY29udGVudCJ9LFtfdm0uX3QoImRlZmF1bHQiLFshX3ZtLmRhbmdlcm91c2x5VXNlSFRNTFN0cmluZz9fYygicCIsW192bS5fdihfdm0uX3MoX3ZtLm1lc3NhZ2UpKV0pOl9jKCJwIix7ZG9tUHJvcHM6e2lubmVySFRNTDpfdm0uX3MoX3ZtLm1lc3NhZ2UpfX0pXSldLDIpLF92bS5zaG93Q2xvc2U/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1ub3RpZmljYXRpb25fX2Nsb3NlQnRuIGVsLWljb24tY2xvc2UiLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtyZXR1cm4gX3ZtLmNsb3NlKCRldmVudCk7fX19KTpfdm0uX2UoKV0pXSldKTt9O3ZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNDNkYmMzZDhfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF80M2RiYzNkOF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbm90aWZpY2F0aW9uL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00M2RiYzNkOCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvbm90aWZpY2F0aW9uL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIG1haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc190eXBlTWFwPXtzdWNjZXNzOidzdWNjZXNzJyxpbmZvOidpbmZvJyx3YXJuaW5nOid3YXJuaW5nJyxlcnJvcjonZXJyb3InfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIG5vdGlmaWNhdGlvbl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17ZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3Zpc2libGU6ZmFsc2UsdGl0bGU6JycsbWVzc2FnZTonJyxkdXJhdGlvbjo0NTAwLHR5cGU6Jycsc2hvd0Nsb3NlOnRydWUsY3VzdG9tQ2xhc3M6JycsaWNvbkNsYXNzOicnLG9uQ2xvc2U6bnVsbCxvbkNsaWNrOm51bGwsY2xvc2VkOmZhbHNlLHZlcnRpY2FsT2Zmc2V0OjAsdGltZXI6bnVsbCxkYW5nZXJvdXNseVVzZUhUTUxTdHJpbmc6ZmFsc2UscG9zaXRpb246J3RvcC1yaWdodCd9O30sY29tcHV0ZWQ6e3R5cGVDbGFzczpmdW5jdGlvbiB0eXBlQ2xhc3MoKXtyZXR1cm4gdGhpcy50eXBlJiZtYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfdHlwZU1hcFt0aGlzLnR5cGVdPydlbC1pY29uLScrbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX3R5cGVNYXBbdGhpcy50eXBlXTonJzt9LGhvcml6b250YWxDbGFzczpmdW5jdGlvbiBob3Jpem9udGFsQ2xhc3MoKXtyZXR1cm4gdGhpcy5wb3NpdGlvbi5pbmRleE9mKCdyaWdodCcpPi0xPydyaWdodCc6J2xlZnQnO30sdmVydGljYWxQcm9wZXJ0eTpmdW5jdGlvbiB2ZXJ0aWNhbFByb3BlcnR5KCl7cmV0dXJuIC9edG9wLS8udGVzdCh0aGlzLnBvc2l0aW9uKT8ndG9wJzonYm90dG9tJzt9LHBvc2l0aW9uU3R5bGU6ZnVuY3Rpb24gcG9zaXRpb25TdHlsZSgpe3ZhciBfcmVmO3JldHVybiBfcmVmPXt9LF9yZWZbdGhpcy52ZXJ0aWNhbFByb3BlcnR5XT10aGlzLnZlcnRpY2FsT2Zmc2V0KydweCcsX3JlZjt9fSx3YXRjaDp7Y2xvc2VkOmZ1bmN0aW9uIGNsb3NlZChuZXdWYWwpe2lmKG5ld1ZhbCl7dGhpcy52aXNpYmxlPWZhbHNlO3RoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLHRoaXMuZGVzdHJveUVsZW1lbnQpO319fSxtZXRob2RzOntkZXN0cm95RWxlbWVudDpmdW5jdGlvbiBkZXN0cm95RWxlbWVudCgpe3RoaXMuJGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLHRoaXMuZGVzdHJveUVsZW1lbnQpO3RoaXMuJGRlc3Ryb3kodHJ1ZSk7dGhpcy4kZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLiRlbCk7fSxjbGljazpmdW5jdGlvbiBjbGljaygpe2lmKHR5cGVvZiB0aGlzLm9uQ2xpY2s9PT0nZnVuY3Rpb24nKXt0aGlzLm9uQ2xpY2soKTt9fSxjbG9zZTpmdW5jdGlvbiBjbG9zZSgpe3RoaXMuY2xvc2VkPXRydWU7aWYodHlwZW9mIHRoaXMub25DbG9zZT09PSdmdW5jdGlvbicpe3RoaXMub25DbG9zZSgpO319LGNsZWFyVGltZXI6ZnVuY3Rpb24gY2xlYXJUaW1lcigpe2NsZWFyVGltZW91dCh0aGlzLnRpbWVyKTt9LHN0YXJ0VGltZXI6ZnVuY3Rpb24gc3RhcnRUaW1lcigpe3ZhciBfdGhpcz10aGlzO2lmKHRoaXMuZHVyYXRpb24+MCl7dGhpcy50aW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoIV90aGlzLmNsb3NlZCl7X3RoaXMuY2xvc2UoKTt9fSx0aGlzLmR1cmF0aW9uKTt9fSxrZXlkb3duOmZ1bmN0aW9uIGtleWRvd24oZSl7aWYoZS5rZXlDb2RlPT09NDZ8fGUua2V5Q29kZT09PTgpe3RoaXMuY2xlYXJUaW1lcigpOy8vIGRldGVsZSDlj5bmtojlgJLorqHml7YKfWVsc2UgaWYoZS5rZXlDb2RlPT09Mjcpey8vIGVzY+WFs+mXrea2iOaBrwppZighdGhpcy5jbG9zZWQpe3RoaXMuY2xvc2UoKTt9fWVsc2V7dGhpcy5zdGFydFRpbWVyKCk7Ly8g5oGi5aSN5YCS6K6h5pe2Cn19fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXMyPXRoaXM7aWYodGhpcy5kdXJhdGlvbj4wKXt0aGlzLnRpbWVyPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtpZighX3RoaXMyLmNsb3NlZCl7X3RoaXMyLmNsb3NlKCk7fX0sdGhpcy5kdXJhdGlvbik7fWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLHRoaXMua2V5ZG93bik7fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJyx0aGlzLmtleWRvd24pO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbm90aWZpY2F0aW9uL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19ub3RpZmljYXRpb25fc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bm90aWZpY2F0aW9uX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbm90aWZpY2F0aW9uL3NyYy9tYWluLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIG5vdGlmaWNhdGlvbl9zcmNfbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhY2thZ2VzX25vdGlmaWNhdGlvbl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNDNkYmMzZDhfcmVuZGVyLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF80M2RiYzNkOF9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIG5vdGlmaWNhdGlvbl9zcmNfbWFpbl9hcGk7fW5vdGlmaWNhdGlvbl9zcmNfbWFpbl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL25vdGlmaWNhdGlvbi9zcmMvbWFpbi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbm90aWZpY2F0aW9uX3NyY19tYWluPW5vdGlmaWNhdGlvbl9zcmNfbWFpbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL25vdGlmaWNhdGlvbi9zcmMvbWFpbi5qcwp2YXIgTm90aWZpY2F0aW9uQ29uc3RydWN0b3I9ZXh0ZXJuYWxfdnVlX2RlZmF1bHQuYS5leHRlbmQobm90aWZpY2F0aW9uX3NyY19tYWluKTt2YXIgc3JjX21haW5faW5zdGFuY2U9dm9pZCAwO3ZhciBpbnN0YW5jZXM9W107dmFyIHNlZWQ9MTt2YXIgbWFpbl9Ob3RpZmljYXRpb249ZnVuY3Rpb24gTm90aWZpY2F0aW9uKG9wdGlvbnMpe2lmKGV4dGVybmFsX3Z1ZV9kZWZhdWx0LmEucHJvdG90eXBlLiRpc1NlcnZlcilyZXR1cm47b3B0aW9ucz1tZXJnZV9kZWZhdWx0KCkoe30sb3B0aW9ucyk7dmFyIHVzZXJPbkNsb3NlPW9wdGlvbnMub25DbG9zZTt2YXIgaWQ9J25vdGlmaWNhdGlvbl8nK3NlZWQrKzt2YXIgcG9zaXRpb249b3B0aW9ucy5wb3NpdGlvbnx8J3RvcC1yaWdodCc7b3B0aW9ucy5vbkNsb3NlPWZ1bmN0aW9uKCl7Tm90aWZpY2F0aW9uLmNsb3NlKGlkLHVzZXJPbkNsb3NlKTt9O3NyY19tYWluX2luc3RhbmNlPW5ldyBOb3RpZmljYXRpb25Db25zdHJ1Y3Rvcih7ZGF0YTpvcHRpb25zfSk7aWYoT2JqZWN0KHZkb21fWyJpc1ZOb2RlIl0pKG9wdGlvbnMubWVzc2FnZSkpe3NyY19tYWluX2luc3RhbmNlLiRzbG90cy5kZWZhdWx0PVtvcHRpb25zLm1lc3NhZ2VdO29wdGlvbnMubWVzc2FnZT0nUkVQTEFDRURfQllfVk5PREUnO31zcmNfbWFpbl9pbnN0YW5jZS5pZD1pZDtzcmNfbWFpbl9pbnN0YW5jZS4kbW91bnQoKTtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNyY19tYWluX2luc3RhbmNlLiRlbCk7c3JjX21haW5faW5zdGFuY2UudmlzaWJsZT10cnVlO3NyY19tYWluX2luc3RhbmNlLmRvbT1zcmNfbWFpbl9pbnN0YW5jZS4kZWw7c3JjX21haW5faW5zdGFuY2UuZG9tLnN0eWxlLnpJbmRleD1wb3B1cF9bIlBvcHVwTWFuYWdlciJdLm5leHRaSW5kZXgoKTt2YXIgdmVydGljYWxPZmZzZXQ9b3B0aW9ucy5vZmZzZXR8fDA7aW5zdGFuY2VzLmZpbHRlcihmdW5jdGlvbihpdGVtKXtyZXR1cm4gaXRlbS5wb3NpdGlvbj09PXBvc2l0aW9uO30pLmZvckVhY2goZnVuY3Rpb24oaXRlbSl7dmVydGljYWxPZmZzZXQrPWl0ZW0uJGVsLm9mZnNldEhlaWdodCsxNjt9KTt2ZXJ0aWNhbE9mZnNldCs9MTY7c3JjX21haW5faW5zdGFuY2UudmVydGljYWxPZmZzZXQ9dmVydGljYWxPZmZzZXQ7aW5zdGFuY2VzLnB1c2goc3JjX21haW5faW5zdGFuY2UpO3JldHVybiBzcmNfbWFpbl9pbnN0YW5jZTt9O1snc3VjY2VzcycsJ3dhcm5pbmcnLCdpbmZvJywnZXJyb3InXS5mb3JFYWNoKGZ1bmN0aW9uKHR5cGUpe21haW5fTm90aWZpY2F0aW9uW3R5cGVdPWZ1bmN0aW9uKG9wdGlvbnMpe2lmKHR5cGVvZiBvcHRpb25zPT09J3N0cmluZyd8fE9iamVjdCh2ZG9tX1siaXNWTm9kZSJdKShvcHRpb25zKSl7b3B0aW9ucz17bWVzc2FnZTpvcHRpb25zfTt9b3B0aW9ucy50eXBlPXR5cGU7cmV0dXJuIG1haW5fTm90aWZpY2F0aW9uKG9wdGlvbnMpO307fSk7bWFpbl9Ob3RpZmljYXRpb24uY2xvc2U9ZnVuY3Rpb24oaWQsdXNlck9uQ2xvc2Upe3ZhciBpbmRleD0tMTt2YXIgbGVuPWluc3RhbmNlcy5sZW5ndGg7dmFyIGluc3RhbmNlPWluc3RhbmNlcy5maWx0ZXIoZnVuY3Rpb24oaW5zdGFuY2UsaSl7aWYoaW5zdGFuY2UuaWQ9PT1pZCl7aW5kZXg9aTtyZXR1cm4gdHJ1ZTt9cmV0dXJuIGZhbHNlO30pWzBdO2lmKCFpbnN0YW5jZSlyZXR1cm47aWYodHlwZW9mIHVzZXJPbkNsb3NlPT09J2Z1bmN0aW9uJyl7dXNlck9uQ2xvc2UoaW5zdGFuY2UpO31pbnN0YW5jZXMuc3BsaWNlKGluZGV4LDEpO2lmKGxlbjw9MSlyZXR1cm47dmFyIHBvc2l0aW9uPWluc3RhbmNlLnBvc2l0aW9uO3ZhciByZW1vdmVkSGVpZ2h0PWluc3RhbmNlLmRvbS5vZmZzZXRIZWlnaHQ7Zm9yKHZhciBpPWluZGV4O2k8bGVuLTE7aSsrKXtpZihpbnN0YW5jZXNbaV0ucG9zaXRpb249PT1wb3NpdGlvbil7aW5zdGFuY2VzW2ldLmRvbS5zdHlsZVtpbnN0YW5jZS52ZXJ0aWNhbFByb3BlcnR5XT1wYXJzZUludChpbnN0YW5jZXNbaV0uZG9tLnN0eWxlW2luc3RhbmNlLnZlcnRpY2FsUHJvcGVydHldLDEwKS1yZW1vdmVkSGVpZ2h0LTE2KydweCc7fX19O21haW5fTm90aWZpY2F0aW9uLmNsb3NlQWxsPWZ1bmN0aW9uKCl7Zm9yKHZhciBpPWluc3RhbmNlcy5sZW5ndGgtMTtpPj0wO2ktLSl7aW5zdGFuY2VzW2ldLmNsb3NlKCk7fX07LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19ub3RpZmljYXRpb25fc3JjX21haW49bWFpbl9Ob3RpZmljYXRpb247Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9ub3RpZmljYXRpb24vaW5kZXguanMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBub3RpZmljYXRpb249cGFja2FnZXNfbm90aWZpY2F0aW9uX3NyY19tYWluOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvc2xpZGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zMjcwODY0NCYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8zMjcwODY0NF9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzMyNzA4NjQ0X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXNsaWRlciIsY2xhc3M6eyJpcy12ZXJ0aWNhbCI6X3ZtLnZlcnRpY2FsLCJlbC1zbGlkZXItLXdpdGgtaW5wdXQiOl92bS5zaG93SW5wdXR9LGF0dHJzOntyb2xlOiJzbGlkZXIiLCJhcmlhLXZhbHVlbWluIjpfdm0ubWluLCJhcmlhLXZhbHVlbWF4Ijpfdm0ubWF4LCJhcmlhLW9yaWVudGF0aW9uIjpfdm0udmVydGljYWw/InZlcnRpY2FsIjoiaG9yaXpvbnRhbCIsImFyaWEtZGlzYWJsZWQiOl92bS5zbGlkZXJEaXNhYmxlZH19LFtfdm0uc2hvd0lucHV0JiYhX3ZtLnJhbmdlP19jKCJlbC1pbnB1dC1udW1iZXIiLHtyZWY6ImlucHV0IixzdGF0aWNDbGFzczoiZWwtc2xpZGVyX19pbnB1dCIsYXR0cnM6e3N0ZXA6X3ZtLnN0ZXAsZGlzYWJsZWQ6X3ZtLnNsaWRlckRpc2FibGVkLGNvbnRyb2xzOl92bS5zaG93SW5wdXRDb250cm9scyxtaW46X3ZtLm1pbixtYXg6X3ZtLm1heCxkZWJvdW5jZTpfdm0uZGVib3VuY2Usc2l6ZTpfdm0uaW5wdXRTaXplfSxvbjp7Y2hhbmdlOl92bS5lbWl0Q2hhbmdlfSxtb2RlbDp7dmFsdWU6X3ZtLmZpcnN0VmFsdWUsY2FsbGJhY2s6ZnVuY3Rpb24gY2FsbGJhY2soJCR2KXtfdm0uZmlyc3RWYWx1ZT0kJHY7fSxleHByZXNzaW9uOiJmaXJzdFZhbHVlIn19KTpfdm0uX2UoKSxfYygiZGl2Iix7cmVmOiJzbGlkZXIiLHN0YXRpY0NsYXNzOiJlbC1zbGlkZXJfX3J1bndheSIsY2xhc3M6eyJzaG93LWlucHV0Ijpfdm0uc2hvd0lucHV0LGRpc2FibGVkOl92bS5zbGlkZXJEaXNhYmxlZH0sc3R5bGU6X3ZtLnJ1bndheVN0eWxlLG9uOntjbGljazpfdm0ub25TbGlkZXJDbGlja319LFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXNsaWRlcl9fYmFyIixzdHlsZTpfdm0uYmFyU3R5bGV9KSxfYygic2xpZGVyLWJ1dHRvbiIse3JlZjoiYnV0dG9uMSIsYXR0cnM6e3ZlcnRpY2FsOl92bS52ZXJ0aWNhbCwidG9vbHRpcC1jbGFzcyI6X3ZtLnRvb2x0aXBDbGFzc30sbW9kZWw6e3ZhbHVlOl92bS5maXJzdFZhbHVlLGNhbGxiYWNrOmZ1bmN0aW9uIGNhbGxiYWNrKCQkdil7X3ZtLmZpcnN0VmFsdWU9JCR2O30sZXhwcmVzc2lvbjoiZmlyc3RWYWx1ZSJ9fSksX3ZtLnJhbmdlP19jKCJzbGlkZXItYnV0dG9uIix7cmVmOiJidXR0b24yIixhdHRyczp7dmVydGljYWw6X3ZtLnZlcnRpY2FsLCJ0b29sdGlwLWNsYXNzIjpfdm0udG9vbHRpcENsYXNzfSxtb2RlbDp7dmFsdWU6X3ZtLnNlY29uZFZhbHVlLGNhbGxiYWNrOmZ1bmN0aW9uIGNhbGxiYWNrKCQkdil7X3ZtLnNlY29uZFZhbHVlPSQkdjt9LGV4cHJlc3Npb246InNlY29uZFZhbHVlIn19KTpfdm0uX2UoKSxfdm0uX2woX3ZtLnN0b3BzLGZ1bmN0aW9uKGl0ZW0sa2V5KXtyZXR1cm4gX3ZtLnNob3dTdG9wcz9fYygiZGl2Iix7a2V5OmtleSxzdGF0aWNDbGFzczoiZWwtc2xpZGVyX19zdG9wIixzdHlsZTpfdm0uZ2V0U3RvcFN0eWxlKGl0ZW0pfSk6X3ZtLl9lKCk7fSksX3ZtLm1hcmtMaXN0Lmxlbmd0aD4wP1tfYygiZGl2Iixfdm0uX2woX3ZtLm1hcmtMaXN0LGZ1bmN0aW9uKGl0ZW0sa2V5KXtyZXR1cm4gX2MoImRpdiIse2tleTprZXksc3RhdGljQ2xhc3M6ImVsLXNsaWRlcl9fc3RvcCBlbC1zbGlkZXJfX21hcmtzLXN0b3AiLHN0eWxlOl92bS5nZXRTdG9wU3R5bGUoaXRlbS5wb3NpdGlvbil9KTt9KSwwKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXNsaWRlcl9fbWFya3MifSxfdm0uX2woX3ZtLm1hcmtMaXN0LGZ1bmN0aW9uKGl0ZW0sa2V5KXtyZXR1cm4gX2MoInNsaWRlci1tYXJrZXIiLHtrZXk6a2V5LHN0eWxlOl92bS5nZXRTdG9wU3R5bGUoaXRlbS5wb3NpdGlvbiksYXR0cnM6e21hcms6aXRlbS5tYXJrfX0pO30pLDEpXTpfdm0uX2UoKV0sMildLDEpO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8zMjcwODY0NF9zdGF0aWNSZW5kZXJGbnM9W107bWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzMyNzA4NjQ0X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zbGlkZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTMyNzA4NjQ0JgovLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJlbGVtZW50LXVpL2xpYi9pbnB1dC1udW1iZXIiCnZhciBpbnB1dF9udW1iZXJfPV9fd2VicGFja19yZXF1aXJlX18oNDEpO3ZhciBpbnB1dF9udW1iZXJfZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGlucHV0X251bWJlcl8pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvc2xpZGVyL3NyYy9idXR0b24udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWU3MmQyYWQyJgp2YXIgYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfZTcyZDJhZDJfcmVuZGVyPWZ1bmN0aW9uIGJ1dHRvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2U3MmQyYWQyX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7cmVmOiJidXR0b24iLHN0YXRpY0NsYXNzOiJlbC1zbGlkZXJfX2J1dHRvbi13cmFwcGVyIixjbGFzczp7aG92ZXI6X3ZtLmhvdmVyaW5nLGRyYWdnaW5nOl92bS5kcmFnZ2luZ30sc3R5bGU6X3ZtLndyYXBwZXJTdHlsZSxhdHRyczp7dGFiaW5kZXg6IjAifSxvbjp7bW91c2VlbnRlcjpfdm0uaGFuZGxlTW91c2VFbnRlcixtb3VzZWxlYXZlOl92bS5oYW5kbGVNb3VzZUxlYXZlLG1vdXNlZG93bjpfdm0ub25CdXR0b25Eb3duLHRvdWNoc3RhcnQ6X3ZtLm9uQnV0dG9uRG93bixmb2N1czpfdm0uaGFuZGxlTW91c2VFbnRlcixibHVyOl92bS5oYW5kbGVNb3VzZUxlYXZlLGtleWRvd246W2Z1bmN0aW9uKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwibGVmdCIsMzcsJGV2ZW50LmtleSxbIkxlZnQiLCJBcnJvd0xlZnQiXSkpe3JldHVybiBudWxsO31pZigiYnV0dG9uImluICRldmVudCYmJGV2ZW50LmJ1dHRvbiE9PTApe3JldHVybiBudWxsO31yZXR1cm4gX3ZtLm9uTGVmdEtleURvd24oJGV2ZW50KTt9LGZ1bmN0aW9uKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwicmlnaHQiLDM5LCRldmVudC5rZXksWyJSaWdodCIsIkFycm93UmlnaHQiXSkpe3JldHVybiBudWxsO31pZigiYnV0dG9uImluICRldmVudCYmJGV2ZW50LmJ1dHRvbiE9PTIpe3JldHVybiBudWxsO31yZXR1cm4gX3ZtLm9uUmlnaHRLZXlEb3duKCRldmVudCk7fSxmdW5jdGlvbigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsImRvd24iLDQwLCRldmVudC5rZXksWyJEb3duIiwiQXJyb3dEb3duIl0pKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIF92bS5vbkxlZnRLZXlEb3duKCRldmVudCk7fSxmdW5jdGlvbigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsInVwIiwzOCwkZXZlbnQua2V5LFsiVXAiLCJBcnJvd1VwIl0pKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIF92bS5vblJpZ2h0S2V5RG93bigkZXZlbnQpO31dfX0sW19jKCJlbC10b29sdGlwIix7cmVmOiJ0b29sdGlwIixhdHRyczp7cGxhY2VtZW50OiJ0b3AiLCJwb3BwZXItY2xhc3MiOl92bS50b29sdGlwQ2xhc3MsZGlzYWJsZWQ6IV92bS5zaG93VG9vbHRpcH19LFtfYygic3BhbiIse2F0dHJzOntzbG90OiJjb250ZW50In0sc2xvdDoiY29udGVudCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXRWYWx1ZSkpXSksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1zbGlkZXJfX2J1dHRvbiIsY2xhc3M6e2hvdmVyOl92bS5ob3ZlcmluZyxkcmFnZ2luZzpfdm0uZHJhZ2dpbmd9fSldKV0sMSk7fTt2YXIgYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfZTcyZDJhZDJfc3RhdGljUmVuZGVyRm5zPVtdO2J1dHRvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2U3MmQyYWQyX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zbGlkZXIvc3JjL2J1dHRvbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZTcyZDJhZDImCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NsaWRlci9zcmMvYnV0dG9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzbGlkZXJfc3JjX2J1dHRvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxTbGlkZXJCdXR0b24nLGNvbXBvbmVudHM6e0VsVG9vbHRpcDp0b29sdGlwX2RlZmF1bHQuYX0scHJvcHM6e3ZhbHVlOnt0eXBlOk51bWJlcixkZWZhdWx0OjB9LHZlcnRpY2FsOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0sdG9vbHRpcENsYXNzOlN0cmluZ30sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2hvdmVyaW5nOmZhbHNlLGRyYWdnaW5nOmZhbHNlLGlzQ2xpY2s6ZmFsc2Usc3RhcnRYOjAsY3VycmVudFg6MCxzdGFydFk6MCxjdXJyZW50WTowLHN0YXJ0UG9zaXRpb246MCxuZXdQb3NpdGlvbjpudWxsLG9sZFZhbHVlOnRoaXMudmFsdWV9O30sY29tcHV0ZWQ6e2Rpc2FibGVkOmZ1bmN0aW9uIGRpc2FibGVkKCl7cmV0dXJuIHRoaXMuJHBhcmVudC5zbGlkZXJEaXNhYmxlZDt9LG1heDpmdW5jdGlvbiBtYXgoKXtyZXR1cm4gdGhpcy4kcGFyZW50Lm1heDt9LG1pbjpmdW5jdGlvbiBtaW4oKXtyZXR1cm4gdGhpcy4kcGFyZW50Lm1pbjt9LHN0ZXA6ZnVuY3Rpb24gc3RlcCgpe3JldHVybiB0aGlzLiRwYXJlbnQuc3RlcDt9LHNob3dUb29sdGlwOmZ1bmN0aW9uIHNob3dUb29sdGlwKCl7cmV0dXJuIHRoaXMuJHBhcmVudC5zaG93VG9vbHRpcDt9LHByZWNpc2lvbjpmdW5jdGlvbiBwcmVjaXNpb24oKXtyZXR1cm4gdGhpcy4kcGFyZW50LnByZWNpc2lvbjt9LGN1cnJlbnRQb3NpdGlvbjpmdW5jdGlvbiBjdXJyZW50UG9zaXRpb24oKXtyZXR1cm4odGhpcy52YWx1ZS10aGlzLm1pbikvKHRoaXMubWF4LXRoaXMubWluKSoxMDArJyUnO30sZW5hYmxlRm9ybWF0OmZ1bmN0aW9uIGVuYWJsZUZvcm1hdCgpe3JldHVybiB0aGlzLiRwYXJlbnQuZm9ybWF0VG9vbHRpcCBpbnN0YW5jZW9mIEZ1bmN0aW9uO30sZm9ybWF0VmFsdWU6ZnVuY3Rpb24gZm9ybWF0VmFsdWUoKXtyZXR1cm4gdGhpcy5lbmFibGVGb3JtYXQmJnRoaXMuJHBhcmVudC5mb3JtYXRUb29sdGlwKHRoaXMudmFsdWUpfHx0aGlzLnZhbHVlO30sd3JhcHBlclN0eWxlOmZ1bmN0aW9uIHdyYXBwZXJTdHlsZSgpe3JldHVybiB0aGlzLnZlcnRpY2FsP3tib3R0b206dGhpcy5jdXJyZW50UG9zaXRpb259OntsZWZ0OnRoaXMuY3VycmVudFBvc2l0aW9ufTt9fSx3YXRjaDp7ZHJhZ2dpbmc6ZnVuY3Rpb24gZHJhZ2dpbmcodmFsKXt0aGlzLiRwYXJlbnQuZHJhZ2dpbmc9dmFsO319LG1ldGhvZHM6e2Rpc3BsYXlUb29sdGlwOmZ1bmN0aW9uIGRpc3BsYXlUb29sdGlwKCl7dGhpcy4kcmVmcy50b29sdGlwJiYodGhpcy4kcmVmcy50b29sdGlwLnNob3dQb3BwZXI9dHJ1ZSk7fSxoaWRlVG9vbHRpcDpmdW5jdGlvbiBoaWRlVG9vbHRpcCgpe3RoaXMuJHJlZnMudG9vbHRpcCYmKHRoaXMuJHJlZnMudG9vbHRpcC5zaG93UG9wcGVyPWZhbHNlKTt9LGhhbmRsZU1vdXNlRW50ZXI6ZnVuY3Rpb24gaGFuZGxlTW91c2VFbnRlcigpe3RoaXMuaG92ZXJpbmc9dHJ1ZTt0aGlzLmRpc3BsYXlUb29sdGlwKCk7fSxoYW5kbGVNb3VzZUxlYXZlOmZ1bmN0aW9uIGhhbmRsZU1vdXNlTGVhdmUoKXt0aGlzLmhvdmVyaW5nPWZhbHNlO3RoaXMuaGlkZVRvb2x0aXAoKTt9LG9uQnV0dG9uRG93bjpmdW5jdGlvbiBvbkJ1dHRvbkRvd24oZXZlbnQpe2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuO2V2ZW50LnByZXZlbnREZWZhdWx0KCk7dGhpcy5vbkRyYWdTdGFydChldmVudCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsdGhpcy5vbkRyYWdnaW5nKTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJyx0aGlzLm9uRHJhZ2dpbmcpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJyx0aGlzLm9uRHJhZ0VuZCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJyx0aGlzLm9uRHJhZ0VuZCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51Jyx0aGlzLm9uRHJhZ0VuZCk7fSxvbkxlZnRLZXlEb3duOmZ1bmN0aW9uIG9uTGVmdEtleURvd24oKXtpZih0aGlzLmRpc2FibGVkKXJldHVybjt0aGlzLm5ld1Bvc2l0aW9uPXBhcnNlRmxvYXQodGhpcy5jdXJyZW50UG9zaXRpb24pLXRoaXMuc3RlcC8odGhpcy5tYXgtdGhpcy5taW4pKjEwMDt0aGlzLnNldFBvc2l0aW9uKHRoaXMubmV3UG9zaXRpb24pO3RoaXMuJHBhcmVudC5lbWl0Q2hhbmdlKCk7fSxvblJpZ2h0S2V5RG93bjpmdW5jdGlvbiBvblJpZ2h0S2V5RG93bigpe2lmKHRoaXMuZGlzYWJsZWQpcmV0dXJuO3RoaXMubmV3UG9zaXRpb249cGFyc2VGbG9hdCh0aGlzLmN1cnJlbnRQb3NpdGlvbikrdGhpcy5zdGVwLyh0aGlzLm1heC10aGlzLm1pbikqMTAwO3RoaXMuc2V0UG9zaXRpb24odGhpcy5uZXdQb3NpdGlvbik7dGhpcy4kcGFyZW50LmVtaXRDaGFuZ2UoKTt9LG9uRHJhZ1N0YXJ0OmZ1bmN0aW9uIG9uRHJhZ1N0YXJ0KGV2ZW50KXt0aGlzLmRyYWdnaW5nPXRydWU7dGhpcy5pc0NsaWNrPXRydWU7aWYoZXZlbnQudHlwZT09PSd0b3VjaHN0YXJ0Jyl7ZXZlbnQuY2xpZW50WT1ldmVudC50b3VjaGVzWzBdLmNsaWVudFk7ZXZlbnQuY2xpZW50WD1ldmVudC50b3VjaGVzWzBdLmNsaWVudFg7fWlmKHRoaXMudmVydGljYWwpe3RoaXMuc3RhcnRZPWV2ZW50LmNsaWVudFk7fWVsc2V7dGhpcy5zdGFydFg9ZXZlbnQuY2xpZW50WDt9dGhpcy5zdGFydFBvc2l0aW9uPXBhcnNlRmxvYXQodGhpcy5jdXJyZW50UG9zaXRpb24pO3RoaXMubmV3UG9zaXRpb249dGhpcy5zdGFydFBvc2l0aW9uO30sb25EcmFnZ2luZzpmdW5jdGlvbiBvbkRyYWdnaW5nKGV2ZW50KXtpZih0aGlzLmRyYWdnaW5nKXt0aGlzLmlzQ2xpY2s9ZmFsc2U7dGhpcy5kaXNwbGF5VG9vbHRpcCgpO3RoaXMuJHBhcmVudC5yZXNldFNpemUoKTt2YXIgZGlmZj0wO2lmKGV2ZW50LnR5cGU9PT0ndG91Y2htb3ZlJyl7ZXZlbnQuY2xpZW50WT1ldmVudC50b3VjaGVzWzBdLmNsaWVudFk7ZXZlbnQuY2xpZW50WD1ldmVudC50b3VjaGVzWzBdLmNsaWVudFg7fWlmKHRoaXMudmVydGljYWwpe3RoaXMuY3VycmVudFk9ZXZlbnQuY2xpZW50WTtkaWZmPSh0aGlzLnN0YXJ0WS10aGlzLmN1cnJlbnRZKS90aGlzLiRwYXJlbnQuc2xpZGVyU2l6ZSoxMDA7fWVsc2V7dGhpcy5jdXJyZW50WD1ldmVudC5jbGllbnRYO2RpZmY9KHRoaXMuY3VycmVudFgtdGhpcy5zdGFydFgpL3RoaXMuJHBhcmVudC5zbGlkZXJTaXplKjEwMDt9dGhpcy5uZXdQb3NpdGlvbj10aGlzLnN0YXJ0UG9zaXRpb24rZGlmZjt0aGlzLnNldFBvc2l0aW9uKHRoaXMubmV3UG9zaXRpb24pO319LG9uRHJhZ0VuZDpmdW5jdGlvbiBvbkRyYWdFbmQoKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLmRyYWdnaW5nKXsvKgogICAgICAgICAqIOmYsuatouWcqCBtb3VzZXVwIOWQjueri+WNs+inpuWPkSBjbGlja++8jOWvvOiHtOa7keWdl+acieWHoOeOh+S6p+eUn+S4gOWwj+auteS9jeenuwogICAgICAgICAqIOS4jeS9v+eUqCBwcmV2ZW50RGVmYXVsdCDmmK/lm6DkuLogbW91c2V1cCDlkowgY2xpY2sg5rKh5pyJ5rOo5YaM5Zyo5ZCM5LiA5LiqIERPTSDkuIoKICAgICAgICAgKi9zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7X3RoaXMuZHJhZ2dpbmc9ZmFsc2U7X3RoaXMuaGlkZVRvb2x0aXAoKTtpZighX3RoaXMuaXNDbGljayl7X3RoaXMuc2V0UG9zaXRpb24oX3RoaXMubmV3UG9zaXRpb24pO190aGlzLiRwYXJlbnQuZW1pdENoYW5nZSgpO319LDApO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLHRoaXMub25EcmFnZ2luZyk7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsdGhpcy5vbkRyYWdnaW5nKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsdGhpcy5vbkRyYWdFbmQpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsdGhpcy5vbkRyYWdFbmQpO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdjb250ZXh0bWVudScsdGhpcy5vbkRyYWdFbmQpO319LHNldFBvc2l0aW9uOmZ1bmN0aW9uIHNldFBvc2l0aW9uKG5ld1Bvc2l0aW9uKXt2YXIgX3RoaXMyPXRoaXM7aWYobmV3UG9zaXRpb249PT1udWxsfHxpc05hTihuZXdQb3NpdGlvbikpcmV0dXJuO2lmKG5ld1Bvc2l0aW9uPDApe25ld1Bvc2l0aW9uPTA7fWVsc2UgaWYobmV3UG9zaXRpb24+MTAwKXtuZXdQb3NpdGlvbj0xMDA7fXZhciBsZW5ndGhQZXJTdGVwPTEwMC8oKHRoaXMubWF4LXRoaXMubWluKS90aGlzLnN0ZXApO3ZhciBzdGVwcz1NYXRoLnJvdW5kKG5ld1Bvc2l0aW9uL2xlbmd0aFBlclN0ZXApO3ZhciB2YWx1ZT1zdGVwcypsZW5ndGhQZXJTdGVwKih0aGlzLm1heC10aGlzLm1pbikqMC4wMSt0aGlzLm1pbjt2YWx1ZT1wYXJzZUZsb2F0KHZhbHVlLnRvRml4ZWQodGhpcy5wcmVjaXNpb24pKTt0aGlzLiRlbWl0KCdpbnB1dCcsdmFsdWUpO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7X3RoaXMyLmRpc3BsYXlUb29sdGlwKCk7X3RoaXMyLiRyZWZzLnRvb2x0aXAmJl90aGlzMi4kcmVmcy50b29sdGlwLnVwZGF0ZVBvcHBlcigpO30pO2lmKCF0aGlzLmRyYWdnaW5nJiZ0aGlzLnZhbHVlIT09dGhpcy5vbGRWYWx1ZSl7dGhpcy5vbGRWYWx1ZT10aGlzLnZhbHVlO319fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zbGlkZXIvc3JjL2J1dHRvbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfc2xpZGVyX3NyY19idXR0b252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189c2xpZGVyX3NyY19idXR0b252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zbGlkZXIvc3JjL2J1dHRvbi52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBzcmNfYnV0dG9uX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQocGFja2FnZXNfc2xpZGVyX3NyY19idXR0b252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sYnV0dG9udnVlX3R5cGVfdGVtcGxhdGVfaWRfZTcyZDJhZDJfcmVuZGVyLGJ1dHRvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2U3MmQyYWQyX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgc3JjX2J1dHRvbl9hcGk7fXNyY19idXR0b25fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9zbGlkZXIvc3JjL2J1dHRvbi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc2xpZGVyX3NyY19idXR0b249c3JjX2J1dHRvbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NsaWRlci9zcmMvbWFya2VyLmpzCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbWFya2VyPXtuYW1lOidFbE1hcmtlcicscHJvcHM6e21hcms6e3R5cGU6W1N0cmluZyxPYmplY3RdfX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcigpe3ZhciBoPWFyZ3VtZW50c1swXTt2YXIgbGFiZWw9dHlwZW9mIHRoaXMubWFyaz09PSdzdHJpbmcnP3RoaXMubWFyazp0aGlzLm1hcmsubGFiZWw7cmV0dXJuIGgoJ2RpdicseydjbGFzcyc6J2VsLXNsaWRlcl9fbWFya3MtdGV4dCcsc3R5bGU6dGhpcy5tYXJrLnN0eWxlfHx7fX0sW2xhYmVsXSk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvc2xpZGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzbGlkZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsU2xpZGVyJyxtaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hXSxpbmplY3Q6e2VsRm9ybTp7ZGVmYXVsdDonJ319LHByb3BzOnttaW46e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MH0sbWF4Ont0eXBlOk51bWJlcixkZWZhdWx0OjEwMH0sc3RlcDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxfSx2YWx1ZTp7dHlwZTpbTnVtYmVyLEFycmF5XSxkZWZhdWx0OjB9LHNob3dJbnB1dDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LHNob3dJbnB1dENvbnRyb2xzOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxpbnB1dFNpemU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3NtYWxsJ30sc2hvd1N0b3BzOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0sc2hvd1Rvb2x0aXA6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGZvcm1hdFRvb2x0aXA6RnVuY3Rpb24sZGlzYWJsZWQ6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxyYW5nZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LHZlcnRpY2FsOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0saGVpZ2h0Ont0eXBlOlN0cmluZ30sZGVib3VuY2U6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MzAwfSxsYWJlbDp7dHlwZTpTdHJpbmd9LHRvb2x0aXBDbGFzczpTdHJpbmcsbWFya3M6T2JqZWN0fSxjb21wb25lbnRzOntFbElucHV0TnVtYmVyOmlucHV0X251bWJlcl9kZWZhdWx0LmEsU2xpZGVyQnV0dG9uOnNsaWRlcl9zcmNfYnV0dG9uLFNsaWRlck1hcmtlcjptYXJrZXJ9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntmaXJzdFZhbHVlOm51bGwsc2Vjb25kVmFsdWU6bnVsbCxvbGRWYWx1ZTpudWxsLGRyYWdnaW5nOmZhbHNlLHNsaWRlclNpemU6MX07fSx3YXRjaDp7dmFsdWU6ZnVuY3Rpb24gdmFsdWUodmFsLG9sZFZhbCl7aWYodGhpcy5kcmFnZ2luZ3x8QXJyYXkuaXNBcnJheSh2YWwpJiZBcnJheS5pc0FycmF5KG9sZFZhbCkmJnZhbC5ldmVyeShmdW5jdGlvbihpdGVtLGluZGV4KXtyZXR1cm4gaXRlbT09PW9sZFZhbFtpbmRleF07fSkpe3JldHVybjt9dGhpcy5zZXRWYWx1ZXMoKTt9LGRyYWdnaW5nOmZ1bmN0aW9uIGRyYWdnaW5nKHZhbCl7aWYoIXZhbCl7dGhpcy5zZXRWYWx1ZXMoKTt9fSxmaXJzdFZhbHVlOmZ1bmN0aW9uIGZpcnN0VmFsdWUodmFsKXtpZih0aGlzLnJhbmdlKXt0aGlzLiRlbWl0KCdpbnB1dCcsW3RoaXMubWluVmFsdWUsdGhpcy5tYXhWYWx1ZV0pO31lbHNle3RoaXMuJGVtaXQoJ2lucHV0Jyx2YWwpO319LHNlY29uZFZhbHVlOmZ1bmN0aW9uIHNlY29uZFZhbHVlKCl7aWYodGhpcy5yYW5nZSl7dGhpcy4kZW1pdCgnaW5wdXQnLFt0aGlzLm1pblZhbHVlLHRoaXMubWF4VmFsdWVdKTt9fSxtaW46ZnVuY3Rpb24gbWluKCl7dGhpcy5zZXRWYWx1ZXMoKTt9LG1heDpmdW5jdGlvbiBtYXgoKXt0aGlzLnNldFZhbHVlcygpO319LG1ldGhvZHM6e3ZhbHVlQ2hhbmdlZDpmdW5jdGlvbiB2YWx1ZUNoYW5nZWQoKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLnJhbmdlKXtyZXR1cm4hW3RoaXMubWluVmFsdWUsdGhpcy5tYXhWYWx1ZV0uZXZlcnkoZnVuY3Rpb24oaXRlbSxpbmRleCl7cmV0dXJuIGl0ZW09PT1fdGhpcy5vbGRWYWx1ZVtpbmRleF07fSk7fWVsc2V7cmV0dXJuIHRoaXMudmFsdWUhPT10aGlzLm9sZFZhbHVlO319LHNldFZhbHVlczpmdW5jdGlvbiBzZXRWYWx1ZXMoKXtpZih0aGlzLm1pbj50aGlzLm1heCl7Y29uc29sZS5lcnJvcignW0VsZW1lbnQgRXJyb3JdW1NsaWRlcl1taW4gc2hvdWxkIG5vdCBiZSBncmVhdGVyIHRoYW4gbWF4LicpO3JldHVybjt9dmFyIHZhbD10aGlzLnZhbHVlO2lmKHRoaXMucmFuZ2UmJkFycmF5LmlzQXJyYXkodmFsKSl7aWYodmFsWzFdPHRoaXMubWluKXt0aGlzLiRlbWl0KCdpbnB1dCcsW3RoaXMubWluLHRoaXMubWluXSk7fWVsc2UgaWYodmFsWzBdPnRoaXMubWF4KXt0aGlzLiRlbWl0KCdpbnB1dCcsW3RoaXMubWF4LHRoaXMubWF4XSk7fWVsc2UgaWYodmFsWzBdPHRoaXMubWluKXt0aGlzLiRlbWl0KCdpbnB1dCcsW3RoaXMubWluLHZhbFsxXV0pO31lbHNlIGlmKHZhbFsxXT50aGlzLm1heCl7dGhpcy4kZW1pdCgnaW5wdXQnLFt2YWxbMF0sdGhpcy5tYXhdKTt9ZWxzZXt0aGlzLmZpcnN0VmFsdWU9dmFsWzBdO3RoaXMuc2Vjb25kVmFsdWU9dmFsWzFdO2lmKHRoaXMudmFsdWVDaGFuZ2VkKCkpe3RoaXMuZGlzcGF0Y2goJ0VsRm9ybUl0ZW0nLCdlbC5mb3JtLmNoYW5nZScsW3RoaXMubWluVmFsdWUsdGhpcy5tYXhWYWx1ZV0pO3RoaXMub2xkVmFsdWU9dmFsLnNsaWNlKCk7fX19ZWxzZSBpZighdGhpcy5yYW5nZSYmdHlwZW9mIHZhbD09PSdudW1iZXInJiYhaXNOYU4odmFsKSl7aWYodmFsPHRoaXMubWluKXt0aGlzLiRlbWl0KCdpbnB1dCcsdGhpcy5taW4pO31lbHNlIGlmKHZhbD50aGlzLm1heCl7dGhpcy4kZW1pdCgnaW5wdXQnLHRoaXMubWF4KTt9ZWxzZXt0aGlzLmZpcnN0VmFsdWU9dmFsO2lmKHRoaXMudmFsdWVDaGFuZ2VkKCkpe3RoaXMuZGlzcGF0Y2goJ0VsRm9ybUl0ZW0nLCdlbC5mb3JtLmNoYW5nZScsdmFsKTt0aGlzLm9sZFZhbHVlPXZhbDt9fX19LHNldFBvc2l0aW9uOmZ1bmN0aW9uIHNldFBvc2l0aW9uKHBlcmNlbnQpe3ZhciB0YXJnZXRWYWx1ZT10aGlzLm1pbitwZXJjZW50Kih0aGlzLm1heC10aGlzLm1pbikvMTAwO2lmKCF0aGlzLnJhbmdlKXt0aGlzLiRyZWZzLmJ1dHRvbjEuc2V0UG9zaXRpb24ocGVyY2VudCk7cmV0dXJuO312YXIgYnV0dG9uPXZvaWQgMDtpZihNYXRoLmFicyh0aGlzLm1pblZhbHVlLXRhcmdldFZhbHVlKTxNYXRoLmFicyh0aGlzLm1heFZhbHVlLXRhcmdldFZhbHVlKSl7YnV0dG9uPXRoaXMuZmlyc3RWYWx1ZTx0aGlzLnNlY29uZFZhbHVlPydidXR0b24xJzonYnV0dG9uMic7fWVsc2V7YnV0dG9uPXRoaXMuZmlyc3RWYWx1ZT50aGlzLnNlY29uZFZhbHVlPydidXR0b24xJzonYnV0dG9uMic7fXRoaXMuJHJlZnNbYnV0dG9uXS5zZXRQb3NpdGlvbihwZXJjZW50KTt9LG9uU2xpZGVyQ2xpY2s6ZnVuY3Rpb24gb25TbGlkZXJDbGljayhldmVudCl7aWYodGhpcy5zbGlkZXJEaXNhYmxlZHx8dGhpcy5kcmFnZ2luZylyZXR1cm47dGhpcy5yZXNldFNpemUoKTtpZih0aGlzLnZlcnRpY2FsKXt2YXIgc2xpZGVyT2Zmc2V0Qm90dG9tPXRoaXMuJHJlZnMuc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmJvdHRvbTt0aGlzLnNldFBvc2l0aW9uKChzbGlkZXJPZmZzZXRCb3R0b20tZXZlbnQuY2xpZW50WSkvdGhpcy5zbGlkZXJTaXplKjEwMCk7fWVsc2V7dmFyIHNsaWRlck9mZnNldExlZnQ9dGhpcy4kcmVmcy5zbGlkZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdDt0aGlzLnNldFBvc2l0aW9uKChldmVudC5jbGllbnRYLXNsaWRlck9mZnNldExlZnQpL3RoaXMuc2xpZGVyU2l6ZSoxMDApO310aGlzLmVtaXRDaGFuZ2UoKTt9LHJlc2V0U2l6ZTpmdW5jdGlvbiByZXNldFNpemUoKXtpZih0aGlzLiRyZWZzLnNsaWRlcil7dGhpcy5zbGlkZXJTaXplPXRoaXMuJHJlZnMuc2xpZGVyWydjbGllbnQnKyh0aGlzLnZlcnRpY2FsPydIZWlnaHQnOidXaWR0aCcpXTt9fSxlbWl0Q2hhbmdlOmZ1bmN0aW9uIGVtaXRDaGFuZ2UoKXt2YXIgX3RoaXMyPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpczIuJGVtaXQoJ2NoYW5nZScsX3RoaXMyLnJhbmdlP1tfdGhpczIubWluVmFsdWUsX3RoaXMyLm1heFZhbHVlXTpfdGhpczIudmFsdWUpO30pO30sZ2V0U3RvcFN0eWxlOmZ1bmN0aW9uIGdldFN0b3BTdHlsZShwb3NpdGlvbil7cmV0dXJuIHRoaXMudmVydGljYWw/eydib3R0b20nOnBvc2l0aW9uKyclJ306eydsZWZ0Jzpwb3NpdGlvbisnJSd9O319LGNvbXB1dGVkOntzdG9wczpmdW5jdGlvbiBzdG9wcygpe3ZhciBfdGhpczM9dGhpcztpZighdGhpcy5zaG93U3RvcHN8fHRoaXMubWluPnRoaXMubWF4KXJldHVybltdO2lmKHRoaXMuc3RlcD09PTApe2ZhbHNlJiZmYWxzZTtyZXR1cm5bXTt9dmFyIHN0b3BDb3VudD0odGhpcy5tYXgtdGhpcy5taW4pL3RoaXMuc3RlcDt2YXIgc3RlcFdpZHRoPTEwMCp0aGlzLnN0ZXAvKHRoaXMubWF4LXRoaXMubWluKTt2YXIgcmVzdWx0PVtdO2Zvcih2YXIgaT0xO2k8c3RvcENvdW50O2krKyl7cmVzdWx0LnB1c2goaSpzdGVwV2lkdGgpO31pZih0aGlzLnJhbmdlKXtyZXR1cm4gcmVzdWx0LmZpbHRlcihmdW5jdGlvbihzdGVwKXtyZXR1cm4gc3RlcDwxMDAqKF90aGlzMy5taW5WYWx1ZS1fdGhpczMubWluKS8oX3RoaXMzLm1heC1fdGhpczMubWluKXx8c3RlcD4xMDAqKF90aGlzMy5tYXhWYWx1ZS1fdGhpczMubWluKS8oX3RoaXMzLm1heC1fdGhpczMubWluKTt9KTt9ZWxzZXtyZXR1cm4gcmVzdWx0LmZpbHRlcihmdW5jdGlvbihzdGVwKXtyZXR1cm4gc3RlcD4xMDAqKF90aGlzMy5maXJzdFZhbHVlLV90aGlzMy5taW4pLyhfdGhpczMubWF4LV90aGlzMy5taW4pO30pO319LG1hcmtMaXN0OmZ1bmN0aW9uIG1hcmtMaXN0KCl7dmFyIF90aGlzND10aGlzO2lmKCF0aGlzLm1hcmtzKXtyZXR1cm5bXTt9dmFyIG1hcmtzS2V5cz1PYmplY3Qua2V5cyh0aGlzLm1hcmtzKTtyZXR1cm4gbWFya3NLZXlzLm1hcChwYXJzZUZsb2F0KS5zb3J0KGZ1bmN0aW9uKGEsYil7cmV0dXJuIGEtYjt9KS5maWx0ZXIoZnVuY3Rpb24ocG9pbnQpe3JldHVybiBwb2ludDw9X3RoaXM0Lm1heCYmcG9pbnQ+PV90aGlzNC5taW47fSkubWFwKGZ1bmN0aW9uKHBvaW50KXtyZXR1cm57cG9pbnQ6cG9pbnQscG9zaXRpb246KHBvaW50LV90aGlzNC5taW4pKjEwMC8oX3RoaXM0Lm1heC1fdGhpczQubWluKSxtYXJrOl90aGlzNC5tYXJrc1twb2ludF19O30pO30sbWluVmFsdWU6ZnVuY3Rpb24gbWluVmFsdWUoKXtyZXR1cm4gTWF0aC5taW4odGhpcy5maXJzdFZhbHVlLHRoaXMuc2Vjb25kVmFsdWUpO30sbWF4VmFsdWU6ZnVuY3Rpb24gbWF4VmFsdWUoKXtyZXR1cm4gTWF0aC5tYXgodGhpcy5maXJzdFZhbHVlLHRoaXMuc2Vjb25kVmFsdWUpO30sYmFyU2l6ZTpmdW5jdGlvbiBiYXJTaXplKCl7cmV0dXJuIHRoaXMucmFuZ2U/MTAwKih0aGlzLm1heFZhbHVlLXRoaXMubWluVmFsdWUpLyh0aGlzLm1heC10aGlzLm1pbikrJyUnOjEwMCoodGhpcy5maXJzdFZhbHVlLXRoaXMubWluKS8odGhpcy5tYXgtdGhpcy5taW4pKyclJzt9LGJhclN0YXJ0OmZ1bmN0aW9uIGJhclN0YXJ0KCl7cmV0dXJuIHRoaXMucmFuZ2U/MTAwKih0aGlzLm1pblZhbHVlLXRoaXMubWluKS8odGhpcy5tYXgtdGhpcy5taW4pKyclJzonMCUnO30scHJlY2lzaW9uOmZ1bmN0aW9uIHByZWNpc2lvbigpe3ZhciBwcmVjaXNpb25zPVt0aGlzLm1pbix0aGlzLm1heCx0aGlzLnN0ZXBdLm1hcChmdW5jdGlvbihpdGVtKXt2YXIgZGVjaW1hbD0oJycraXRlbSkuc3BsaXQoJy4nKVsxXTtyZXR1cm4gZGVjaW1hbD9kZWNpbWFsLmxlbmd0aDowO30pO3JldHVybiBNYXRoLm1heC5hcHBseShudWxsLHByZWNpc2lvbnMpO30scnVud2F5U3R5bGU6ZnVuY3Rpb24gcnVud2F5U3R5bGUoKXtyZXR1cm4gdGhpcy52ZXJ0aWNhbD97aGVpZ2h0OnRoaXMuaGVpZ2h0fTp7fTt9LGJhclN0eWxlOmZ1bmN0aW9uIGJhclN0eWxlKCl7cmV0dXJuIHRoaXMudmVydGljYWw/e2hlaWdodDp0aGlzLmJhclNpemUsYm90dG9tOnRoaXMuYmFyU3RhcnR9Ont3aWR0aDp0aGlzLmJhclNpemUsbGVmdDp0aGlzLmJhclN0YXJ0fTt9LHNsaWRlckRpc2FibGVkOmZ1bmN0aW9uIHNsaWRlckRpc2FibGVkKCl7cmV0dXJuIHRoaXMuZGlzYWJsZWR8fCh0aGlzLmVsRm9ybXx8e30pLmRpc2FibGVkO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciB2YWx1ZXRleHQ9dm9pZCAwO2lmKHRoaXMucmFuZ2Upe2lmKEFycmF5LmlzQXJyYXkodGhpcy52YWx1ZSkpe3RoaXMuZmlyc3RWYWx1ZT1NYXRoLm1heCh0aGlzLm1pbix0aGlzLnZhbHVlWzBdKTt0aGlzLnNlY29uZFZhbHVlPU1hdGgubWluKHRoaXMubWF4LHRoaXMudmFsdWVbMV0pO31lbHNle3RoaXMuZmlyc3RWYWx1ZT10aGlzLm1pbjt0aGlzLnNlY29uZFZhbHVlPXRoaXMubWF4O310aGlzLm9sZFZhbHVlPVt0aGlzLmZpcnN0VmFsdWUsdGhpcy5zZWNvbmRWYWx1ZV07dmFsdWV0ZXh0PXRoaXMuZmlyc3RWYWx1ZSsnLScrdGhpcy5zZWNvbmRWYWx1ZTt9ZWxzZXtpZih0eXBlb2YgdGhpcy52YWx1ZSE9PSdudW1iZXInfHxpc05hTih0aGlzLnZhbHVlKSl7dGhpcy5maXJzdFZhbHVlPXRoaXMubWluO31lbHNle3RoaXMuZmlyc3RWYWx1ZT1NYXRoLm1pbih0aGlzLm1heCxNYXRoLm1heCh0aGlzLm1pbix0aGlzLnZhbHVlKSk7fXRoaXMub2xkVmFsdWU9dGhpcy5maXJzdFZhbHVlO3ZhbHVldGV4dD10aGlzLmZpcnN0VmFsdWU7fXRoaXMuJGVsLnNldEF0dHJpYnV0ZSgnYXJpYS12YWx1ZXRleHQnLHZhbHVldGV4dCk7Ly8gbGFiZWwgc2NyZWVuIHJlYWRlcgp0aGlzLiRlbC5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLHRoaXMubGFiZWw/dGhpcy5sYWJlbDonc2xpZGVyIGJldHdlZW4gJyt0aGlzLm1pbisnIGFuZCAnK3RoaXMubWF4KTt0aGlzLnJlc2V0U2l6ZSgpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLHRoaXMucmVzZXRTaXplKTt9LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpe3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLHRoaXMucmVzZXRTaXplKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NsaWRlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfc2xpZGVyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXNsaWRlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NsaWRlci9zcmMvbWFpbi52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBzbGlkZXJfc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19zbGlkZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzMyNzA4NjQ0X3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMzI3MDg2NDRfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBzbGlkZXJfc3JjX21haW5fYXBpO31zbGlkZXJfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9zbGlkZXIvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNsaWRlcl9zcmNfbWFpbj1zbGlkZXJfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zbGlkZXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9zbGlkZXJfc3JjX21haW4uaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoc2xpZGVyX3NyY19tYWluLm5hbWUsc2xpZGVyX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc2xpZGVyPXNsaWRlcl9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2xvYWRpbmcvc3JjL2xvYWRpbmcudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWVlZTBhN2FjJgp2YXIgbG9hZGluZ3Z1ZV90eXBlX3RlbXBsYXRlX2lkX2VlZTBhN2FjX3JlbmRlcj1mdW5jdGlvbiBsb2FkaW5ndnVlX3R5cGVfdGVtcGxhdGVfaWRfZWVlMGE3YWNfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJ0cmFuc2l0aW9uIix7YXR0cnM6e25hbWU6ImVsLWxvYWRpbmctZmFkZSJ9LG9uOnsiYWZ0ZXItbGVhdmUiOl92bS5oYW5kbGVBZnRlckxlYXZlfX0sW19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0udmlzaWJsZSxleHByZXNzaW9uOiJ2aXNpYmxlIn1dLHN0YXRpY0NsYXNzOiJlbC1sb2FkaW5nLW1hc2siLGNsYXNzOltfdm0uY3VzdG9tQ2xhc3MseyJpcy1mdWxsc2NyZWVuIjpfdm0uZnVsbHNjcmVlbn1dLHN0eWxlOntiYWNrZ3JvdW5kQ29sb3I6X3ZtLmJhY2tncm91bmR8fCIifX0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtbG9hZGluZy1zcGlubmVyIn0sWyFfdm0uc3Bpbm5lcj9fYygic3ZnIix7c3RhdGljQ2xhc3M6ImNpcmN1bGFyIixhdHRyczp7dmlld0JveDoiMjUgMjUgNTAgNTAifX0sW19jKCJjaXJjbGUiLHtzdGF0aWNDbGFzczoicGF0aCIsYXR0cnM6e2N4OiI1MCIsY3k6IjUwIixyOiIyMCIsZmlsbDoibm9uZSJ9fSldKTpfYygiaSIse2NsYXNzOl92bS5zcGlubmVyfSksX3ZtLnRleHQ/X2MoInAiLHtzdGF0aWNDbGFzczoiZWwtbG9hZGluZy10ZXh0In0sW192bS5fdihfdm0uX3MoX3ZtLnRleHQpKV0pOl92bS5fZSgpXSldKV0pO307dmFyIGxvYWRpbmd2dWVfdHlwZV90ZW1wbGF0ZV9pZF9lZWUwYTdhY19zdGF0aWNSZW5kZXJGbnM9W107bG9hZGluZ3Z1ZV90eXBlX3RlbXBsYXRlX2lkX2VlZTBhN2FjX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9sb2FkaW5nL3NyYy9sb2FkaW5nLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1lZWUwYTdhYyYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvbG9hZGluZy9zcmMvbG9hZGluZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbG9hZGluZ3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17ZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3RleHQ6bnVsbCxzcGlubmVyOm51bGwsYmFja2dyb3VuZDpudWxsLGZ1bGxzY3JlZW46dHJ1ZSx2aXNpYmxlOmZhbHNlLGN1c3RvbUNsYXNzOicnfTt9LG1ldGhvZHM6e2hhbmRsZUFmdGVyTGVhdmU6ZnVuY3Rpb24gaGFuZGxlQWZ0ZXJMZWF2ZSgpe3RoaXMuJGVtaXQoJ2FmdGVyLWxlYXZlJyk7fSxzZXRUZXh0OmZ1bmN0aW9uIHNldFRleHQodGV4dCl7dGhpcy50ZXh0PXRleHQ7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbG9hZGluZy9zcmMvbG9hZGluZy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2xvYWRpbmd2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bG9hZGluZ3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2xvYWRpbmcvc3JjL2xvYWRpbmcudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgbG9hZGluZ19jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19sb2FkaW5ndnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLGxvYWRpbmd2dWVfdHlwZV90ZW1wbGF0ZV9pZF9lZWUwYTdhY19yZW5kZXIsbG9hZGluZ3Z1ZV90eXBlX3RlbXBsYXRlX2lkX2VlZTBhN2FjX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgbG9hZGluZ19hcGk7fWxvYWRpbmdfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9sb2FkaW5nL3NyYy9sb2FkaW5nLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBsb2FkaW5nPWxvYWRpbmdfY29tcG9uZW50LmV4cG9ydHM7Ly8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvdXRpbHMvYWZ0ZXItbGVhdmUiCnZhciBhZnRlcl9sZWF2ZV89X193ZWJwYWNrX3JlcXVpcmVfXygzMik7dmFyIGFmdGVyX2xlYXZlX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihhZnRlcl9sZWF2ZV8pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbG9hZGluZy9zcmMvZGlyZWN0aXZlLmpzCnZhciBNYXNrPWV4dGVybmFsX3Z1ZV9kZWZhdWx0LmEuZXh0ZW5kKGxvYWRpbmcpO3ZhciBsb2FkaW5nRGlyZWN0aXZlPXt9O2xvYWRpbmdEaXJlY3RpdmUuaW5zdGFsbD1mdW5jdGlvbihWdWUpe2lmKFZ1ZS5wcm90b3R5cGUuJGlzU2VydmVyKXJldHVybjt2YXIgdG9nZ2xlTG9hZGluZz1mdW5jdGlvbiB0b2dnbGVMb2FkaW5nKGVsLGJpbmRpbmcpe2lmKGJpbmRpbmcudmFsdWUpe1Z1ZS5uZXh0VGljayhmdW5jdGlvbigpe2lmKGJpbmRpbmcubW9kaWZpZXJzLmZ1bGxzY3JlZW4pe2VsLm9yaWdpbmFsUG9zaXRpb249T2JqZWN0KGRvbV9bImdldFN0eWxlIl0pKGRvY3VtZW50LmJvZHksJ3Bvc2l0aW9uJyk7ZWwub3JpZ2luYWxPdmVyZmxvdz1PYmplY3QoZG9tX1siZ2V0U3R5bGUiXSkoZG9jdW1lbnQuYm9keSwnb3ZlcmZsb3cnKTtlbC5tYXNrU3R5bGUuekluZGV4PXBvcHVwX1siUG9wdXBNYW5hZ2VyIl0ubmV4dFpJbmRleCgpO09iamVjdChkb21fWyJhZGRDbGFzcyJdKShlbC5tYXNrLCdpcy1mdWxsc2NyZWVuJyk7aW5zZXJ0RG9tKGRvY3VtZW50LmJvZHksZWwsYmluZGluZyk7fWVsc2V7T2JqZWN0KGRvbV9bInJlbW92ZUNsYXNzIl0pKGVsLm1hc2ssJ2lzLWZ1bGxzY3JlZW4nKTtpZihiaW5kaW5nLm1vZGlmaWVycy5ib2R5KXtlbC5vcmlnaW5hbFBvc2l0aW9uPU9iamVjdChkb21fWyJnZXRTdHlsZSJdKShkb2N1bWVudC5ib2R5LCdwb3NpdGlvbicpO1sndG9wJywnbGVmdCddLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHkpe3ZhciBzY3JvbGw9cHJvcGVydHk9PT0ndG9wJz8nc2Nyb2xsVG9wJzonc2Nyb2xsTGVmdCc7ZWwubWFza1N0eWxlW3Byb3BlcnR5XT1lbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVtwcm9wZXJ0eV0rZG9jdW1lbnQuYm9keVtzY3JvbGxdK2RvY3VtZW50LmRvY3VtZW50RWxlbWVudFtzY3JvbGxdLXBhcnNlSW50KE9iamVjdChkb21fWyJnZXRTdHlsZSJdKShkb2N1bWVudC5ib2R5LCdtYXJnaW4tJytwcm9wZXJ0eSksMTApKydweCc7fSk7WydoZWlnaHQnLCd3aWR0aCddLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHkpe2VsLm1hc2tTdHlsZVtwcm9wZXJ0eV09ZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClbcHJvcGVydHldKydweCc7fSk7aW5zZXJ0RG9tKGRvY3VtZW50LmJvZHksZWwsYmluZGluZyk7fWVsc2V7ZWwub3JpZ2luYWxQb3NpdGlvbj1PYmplY3QoZG9tX1siZ2V0U3R5bGUiXSkoZWwsJ3Bvc2l0aW9uJyk7aW5zZXJ0RG9tKGVsLGVsLGJpbmRpbmcpO319fSk7fWVsc2V7YWZ0ZXJfbGVhdmVfZGVmYXVsdCgpKGVsLmluc3RhbmNlLGZ1bmN0aW9uKF8pe2lmKCFlbC5pbnN0YW5jZS5oaWRpbmcpcmV0dXJuO2VsLmRvbVZpc2libGU9ZmFsc2U7dmFyIHRhcmdldD1iaW5kaW5nLm1vZGlmaWVycy5mdWxsc2NyZWVufHxiaW5kaW5nLm1vZGlmaWVycy5ib2R5P2RvY3VtZW50LmJvZHk6ZWw7T2JqZWN0KGRvbV9bInJlbW92ZUNsYXNzIl0pKHRhcmdldCwnZWwtbG9hZGluZy1wYXJlbnQtLXJlbGF0aXZlJyk7T2JqZWN0KGRvbV9bInJlbW92ZUNsYXNzIl0pKHRhcmdldCwnZWwtbG9hZGluZy1wYXJlbnQtLWhpZGRlbicpO2VsLmluc3RhbmNlLmhpZGluZz1mYWxzZTt9LDMwMCx0cnVlKTtlbC5pbnN0YW5jZS52aXNpYmxlPWZhbHNlO2VsLmluc3RhbmNlLmhpZGluZz10cnVlO319O3ZhciBpbnNlcnREb209ZnVuY3Rpb24gaW5zZXJ0RG9tKHBhcmVudCxlbCxiaW5kaW5nKXtpZighZWwuZG9tVmlzaWJsZSYmT2JqZWN0KGRvbV9bImdldFN0eWxlIl0pKGVsLCdkaXNwbGF5JykhPT0nbm9uZScmJk9iamVjdChkb21fWyJnZXRTdHlsZSJdKShlbCwndmlzaWJpbGl0eScpIT09J2hpZGRlbicpe09iamVjdC5rZXlzKGVsLm1hc2tTdHlsZSkuZm9yRWFjaChmdW5jdGlvbihwcm9wZXJ0eSl7ZWwubWFzay5zdHlsZVtwcm9wZXJ0eV09ZWwubWFza1N0eWxlW3Byb3BlcnR5XTt9KTtpZihlbC5vcmlnaW5hbFBvc2l0aW9uIT09J2Fic29sdXRlJyYmZWwub3JpZ2luYWxQb3NpdGlvbiE9PSdmaXhlZCcpe09iamVjdChkb21fWyJhZGRDbGFzcyJdKShwYXJlbnQsJ2VsLWxvYWRpbmctcGFyZW50LS1yZWxhdGl2ZScpO31pZihiaW5kaW5nLm1vZGlmaWVycy5mdWxsc2NyZWVuJiZiaW5kaW5nLm1vZGlmaWVycy5sb2NrKXtPYmplY3QoZG9tX1siYWRkQ2xhc3MiXSkocGFyZW50LCdlbC1sb2FkaW5nLXBhcmVudC0taGlkZGVuJyk7fWVsLmRvbVZpc2libGU9dHJ1ZTtwYXJlbnQuYXBwZW5kQ2hpbGQoZWwubWFzayk7VnVlLm5leHRUaWNrKGZ1bmN0aW9uKCl7aWYoZWwuaW5zdGFuY2UuaGlkaW5nKXtlbC5pbnN0YW5jZS4kZW1pdCgnYWZ0ZXItbGVhdmUnKTt9ZWxzZXtlbC5pbnN0YW5jZS52aXNpYmxlPXRydWU7fX0pO2VsLmRvbUluc2VydGVkPXRydWU7fWVsc2UgaWYoZWwuZG9tVmlzaWJsZSYmZWwuaW5zdGFuY2UuaGlkaW5nPT09dHJ1ZSl7ZWwuaW5zdGFuY2UudmlzaWJsZT10cnVlO2VsLmluc3RhbmNlLmhpZGluZz1mYWxzZTt9fTtWdWUuZGlyZWN0aXZlKCdsb2FkaW5nJyx7YmluZDpmdW5jdGlvbiBiaW5kKGVsLGJpbmRpbmcsdm5vZGUpe3ZhciB0ZXh0RXhyPWVsLmdldEF0dHJpYnV0ZSgnZWxlbWVudC1sb2FkaW5nLXRleHQnKTt2YXIgc3Bpbm5lckV4cj1lbC5nZXRBdHRyaWJ1dGUoJ2VsZW1lbnQtbG9hZGluZy1zcGlubmVyJyk7dmFyIGJhY2tncm91bmRFeHI9ZWwuZ2V0QXR0cmlidXRlKCdlbGVtZW50LWxvYWRpbmctYmFja2dyb3VuZCcpO3ZhciBjdXN0b21DbGFzc0V4cj1lbC5nZXRBdHRyaWJ1dGUoJ2VsZW1lbnQtbG9hZGluZy1jdXN0b20tY2xhc3MnKTt2YXIgdm09dm5vZGUuY29udGV4dDt2YXIgbWFzaz1uZXcgTWFzayh7ZWw6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksZGF0YTp7dGV4dDp2bSYmdm1bdGV4dEV4cl18fHRleHRFeHIsc3Bpbm5lcjp2bSYmdm1bc3Bpbm5lckV4cl18fHNwaW5uZXJFeHIsYmFja2dyb3VuZDp2bSYmdm1bYmFja2dyb3VuZEV4cl18fGJhY2tncm91bmRFeHIsY3VzdG9tQ2xhc3M6dm0mJnZtW2N1c3RvbUNsYXNzRXhyXXx8Y3VzdG9tQ2xhc3NFeHIsZnVsbHNjcmVlbjohIWJpbmRpbmcubW9kaWZpZXJzLmZ1bGxzY3JlZW59fSk7ZWwuaW5zdGFuY2U9bWFzaztlbC5tYXNrPW1hc2suJGVsO2VsLm1hc2tTdHlsZT17fTtiaW5kaW5nLnZhbHVlJiZ0b2dnbGVMb2FkaW5nKGVsLGJpbmRpbmcpO30sdXBkYXRlOmZ1bmN0aW9uIHVwZGF0ZShlbCxiaW5kaW5nKXtlbC5pbnN0YW5jZS5zZXRUZXh0KGVsLmdldEF0dHJpYnV0ZSgnZWxlbWVudC1sb2FkaW5nLXRleHQnKSk7aWYoYmluZGluZy5vbGRWYWx1ZSE9PWJpbmRpbmcudmFsdWUpe3RvZ2dsZUxvYWRpbmcoZWwsYmluZGluZyk7fX0sdW5iaW5kOmZ1bmN0aW9uIHVuYmluZChlbCxiaW5kaW5nKXtpZihlbC5kb21JbnNlcnRlZCl7ZWwubWFzayYmZWwubWFzay5wYXJlbnROb2RlJiZlbC5tYXNrLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWwubWFzayk7dG9nZ2xlTG9hZGluZyhlbCx7dmFsdWU6ZmFsc2UsbW9kaWZpZXJzOmJpbmRpbmcubW9kaWZpZXJzfSk7fWVsLmluc3RhbmNlJiZlbC5pbnN0YW5jZS4kZGVzdHJveSgpO319KTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2RpcmVjdGl2ZT1sb2FkaW5nRGlyZWN0aXZlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbG9hZGluZy9zcmMvaW5kZXguanMKdmFyIExvYWRpbmdDb25zdHJ1Y3Rvcj1leHRlcm5hbF92dWVfZGVmYXVsdC5hLmV4dGVuZChsb2FkaW5nKTt2YXIgc3JjX2RlZmF1bHRzPXt0ZXh0Om51bGwsZnVsbHNjcmVlbjp0cnVlLGJvZHk6ZmFsc2UsbG9jazpmYWxzZSxjdXN0b21DbGFzczonJ307dmFyIGZ1bGxzY3JlZW5Mb2FkaW5nPXZvaWQgMDtMb2FkaW5nQ29uc3RydWN0b3IucHJvdG90eXBlLm9yaWdpbmFsUG9zaXRpb249Jyc7TG9hZGluZ0NvbnN0cnVjdG9yLnByb3RvdHlwZS5vcmlnaW5hbE92ZXJmbG93PScnO0xvYWRpbmdDb25zdHJ1Y3Rvci5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLmZ1bGxzY3JlZW4pe2Z1bGxzY3JlZW5Mb2FkaW5nPXVuZGVmaW5lZDt9YWZ0ZXJfbGVhdmVfZGVmYXVsdCgpKHRoaXMsZnVuY3Rpb24oXyl7dmFyIHRhcmdldD1fdGhpcy5mdWxsc2NyZWVufHxfdGhpcy5ib2R5P2RvY3VtZW50LmJvZHk6X3RoaXMudGFyZ2V0O09iamVjdChkb21fWyJyZW1vdmVDbGFzcyJdKSh0YXJnZXQsJ2VsLWxvYWRpbmctcGFyZW50LS1yZWxhdGl2ZScpO09iamVjdChkb21fWyJyZW1vdmVDbGFzcyJdKSh0YXJnZXQsJ2VsLWxvYWRpbmctcGFyZW50LS1oaWRkZW4nKTtpZihfdGhpcy4kZWwmJl90aGlzLiRlbC5wYXJlbnROb2RlKXtfdGhpcy4kZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChfdGhpcy4kZWwpO31fdGhpcy4kZGVzdHJveSgpO30sMzAwKTt0aGlzLnZpc2libGU9ZmFsc2U7fTt2YXIgc3JjX2FkZFN0eWxlPWZ1bmN0aW9uIGFkZFN0eWxlKG9wdGlvbnMscGFyZW50LGluc3RhbmNlKXt2YXIgbWFza1N0eWxlPXt9O2lmKG9wdGlvbnMuZnVsbHNjcmVlbil7aW5zdGFuY2Uub3JpZ2luYWxQb3NpdGlvbj1PYmplY3QoZG9tX1siZ2V0U3R5bGUiXSkoZG9jdW1lbnQuYm9keSwncG9zaXRpb24nKTtpbnN0YW5jZS5vcmlnaW5hbE92ZXJmbG93PU9iamVjdChkb21fWyJnZXRTdHlsZSJdKShkb2N1bWVudC5ib2R5LCdvdmVyZmxvdycpO21hc2tTdHlsZS56SW5kZXg9cG9wdXBfWyJQb3B1cE1hbmFnZXIiXS5uZXh0WkluZGV4KCk7fWVsc2UgaWYob3B0aW9ucy5ib2R5KXtpbnN0YW5jZS5vcmlnaW5hbFBvc2l0aW9uPU9iamVjdChkb21fWyJnZXRTdHlsZSJdKShkb2N1bWVudC5ib2R5LCdwb3NpdGlvbicpO1sndG9wJywnbGVmdCddLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHkpe3ZhciBzY3JvbGw9cHJvcGVydHk9PT0ndG9wJz8nc2Nyb2xsVG9wJzonc2Nyb2xsTGVmdCc7bWFza1N0eWxlW3Byb3BlcnR5XT1vcHRpb25zLnRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVtwcm9wZXJ0eV0rZG9jdW1lbnQuYm9keVtzY3JvbGxdK2RvY3VtZW50LmRvY3VtZW50RWxlbWVudFtzY3JvbGxdKydweCc7fSk7WydoZWlnaHQnLCd3aWR0aCddLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHkpe21hc2tTdHlsZVtwcm9wZXJ0eV09b3B0aW9ucy50YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClbcHJvcGVydHldKydweCc7fSk7fWVsc2V7aW5zdGFuY2Uub3JpZ2luYWxQb3NpdGlvbj1PYmplY3QoZG9tX1siZ2V0U3R5bGUiXSkocGFyZW50LCdwb3NpdGlvbicpO31PYmplY3Qua2V5cyhtYXNrU3R5bGUpLmZvckVhY2goZnVuY3Rpb24ocHJvcGVydHkpe2luc3RhbmNlLiRlbC5zdHlsZVtwcm9wZXJ0eV09bWFza1N0eWxlW3Byb3BlcnR5XTt9KTt9O3ZhciBzcmNfTG9hZGluZz1mdW5jdGlvbiBMb2FkaW5nKCl7dmFyIG9wdGlvbnM9YXJndW1lbnRzLmxlbmd0aD4wJiZhcmd1bWVudHNbMF0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzBdOnt9O2lmKGV4dGVybmFsX3Z1ZV9kZWZhdWx0LmEucHJvdG90eXBlLiRpc1NlcnZlcilyZXR1cm47b3B0aW9ucz1tZXJnZV9kZWZhdWx0KCkoe30sc3JjX2RlZmF1bHRzLG9wdGlvbnMpO2lmKHR5cGVvZiBvcHRpb25zLnRhcmdldD09PSdzdHJpbmcnKXtvcHRpb25zLnRhcmdldD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKG9wdGlvbnMudGFyZ2V0KTt9b3B0aW9ucy50YXJnZXQ9b3B0aW9ucy50YXJnZXR8fGRvY3VtZW50LmJvZHk7aWYob3B0aW9ucy50YXJnZXQhPT1kb2N1bWVudC5ib2R5KXtvcHRpb25zLmZ1bGxzY3JlZW49ZmFsc2U7fWVsc2V7b3B0aW9ucy5ib2R5PXRydWU7fWlmKG9wdGlvbnMuZnVsbHNjcmVlbiYmZnVsbHNjcmVlbkxvYWRpbmcpe3JldHVybiBmdWxsc2NyZWVuTG9hZGluZzt9dmFyIHBhcmVudD1vcHRpb25zLmJvZHk/ZG9jdW1lbnQuYm9keTpvcHRpb25zLnRhcmdldDt2YXIgaW5zdGFuY2U9bmV3IExvYWRpbmdDb25zdHJ1Y3Rvcih7ZWw6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksZGF0YTpvcHRpb25zfSk7c3JjX2FkZFN0eWxlKG9wdGlvbnMscGFyZW50LGluc3RhbmNlKTtpZihpbnN0YW5jZS5vcmlnaW5hbFBvc2l0aW9uIT09J2Fic29sdXRlJyYmaW5zdGFuY2Uub3JpZ2luYWxQb3NpdGlvbiE9PSdmaXhlZCcpe09iamVjdChkb21fWyJhZGRDbGFzcyJdKShwYXJlbnQsJ2VsLWxvYWRpbmctcGFyZW50LS1yZWxhdGl2ZScpO31pZihvcHRpb25zLmZ1bGxzY3JlZW4mJm9wdGlvbnMubG9jayl7T2JqZWN0KGRvbV9bImFkZENsYXNzIl0pKHBhcmVudCwnZWwtbG9hZGluZy1wYXJlbnQtLWhpZGRlbicpO31wYXJlbnQuYXBwZW5kQ2hpbGQoaW5zdGFuY2UuJGVsKTtleHRlcm5hbF92dWVfZGVmYXVsdC5hLm5leHRUaWNrKGZ1bmN0aW9uKCl7aW5zdGFuY2UudmlzaWJsZT10cnVlO30pO2lmKG9wdGlvbnMuZnVsbHNjcmVlbil7ZnVsbHNjcmVlbkxvYWRpbmc9aW5zdGFuY2U7fXJldHVybiBpbnN0YW5jZTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjPXNyY19Mb2FkaW5nOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbG9hZGluZy9pbmRleC5qcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2xvYWRpbmc9e2luc3RhbGw6ZnVuY3Rpb24gaW5zdGFsbChWdWUpe1Z1ZS51c2Uoc3JjX2RpcmVjdGl2ZSk7VnVlLnByb3RvdHlwZS4kbG9hZGluZz1zcmM7fSxkaXJlY3RpdmU6c3JjX2RpcmVjdGl2ZSxzZXJ2aWNlOnNyY307Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9pY29uL3NyYy9pY29uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1jYjNmZTdmNCYKdmFyIGljb252dWVfdHlwZV90ZW1wbGF0ZV9pZF9jYjNmZTdmNF9yZW5kZXI9ZnVuY3Rpb24gaWNvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2NiM2ZlN2Y0X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiaSIse2NsYXNzOiJlbC1pY29uLSIrX3ZtLm5hbWV9KTt9O3ZhciBpY29udnVlX3R5cGVfdGVtcGxhdGVfaWRfY2IzZmU3ZjRfc3RhdGljUmVuZGVyRm5zPVtdO2ljb252dWVfdHlwZV90ZW1wbGF0ZV9pZF9jYjNmZTdmNF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvaWNvbi9zcmMvaWNvbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Y2IzZmU3ZjQmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2ljb24vc3JjL2ljb24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGljb252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsSWNvbicscHJvcHM6e25hbWU6U3RyaW5nfX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9pY29uL3NyYy9pY29uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfaWNvbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1pY29udnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvaWNvbi9zcmMvaWNvbi52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBpY29uX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2ljb252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18saWNvbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2NiM2ZlN2Y0X3JlbmRlcixpY29udnVlX3R5cGVfdGVtcGxhdGVfaWRfY2IzZmU3ZjRfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBpY29uX2FwaTt9aWNvbl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2ljb24vc3JjL2ljb24udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGljb249aWNvbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2ljb24vaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9pY29uLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGljb24ubmFtZSxpY29uKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfaWNvbj1pY29uOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcm93L3NyYy9yb3cuanMKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfcm93PXtuYW1lOidFbFJvdycsY29tcG9uZW50TmFtZTonRWxSb3cnLHByb3BzOnt0YWc6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2Rpdid9LGd1dHRlcjpOdW1iZXIsdHlwZTpTdHJpbmcsanVzdGlmeTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonc3RhcnQnfSxhbGlnbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDondG9wJ319LGNvbXB1dGVkOntzdHlsZTpmdW5jdGlvbiBzdHlsZSgpe3ZhciByZXQ9e307aWYodGhpcy5ndXR0ZXIpe3JldC5tYXJnaW5MZWZ0PSctJyt0aGlzLmd1dHRlci8yKydweCc7cmV0Lm1hcmdpblJpZ2h0PXJldC5tYXJnaW5MZWZ0O31yZXR1cm4gcmV0O319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7cmV0dXJuIGgodGhpcy50YWcse2NsYXNzOlsnZWwtcm93Jyx0aGlzLmp1c3RpZnkhPT0nc3RhcnQnPydpcy1qdXN0aWZ5LScrdGhpcy5qdXN0aWZ5OicnLHRoaXMuYWxpZ24hPT0ndG9wJz8naXMtYWxpZ24tJyt0aGlzLmFsaWduOicnLHsnZWwtcm93LS1mbGV4Jzp0aGlzLnR5cGU9PT0nZmxleCd9XSxzdHlsZTp0aGlzLnN0eWxlfSx0aGlzLiRzbG90cy5kZWZhdWx0KTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3Jvdy9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY19yb3cuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoc3JjX3Jvdy5uYW1lLHNyY19yb3cpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19yb3c9c3JjX3JvdzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbC9zcmMvY29sLmpzCnZhciBjb2xfdHlwZW9mPXR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZfdHlwZW9mMihTeW1ib2wuaXRlcmF0b3IpPT09InN5bWJvbCI/ZnVuY3Rpb24ob2JqKXtyZXR1cm4gX3R5cGVvZjIob2JqKTt9OmZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiYmdHlwZW9mIFN5bWJvbD09PSJmdW5jdGlvbiImJm9iai5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmb2JqIT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjpfdHlwZW9mMihvYmopO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjb2w9e25hbWU6J0VsQ29sJyxwcm9wczp7c3Bhbjp7dHlwZTpOdW1iZXIsZGVmYXVsdDoyNH0sdGFnOnt0eXBlOlN0cmluZyxkZWZhdWx0OidkaXYnfSxvZmZzZXQ6TnVtYmVyLHB1bGw6TnVtYmVyLHB1c2g6TnVtYmVyLHhzOltOdW1iZXIsT2JqZWN0XSxzbTpbTnVtYmVyLE9iamVjdF0sbWQ6W051bWJlcixPYmplY3RdLGxnOltOdW1iZXIsT2JqZWN0XSx4bDpbTnVtYmVyLE9iamVjdF19LGNvbXB1dGVkOntndXR0ZXI6ZnVuY3Rpb24gZ3V0dGVyKCl7dmFyIHBhcmVudD10aGlzLiRwYXJlbnQ7d2hpbGUocGFyZW50JiZwYXJlbnQuJG9wdGlvbnMuY29tcG9uZW50TmFtZSE9PSdFbFJvdycpe3BhcmVudD1wYXJlbnQuJHBhcmVudDt9cmV0dXJuIHBhcmVudD9wYXJlbnQuZ3V0dGVyOjA7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX3RoaXM9dGhpczt2YXIgY2xhc3NMaXN0PVtdO3ZhciBzdHlsZT17fTtpZih0aGlzLmd1dHRlcil7c3R5bGUucGFkZGluZ0xlZnQ9dGhpcy5ndXR0ZXIvMisncHgnO3N0eWxlLnBhZGRpbmdSaWdodD1zdHlsZS5wYWRkaW5nTGVmdDt9WydzcGFuJywnb2Zmc2V0JywncHVsbCcsJ3B1c2gnXS5mb3JFYWNoKGZ1bmN0aW9uKHByb3Ape2lmKF90aGlzW3Byb3BdfHxfdGhpc1twcm9wXT09PTApe2NsYXNzTGlzdC5wdXNoKHByb3AhPT0nc3Bhbic/J2VsLWNvbC0nK3Byb3ArJy0nK190aGlzW3Byb3BdOidlbC1jb2wtJytfdGhpc1twcm9wXSk7fX0pO1sneHMnLCdzbScsJ21kJywnbGcnLCd4bCddLmZvckVhY2goZnVuY3Rpb24oc2l6ZSl7aWYodHlwZW9mIF90aGlzW3NpemVdPT09J251bWJlcicpe2NsYXNzTGlzdC5wdXNoKCdlbC1jb2wtJytzaXplKyctJytfdGhpc1tzaXplXSk7fWVsc2UgaWYoY29sX3R5cGVvZihfdGhpc1tzaXplXSk9PT0nb2JqZWN0Jyl7dmFyIHByb3BzPV90aGlzW3NpemVdO09iamVjdC5rZXlzKHByb3BzKS5mb3JFYWNoKGZ1bmN0aW9uKHByb3Ape2NsYXNzTGlzdC5wdXNoKHByb3AhPT0nc3Bhbic/J2VsLWNvbC0nK3NpemUrJy0nK3Byb3ArJy0nK3Byb3BzW3Byb3BdOidlbC1jb2wtJytzaXplKyctJytwcm9wc1twcm9wXSk7fSk7fX0pO3JldHVybiBoKHRoaXMudGFnLHtjbGFzczpbJ2VsLWNvbCcsY2xhc3NMaXN0XSxzdHlsZTpzdHlsZX0sdGhpcy4kc2xvdHMuZGVmYXVsdCk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2wvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9jb2wuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoY29sLm5hbWUsY29sKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfY29sPWNvbDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3VwbG9hZC9zcmMvdXBsb2FkLWxpc3QudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE3M2ZlZGY1Jgp2YXIgdXBsb2FkX2xpc3R2dWVfdHlwZV90ZW1wbGF0ZV9pZF8xNzNmZWRmNV9yZW5kZXI9ZnVuY3Rpb24gdXBsb2FkX2xpc3R2dWVfdHlwZV90ZW1wbGF0ZV9pZF8xNzNmZWRmNV9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInRyYW5zaXRpb24tZ3JvdXAiLHtjbGFzczpbImVsLXVwbG9hZC1saXN0IiwiZWwtdXBsb2FkLWxpc3QtLSIrX3ZtLmxpc3RUeXBlLHsiaXMtZGlzYWJsZWQiOl92bS5kaXNhYmxlZH1dLGF0dHJzOnt0YWc6InVsIixuYW1lOiJlbC1saXN0In19LF92bS5fbChfdm0uZmlsZXMsZnVuY3Rpb24oZmlsZSl7cmV0dXJuIF9jKCJsaSIse2tleTpmaWxlLnVpZCxjbGFzczpbImVsLXVwbG9hZC1saXN0X19pdGVtIiwiaXMtIitmaWxlLnN0YXR1cyxfdm0uZm9jdXNpbmc/ImZvY3VzaW5nIjoiIl0sYXR0cnM6e3RhYmluZGV4OiIwIn0sb246e2tleWRvd246ZnVuY3Rpb24ga2V5ZG93bigkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsImRlbGV0ZSIsWzgsNDZdLCRldmVudC5rZXksWyJCYWNrc3BhY2UiLCJEZWxldGUiLCJEZWwiXSkpe3JldHVybiBudWxsO30hX3ZtLmRpc2FibGVkJiZfdm0uJGVtaXQoInJlbW92ZSIsZmlsZSk7fSxmb2N1czpmdW5jdGlvbiBmb2N1cygkZXZlbnQpe192bS5mb2N1c2luZz10cnVlO30sYmx1cjpmdW5jdGlvbiBibHVyKCRldmVudCl7X3ZtLmZvY3VzaW5nPWZhbHNlO30sY2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtfdm0uZm9jdXNpbmc9ZmFsc2U7fX19LFtfdm0uX3QoImRlZmF1bHQiLFtmaWxlLnN0YXR1cyE9PSJ1cGxvYWRpbmciJiZbInBpY3R1cmUtY2FyZCIsInBpY3R1cmUiXS5pbmRleE9mKF92bS5saXN0VHlwZSk+LTE/X2MoImltZyIse3N0YXRpY0NsYXNzOiJlbC11cGxvYWQtbGlzdF9faXRlbS10aHVtYm5haWwiLGF0dHJzOntzcmM6ZmlsZS51cmwsYWx0OiIifX0pOl92bS5fZSgpLF9jKCJhIix7c3RhdGljQ2xhc3M6ImVsLXVwbG9hZC1saXN0X19pdGVtLW5hbWUiLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVDbGljayhmaWxlKTt9fX0sW19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWljb24tZG9jdW1lbnQifSksX3ZtLl92KF92bS5fcyhmaWxlLm5hbWUpKyJcbiAgICAgICIpXSksX2MoImxhYmVsIix7c3RhdGljQ2xhc3M6ImVsLXVwbG9hZC1saXN0X19pdGVtLXN0YXR1cy1sYWJlbCJ9LFtfYygiaSIse2NsYXNzOnsiZWwtaWNvbi11cGxvYWQtc3VjY2VzcyI6dHJ1ZSwiZWwtaWNvbi1jaXJjbGUtY2hlY2siOl92bS5saXN0VHlwZT09PSJ0ZXh0IiwiZWwtaWNvbi1jaGVjayI6WyJwaWN0dXJlLWNhcmQiLCJwaWN0dXJlIl0uaW5kZXhPZihfdm0ubGlzdFR5cGUpPi0xfX0pXSksIV92bS5kaXNhYmxlZD9fYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pY29uLWNsb3NlIixvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtfdm0uJGVtaXQoInJlbW92ZSIsZmlsZSk7fX19KTpfdm0uX2UoKSwhX3ZtLmRpc2FibGVkP19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWljb24tY2xvc2UtdGlwIn0sW192bS5fdihfdm0uX3MoX3ZtLnQoImVsLnVwbG9hZC5kZWxldGVUaXAiKSkpXSk6X3ZtLl9lKCksZmlsZS5zdGF0dXM9PT0idXBsb2FkaW5nIj9fYygiZWwtcHJvZ3Jlc3MiLHthdHRyczp7dHlwZTpfdm0ubGlzdFR5cGU9PT0icGljdHVyZS1jYXJkIj8iY2lyY2xlIjoibGluZSIsInN0cm9rZS13aWR0aCI6X3ZtLmxpc3RUeXBlPT09InBpY3R1cmUtY2FyZCI/NjoyLHBlcmNlbnRhZ2U6X3ZtLnBhcnNlUGVyY2VudGFnZShmaWxlLnBlcmNlbnRhZ2UpfX0pOl92bS5fZSgpLF92bS5saXN0VHlwZT09PSJwaWN0dXJlLWNhcmQiP19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLXVwbG9hZC1saXN0X19pdGVtLWFjdGlvbnMifSxbX3ZtLmhhbmRsZVByZXZpZXcmJl92bS5saXN0VHlwZT09PSJwaWN0dXJlLWNhcmQiP19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLXVwbG9hZC1saXN0X19pdGVtLXByZXZpZXciLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVQcmV2aWV3KGZpbGUpO319fSxbX2MoImkiLHtzdGF0aWNDbGFzczoiZWwtaWNvbi16b29tLWluIn0pXSk6X3ZtLl9lKCksIV92bS5kaXNhYmxlZD9fYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC11cGxvYWQtbGlzdF9faXRlbS1kZWxldGUiLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS4kZW1pdCgicmVtb3ZlIixmaWxlKTt9fX0sW19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWljb24tZGVsZXRlIn0pXSk6X3ZtLl9lKCldKTpfdm0uX2UoKV0se2ZpbGU6ZmlsZX0pXSwyKTt9KSwwKTt9O3ZhciB1cGxvYWRfbGlzdHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzE3M2ZlZGY1X3N0YXRpY1JlbmRlckZucz1bXTt1cGxvYWRfbGlzdHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzE3M2ZlZGY1X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy91cGxvYWQvc3JjL3VwbG9hZC1saXN0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xNzNmZWRmNSYKLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvcHJvZ3Jlc3MiCnZhciBwcm9ncmVzc189X193ZWJwYWNrX3JlcXVpcmVfXygzMyk7dmFyIHByb2dyZXNzX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihwcm9ncmVzc18pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3VwbG9hZC9zcmMvdXBsb2FkLWxpc3QudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHVwbG9hZF9saXN0dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbFVwbG9hZExpc3QnLG1peGluczpbbG9jYWxlX2RlZmF1bHQuYV0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2ZvY3VzaW5nOmZhbHNlfTt9LGNvbXBvbmVudHM6e0VsUHJvZ3Jlc3M6cHJvZ3Jlc3NfZGVmYXVsdC5hfSxwcm9wczp7ZmlsZXM6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LGRpc2FibGVkOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0saGFuZGxlUHJldmlldzpGdW5jdGlvbixsaXN0VHlwZTpTdHJpbmd9LG1ldGhvZHM6e3BhcnNlUGVyY2VudGFnZTpmdW5jdGlvbiBwYXJzZVBlcmNlbnRhZ2UodmFsKXtyZXR1cm4gcGFyc2VJbnQodmFsLDEwKTt9LGhhbmRsZUNsaWNrOmZ1bmN0aW9uIGhhbmRsZUNsaWNrKGZpbGUpe3RoaXMuaGFuZGxlUHJldmlldyYmdGhpcy5oYW5kbGVQcmV2aWV3KGZpbGUpO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3VwbG9hZC9zcmMvdXBsb2FkLWxpc3QudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY191cGxvYWRfbGlzdHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz11cGxvYWRfbGlzdHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3VwbG9hZC9zcmMvdXBsb2FkLWxpc3QudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgdXBsb2FkX2xpc3RfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfdXBsb2FkX2xpc3R2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sdXBsb2FkX2xpc3R2dWVfdHlwZV90ZW1wbGF0ZV9pZF8xNzNmZWRmNV9yZW5kZXIsdXBsb2FkX2xpc3R2dWVfdHlwZV90ZW1wbGF0ZV9pZF8xNzNmZWRmNV9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHVwbG9hZF9saXN0X2FwaTt9dXBsb2FkX2xpc3RfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy91cGxvYWQvc3JjL3VwbG9hZC1saXN0LnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB1cGxvYWRfbGlzdD11cGxvYWRfbGlzdF9jb21wb25lbnQuZXhwb3J0czsvLyBFWFRFUk5BTCBNT0RVTEU6IGV4dGVybmFsICJiYWJlbC1oZWxwZXItdnVlLWpzeC1tZXJnZS1wcm9wcyIKdmFyIGV4dGVybmFsX2JhYmVsX2hlbHBlcl92dWVfanN4X21lcmdlX3Byb3BzXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDI0KTt2YXIgZXh0ZXJuYWxfYmFiZWxfaGVscGVyX3Z1ZV9qc3hfbWVyZ2VfcHJvcHNfZGVmYXVsdD0vKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGV4dGVybmFsX2JhYmVsX2hlbHBlcl92dWVfanN4X21lcmdlX3Byb3BzXyk7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy91cGxvYWQvc3JjL2FqYXguanMKZnVuY3Rpb24gZ2V0RXJyb3IoYWN0aW9uLG9wdGlvbix4aHIpe3ZhciBtc2c9dm9pZCAwO2lmKHhoci5yZXNwb25zZSl7bXNnPScnKyh4aHIucmVzcG9uc2UuZXJyb3J8fHhoci5yZXNwb25zZSk7fWVsc2UgaWYoeGhyLnJlc3BvbnNlVGV4dCl7bXNnPScnK3hoci5yZXNwb25zZVRleHQ7fWVsc2V7bXNnPSdmYWlsIHRvIHBvc3QgJythY3Rpb24rJyAnK3hoci5zdGF0dXM7fXZhciBlcnI9bmV3IEVycm9yKG1zZyk7ZXJyLnN0YXR1cz14aHIuc3RhdHVzO2Vyci5tZXRob2Q9J3Bvc3QnO2Vyci51cmw9YWN0aW9uO3JldHVybiBlcnI7fWZ1bmN0aW9uIGdldEJvZHkoeGhyKXt2YXIgdGV4dD14aHIucmVzcG9uc2VUZXh0fHx4aHIucmVzcG9uc2U7aWYoIXRleHQpe3JldHVybiB0ZXh0O310cnl7cmV0dXJuIEpTT04ucGFyc2UodGV4dCk7fWNhdGNoKGUpe3JldHVybiB0ZXh0O319ZnVuY3Rpb24gdXBsb2FkKG9wdGlvbil7aWYodHlwZW9mIFhNTEh0dHBSZXF1ZXN0PT09J3VuZGVmaW5lZCcpe3JldHVybjt9dmFyIHhocj1uZXcgWE1MSHR0cFJlcXVlc3QoKTt2YXIgYWN0aW9uPW9wdGlvbi5hY3Rpb247aWYoeGhyLnVwbG9hZCl7eGhyLnVwbG9hZC5vbnByb2dyZXNzPWZ1bmN0aW9uIHByb2dyZXNzKGUpe2lmKGUudG90YWw+MCl7ZS5wZXJjZW50PWUubG9hZGVkL2UudG90YWwqMTAwO31vcHRpb24ub25Qcm9ncmVzcyhlKTt9O312YXIgZm9ybURhdGE9bmV3IEZvcm1EYXRhKCk7aWYob3B0aW9uLmRhdGEpe09iamVjdC5rZXlzKG9wdGlvbi5kYXRhKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7Zm9ybURhdGEuYXBwZW5kKGtleSxvcHRpb24uZGF0YVtrZXldKTt9KTt9Zm9ybURhdGEuYXBwZW5kKG9wdGlvbi5maWxlbmFtZSxvcHRpb24uZmlsZSxvcHRpb24uZmlsZS5uYW1lKTt4aHIub25lcnJvcj1mdW5jdGlvbiBlcnJvcihlKXtvcHRpb24ub25FcnJvcihlKTt9O3hoci5vbmxvYWQ9ZnVuY3Rpb24gb25sb2FkKCl7aWYoeGhyLnN0YXR1czwyMDB8fHhoci5zdGF0dXM+PTMwMCl7cmV0dXJuIG9wdGlvbi5vbkVycm9yKGdldEVycm9yKGFjdGlvbixvcHRpb24seGhyKSk7fW9wdGlvbi5vblN1Y2Nlc3MoZ2V0Qm9keSh4aHIpKTt9O3hoci5vcGVuKCdwb3N0JyxhY3Rpb24sdHJ1ZSk7aWYob3B0aW9uLndpdGhDcmVkZW50aWFscyYmJ3dpdGhDcmVkZW50aWFscydpbiB4aHIpe3hoci53aXRoQ3JlZGVudGlhbHM9dHJ1ZTt9dmFyIGhlYWRlcnM9b3B0aW9uLmhlYWRlcnN8fHt9O2Zvcih2YXIgaXRlbSBpbiBoZWFkZXJzKXtpZihoZWFkZXJzLmhhc093blByb3BlcnR5KGl0ZW0pJiZoZWFkZXJzW2l0ZW1dIT09bnVsbCl7eGhyLnNldFJlcXVlc3RIZWFkZXIoaXRlbSxoZWFkZXJzW2l0ZW1dKTt9fXhoci5zZW5kKGZvcm1EYXRhKTtyZXR1cm4geGhyO30vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3VwbG9hZC9zcmMvdXBsb2FkLWRyYWdnZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdlYmJmMjE5Jgp2YXIgdXBsb2FkX2RyYWdnZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF83ZWJiZjIxOV9yZW5kZXI9ZnVuY3Rpb24gdXBsb2FkX2RyYWdnZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF83ZWJiZjIxOV9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC11cGxvYWQtZHJhZ2dlciIsY2xhc3M6eyJpcy1kcmFnb3ZlciI6X3ZtLmRyYWdvdmVyfSxvbjp7ZHJvcDpmdW5jdGlvbiBkcm9wKCRldmVudCl7JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIF92bS5vbkRyb3AoJGV2ZW50KTt9LGRyYWdvdmVyOmZ1bmN0aW9uIGRyYWdvdmVyKCRldmVudCl7JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIF92bS5vbkRyYWdvdmVyKCRldmVudCk7fSxkcmFnbGVhdmU6ZnVuY3Rpb24gZHJhZ2xlYXZlKCRldmVudCl7JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7X3ZtLmRyYWdvdmVyPWZhbHNlO319fSxbX3ZtLl90KCJkZWZhdWx0IildLDIpO307dmFyIHVwbG9hZF9kcmFnZ2VydnVlX3R5cGVfdGVtcGxhdGVfaWRfN2ViYmYyMTlfc3RhdGljUmVuZGVyRm5zPVtdO3VwbG9hZF9kcmFnZ2VydnVlX3R5cGVfdGVtcGxhdGVfaWRfN2ViYmYyMTlfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3VwbG9hZC9zcmMvdXBsb2FkLWRyYWdnZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdlYmJmMjE5JgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy91cGxvYWQvc3JjL3VwbG9hZC1kcmFnZ2VyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB1cGxvYWRfZHJhZ2dlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxVcGxvYWREcmFnJyxwcm9wczp7ZGlzYWJsZWQ6Qm9vbGVhbn0saW5qZWN0Ont1cGxvYWRlcjp7ZGVmYXVsdDonJ319LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntkcmFnb3ZlcjpmYWxzZX07fSxtZXRob2RzOntvbkRyYWdvdmVyOmZ1bmN0aW9uIG9uRHJhZ292ZXIoKXtpZighdGhpcy5kaXNhYmxlZCl7dGhpcy5kcmFnb3Zlcj10cnVlO319LG9uRHJvcDpmdW5jdGlvbiBvbkRyb3AoZSl7aWYodGhpcy5kaXNhYmxlZHx8IXRoaXMudXBsb2FkZXIpcmV0dXJuO3ZhciBhY2NlcHQ9dGhpcy51cGxvYWRlci5hY2NlcHQ7dGhpcy5kcmFnb3Zlcj1mYWxzZTtpZighYWNjZXB0KXt0aGlzLiRlbWl0KCdmaWxlJyxlLmRhdGFUcmFuc2Zlci5maWxlcyk7cmV0dXJuO310aGlzLiRlbWl0KCdmaWxlJyxbXS5zbGljZS5jYWxsKGUuZGF0YVRyYW5zZmVyLmZpbGVzKS5maWx0ZXIoZnVuY3Rpb24oZmlsZSl7dmFyIHR5cGU9ZmlsZS50eXBlLG5hbWU9ZmlsZS5uYW1lO3ZhciBleHRlbnNpb249bmFtZS5pbmRleE9mKCcuJyk+LTE/Jy4nK25hbWUuc3BsaXQoJy4nKS5wb3AoKTonJzt2YXIgYmFzZVR5cGU9dHlwZS5yZXBsYWNlKC9cLy4qJC8sJycpO3JldHVybiBhY2NlcHQuc3BsaXQoJywnKS5tYXAoZnVuY3Rpb24odHlwZSl7cmV0dXJuIHR5cGUudHJpbSgpO30pLmZpbHRlcihmdW5jdGlvbih0eXBlKXtyZXR1cm4gdHlwZTt9KS5zb21lKGZ1bmN0aW9uKGFjY2VwdGVkVHlwZSl7aWYoL1wuLiskLy50ZXN0KGFjY2VwdGVkVHlwZSkpe3JldHVybiBleHRlbnNpb249PT1hY2NlcHRlZFR5cGU7fWlmKC9cL1wqJC8udGVzdChhY2NlcHRlZFR5cGUpKXtyZXR1cm4gYmFzZVR5cGU9PT1hY2NlcHRlZFR5cGUucmVwbGFjZSgvXC9cKiQvLCcnKTt9aWYoL15bXlwvXStcL1teXC9dKyQvLnRlc3QoYWNjZXB0ZWRUeXBlKSl7cmV0dXJuIHR5cGU9PT1hY2NlcHRlZFR5cGU7fXJldHVybiBmYWxzZTt9KTt9KSk7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdXBsb2FkL3NyYy91cGxvYWQtZHJhZ2dlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX3VwbG9hZF9kcmFnZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXVwbG9hZF9kcmFnZ2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdXBsb2FkL3NyYy91cGxvYWQtZHJhZ2dlci52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciB1cGxvYWRfZHJhZ2dlcl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY191cGxvYWRfZHJhZ2dlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyx1cGxvYWRfZHJhZ2dlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdlYmJmMjE5X3JlbmRlcix1cGxvYWRfZHJhZ2dlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdlYmJmMjE5X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgdXBsb2FkX2RyYWdnZXJfYXBpO311cGxvYWRfZHJhZ2dlcl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3VwbG9hZC9zcmMvdXBsb2FkLWRyYWdnZXIudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHVwbG9hZF9kcmFnZ2VyPXVwbG9hZF9kcmFnZ2VyX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3VwbG9hZC9zcmMvdXBsb2FkLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB1cGxvYWR2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e2luamVjdDpbJ3VwbG9hZGVyJ10sY29tcG9uZW50czp7VXBsb2FkRHJhZ2dlcjp1cGxvYWRfZHJhZ2dlcn0scHJvcHM6e3R5cGU6U3RyaW5nLGFjdGlvbjp7dHlwZTpTdHJpbmcscmVxdWlyZWQ6dHJ1ZX0sbmFtZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonZmlsZSd9LGRhdGE6T2JqZWN0LGhlYWRlcnM6T2JqZWN0LHdpdGhDcmVkZW50aWFsczpCb29sZWFuLG11bHRpcGxlOkJvb2xlYW4sYWNjZXB0OlN0cmluZyxvblN0YXJ0OkZ1bmN0aW9uLG9uUHJvZ3Jlc3M6RnVuY3Rpb24sb25TdWNjZXNzOkZ1bmN0aW9uLG9uRXJyb3I6RnVuY3Rpb24sYmVmb3JlVXBsb2FkOkZ1bmN0aW9uLGRyYWc6Qm9vbGVhbixvblByZXZpZXc6e3R5cGU6RnVuY3Rpb24sZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe319LG9uUmVtb3ZlOnt0eXBlOkZ1bmN0aW9uLGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXt9fSxmaWxlTGlzdDpBcnJheSxhdXRvVXBsb2FkOkJvb2xlYW4sbGlzdFR5cGU6U3RyaW5nLGh0dHBSZXF1ZXN0Ont0eXBlOkZ1bmN0aW9uLGRlZmF1bHQ6dXBsb2FkfSxkaXNhYmxlZDpCb29sZWFuLGxpbWl0Ok51bWJlcixvbkV4Y2VlZDpGdW5jdGlvbn0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue21vdXNlb3ZlcjpmYWxzZSxyZXFzOnt9fTt9LG1ldGhvZHM6e2lzSW1hZ2U6ZnVuY3Rpb24gaXNJbWFnZShzdHIpe3JldHVybiBzdHIuaW5kZXhPZignaW1hZ2UnKSE9PS0xO30saGFuZGxlQ2hhbmdlOmZ1bmN0aW9uIGhhbmRsZUNoYW5nZShldil7dmFyIGZpbGVzPWV2LnRhcmdldC5maWxlcztpZighZmlsZXMpcmV0dXJuO3RoaXMudXBsb2FkRmlsZXMoZmlsZXMpO30sdXBsb2FkRmlsZXM6ZnVuY3Rpb24gdXBsb2FkRmlsZXMoZmlsZXMpe3ZhciBfdGhpcz10aGlzO2lmKHRoaXMubGltaXQmJnRoaXMuZmlsZUxpc3QubGVuZ3RoK2ZpbGVzLmxlbmd0aD50aGlzLmxpbWl0KXt0aGlzLm9uRXhjZWVkJiZ0aGlzLm9uRXhjZWVkKGZpbGVzLHRoaXMuZmlsZUxpc3QpO3JldHVybjt9dmFyIHBvc3RGaWxlcz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmaWxlcyk7aWYoIXRoaXMubXVsdGlwbGUpe3Bvc3RGaWxlcz1wb3N0RmlsZXMuc2xpY2UoMCwxKTt9aWYocG9zdEZpbGVzLmxlbmd0aD09PTApe3JldHVybjt9cG9zdEZpbGVzLmZvckVhY2goZnVuY3Rpb24ocmF3RmlsZSl7X3RoaXMub25TdGFydChyYXdGaWxlKTtpZihfdGhpcy5hdXRvVXBsb2FkKV90aGlzLnVwbG9hZChyYXdGaWxlKTt9KTt9LHVwbG9hZDpmdW5jdGlvbiB1cGxvYWQocmF3RmlsZSl7dmFyIF90aGlzMj10aGlzO3RoaXMuJHJlZnMuaW5wdXQudmFsdWU9bnVsbDtpZighdGhpcy5iZWZvcmVVcGxvYWQpe3JldHVybiB0aGlzLnBvc3QocmF3RmlsZSk7fXZhciBiZWZvcmU9dGhpcy5iZWZvcmVVcGxvYWQocmF3RmlsZSk7aWYoYmVmb3JlJiZiZWZvcmUudGhlbil7YmVmb3JlLnRoZW4oZnVuY3Rpb24ocHJvY2Vzc2VkRmlsZSl7dmFyIGZpbGVUeXBlPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChwcm9jZXNzZWRGaWxlKTtpZihmaWxlVHlwZT09PSdbb2JqZWN0IEZpbGVdJ3x8ZmlsZVR5cGU9PT0nW29iamVjdCBCbG9iXScpe2lmKGZpbGVUeXBlPT09J1tvYmplY3QgQmxvYl0nKXtwcm9jZXNzZWRGaWxlPW5ldyBGaWxlKFtwcm9jZXNzZWRGaWxlXSxyYXdGaWxlLm5hbWUse3R5cGU6cmF3RmlsZS50eXBlfSk7fWZvcih2YXIgcCBpbiByYXdGaWxlKXtpZihyYXdGaWxlLmhhc093blByb3BlcnR5KHApKXtwcm9jZXNzZWRGaWxlW3BdPXJhd0ZpbGVbcF07fX1fdGhpczIucG9zdChwcm9jZXNzZWRGaWxlKTt9ZWxzZXtfdGhpczIucG9zdChyYXdGaWxlKTt9fSxmdW5jdGlvbigpe190aGlzMi5vblJlbW92ZShudWxsLHJhd0ZpbGUpO30pO31lbHNlIGlmKGJlZm9yZSE9PWZhbHNlKXt0aGlzLnBvc3QocmF3RmlsZSk7fWVsc2V7dGhpcy5vblJlbW92ZShudWxsLHJhd0ZpbGUpO319LGFib3J0OmZ1bmN0aW9uIGFib3J0KGZpbGUpe3ZhciByZXFzPXRoaXMucmVxcztpZihmaWxlKXt2YXIgdWlkPWZpbGU7aWYoZmlsZS51aWQpdWlkPWZpbGUudWlkO2lmKHJlcXNbdWlkXSl7cmVxc1t1aWRdLmFib3J0KCk7fX1lbHNle09iamVjdC5rZXlzKHJlcXMpLmZvckVhY2goZnVuY3Rpb24odWlkKXtpZihyZXFzW3VpZF0pcmVxc1t1aWRdLmFib3J0KCk7ZGVsZXRlIHJlcXNbdWlkXTt9KTt9fSxwb3N0OmZ1bmN0aW9uIHBvc3QocmF3RmlsZSl7dmFyIF90aGlzMz10aGlzO3ZhciB1aWQ9cmF3RmlsZS51aWQ7dmFyIG9wdGlvbnM9e2hlYWRlcnM6dGhpcy5oZWFkZXJzLHdpdGhDcmVkZW50aWFsczp0aGlzLndpdGhDcmVkZW50aWFscyxmaWxlOnJhd0ZpbGUsZGF0YTp0aGlzLmRhdGEsZmlsZW5hbWU6dGhpcy5uYW1lLGFjdGlvbjp0aGlzLmFjdGlvbixvblByb2dyZXNzOmZ1bmN0aW9uIG9uUHJvZ3Jlc3MoZSl7X3RoaXMzLm9uUHJvZ3Jlc3MoZSxyYXdGaWxlKTt9LG9uU3VjY2VzczpmdW5jdGlvbiBvblN1Y2Nlc3MocmVzKXtfdGhpczMub25TdWNjZXNzKHJlcyxyYXdGaWxlKTtkZWxldGUgX3RoaXMzLnJlcXNbdWlkXTt9LG9uRXJyb3I6ZnVuY3Rpb24gb25FcnJvcihlcnIpe190aGlzMy5vbkVycm9yKGVycixyYXdGaWxlKTtkZWxldGUgX3RoaXMzLnJlcXNbdWlkXTt9fTt2YXIgcmVxPXRoaXMuaHR0cFJlcXVlc3Qob3B0aW9ucyk7dGhpcy5yZXFzW3VpZF09cmVxO2lmKHJlcSYmcmVxLnRoZW4pe3JlcS50aGVuKG9wdGlvbnMub25TdWNjZXNzLG9wdGlvbnMub25FcnJvcik7fX0saGFuZGxlQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlQ2xpY2soKXtpZighdGhpcy5kaXNhYmxlZCl7dGhpcy4kcmVmcy5pbnB1dC52YWx1ZT1udWxsO3RoaXMuJHJlZnMuaW5wdXQuY2xpY2soKTt9fSxoYW5kbGVLZXlkb3duOmZ1bmN0aW9uIGhhbmRsZUtleWRvd24oZSl7aWYoZS50YXJnZXQhPT1lLmN1cnJlbnRUYXJnZXQpcmV0dXJuO2lmKGUua2V5Q29kZT09PTEzfHxlLmtleUNvZGU9PT0zMil7dGhpcy5oYW5kbGVDbGljaygpO319fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKGgpe3ZhciBoYW5kbGVDbGljaz10aGlzLmhhbmRsZUNsaWNrLGRyYWc9dGhpcy5kcmFnLG5hbWU9dGhpcy5uYW1lLGhhbmRsZUNoYW5nZT10aGlzLmhhbmRsZUNoYW5nZSxtdWx0aXBsZT10aGlzLm11bHRpcGxlLGFjY2VwdD10aGlzLmFjY2VwdCxsaXN0VHlwZT10aGlzLmxpc3RUeXBlLHVwbG9hZEZpbGVzPXRoaXMudXBsb2FkRmlsZXMsZGlzYWJsZWQ9dGhpcy5kaXNhYmxlZCxoYW5kbGVLZXlkb3duPXRoaXMuaGFuZGxlS2V5ZG93bjt2YXIgZGF0YT17Y2xhc3M6eydlbC11cGxvYWQnOnRydWV9LG9uOntjbGljazpoYW5kbGVDbGljayxrZXlkb3duOmhhbmRsZUtleWRvd259fTtkYXRhLmNsYXNzWydlbC11cGxvYWQtLScrbGlzdFR5cGVdPXRydWU7cmV0dXJuIGgoJ2RpdicsZXh0ZXJuYWxfYmFiZWxfaGVscGVyX3Z1ZV9qc3hfbWVyZ2VfcHJvcHNfZGVmYXVsdCgpKFtkYXRhLHthdHRyczp7dGFiaW5kZXg6JzAnfX1dKSxbZHJhZz9oKCd1cGxvYWQtZHJhZ2dlcicse2F0dHJzOntkaXNhYmxlZDpkaXNhYmxlZH0sb246eydmaWxlJzp1cGxvYWRGaWxlc319LFt0aGlzLiRzbG90cy5kZWZhdWx0XSk6dGhpcy4kc2xvdHMuZGVmYXVsdCxoKCdpbnB1dCcseydjbGFzcyc6J2VsLXVwbG9hZF9faW5wdXQnLGF0dHJzOnt0eXBlOidmaWxlJyxuYW1lOm5hbWUsbXVsdGlwbGU6bXVsdGlwbGUsYWNjZXB0OmFjY2VwdH0scmVmOidpbnB1dCcsb246eydjaGFuZ2UnOmhhbmRsZUNoYW5nZX19KV0pO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdXBsb2FkL3NyYy91cGxvYWQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY191cGxvYWR2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189dXBsb2FkdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdXBsb2FkL3NyYy91cGxvYWQudnVlCnZhciB1cGxvYWRfcmVuZGVyLHVwbG9hZF9zdGF0aWNSZW5kZXJGbnM7Lyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciB1cGxvYWRfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfdXBsb2FkdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLHVwbG9hZF9yZW5kZXIsdXBsb2FkX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgdXBsb2FkX2FwaTt9dXBsb2FkX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvdXBsb2FkL3NyYy91cGxvYWQudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY191cGxvYWQ9dXBsb2FkX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3VwbG9hZC9zcmMvaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgpmdW5jdGlvbiBzcmN2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19ub29wKCl7fS8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbFVwbG9hZCcsbWl4aW5zOlttaWdyYXRpbmdfZGVmYXVsdC5hXSxjb21wb25lbnRzOntFbFByb2dyZXNzOnByb2dyZXNzX2RlZmF1bHQuYSxVcGxvYWRMaXN0OnVwbG9hZF9saXN0LFVwbG9hZDpzcmNfdXBsb2FkfSxwcm92aWRlOmZ1bmN0aW9uIHByb3ZpZGUoKXtyZXR1cm57dXBsb2FkZXI6dGhpc307fSxpbmplY3Q6e2VsRm9ybTp7ZGVmYXVsdDonJ319LHByb3BzOnthY3Rpb246e3R5cGU6U3RyaW5nLHJlcXVpcmVkOnRydWV9LGhlYWRlcnM6e3R5cGU6T2JqZWN0LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm57fTt9fSxkYXRhOk9iamVjdCxtdWx0aXBsZTpCb29sZWFuLG5hbWU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2ZpbGUnfSxkcmFnOkJvb2xlYW4sZHJhZ2dlcjpCb29sZWFuLHdpdGhDcmVkZW50aWFsczpCb29sZWFuLHNob3dGaWxlTGlzdDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sYWNjZXB0OlN0cmluZyx0eXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0OidzZWxlY3QnfSxiZWZvcmVVcGxvYWQ6RnVuY3Rpb24sYmVmb3JlUmVtb3ZlOkZ1bmN0aW9uLG9uUmVtb3ZlOnt0eXBlOkZ1bmN0aW9uLGRlZmF1bHQ6c3JjdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfbm9vcH0sb25DaGFuZ2U6e3R5cGU6RnVuY3Rpb24sZGVmYXVsdDpzcmN2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19ub29wfSxvblByZXZpZXc6e3R5cGU6RnVuY3Rpb259LG9uU3VjY2Vzczp7dHlwZTpGdW5jdGlvbixkZWZhdWx0OnNyY3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX25vb3B9LG9uUHJvZ3Jlc3M6e3R5cGU6RnVuY3Rpb24sZGVmYXVsdDpzcmN2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19ub29wfSxvbkVycm9yOnt0eXBlOkZ1bmN0aW9uLGRlZmF1bHQ6c3JjdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfbm9vcH0sZmlsZUxpc3Q6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LGF1dG9VcGxvYWQ6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGxpc3RUeXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0Oid0ZXh0Jy8vIHRleHQscGljdHVyZSxwaWN0dXJlLWNhcmQKfSxodHRwUmVxdWVzdDpGdW5jdGlvbixkaXNhYmxlZDpCb29sZWFuLGxpbWl0Ok51bWJlcixvbkV4Y2VlZDp7dHlwZTpGdW5jdGlvbixkZWZhdWx0OnNyY3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX25vb3B9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57dXBsb2FkRmlsZXM6W10sZHJhZ092ZXI6ZmFsc2UsZHJhZ2luZzpmYWxzZSx0ZW1wSW5kZXg6MX07fSxjb21wdXRlZDp7dXBsb2FkRGlzYWJsZWQ6ZnVuY3Rpb24gdXBsb2FkRGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5kaXNhYmxlZHx8KHRoaXMuZWxGb3JtfHx7fSkuZGlzYWJsZWQ7fX0sd2F0Y2g6e2xpc3RUeXBlOmZ1bmN0aW9uIGxpc3RUeXBlKHR5cGUpe2lmKHR5cGU9PT0ncGljdHVyZS1jYXJkJ3x8dHlwZT09PSdwaWN0dXJlJyl7dGhpcy51cGxvYWRGaWxlcz10aGlzLnVwbG9hZEZpbGVzLm1hcChmdW5jdGlvbihmaWxlKXtpZighZmlsZS51cmwmJmZpbGUucmF3KXt0cnl7ZmlsZS51cmw9VVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlLnJhdyk7fWNhdGNoKGVycil7Y29uc29sZS5lcnJvcignW0VsZW1lbnQgRXJyb3JdW1VwbG9hZF0nLGVycik7fX1yZXR1cm4gZmlsZTt9KTt9fSxmaWxlTGlzdDp7aW1tZWRpYXRlOnRydWUsaGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKGZpbGVMaXN0KXt2YXIgX3RoaXM9dGhpczt0aGlzLnVwbG9hZEZpbGVzPWZpbGVMaXN0Lm1hcChmdW5jdGlvbihpdGVtKXtpdGVtLnVpZD1pdGVtLnVpZHx8RGF0ZS5ub3coKStfdGhpcy50ZW1wSW5kZXgrKztpdGVtLnN0YXR1cz1pdGVtLnN0YXR1c3x8J3N1Y2Nlc3MnO3JldHVybiBpdGVtO30pO319fSxtZXRob2RzOntoYW5kbGVTdGFydDpmdW5jdGlvbiBoYW5kbGVTdGFydChyYXdGaWxlKXtyYXdGaWxlLnVpZD1EYXRlLm5vdygpK3RoaXMudGVtcEluZGV4Kys7dmFyIGZpbGU9e3N0YXR1czoncmVhZHknLG5hbWU6cmF3RmlsZS5uYW1lLHNpemU6cmF3RmlsZS5zaXplLHBlcmNlbnRhZ2U6MCx1aWQ6cmF3RmlsZS51aWQscmF3OnJhd0ZpbGV9O2lmKHRoaXMubGlzdFR5cGU9PT0ncGljdHVyZS1jYXJkJ3x8dGhpcy5saXN0VHlwZT09PSdwaWN0dXJlJyl7dHJ5e2ZpbGUudXJsPVVSTC5jcmVhdGVPYmplY3RVUkwocmF3RmlsZSk7fWNhdGNoKGVycil7Y29uc29sZS5lcnJvcignW0VsZW1lbnQgRXJyb3JdW1VwbG9hZF0nLGVycik7cmV0dXJuO319dGhpcy51cGxvYWRGaWxlcy5wdXNoKGZpbGUpO3RoaXMub25DaGFuZ2UoZmlsZSx0aGlzLnVwbG9hZEZpbGVzKTt9LGhhbmRsZVByb2dyZXNzOmZ1bmN0aW9uIGhhbmRsZVByb2dyZXNzKGV2LHJhd0ZpbGUpe3ZhciBmaWxlPXRoaXMuZ2V0RmlsZShyYXdGaWxlKTt0aGlzLm9uUHJvZ3Jlc3MoZXYsZmlsZSx0aGlzLnVwbG9hZEZpbGVzKTtmaWxlLnN0YXR1cz0ndXBsb2FkaW5nJztmaWxlLnBlcmNlbnRhZ2U9ZXYucGVyY2VudHx8MDt9LGhhbmRsZVN1Y2Nlc3M6ZnVuY3Rpb24gaGFuZGxlU3VjY2VzcyhyZXMscmF3RmlsZSl7dmFyIGZpbGU9dGhpcy5nZXRGaWxlKHJhd0ZpbGUpO2lmKGZpbGUpe2ZpbGUuc3RhdHVzPSdzdWNjZXNzJztmaWxlLnJlc3BvbnNlPXJlczt0aGlzLm9uU3VjY2VzcyhyZXMsZmlsZSx0aGlzLnVwbG9hZEZpbGVzKTt0aGlzLm9uQ2hhbmdlKGZpbGUsdGhpcy51cGxvYWRGaWxlcyk7fX0saGFuZGxlRXJyb3I6ZnVuY3Rpb24gaGFuZGxlRXJyb3IoZXJyLHJhd0ZpbGUpe3ZhciBmaWxlPXRoaXMuZ2V0RmlsZShyYXdGaWxlKTt2YXIgZmlsZUxpc3Q9dGhpcy51cGxvYWRGaWxlcztmaWxlLnN0YXR1cz0nZmFpbCc7ZmlsZUxpc3Quc3BsaWNlKGZpbGVMaXN0LmluZGV4T2YoZmlsZSksMSk7dGhpcy5vbkVycm9yKGVycixmaWxlLHRoaXMudXBsb2FkRmlsZXMpO3RoaXMub25DaGFuZ2UoZmlsZSx0aGlzLnVwbG9hZEZpbGVzKTt9LGhhbmRsZVJlbW92ZTpmdW5jdGlvbiBoYW5kbGVSZW1vdmUoZmlsZSxyYXcpe3ZhciBfdGhpczI9dGhpcztpZihyYXcpe2ZpbGU9dGhpcy5nZXRGaWxlKHJhdyk7fXZhciBkb1JlbW92ZT1mdW5jdGlvbiBkb1JlbW92ZSgpe190aGlzMi5hYm9ydChmaWxlKTt2YXIgZmlsZUxpc3Q9X3RoaXMyLnVwbG9hZEZpbGVzO2ZpbGVMaXN0LnNwbGljZShmaWxlTGlzdC5pbmRleE9mKGZpbGUpLDEpO190aGlzMi5vblJlbW92ZShmaWxlLGZpbGVMaXN0KTt9O2lmKCF0aGlzLmJlZm9yZVJlbW92ZSl7ZG9SZW1vdmUoKTt9ZWxzZSBpZih0eXBlb2YgdGhpcy5iZWZvcmVSZW1vdmU9PT0nZnVuY3Rpb24nKXt2YXIgYmVmb3JlPXRoaXMuYmVmb3JlUmVtb3ZlKGZpbGUsdGhpcy51cGxvYWRGaWxlcyk7aWYoYmVmb3JlJiZiZWZvcmUudGhlbil7YmVmb3JlLnRoZW4oZnVuY3Rpb24oKXtkb1JlbW92ZSgpO30sc3JjdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfbm9vcCk7fWVsc2UgaWYoYmVmb3JlIT09ZmFsc2Upe2RvUmVtb3ZlKCk7fX19LGdldEZpbGU6ZnVuY3Rpb24gZ2V0RmlsZShyYXdGaWxlKXt2YXIgZmlsZUxpc3Q9dGhpcy51cGxvYWRGaWxlczt2YXIgdGFyZ2V0PXZvaWQgMDtmaWxlTGlzdC5ldmVyeShmdW5jdGlvbihpdGVtKXt0YXJnZXQ9cmF3RmlsZS51aWQ9PT1pdGVtLnVpZD9pdGVtOm51bGw7cmV0dXJuIXRhcmdldDt9KTtyZXR1cm4gdGFyZ2V0O30sYWJvcnQ6ZnVuY3Rpb24gYWJvcnQoZmlsZSl7dGhpcy4kcmVmc1sndXBsb2FkLWlubmVyJ10uYWJvcnQoZmlsZSk7fSxjbGVhckZpbGVzOmZ1bmN0aW9uIGNsZWFyRmlsZXMoKXt0aGlzLnVwbG9hZEZpbGVzPVtdO30sc3VibWl0OmZ1bmN0aW9uIHN1Ym1pdCgpe3ZhciBfdGhpczM9dGhpczt0aGlzLnVwbG9hZEZpbGVzLmZpbHRlcihmdW5jdGlvbihmaWxlKXtyZXR1cm4gZmlsZS5zdGF0dXM9PT0ncmVhZHknO30pLmZvckVhY2goZnVuY3Rpb24oZmlsZSl7X3RoaXMzLiRyZWZzWyd1cGxvYWQtaW5uZXInXS51cGxvYWQoZmlsZS5yYXcpO30pO30sZ2V0TWlncmF0aW5nQ29uZmlnOmZ1bmN0aW9uIGdldE1pZ3JhdGluZ0NvbmZpZygpe3JldHVybntwcm9wczp7J2RlZmF1bHQtZmlsZS1saXN0JzonZGVmYXVsdC1maWxlLWxpc3QgaXMgcmVuYW1lZCB0byBmaWxlLWxpc3QuJywnc2hvdy11cGxvYWQtbGlzdCc6J3Nob3ctdXBsb2FkLWxpc3QgaXMgcmVuYW1lZCB0byBzaG93LWZpbGUtbGlzdC4nLCd0aHVtYm5haWwtbW9kZSc6J3RodW1ibmFpbC1tb2RlIGhhcyBiZWVuIGRlcHJlY2F0ZWQsIHlvdSBjYW4gaW1wbGVtZW50IHRoZSBzYW1lIGVmZmVjdCBhY2NvcmRpbmcgdG8gdGhpcyBjYXNlOiBodHRwOi8vZWxlbWVudC5lbGVtZS5pby8jL3poLUNOL2NvbXBvbmVudC91cGxvYWQjeW9uZy1odS10b3UteGlhbmctc2hhbmctY2h1YW4nfX07fX0sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7dGhpcy51cGxvYWRGaWxlcy5mb3JFYWNoKGZ1bmN0aW9uKGZpbGUpe2lmKGZpbGUudXJsJiZmaWxlLnVybC5pbmRleE9mKCdibG9iOicpPT09MCl7VVJMLnJldm9rZU9iamVjdFVSTChmaWxlLnVybCk7fX0pO30scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX3RoaXM0PXRoaXM7dmFyIHVwbG9hZExpc3Q9dm9pZCAwO2lmKHRoaXMuc2hvd0ZpbGVMaXN0KXt1cGxvYWRMaXN0PWgodXBsb2FkX2xpc3Qse2F0dHJzOntkaXNhYmxlZDp0aGlzLnVwbG9hZERpc2FibGVkLGxpc3RUeXBlOnRoaXMubGlzdFR5cGUsZmlsZXM6dGhpcy51cGxvYWRGaWxlcyxoYW5kbGVQcmV2aWV3OnRoaXMub25QcmV2aWV3fSxvbjp7J3JlbW92ZSc6dGhpcy5oYW5kbGVSZW1vdmV9fSxbZnVuY3Rpb24ocHJvcHMpe2lmKF90aGlzNC4kc2NvcGVkU2xvdHMuZmlsZSl7cmV0dXJuIF90aGlzNC4kc2NvcGVkU2xvdHMuZmlsZSh7ZmlsZTpwcm9wcy5maWxlfSk7fX1dKTt9dmFyIHVwbG9hZERhdGE9e3Byb3BzOnt0eXBlOnRoaXMudHlwZSxkcmFnOnRoaXMuZHJhZyxhY3Rpb246dGhpcy5hY3Rpb24sbXVsdGlwbGU6dGhpcy5tdWx0aXBsZSwnYmVmb3JlLXVwbG9hZCc6dGhpcy5iZWZvcmVVcGxvYWQsJ3dpdGgtY3JlZGVudGlhbHMnOnRoaXMud2l0aENyZWRlbnRpYWxzLGhlYWRlcnM6dGhpcy5oZWFkZXJzLG5hbWU6dGhpcy5uYW1lLGRhdGE6dGhpcy5kYXRhLGFjY2VwdDp0aGlzLmFjY2VwdCxmaWxlTGlzdDp0aGlzLnVwbG9hZEZpbGVzLGF1dG9VcGxvYWQ6dGhpcy5hdXRvVXBsb2FkLGxpc3RUeXBlOnRoaXMubGlzdFR5cGUsZGlzYWJsZWQ6dGhpcy51cGxvYWREaXNhYmxlZCxsaW1pdDp0aGlzLmxpbWl0LCdvbi1leGNlZWQnOnRoaXMub25FeGNlZWQsJ29uLXN0YXJ0Jzp0aGlzLmhhbmRsZVN0YXJ0LCdvbi1wcm9ncmVzcyc6dGhpcy5oYW5kbGVQcm9ncmVzcywnb24tc3VjY2Vzcyc6dGhpcy5oYW5kbGVTdWNjZXNzLCdvbi1lcnJvcic6dGhpcy5oYW5kbGVFcnJvciwnb24tcHJldmlldyc6dGhpcy5vblByZXZpZXcsJ29uLXJlbW92ZSc6dGhpcy5oYW5kbGVSZW1vdmUsJ2h0dHAtcmVxdWVzdCc6dGhpcy5odHRwUmVxdWVzdH0scmVmOid1cGxvYWQtaW5uZXInfTt2YXIgdHJpZ2dlcj10aGlzLiRzbG90cy50cmlnZ2VyfHx0aGlzLiRzbG90cy5kZWZhdWx0O3ZhciB1cGxvYWRDb21wb25lbnQ9aCgndXBsb2FkJyx1cGxvYWREYXRhLFt0cmlnZ2VyXSk7cmV0dXJuIGgoJ2RpdicsW3RoaXMubGlzdFR5cGU9PT0ncGljdHVyZS1jYXJkJz91cGxvYWRMaXN0OicnLHRoaXMuJHNsb3RzLnRyaWdnZXI/W3VwbG9hZENvbXBvbmVudCx0aGlzLiRzbG90cy5kZWZhdWx0XTp1cGxvYWRDb21wb25lbnQsdGhpcy4kc2xvdHMudGlwLHRoaXMubGlzdFR5cGUhPT0ncGljdHVyZS1jYXJkJz91cGxvYWRMaXN0OicnXSk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy91cGxvYWQvc3JjL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB1cGxvYWRfc3JjdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXNyY3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3VwbG9hZC9zcmMvaW5kZXgudnVlCnZhciBzcmNfcmVuZGVyLHNyY19zdGF0aWNSZW5kZXJGbnM7Lyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciB1cGxvYWRfc3JjX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQodXBsb2FkX3NyY3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxzcmNfcmVuZGVyLHNyY19zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHNyY19hcGk7fXVwbG9hZF9zcmNfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy91cGxvYWQvc3JjL2luZGV4LnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB1cGxvYWRfc3JjPXVwbG9hZF9zcmNfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy91cGxvYWQvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi91cGxvYWRfc3JjLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHVwbG9hZF9zcmMubmFtZSx1cGxvYWRfc3JjKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfdXBsb2FkPXVwbG9hZF9zcmM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9wcm9ncmVzcy9zcmMvcHJvZ3Jlc3MudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTIyOWVlNDA2Jgp2YXIgcHJvZ3Jlc3N2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yMjllZTQwNl9yZW5kZXI9ZnVuY3Rpb24gcHJvZ3Jlc3N2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yMjllZTQwNl9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1wcm9ncmVzcyIsY2xhc3M6WyJlbC1wcm9ncmVzcy0tIitfdm0udHlwZSxfdm0uc3RhdHVzPyJpcy0iK192bS5zdGF0dXM6IiIseyJlbC1wcm9ncmVzcy0td2l0aG91dC10ZXh0IjohX3ZtLnNob3dUZXh0LCJlbC1wcm9ncmVzcy0tdGV4dC1pbnNpZGUiOl92bS50ZXh0SW5zaWRlfV0sYXR0cnM6e3JvbGU6InByb2dyZXNzYmFyIiwiYXJpYS12YWx1ZW5vdyI6X3ZtLnBlcmNlbnRhZ2UsImFyaWEtdmFsdWVtaW4iOiIwIiwiYXJpYS12YWx1ZW1heCI6IjEwMCJ9fSxbX3ZtLnR5cGU9PT0ibGluZSI/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1wcm9ncmVzcy1iYXIifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1wcm9ncmVzcy1iYXJfX291dGVyIixzdHlsZTp7aGVpZ2h0Ol92bS5zdHJva2VXaWR0aCsicHgifX0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtcHJvZ3Jlc3MtYmFyX19pbm5lciIsc3R5bGU6X3ZtLmJhclN0eWxlfSxbX3ZtLnNob3dUZXh0JiZfdm0udGV4dEluc2lkZT9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXByb2dyZXNzLWJhcl9faW5uZXJUZXh0In0sW192bS5fdihfdm0uX3MoX3ZtLmNvbnRlbnQpKV0pOl92bS5fZSgpXSldKV0pOl9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtcHJvZ3Jlc3MtY2lyY2xlIixzdHlsZTp7aGVpZ2h0Ol92bS53aWR0aCsicHgiLHdpZHRoOl92bS53aWR0aCsicHgifX0sW19jKCJzdmciLHthdHRyczp7dmlld0JveDoiMCAwIDEwMCAxMDAifX0sW19jKCJwYXRoIix7c3RhdGljQ2xhc3M6ImVsLXByb2dyZXNzLWNpcmNsZV9fdHJhY2siLHN0eWxlOl92bS50cmFpbFBhdGhTdHlsZSxhdHRyczp7ZDpfdm0udHJhY2tQYXRoLHN0cm9rZToiI2U1ZTlmMiIsInN0cm9rZS13aWR0aCI6X3ZtLnJlbGF0aXZlU3Ryb2tlV2lkdGgsZmlsbDoibm9uZSJ9fSksX2MoInBhdGgiLHtzdGF0aWNDbGFzczoiZWwtcHJvZ3Jlc3MtY2lyY2xlX19wYXRoIixzdHlsZTpfdm0uY2lyY2xlUGF0aFN0eWxlLGF0dHJzOntkOl92bS50cmFja1BhdGgsc3Ryb2tlOl92bS5zdHJva2UsZmlsbDoibm9uZSIsInN0cm9rZS1saW5lY2FwIjpfdm0uc3Ryb2tlTGluZWNhcCwic3Ryb2tlLXdpZHRoIjpfdm0ucGVyY2VudGFnZT9fdm0ucmVsYXRpdmVTdHJva2VXaWR0aDowfX0pXSldKSxfdm0uc2hvd1RleHQmJiFfdm0udGV4dEluc2lkZT9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXByb2dyZXNzX190ZXh0IixzdHlsZTp7Zm9udFNpemU6X3ZtLnByb2dyZXNzVGV4dFNpemUrInB4In19LFshX3ZtLnN0YXR1cz9bX3ZtLl92KF92bS5fcyhfdm0uY29udGVudCkpXTpfYygiaSIse2NsYXNzOl92bS5pY29uQ2xhc3N9KV0sMik6X3ZtLl9lKCldKTt9O3ZhciBwcm9ncmVzc3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzIyOWVlNDA2X3N0YXRpY1JlbmRlckZucz1bXTtwcm9ncmVzc3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzIyOWVlNDA2X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9wcm9ncmVzcy9zcmMvcHJvZ3Jlc3MudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTIyOWVlNDA2JgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9wcm9ncmVzcy9zcmMvcHJvZ3Jlc3MudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHByb2dyZXNzdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbFByb2dyZXNzJyxwcm9wczp7dHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonbGluZScsdmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpe3JldHVyblsnbGluZScsJ2NpcmNsZScsJ2Rhc2hib2FyZCddLmluZGV4T2YodmFsKT4tMTt9fSxwZXJjZW50YWdlOnt0eXBlOk51bWJlcixkZWZhdWx0OjAscmVxdWlyZWQ6dHJ1ZSx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7cmV0dXJuIHZhbD49MCYmdmFsPD0xMDA7fX0sc3RhdHVzOnt0eXBlOlN0cmluZyx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7cmV0dXJuWydzdWNjZXNzJywnZXhjZXB0aW9uJywnd2FybmluZyddLmluZGV4T2YodmFsKT4tMTt9fSxzdHJva2VXaWR0aDp7dHlwZTpOdW1iZXIsZGVmYXVsdDo2fSxzdHJva2VMaW5lY2FwOnt0eXBlOlN0cmluZyxkZWZhdWx0Oidyb3VuZCd9LHRleHRJbnNpZGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSx3aWR0aDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxMjZ9LHNob3dUZXh0Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxjb2xvcjp7dHlwZTpbU3RyaW5nLEFycmF5LEZ1bmN0aW9uXSxkZWZhdWx0OicnfSxmb3JtYXQ6RnVuY3Rpb259LGNvbXB1dGVkOntiYXJTdHlsZTpmdW5jdGlvbiBiYXJTdHlsZSgpe3ZhciBzdHlsZT17fTtzdHlsZS53aWR0aD10aGlzLnBlcmNlbnRhZ2UrJyUnO3N0eWxlLmJhY2tncm91bmRDb2xvcj10aGlzLmdldEN1cnJlbnRDb2xvcih0aGlzLnBlcmNlbnRhZ2UpO3JldHVybiBzdHlsZTt9LHJlbGF0aXZlU3Ryb2tlV2lkdGg6ZnVuY3Rpb24gcmVsYXRpdmVTdHJva2VXaWR0aCgpe3JldHVybih0aGlzLnN0cm9rZVdpZHRoL3RoaXMud2lkdGgqMTAwKS50b0ZpeGVkKDEpO30scmFkaXVzOmZ1bmN0aW9uIHJhZGl1cygpe2lmKHRoaXMudHlwZT09PSdjaXJjbGUnfHx0aGlzLnR5cGU9PT0nZGFzaGJvYXJkJyl7cmV0dXJuIHBhcnNlSW50KDUwLXBhcnNlRmxvYXQodGhpcy5yZWxhdGl2ZVN0cm9rZVdpZHRoKS8yLDEwKTt9ZWxzZXtyZXR1cm4gMDt9fSx0cmFja1BhdGg6ZnVuY3Rpb24gdHJhY2tQYXRoKCl7dmFyIHJhZGl1cz10aGlzLnJhZGl1czt2YXIgaXNEYXNoYm9hcmQ9dGhpcy50eXBlPT09J2Rhc2hib2FyZCc7cmV0dXJuJ1xuICAgICAgICBNIDUwIDUwXG4gICAgICAgIG0gMCAnKyhpc0Rhc2hib2FyZD8nJzonLScpK3JhZGl1cysnXG4gICAgICAgIGEgJytyYWRpdXMrJyAnK3JhZGl1cysnIDAgMSAxIDAgJysoaXNEYXNoYm9hcmQ/Jy0nOicnKStyYWRpdXMqMisnXG4gICAgICAgIGEgJytyYWRpdXMrJyAnK3JhZGl1cysnIDAgMSAxIDAgJysoaXNEYXNoYm9hcmQ/Jyc6Jy0nKStyYWRpdXMqMisnXG4gICAgICAgICc7fSxwZXJpbWV0ZXI6ZnVuY3Rpb24gcGVyaW1ldGVyKCl7cmV0dXJuIDIqTWF0aC5QSSp0aGlzLnJhZGl1czt9LHJhdGU6ZnVuY3Rpb24gcmF0ZSgpe3JldHVybiB0aGlzLnR5cGU9PT0nZGFzaGJvYXJkJz8wLjc1OjE7fSxzdHJva2VEYXNob2Zmc2V0OmZ1bmN0aW9uIHN0cm9rZURhc2hvZmZzZXQoKXt2YXIgb2Zmc2V0PS0xKnRoaXMucGVyaW1ldGVyKigxLXRoaXMucmF0ZSkvMjtyZXR1cm4gb2Zmc2V0KydweCc7fSx0cmFpbFBhdGhTdHlsZTpmdW5jdGlvbiB0cmFpbFBhdGhTdHlsZSgpe3JldHVybntzdHJva2VEYXNoYXJyYXk6dGhpcy5wZXJpbWV0ZXIqdGhpcy5yYXRlKydweCwgJyt0aGlzLnBlcmltZXRlcisncHgnLHN0cm9rZURhc2hvZmZzZXQ6dGhpcy5zdHJva2VEYXNob2Zmc2V0fTt9LGNpcmNsZVBhdGhTdHlsZTpmdW5jdGlvbiBjaXJjbGVQYXRoU3R5bGUoKXtyZXR1cm57c3Ryb2tlRGFzaGFycmF5OnRoaXMucGVyaW1ldGVyKnRoaXMucmF0ZSoodGhpcy5wZXJjZW50YWdlLzEwMCkrJ3B4LCAnK3RoaXMucGVyaW1ldGVyKydweCcsc3Ryb2tlRGFzaG9mZnNldDp0aGlzLnN0cm9rZURhc2hvZmZzZXQsdHJhbnNpdGlvbjonc3Ryb2tlLWRhc2hhcnJheSAwLjZzIGVhc2UgMHMsIHN0cm9rZSAwLjZzIGVhc2UnfTt9LHN0cm9rZTpmdW5jdGlvbiBzdHJva2UoKXt2YXIgcmV0PXZvaWQgMDtpZih0aGlzLmNvbG9yKXtyZXQ9dGhpcy5nZXRDdXJyZW50Q29sb3IodGhpcy5wZXJjZW50YWdlKTt9ZWxzZXtzd2l0Y2godGhpcy5zdGF0dXMpe2Nhc2Unc3VjY2Vzcyc6cmV0PScjMTNjZTY2JzticmVhaztjYXNlJ2V4Y2VwdGlvbic6cmV0PScjZmY0OTQ5JzticmVhaztjYXNlJ3dhcm5pbmcnOnJldD0nI2U2YTIzYyc7YnJlYWs7ZGVmYXVsdDpyZXQ9JyMyMGEwZmYnO319cmV0dXJuIHJldDt9LGljb25DbGFzczpmdW5jdGlvbiBpY29uQ2xhc3MoKXtpZih0aGlzLnN0YXR1cz09PSd3YXJuaW5nJyl7cmV0dXJuJ2VsLWljb24td2FybmluZyc7fWlmKHRoaXMudHlwZT09PSdsaW5lJyl7cmV0dXJuIHRoaXMuc3RhdHVzPT09J3N1Y2Nlc3MnPydlbC1pY29uLWNpcmNsZS1jaGVjayc6J2VsLWljb24tY2lyY2xlLWNsb3NlJzt9ZWxzZXtyZXR1cm4gdGhpcy5zdGF0dXM9PT0nc3VjY2Vzcyc/J2VsLWljb24tY2hlY2snOidlbC1pY29uLWNsb3NlJzt9fSxwcm9ncmVzc1RleHRTaXplOmZ1bmN0aW9uIHByb2dyZXNzVGV4dFNpemUoKXtyZXR1cm4gdGhpcy50eXBlPT09J2xpbmUnPzEyK3RoaXMuc3Ryb2tlV2lkdGgqMC40OnRoaXMud2lkdGgqMC4xMTExMTErMjt9LGNvbnRlbnQ6ZnVuY3Rpb24gY29udGVudCgpe2lmKHR5cGVvZiB0aGlzLmZvcm1hdD09PSdmdW5jdGlvbicpe3JldHVybiB0aGlzLmZvcm1hdCh0aGlzLnBlcmNlbnRhZ2UpfHwnJzt9ZWxzZXtyZXR1cm4gdGhpcy5wZXJjZW50YWdlKyclJzt9fX0sbWV0aG9kczp7Z2V0Q3VycmVudENvbG9yOmZ1bmN0aW9uIGdldEN1cnJlbnRDb2xvcihwZXJjZW50YWdlKXtpZih0eXBlb2YgdGhpcy5jb2xvcj09PSdmdW5jdGlvbicpe3JldHVybiB0aGlzLmNvbG9yKHBlcmNlbnRhZ2UpO31lbHNlIGlmKHR5cGVvZiB0aGlzLmNvbG9yPT09J3N0cmluZycpe3JldHVybiB0aGlzLmNvbG9yO31lbHNle3JldHVybiB0aGlzLmdldExldmVsQ29sb3IocGVyY2VudGFnZSk7fX0sZ2V0TGV2ZWxDb2xvcjpmdW5jdGlvbiBnZXRMZXZlbENvbG9yKHBlcmNlbnRhZ2Upe3ZhciBjb2xvckFycmF5PXRoaXMuZ2V0Q29sb3JBcnJheSgpLnNvcnQoZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5wZXJjZW50YWdlLWIucGVyY2VudGFnZTt9KTtmb3IodmFyIGk9MDtpPGNvbG9yQXJyYXkubGVuZ3RoO2krKyl7aWYoY29sb3JBcnJheVtpXS5wZXJjZW50YWdlPnBlcmNlbnRhZ2Upe3JldHVybiBjb2xvckFycmF5W2ldLmNvbG9yO319cmV0dXJuIGNvbG9yQXJyYXlbY29sb3JBcnJheS5sZW5ndGgtMV0uY29sb3I7fSxnZXRDb2xvckFycmF5OmZ1bmN0aW9uIGdldENvbG9yQXJyYXkoKXt2YXIgY29sb3I9dGhpcy5jb2xvcjt2YXIgc3Bhbj0xMDAvY29sb3IubGVuZ3RoO3JldHVybiBjb2xvci5tYXAoZnVuY3Rpb24oc2VyaWVzQ29sb3IsaW5kZXgpe2lmKHR5cGVvZiBzZXJpZXNDb2xvcj09PSdzdHJpbmcnKXtyZXR1cm57Y29sb3I6c2VyaWVzQ29sb3IscGVyY2VudGFnZTooaW5kZXgrMSkqc3Bhbn07fXJldHVybiBzZXJpZXNDb2xvcjt9KTt9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9wcm9ncmVzcy9zcmMvcHJvZ3Jlc3MudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19wcm9ncmVzc3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1wcm9ncmVzc3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3Byb2dyZXNzL3NyYy9wcm9ncmVzcy52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBwcm9ncmVzc19jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19wcm9ncmVzc3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxwcm9ncmVzc3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzIyOWVlNDA2X3JlbmRlcixwcm9ncmVzc3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzIyOWVlNDA2X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgcHJvZ3Jlc3NfYXBpO31wcm9ncmVzc19jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3Byb2dyZXNzL3NyYy9wcm9ncmVzcy52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcHJvZ3Jlc3M9cHJvZ3Jlc3NfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9wcm9ncmVzcy9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3Byb2dyZXNzLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHByb2dyZXNzLm5hbWUscHJvZ3Jlc3MpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19wcm9ncmVzcz1wcm9ncmVzczsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NwaW5uZXIvc3JjL3NwaW5uZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY5N2I4NTM4Jgp2YXIgc3Bpbm5lcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzY5N2I4NTM4X3JlbmRlcj1mdW5jdGlvbiBzcGlubmVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNjk3Yjg1MzhfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLXNwaW5uZXIifSxbX2MoInN2ZyIse3N0YXRpY0NsYXNzOiJlbC1zcGlubmVyLWlubmVyIixzdHlsZTp7d2lkdGg6X3ZtLnJhZGl1cy8yKyJweCIsaGVpZ2h0Ol92bS5yYWRpdXMvMisicHgifSxhdHRyczp7dmlld0JveDoiMCAwIDUwIDUwIn19LFtfYygiY2lyY2xlIix7c3RhdGljQ2xhc3M6InBhdGgiLGF0dHJzOntjeDoiMjUiLGN5OiIyNSIscjoiMjAiLGZpbGw6Im5vbmUiLHN0cm9rZTpfdm0uc3Ryb2tlQ29sb3IsInN0cm9rZS13aWR0aCI6X3ZtLnN0cm9rZVdpZHRofX0pXSldKTt9O3ZhciBzcGlubmVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNjk3Yjg1Mzhfc3RhdGljUmVuZGVyRm5zPVtdO3NwaW5uZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF82OTdiODUzOF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc3Bpbm5lci9zcmMvc3Bpbm5lci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Njk3Yjg1MzgmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3NwaW5uZXIvc3JjL3NwaW5uZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNwaW5uZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsU3Bpbm5lcicscHJvcHM6e3R5cGU6U3RyaW5nLHJhZGl1czp7dHlwZTpOdW1iZXIsZGVmYXVsdDoxMDB9LHN0cm9rZVdpZHRoOnt0eXBlOk51bWJlcixkZWZhdWx0OjV9LHN0cm9rZUNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OicjZWZlZmVmJ319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3NwaW5uZXIvc3JjL3NwaW5uZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19zcGlubmVydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXNwaW5uZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zcGlubmVyL3NyYy9zcGlubmVyLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHNwaW5uZXJfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfc3Bpbm5lcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxzcGlubmVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNjk3Yjg1MzhfcmVuZGVyLHNwaW5uZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF82OTdiODUzOF9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHNwaW5uZXJfYXBpO31zcGlubmVyX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvc3Bpbm5lci9zcmMvc3Bpbm5lci52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3Bpbm5lcj1zcGlubmVyX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc3Bpbm5lci9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NwaW5uZXIuaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoc3Bpbm5lci5uYW1lLHNwaW5uZXIpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19zcGlubmVyPXNwaW5uZXI7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9tZXNzYWdlL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00NTViOWY2MCYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF80NTViOWY2MF9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ1NWI5ZjYwX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidHJhbnNpdGlvbiIse2F0dHJzOntuYW1lOiJlbC1tZXNzYWdlLWZhZGUifSxvbjp7ImFmdGVyLWxlYXZlIjpfdm0uaGFuZGxlQWZ0ZXJMZWF2ZX19LFtfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnZpc2libGUsZXhwcmVzc2lvbjoidmlzaWJsZSJ9XSxjbGFzczpbImVsLW1lc3NhZ2UiLF92bS50eXBlJiYhX3ZtLmljb25DbGFzcz8iZWwtbWVzc2FnZS0tIitfdm0udHlwZToiIixfdm0uY2VudGVyPyJpcy1jZW50ZXIiOiIiLF92bS5zaG93Q2xvc2U/ImlzLWNsb3NhYmxlIjoiIixfdm0uY3VzdG9tQ2xhc3NdLHN0eWxlOl92bS5wb3NpdGlvblN0eWxlLGF0dHJzOntyb2xlOiJhbGVydCJ9LG9uOnttb3VzZWVudGVyOl92bS5jbGVhclRpbWVyLG1vdXNlbGVhdmU6X3ZtLnN0YXJ0VGltZXJ9fSxbX3ZtLmljb25DbGFzcz9fYygiaSIse2NsYXNzOl92bS5pY29uQ2xhc3N9KTpfYygiaSIse2NsYXNzOl92bS50eXBlQ2xhc3N9KSxfdm0uX3QoImRlZmF1bHQiLFshX3ZtLmRhbmdlcm91c2x5VXNlSFRNTFN0cmluZz9fYygicCIse3N0YXRpY0NsYXNzOiJlbC1tZXNzYWdlX19jb250ZW50In0sW192bS5fdihfdm0uX3MoX3ZtLm1lc3NhZ2UpKV0pOl9jKCJwIix7c3RhdGljQ2xhc3M6ImVsLW1lc3NhZ2VfX2NvbnRlbnQiLGRvbVByb3BzOntpbm5lckhUTUw6X3ZtLl9zKF92bS5tZXNzYWdlKX19KV0pLF92bS5zaG93Q2xvc2U/X2MoImkiLHtzdGF0aWNDbGFzczoiZWwtbWVzc2FnZV9fY2xvc2VCdG4gZWwtaWNvbi1jbG9zZSIsb246e2NsaWNrOl92bS5jbG9zZX19KTpfdm0uX2UoKV0sMildKTt9O3ZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNDU1YjlmNjBfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF80NTViOWY2MF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVzc2FnZS9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDU1YjlmNjAmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL21lc3NhZ2Uvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc190eXBlTWFwPXtzdWNjZXNzOidzdWNjZXNzJyxpbmZvOidpbmZvJyx3YXJuaW5nOid3YXJuaW5nJyxlcnJvcjonZXJyb3InfTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIG1lc3NhZ2Vfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e2RhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnt2aXNpYmxlOmZhbHNlLG1lc3NhZ2U6JycsZHVyYXRpb246MzAwMCx0eXBlOidpbmZvJyxpY29uQ2xhc3M6JycsY3VzdG9tQ2xhc3M6Jycsb25DbG9zZTpudWxsLHNob3dDbG9zZTpmYWxzZSxjbG9zZWQ6ZmFsc2UsdmVydGljYWxPZmZzZXQ6MjAsdGltZXI6bnVsbCxkYW5nZXJvdXNseVVzZUhUTUxTdHJpbmc6ZmFsc2UsY2VudGVyOmZhbHNlfTt9LGNvbXB1dGVkOnt0eXBlQ2xhc3M6ZnVuY3Rpb24gdHlwZUNsYXNzKCl7cmV0dXJuIHRoaXMudHlwZSYmIXRoaXMuaWNvbkNsYXNzPydlbC1tZXNzYWdlX19pY29uIGVsLWljb24tJytzcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX3R5cGVNYXBbdGhpcy50eXBlXTonJzt9LHBvc2l0aW9uU3R5bGU6ZnVuY3Rpb24gcG9zaXRpb25TdHlsZSgpe3JldHVybnsndG9wJzp0aGlzLnZlcnRpY2FsT2Zmc2V0KydweCd9O319LHdhdGNoOntjbG9zZWQ6ZnVuY3Rpb24gY2xvc2VkKG5ld1ZhbCl7aWYobmV3VmFsKXt0aGlzLnZpc2libGU9ZmFsc2U7fX19LG1ldGhvZHM6e2hhbmRsZUFmdGVyTGVhdmU6ZnVuY3Rpb24gaGFuZGxlQWZ0ZXJMZWF2ZSgpe3RoaXMuJGRlc3Ryb3kodHJ1ZSk7dGhpcy4kZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLiRlbCk7fSxjbG9zZTpmdW5jdGlvbiBjbG9zZSgpe3RoaXMuY2xvc2VkPXRydWU7aWYodHlwZW9mIHRoaXMub25DbG9zZT09PSdmdW5jdGlvbicpe3RoaXMub25DbG9zZSh0aGlzKTt9fSxjbGVhclRpbWVyOmZ1bmN0aW9uIGNsZWFyVGltZXIoKXtjbGVhclRpbWVvdXQodGhpcy50aW1lcik7fSxzdGFydFRpbWVyOmZ1bmN0aW9uIHN0YXJ0VGltZXIoKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLmR1cmF0aW9uPjApe3RoaXMudGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe2lmKCFfdGhpcy5jbG9zZWQpe190aGlzLmNsb3NlKCk7fX0sdGhpcy5kdXJhdGlvbik7fX0sa2V5ZG93bjpmdW5jdGlvbiBrZXlkb3duKGUpe2lmKGUua2V5Q29kZT09PTI3KXsvLyBlc2PlhbPpl63mtojmga8KaWYoIXRoaXMuY2xvc2VkKXt0aGlzLmNsb3NlKCk7fX19fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt0aGlzLnN0YXJ0VGltZXIoKTtkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJyx0aGlzLmtleWRvd24pO30sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsdGhpcy5rZXlkb3duKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21lc3NhZ2Uvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX21lc3NhZ2Vfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bWVzc2FnZV9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21lc3NhZ2Uvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgbWVzc2FnZV9zcmNfbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhY2thZ2VzX21lc3NhZ2Vfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ1NWI5ZjYwX3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNDU1YjlmNjBfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBtZXNzYWdlX3NyY19tYWluX2FwaTt9bWVzc2FnZV9zcmNfbWFpbl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL21lc3NhZ2Uvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIG1lc3NhZ2Vfc3JjX21haW49bWVzc2FnZV9zcmNfbWFpbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21lc3NhZ2Uvc3JjL21haW4uanMKdmFyIE1lc3NhZ2VDb25zdHJ1Y3Rvcj1leHRlcm5hbF92dWVfZGVmYXVsdC5hLmV4dGVuZChtZXNzYWdlX3NyY19tYWluKTt2YXIgbWVzc2FnZV9zcmNfbWFpbl9pbnN0YW5jZT12b2lkIDA7dmFyIG1haW5faW5zdGFuY2VzPVtdO3ZhciBtYWluX3NlZWQ9MTt2YXIgbWFpbl9NZXNzYWdlPWZ1bmN0aW9uIE1lc3NhZ2Uob3B0aW9ucyl7aWYoZXh0ZXJuYWxfdnVlX2RlZmF1bHQuYS5wcm90b3R5cGUuJGlzU2VydmVyKXJldHVybjtvcHRpb25zPW9wdGlvbnN8fHt9O2lmKHR5cGVvZiBvcHRpb25zPT09J3N0cmluZycpe29wdGlvbnM9e21lc3NhZ2U6b3B0aW9uc307fXZhciB1c2VyT25DbG9zZT1vcHRpb25zLm9uQ2xvc2U7dmFyIGlkPSdtZXNzYWdlXycrbWFpbl9zZWVkKys7b3B0aW9ucy5vbkNsb3NlPWZ1bmN0aW9uKCl7TWVzc2FnZS5jbG9zZShpZCx1c2VyT25DbG9zZSk7fTttZXNzYWdlX3NyY19tYWluX2luc3RhbmNlPW5ldyBNZXNzYWdlQ29uc3RydWN0b3Ioe2RhdGE6b3B0aW9uc30pO21lc3NhZ2Vfc3JjX21haW5faW5zdGFuY2UuaWQ9aWQ7aWYoT2JqZWN0KHZkb21fWyJpc1ZOb2RlIl0pKG1lc3NhZ2Vfc3JjX21haW5faW5zdGFuY2UubWVzc2FnZSkpe21lc3NhZ2Vfc3JjX21haW5faW5zdGFuY2UuJHNsb3RzLmRlZmF1bHQ9W21lc3NhZ2Vfc3JjX21haW5faW5zdGFuY2UubWVzc2FnZV07bWVzc2FnZV9zcmNfbWFpbl9pbnN0YW5jZS5tZXNzYWdlPW51bGw7fW1lc3NhZ2Vfc3JjX21haW5faW5zdGFuY2UuJG1vdW50KCk7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtZXNzYWdlX3NyY19tYWluX2luc3RhbmNlLiRlbCk7dmFyIHZlcnRpY2FsT2Zmc2V0PW9wdGlvbnMub2Zmc2V0fHwyMDttYWluX2luc3RhbmNlcy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pe3ZlcnRpY2FsT2Zmc2V0Kz1pdGVtLiRlbC5vZmZzZXRIZWlnaHQrMTY7fSk7bWVzc2FnZV9zcmNfbWFpbl9pbnN0YW5jZS52ZXJ0aWNhbE9mZnNldD12ZXJ0aWNhbE9mZnNldDttZXNzYWdlX3NyY19tYWluX2luc3RhbmNlLnZpc2libGU9dHJ1ZTttZXNzYWdlX3NyY19tYWluX2luc3RhbmNlLiRlbC5zdHlsZS56SW5kZXg9cG9wdXBfWyJQb3B1cE1hbmFnZXIiXS5uZXh0WkluZGV4KCk7bWFpbl9pbnN0YW5jZXMucHVzaChtZXNzYWdlX3NyY19tYWluX2luc3RhbmNlKTtyZXR1cm4gbWVzc2FnZV9zcmNfbWFpbl9pbnN0YW5jZTt9O1snc3VjY2VzcycsJ3dhcm5pbmcnLCdpbmZvJywnZXJyb3InXS5mb3JFYWNoKGZ1bmN0aW9uKHR5cGUpe21haW5fTWVzc2FnZVt0eXBlXT1mdW5jdGlvbihvcHRpb25zKXtpZih0eXBlb2Ygb3B0aW9ucz09PSdzdHJpbmcnKXtvcHRpb25zPXttZXNzYWdlOm9wdGlvbnN9O31vcHRpb25zLnR5cGU9dHlwZTtyZXR1cm4gbWFpbl9NZXNzYWdlKG9wdGlvbnMpO307fSk7bWFpbl9NZXNzYWdlLmNsb3NlPWZ1bmN0aW9uKGlkLHVzZXJPbkNsb3NlKXt2YXIgbGVuPW1haW5faW5zdGFuY2VzLmxlbmd0aDt2YXIgaW5kZXg9LTE7dmFyIHJlbW92ZWRIZWlnaHQ9dm9pZCAwO2Zvcih2YXIgaT0wO2k8bGVuO2krKyl7aWYoaWQ9PT1tYWluX2luc3RhbmNlc1tpXS5pZCl7cmVtb3ZlZEhlaWdodD1tYWluX2luc3RhbmNlc1tpXS4kZWwub2Zmc2V0SGVpZ2h0O2luZGV4PWk7aWYodHlwZW9mIHVzZXJPbkNsb3NlPT09J2Z1bmN0aW9uJyl7dXNlck9uQ2xvc2UobWFpbl9pbnN0YW5jZXNbaV0pO31tYWluX2luc3RhbmNlcy5zcGxpY2UoaSwxKTticmVhazt9fWlmKGxlbjw9MXx8aW5kZXg9PT0tMXx8aW5kZXg+bWFpbl9pbnN0YW5jZXMubGVuZ3RoLTEpcmV0dXJuO2Zvcih2YXIgX2k9aW5kZXg7X2k8bGVuLTE7X2krKyl7dmFyIGRvbT1tYWluX2luc3RhbmNlc1tfaV0uJGVsO2RvbS5zdHlsZVsndG9wJ109cGFyc2VJbnQoZG9tLnN0eWxlWyd0b3AnXSwxMCktcmVtb3ZlZEhlaWdodC0xNisncHgnO319O21haW5fTWVzc2FnZS5jbG9zZUFsbD1mdW5jdGlvbigpe2Zvcih2YXIgaT1tYWluX2luc3RhbmNlcy5sZW5ndGgtMTtpPj0wO2ktLSl7bWFpbl9pbnN0YW5jZXNbaV0uY2xvc2UoKTt9fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX21lc3NhZ2Vfc3JjX21haW49bWFpbl9NZXNzYWdlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvbWVzc2FnZS9pbmRleC5qcwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX21lc3NhZ2U9cGFja2FnZXNfbWVzc2FnZV9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2JhZGdlL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD03Y2NiNjU5OCYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF83Y2NiNjU5OF9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdjY2I2NTk4X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWJhZGdlIn0sW192bS5fdCgiZGVmYXVsdCIpLF9jKCJ0cmFuc2l0aW9uIix7YXR0cnM6e25hbWU6ImVsLXpvb20taW4tY2VudGVyIn19LFtfYygic3VwIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6IV92bS5oaWRkZW4mJihfdm0uY29udGVudHx8X3ZtLmNvbnRlbnQ9PT0wfHxfdm0uaXNEb3QpLGV4cHJlc3Npb246IiFoaWRkZW4gJiYgKGNvbnRlbnQgfHwgY29udGVudCA9PT0gMCB8fCBpc0RvdCkifV0sc3RhdGljQ2xhc3M6ImVsLWJhZGdlX19jb250ZW50IixjbGFzczpbImVsLWJhZGdlX19jb250ZW50LS0iK192bS50eXBlLHsiaXMtZml4ZWQiOl92bS4kc2xvdHMuZGVmYXVsdCwiaXMtZG90Ijpfdm0uaXNEb3R9XSxkb21Qcm9wczp7dGV4dENvbnRlbnQ6X3ZtLl9zKF92bS5jb250ZW50KX19KV0pXSwyKTt9O3ZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfN2NjYjY1OThfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF83Y2NiNjU5OF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYmFkZ2Uvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdjY2I2NTk4JgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9iYWRnZS9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYmFkZ2Vfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQmFkZ2UnLHByb3BzOnt2YWx1ZTpbU3RyaW5nLE51bWJlcl0sbWF4Ok51bWJlcixpc0RvdDpCb29sZWFuLGhpZGRlbjpCb29sZWFuLHR5cGU6e3R5cGU6U3RyaW5nLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtyZXR1cm5bJ3ByaW1hcnknLCdzdWNjZXNzJywnd2FybmluZycsJ2luZm8nLCdkYW5nZXInXS5pbmRleE9mKHZhbCk+LTE7fX19LGNvbXB1dGVkOntjb250ZW50OmZ1bmN0aW9uIGNvbnRlbnQoKXtpZih0aGlzLmlzRG90KXJldHVybjt2YXIgdmFsdWU9dGhpcy52YWx1ZTt2YXIgbWF4PXRoaXMubWF4O2lmKHR5cGVvZiB2YWx1ZT09PSdudW1iZXInJiZ0eXBlb2YgbWF4PT09J251bWJlcicpe3JldHVybiBtYXg8dmFsdWU/bWF4KycrJzp2YWx1ZTt9cmV0dXJuIHZhbHVlO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2JhZGdlL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19iYWRnZV9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1iYWRnZV9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2JhZGdlL3NyYy9tYWluLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGJhZGdlX3NyY19tYWluX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQocGFja2FnZXNfYmFkZ2Vfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdjY2I2NTk4X3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfN2NjYjY1OThfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBiYWRnZV9zcmNfbWFpbl9hcGk7fWJhZGdlX3NyY19tYWluX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvYmFkZ2Uvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGJhZGdlX3NyY19tYWluPWJhZGdlX3NyY19tYWluX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYmFkZ2UvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9iYWRnZV9zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChiYWRnZV9zcmNfbWFpbi5uYW1lLGJhZGdlX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYmFkZ2U9YmFkZ2Vfc3JjX21haW47Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jYXJkL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01OWE0YTQwZiYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81OWE0YTQwZl9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzU5YTRhNDBmX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNhcmQiLGNsYXNzOl92bS5zaGFkb3c/ImlzLSIrX3ZtLnNoYWRvdysiLXNoYWRvdyI6ImlzLWFsd2F5cy1zaGFkb3cifSxbX3ZtLiRzbG90cy5oZWFkZXJ8fF92bS5oZWFkZXI/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jYXJkX19oZWFkZXIifSxbX3ZtLl90KCJoZWFkZXIiLFtfdm0uX3YoX3ZtLl9zKF92bS5oZWFkZXIpKV0pXSwyKTpfdm0uX2UoKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNhcmRfX2JvZHkiLHN0eWxlOl92bS5ib2R5U3R5bGV9LFtfdm0uX3QoImRlZmF1bHQiKV0sMildKTt9O3ZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNTlhNGE0MGZfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81OWE0YTQwZl9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FyZC9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NTlhNGE0MGYmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NhcmQvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNhcmRfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQ2FyZCcscHJvcHM6e2hlYWRlcjp7fSxib2R5U3R5bGU6e30sc2hhZG93Ont0eXBlOlN0cmluZ319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NhcmQvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2NhcmRfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189Y2FyZF9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NhcmQvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgY2FyZF9zcmNfbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhY2thZ2VzX2NhcmRfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzU5YTRhNDBmX3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNTlhNGE0MGZfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBjYXJkX3NyY19tYWluX2FwaTt9Y2FyZF9zcmNfbWFpbl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2NhcmQvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNhcmRfc3JjX21haW49Y2FyZF9zcmNfbWFpbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NhcmQvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9jYXJkX3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGNhcmRfc3JjX21haW4ubmFtZSxjYXJkX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY2FyZD1jYXJkX3NyY19tYWluOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvcmF0ZS9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9YWRhNTc3ODImCnZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfYWRhNTc3ODJfcmVuZGVyPWZ1bmN0aW9uIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF9hZGE1Nzc4Ml9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1yYXRlIixhdHRyczp7cm9sZToic2xpZGVyIiwiYXJpYS12YWx1ZW5vdyI6X3ZtLmN1cnJlbnRWYWx1ZSwiYXJpYS12YWx1ZXRleHQiOl92bS50ZXh0LCJhcmlhLXZhbHVlbWluIjoiMCIsImFyaWEtdmFsdWVtYXgiOl92bS5tYXgsdGFiaW5kZXg6IjAifSxvbjp7a2V5ZG93bjpfdm0uaGFuZGxlS2V5fX0sW192bS5fbChfdm0ubWF4LGZ1bmN0aW9uKGl0ZW0sa2V5KXtyZXR1cm4gX2MoInNwYW4iLHtrZXk6a2V5LHN0YXRpY0NsYXNzOiJlbC1yYXRlX19pdGVtIixzdHlsZTp7Y3Vyc29yOl92bS5yYXRlRGlzYWJsZWQ/ImF1dG8iOiJwb2ludGVyIn0sb246e21vdXNlbW92ZTpmdW5jdGlvbiBtb3VzZW1vdmUoJGV2ZW50KXtfdm0uc2V0Q3VycmVudFZhbHVlKGl0ZW0sJGV2ZW50KTt9LG1vdXNlbGVhdmU6X3ZtLnJlc2V0Q3VycmVudFZhbHVlLGNsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLnNlbGVjdFZhbHVlKGl0ZW0pO319fSxbX2MoImkiLHtzdGF0aWNDbGFzczoiZWwtcmF0ZV9faWNvbiIsY2xhc3M6W192bS5jbGFzc2VzW2l0ZW0tMV0se2hvdmVyOl92bS5ob3ZlckluZGV4PT09aXRlbX1dLHN0eWxlOl92bS5nZXRJY29uU3R5bGUoaXRlbSl9LFtfdm0uc2hvd0RlY2ltYWxJY29uKGl0ZW0pP19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLXJhdGVfX2RlY2ltYWwiLGNsYXNzOl92bS5kZWNpbWFsSWNvbkNsYXNzLHN0eWxlOl92bS5kZWNpbWFsU3R5bGV9KTpfdm0uX2UoKV0pXSk7fSksX3ZtLnNob3dUZXh0fHxfdm0uc2hvd1Njb3JlP19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLXJhdGVfX3RleHQiLHN0eWxlOntjb2xvcjpfdm0udGV4dENvbG9yfX0sW192bS5fdihfdm0uX3MoX3ZtLnRleHQpKV0pOl92bS5fZSgpXSwyKTt9O3ZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfYWRhNTc3ODJfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF9hZGE1Nzc4Ml9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcmF0ZS9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9YWRhNTc3ODImCi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3V0aWxzL3R5cGVzIgp2YXIgdHlwZXNfPV9fd2VicGFja19yZXF1aXJlX18oMTgpOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3JhdGUvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHJhdGVfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsUmF0ZScsbWl4aW5zOlttaWdyYXRpbmdfZGVmYXVsdC5hXSxpbmplY3Q6e2VsRm9ybTp7ZGVmYXVsdDonJ319LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntwb2ludGVyQXRMZWZ0SGFsZjp0cnVlLGN1cnJlbnRWYWx1ZTp0aGlzLnZhbHVlLGhvdmVySW5kZXg6LTF9O30scHJvcHM6e3ZhbHVlOnt0eXBlOk51bWJlcixkZWZhdWx0OjB9LGxvd1RocmVzaG9sZDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoyfSxoaWdoVGhyZXNob2xkOnt0eXBlOk51bWJlcixkZWZhdWx0OjR9LG1heDp7dHlwZTpOdW1iZXIsZGVmYXVsdDo1fSxjb2xvcnM6e3R5cGU6W0FycmF5LE9iamVjdF0sZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVyblsnI0Y3QkEyQScsJyNGN0JBMkEnLCcjRjdCQTJBJ107fX0sdm9pZENvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OicjQzZEMURFJ30sZGlzYWJsZWRWb2lkQ29sb3I6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6JyNFRkYyRjcnfSxpY29uQ2xhc3Nlczp7dHlwZTpbQXJyYXksT2JqZWN0XSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuWydlbC1pY29uLXN0YXItb24nLCdlbC1pY29uLXN0YXItb24nLCdlbC1pY29uLXN0YXItb24nXTt9fSx2b2lkSWNvbkNsYXNzOnt0eXBlOlN0cmluZyxkZWZhdWx0OidlbC1pY29uLXN0YXItb2ZmJ30sZGlzYWJsZWRWb2lkSWNvbkNsYXNzOnt0eXBlOlN0cmluZyxkZWZhdWx0OidlbC1pY29uLXN0YXItb24nfSxkaXNhYmxlZDp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LGFsbG93SGFsZjp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9LHNob3dUZXh0Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0sc2hvd1Njb3JlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0sdGV4dENvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OicjMWYyZDNkJ30sdGV4dHM6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVyblsn5p6B5beuJywn5aSx5pybJywn5LiA6IisJywn5ruh5oSPJywn5oOK5ZacJ107fX0sc2NvcmVUZW1wbGF0ZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDone3ZhbHVlfSd9fSxjb21wdXRlZDp7dGV4dDpmdW5jdGlvbiB0ZXh0KCl7dmFyIHJlc3VsdD0nJztpZih0aGlzLnNob3dTY29yZSl7cmVzdWx0PXRoaXMuc2NvcmVUZW1wbGF0ZS5yZXBsYWNlKC9ce1xzKnZhbHVlXHMqXH0vLHRoaXMucmF0ZURpc2FibGVkP3RoaXMudmFsdWU6dGhpcy5jdXJyZW50VmFsdWUpO31lbHNlIGlmKHRoaXMuc2hvd1RleHQpe3Jlc3VsdD10aGlzLnRleHRzW01hdGguY2VpbCh0aGlzLmN1cnJlbnRWYWx1ZSktMV07fXJldHVybiByZXN1bHQ7fSxkZWNpbWFsU3R5bGU6ZnVuY3Rpb24gZGVjaW1hbFN0eWxlKCl7dmFyIHdpZHRoPScnO2lmKHRoaXMucmF0ZURpc2FibGVkKXt3aWR0aD10aGlzLnZhbHVlRGVjaW1hbCsnJSc7fWVsc2UgaWYodGhpcy5hbGxvd0hhbGYpe3dpZHRoPSc1MCUnO31yZXR1cm57Y29sb3I6dGhpcy5hY3RpdmVDb2xvcix3aWR0aDp3aWR0aH07fSx2YWx1ZURlY2ltYWw6ZnVuY3Rpb24gdmFsdWVEZWNpbWFsKCl7cmV0dXJuIHRoaXMudmFsdWUqMTAwLU1hdGguZmxvb3IodGhpcy52YWx1ZSkqMTAwO30sY2xhc3NNYXA6ZnVuY3Rpb24gY2xhc3NNYXAoKXt2YXIgX3JlZjtyZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLmljb25DbGFzc2VzKT8oX3JlZj17fSxfcmVmW3RoaXMubG93VGhyZXNob2xkXT10aGlzLmljb25DbGFzc2VzWzBdLF9yZWZbdGhpcy5oaWdoVGhyZXNob2xkXT17dmFsdWU6dGhpcy5pY29uQ2xhc3Nlc1sxXSxleGNsdWRlZDp0cnVlfSxfcmVmW3RoaXMubWF4XT10aGlzLmljb25DbGFzc2VzWzJdLF9yZWYpOnRoaXMuaWNvbkNsYXNzZXM7fSxkZWNpbWFsSWNvbkNsYXNzOmZ1bmN0aW9uIGRlY2ltYWxJY29uQ2xhc3MoKXtyZXR1cm4gdGhpcy5nZXRWYWx1ZUZyb21NYXAodGhpcy52YWx1ZSx0aGlzLmNsYXNzTWFwKTt9LHZvaWRDbGFzczpmdW5jdGlvbiB2b2lkQ2xhc3MoKXtyZXR1cm4gdGhpcy5yYXRlRGlzYWJsZWQ/dGhpcy5kaXNhYmxlZFZvaWRJY29uQ2xhc3M6dGhpcy52b2lkSWNvbkNsYXNzO30sYWN0aXZlQ2xhc3M6ZnVuY3Rpb24gYWN0aXZlQ2xhc3MoKXtyZXR1cm4gdGhpcy5nZXRWYWx1ZUZyb21NYXAodGhpcy5jdXJyZW50VmFsdWUsdGhpcy5jbGFzc01hcCk7fSxjb2xvck1hcDpmdW5jdGlvbiBjb2xvck1hcCgpe3ZhciBfcmVmMjtyZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLmNvbG9ycyk/KF9yZWYyPXt9LF9yZWYyW3RoaXMubG93VGhyZXNob2xkXT10aGlzLmNvbG9yc1swXSxfcmVmMlt0aGlzLmhpZ2hUaHJlc2hvbGRdPXt2YWx1ZTp0aGlzLmNvbG9yc1sxXSxleGNsdWRlZDp0cnVlfSxfcmVmMlt0aGlzLm1heF09dGhpcy5jb2xvcnNbMl0sX3JlZjIpOnRoaXMuY29sb3JzO30sYWN0aXZlQ29sb3I6ZnVuY3Rpb24gYWN0aXZlQ29sb3IoKXtyZXR1cm4gdGhpcy5nZXRWYWx1ZUZyb21NYXAodGhpcy5jdXJyZW50VmFsdWUsdGhpcy5jb2xvck1hcCk7fSxjbGFzc2VzOmZ1bmN0aW9uIGNsYXNzZXMoKXt2YXIgcmVzdWx0PVtdO3ZhciBpPTA7dmFyIHRocmVzaG9sZD10aGlzLmN1cnJlbnRWYWx1ZTtpZih0aGlzLmFsbG93SGFsZiYmdGhpcy5jdXJyZW50VmFsdWUhPT1NYXRoLmZsb29yKHRoaXMuY3VycmVudFZhbHVlKSl7dGhyZXNob2xkLS07fWZvcig7aTx0aHJlc2hvbGQ7aSsrKXtyZXN1bHQucHVzaCh0aGlzLmFjdGl2ZUNsYXNzKTt9Zm9yKDtpPHRoaXMubWF4O2krKyl7cmVzdWx0LnB1c2godGhpcy52b2lkQ2xhc3MpO31yZXR1cm4gcmVzdWx0O30scmF0ZURpc2FibGVkOmZ1bmN0aW9uIHJhdGVEaXNhYmxlZCgpe3JldHVybiB0aGlzLmRpc2FibGVkfHwodGhpcy5lbEZvcm18fHt9KS5kaXNhYmxlZDt9fSx3YXRjaDp7dmFsdWU6ZnVuY3Rpb24gdmFsdWUodmFsKXt0aGlzLmN1cnJlbnRWYWx1ZT12YWw7dGhpcy5wb2ludGVyQXRMZWZ0SGFsZj10aGlzLnZhbHVlIT09TWF0aC5mbG9vcih0aGlzLnZhbHVlKTt9fSxtZXRob2RzOntnZXRNaWdyYXRpbmdDb25maWc6ZnVuY3Rpb24gZ2V0TWlncmF0aW5nQ29uZmlnKCl7cmV0dXJue3Byb3BzOnsndGV4dC10ZW1wbGF0ZSc6J3RleHQtdGVtcGxhdGUgaXMgcmVuYW1lZCB0byBzY29yZS10ZW1wbGF0ZS4nfX07fSxnZXRWYWx1ZUZyb21NYXA6ZnVuY3Rpb24gZ2V0VmFsdWVGcm9tTWFwKHZhbHVlLG1hcCl7dmFyIG1hdGNoZWRLZXlzPU9iamVjdC5rZXlzKG1hcCkuZmlsdGVyKGZ1bmN0aW9uKGtleSl7dmFyIHZhbD1tYXBba2V5XTt2YXIgZXhjbHVkZWQ9T2JqZWN0KHR5cGVzX1siaXNPYmplY3QiXSkodmFsKT92YWwuZXhjbHVkZWQ6ZmFsc2U7cmV0dXJuIGV4Y2x1ZGVkP3ZhbHVlPGtleTp2YWx1ZTw9a2V5O30pLnNvcnQoZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS1iO30pO3ZhciBtYXRjaGVkVmFsdWU9bWFwW21hdGNoZWRLZXlzWzBdXTtyZXR1cm4gT2JqZWN0KHR5cGVzX1siaXNPYmplY3QiXSkobWF0Y2hlZFZhbHVlKT9tYXRjaGVkVmFsdWUudmFsdWU6bWF0Y2hlZFZhbHVlfHwnJzt9LHNob3dEZWNpbWFsSWNvbjpmdW5jdGlvbiBzaG93RGVjaW1hbEljb24oaXRlbSl7dmFyIHNob3dXaGVuRGlzYWJsZWQ9dGhpcy5yYXRlRGlzYWJsZWQmJnRoaXMudmFsdWVEZWNpbWFsPjAmJml0ZW0tMTx0aGlzLnZhbHVlJiZpdGVtPnRoaXMudmFsdWU7LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi92YXIgc2hvd1doZW5BbGxvd0hhbGY9dGhpcy5hbGxvd0hhbGYmJnRoaXMucG9pbnRlckF0TGVmdEhhbGYmJml0ZW0tMC41PD10aGlzLmN1cnJlbnRWYWx1ZSYmaXRlbT50aGlzLmN1cnJlbnRWYWx1ZTtyZXR1cm4gc2hvd1doZW5EaXNhYmxlZHx8c2hvd1doZW5BbGxvd0hhbGY7fSxnZXRJY29uU3R5bGU6ZnVuY3Rpb24gZ2V0SWNvblN0eWxlKGl0ZW0pe3ZhciB2b2lkQ29sb3I9dGhpcy5yYXRlRGlzYWJsZWQ/dGhpcy5kaXNhYmxlZFZvaWRDb2xvcjp0aGlzLnZvaWRDb2xvcjtyZXR1cm57Y29sb3I6aXRlbTw9dGhpcy5jdXJyZW50VmFsdWU/dGhpcy5hY3RpdmVDb2xvcjp2b2lkQ29sb3J9O30sc2VsZWN0VmFsdWU6ZnVuY3Rpb24gc2VsZWN0VmFsdWUodmFsdWUpe2lmKHRoaXMucmF0ZURpc2FibGVkKXtyZXR1cm47fWlmKHRoaXMuYWxsb3dIYWxmJiZ0aGlzLnBvaW50ZXJBdExlZnRIYWxmKXt0aGlzLiRlbWl0KCdpbnB1dCcsdGhpcy5jdXJyZW50VmFsdWUpO3RoaXMuJGVtaXQoJ2NoYW5nZScsdGhpcy5jdXJyZW50VmFsdWUpO31lbHNle3RoaXMuJGVtaXQoJ2lucHV0Jyx2YWx1ZSk7dGhpcy4kZW1pdCgnY2hhbmdlJyx2YWx1ZSk7fX0saGFuZGxlS2V5OmZ1bmN0aW9uIGhhbmRsZUtleShlKXtpZih0aGlzLnJhdGVEaXNhYmxlZCl7cmV0dXJuO312YXIgY3VycmVudFZhbHVlPXRoaXMuY3VycmVudFZhbHVlO3ZhciBrZXlDb2RlPWUua2V5Q29kZTtpZihrZXlDb2RlPT09Mzh8fGtleUNvZGU9PT0zOSl7Ly8gbGVmdCAvIGRvd24KaWYodGhpcy5hbGxvd0hhbGYpe2N1cnJlbnRWYWx1ZSs9MC41O31lbHNle2N1cnJlbnRWYWx1ZSs9MTt9ZS5zdG9wUHJvcGFnYXRpb24oKTtlLnByZXZlbnREZWZhdWx0KCk7fWVsc2UgaWYoa2V5Q29kZT09PTM3fHxrZXlDb2RlPT09NDApe2lmKHRoaXMuYWxsb3dIYWxmKXtjdXJyZW50VmFsdWUtPTAuNTt9ZWxzZXtjdXJyZW50VmFsdWUtPTE7fWUuc3RvcFByb3BhZ2F0aW9uKCk7ZS5wcmV2ZW50RGVmYXVsdCgpO31jdXJyZW50VmFsdWU9Y3VycmVudFZhbHVlPDA/MDpjdXJyZW50VmFsdWU7Y3VycmVudFZhbHVlPWN1cnJlbnRWYWx1ZT50aGlzLm1heD90aGlzLm1heDpjdXJyZW50VmFsdWU7dGhpcy4kZW1pdCgnaW5wdXQnLGN1cnJlbnRWYWx1ZSk7dGhpcy4kZW1pdCgnY2hhbmdlJyxjdXJyZW50VmFsdWUpO30sc2V0Q3VycmVudFZhbHVlOmZ1bmN0aW9uIHNldEN1cnJlbnRWYWx1ZSh2YWx1ZSxldmVudCl7aWYodGhpcy5yYXRlRGlzYWJsZWQpe3JldHVybjt9LyogaXN0YW5idWwgaWdub3JlIGlmICovaWYodGhpcy5hbGxvd0hhbGYpe3ZhciB0YXJnZXQ9ZXZlbnQudGFyZ2V0O2lmKE9iamVjdChkb21fWyJoYXNDbGFzcyJdKSh0YXJnZXQsJ2VsLXJhdGVfX2l0ZW0nKSl7dGFyZ2V0PXRhcmdldC5xdWVyeVNlbGVjdG9yKCcuZWwtcmF0ZV9faWNvbicpO31pZihPYmplY3QoZG9tX1siaGFzQ2xhc3MiXSkodGFyZ2V0LCdlbC1yYXRlX19kZWNpbWFsJykpe3RhcmdldD10YXJnZXQucGFyZW50Tm9kZTt9dGhpcy5wb2ludGVyQXRMZWZ0SGFsZj1ldmVudC5vZmZzZXRYKjI8PXRhcmdldC5jbGllbnRXaWR0aDt0aGlzLmN1cnJlbnRWYWx1ZT10aGlzLnBvaW50ZXJBdExlZnRIYWxmP3ZhbHVlLTAuNTp2YWx1ZTt9ZWxzZXt0aGlzLmN1cnJlbnRWYWx1ZT12YWx1ZTt9dGhpcy5ob3ZlckluZGV4PXZhbHVlO30scmVzZXRDdXJyZW50VmFsdWU6ZnVuY3Rpb24gcmVzZXRDdXJyZW50VmFsdWUoKXtpZih0aGlzLnJhdGVEaXNhYmxlZCl7cmV0dXJuO31pZih0aGlzLmFsbG93SGFsZil7dGhpcy5wb2ludGVyQXRMZWZ0SGFsZj10aGlzLnZhbHVlIT09TWF0aC5mbG9vcih0aGlzLnZhbHVlKTt9dGhpcy5jdXJyZW50VmFsdWU9dGhpcy52YWx1ZTt0aGlzLmhvdmVySW5kZXg9LTE7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7aWYoIXRoaXMudmFsdWUpe3RoaXMuJGVtaXQoJ2lucHV0JywwKTt9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9yYXRlL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19yYXRlX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXJhdGVfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9yYXRlL3NyYy9tYWluLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHJhdGVfc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19yYXRlX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF9hZGE1Nzc4Ml9yZW5kZXIsbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2FkYTU3NzgyX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgcmF0ZV9zcmNfbWFpbl9hcGk7fXJhdGVfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9yYXRlL3NyYy9tYWluLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciByYXRlX3NyY19tYWluPXJhdGVfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9yYXRlL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovcmF0ZV9zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChyYXRlX3NyY19tYWluLm5hbWUscmF0ZV9zcmNfbWFpbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHJhdGU9cmF0ZV9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3N0ZXBzL3NyYy9zdGVwcy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9M2M2YjZkYzAmCnZhciBzdGVwc3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzNjNmI2ZGMwX3JlbmRlcj1mdW5jdGlvbiBzdGVwc3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzNjNmI2ZGMwX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXN0ZXBzIixjbGFzczpbIV92bS5zaW1wbGUmJiJlbC1zdGVwcy0tIitfdm0uZGlyZWN0aW9uLF92bS5zaW1wbGUmJiJlbC1zdGVwcy0tc2ltcGxlIl19LFtfdm0uX3QoImRlZmF1bHQiKV0sMik7fTt2YXIgc3RlcHN2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zYzZiNmRjMF9zdGF0aWNSZW5kZXJGbnM9W107c3RlcHN2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zYzZiNmRjMF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc3RlcHMvc3JjL3N0ZXBzLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zYzZiNmRjMCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvc3RlcHMvc3JjL3N0ZXBzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzdGVwc3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxTdGVwcycsbWl4aW5zOlttaWdyYXRpbmdfZGVmYXVsdC5hXSxwcm9wczp7c3BhY2U6W051bWJlcixTdHJpbmddLGFjdGl2ZTpOdW1iZXIsZGlyZWN0aW9uOnt0eXBlOlN0cmluZyxkZWZhdWx0Oidob3Jpem9udGFsJ30sYWxpZ25DZW50ZXI6Qm9vbGVhbixzaW1wbGU6Qm9vbGVhbixmaW5pc2hTdGF0dXM6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2ZpbmlzaCd9LHByb2Nlc3NTdGF0dXM6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3Byb2Nlc3MnfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3N0ZXBzOltdLHN0ZXBPZmZzZXQ6MH07fSxtZXRob2RzOntnZXRNaWdyYXRpbmdDb25maWc6ZnVuY3Rpb24gZ2V0TWlncmF0aW5nQ29uZmlnKCl7cmV0dXJue3Byb3BzOnsnY2VudGVyJzonY2VudGVyIGlzIHJlbW92ZWQuJ319O319LHdhdGNoOnthY3RpdmU6ZnVuY3Rpb24gYWN0aXZlKG5ld1ZhbCxvbGRWYWwpe3RoaXMuJGVtaXQoJ2NoYW5nZScsbmV3VmFsLG9sZFZhbCk7fSxzdGVwczpmdW5jdGlvbiBzdGVwcyhfc3RlcHMpe19zdGVwcy5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkLGluZGV4KXtjaGlsZC5pbmRleD1pbmRleDt9KTt9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zdGVwcy9zcmMvc3RlcHMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19zdGVwc3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1zdGVwc3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3N0ZXBzL3NyYy9zdGVwcy52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBzdGVwc19jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19zdGVwc3Z1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxzdGVwc3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzNjNmI2ZGMwX3JlbmRlcixzdGVwc3Z1ZV90eXBlX3RlbXBsYXRlX2lkXzNjNmI2ZGMwX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgc3RlcHNfYXBpO31zdGVwc19jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3N0ZXBzL3NyYy9zdGVwcy52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3RlcHM9c3RlcHNfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zdGVwcy9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3N0ZXBzLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHN0ZXBzLm5hbWUsc3RlcHMpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19zdGVwcz1zdGVwczsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3N0ZXBzL3NyYy9zdGVwLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mNDE0YTg3YSYKdmFyIHN0ZXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF9mNDE0YTg3YV9yZW5kZXI9ZnVuY3Rpb24gc3RlcHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2Y0MTRhODdhX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXN0ZXAiLGNsYXNzOlshX3ZtLmlzU2ltcGxlJiYiaXMtIitfdm0uJHBhcmVudC5kaXJlY3Rpb24sX3ZtLmlzU2ltcGxlJiYiaXMtc2ltcGxlIixfdm0uaXNMYXN0JiYhX3ZtLnNwYWNlJiYhX3ZtLmlzQ2VudGVyJiYiaXMtZmxleCIsX3ZtLmlzQ2VudGVyJiYhX3ZtLmlzVmVydGljYWwmJiFfdm0uaXNTaW1wbGUmJiJpcy1jZW50ZXIiXSxzdHlsZTpfdm0uc3R5bGV9LFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXN0ZXBfX2hlYWQiLGNsYXNzOiJpcy0iK192bS5jdXJyZW50U3RhdHVzfSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1zdGVwX19saW5lIixzdHlsZTpfdm0uaXNMYXN0PyIiOnttYXJnaW5SaWdodDpfdm0uJHBhcmVudC5zdGVwT2Zmc2V0KyJweCJ9fSxbX2MoImkiLHtzdGF0aWNDbGFzczoiZWwtc3RlcF9fbGluZS1pbm5lciIsc3R5bGU6X3ZtLmxpbmVTdHlsZX0pXSksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1zdGVwX19pY29uIixjbGFzczoiaXMtIisoX3ZtLmljb24/Imljb24iOiJ0ZXh0Iil9LFtfdm0uY3VycmVudFN0YXR1cyE9PSJzdWNjZXNzIiYmX3ZtLmN1cnJlbnRTdGF0dXMhPT0iZXJyb3IiP192bS5fdCgiaWNvbiIsW192bS5pY29uP19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLXN0ZXBfX2ljb24taW5uZXIiLGNsYXNzOltfdm0uaWNvbl19KTpfdm0uX2UoKSwhX3ZtLmljb24mJiFfdm0uaXNTaW1wbGU/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1zdGVwX19pY29uLWlubmVyIn0sW192bS5fdihfdm0uX3MoX3ZtLmluZGV4KzEpKV0pOl92bS5fZSgpXSk6X2MoImkiLHtzdGF0aWNDbGFzczoiZWwtc3RlcF9faWNvbi1pbm5lciBpcy1zdGF0dXMiLGNsYXNzOlsiZWwtaWNvbi0iKyhfdm0uY3VycmVudFN0YXR1cz09PSJzdWNjZXNzIj8iY2hlY2siOiJjbG9zZSIpXX0pXSwyKV0pLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtc3RlcF9fbWFpbiJ9LFtfYygiZGl2Iix7cmVmOiJ0aXRsZSIsc3RhdGljQ2xhc3M6ImVsLXN0ZXBfX3RpdGxlIixjbGFzczpbImlzLSIrX3ZtLmN1cnJlbnRTdGF0dXNdfSxbX3ZtLl90KCJ0aXRsZSIsW192bS5fdihfdm0uX3MoX3ZtLnRpdGxlKSldKV0sMiksX3ZtLmlzU2ltcGxlP19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtc3RlcF9fYXJyb3cifSk6X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1zdGVwX19kZXNjcmlwdGlvbiIsY2xhc3M6WyJpcy0iK192bS5jdXJyZW50U3RhdHVzXX0sW192bS5fdCgiZGVzY3JpcHRpb24iLFtfdm0uX3YoX3ZtLl9zKF92bS5kZXNjcmlwdGlvbikpXSldLDIpXSldKTt9O3ZhciBzdGVwdnVlX3R5cGVfdGVtcGxhdGVfaWRfZjQxNGE4N2Ffc3RhdGljUmVuZGVyRm5zPVtdO3N0ZXB2dWVfdHlwZV90ZW1wbGF0ZV9pZF9mNDE0YTg3YV9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc3RlcHMvc3JjL3N0ZXAudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWY0MTRhODdhJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9zdGVwcy9zcmMvc3RlcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3RlcHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxTdGVwJyxwcm9wczp7dGl0bGU6U3RyaW5nLGljb246U3RyaW5nLGRlc2NyaXB0aW9uOlN0cmluZyxzdGF0dXM6U3RyaW5nfSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aW5kZXg6LTEsbGluZVN0eWxlOnt9LGludGVybmFsU3RhdHVzOicnfTt9LGJlZm9yZUNyZWF0ZTpmdW5jdGlvbiBiZWZvcmVDcmVhdGUoKXt0aGlzLiRwYXJlbnQuc3RlcHMucHVzaCh0aGlzKTt9LGJlZm9yZURlc3Ryb3k6ZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpe3ZhciBzdGVwcz10aGlzLiRwYXJlbnQuc3RlcHM7dmFyIGluZGV4PXN0ZXBzLmluZGV4T2YodGhpcyk7aWYoaW5kZXg+PTApe3N0ZXBzLnNwbGljZShpbmRleCwxKTt9fSxjb21wdXRlZDp7Y3VycmVudFN0YXR1czpmdW5jdGlvbiBjdXJyZW50U3RhdHVzKCl7cmV0dXJuIHRoaXMuc3RhdHVzfHx0aGlzLmludGVybmFsU3RhdHVzO30scHJldlN0YXR1czpmdW5jdGlvbiBwcmV2U3RhdHVzKCl7dmFyIHByZXZTdGVwPXRoaXMuJHBhcmVudC5zdGVwc1t0aGlzLmluZGV4LTFdO3JldHVybiBwcmV2U3RlcD9wcmV2U3RlcC5jdXJyZW50U3RhdHVzOid3YWl0Jzt9LGlzQ2VudGVyOmZ1bmN0aW9uIGlzQ2VudGVyKCl7cmV0dXJuIHRoaXMuJHBhcmVudC5hbGlnbkNlbnRlcjt9LGlzVmVydGljYWw6ZnVuY3Rpb24gaXNWZXJ0aWNhbCgpe3JldHVybiB0aGlzLiRwYXJlbnQuZGlyZWN0aW9uPT09J3ZlcnRpY2FsJzt9LGlzU2ltcGxlOmZ1bmN0aW9uIGlzU2ltcGxlKCl7cmV0dXJuIHRoaXMuJHBhcmVudC5zaW1wbGU7fSxpc0xhc3Q6ZnVuY3Rpb24gaXNMYXN0KCl7dmFyIHBhcmVudD10aGlzLiRwYXJlbnQ7cmV0dXJuIHBhcmVudC5zdGVwc1twYXJlbnQuc3RlcHMubGVuZ3RoLTFdPT09dGhpczt9LHN0ZXBzQ291bnQ6ZnVuY3Rpb24gc3RlcHNDb3VudCgpe3JldHVybiB0aGlzLiRwYXJlbnQuc3RlcHMubGVuZ3RoO30sc3BhY2U6ZnVuY3Rpb24gc3BhY2UoKXt2YXIgaXNTaW1wbGU9dGhpcy5pc1NpbXBsZSxzcGFjZT10aGlzLiRwYXJlbnQuc3BhY2U7cmV0dXJuIGlzU2ltcGxlPycnOnNwYWNlO30sc3R5bGU6ZnVuY3Rpb24gc3R5bGUoKXt2YXIgc3R5bGU9e307dmFyIHBhcmVudD10aGlzLiRwYXJlbnQ7dmFyIGxlbj1wYXJlbnQuc3RlcHMubGVuZ3RoO3ZhciBzcGFjZT10eXBlb2YgdGhpcy5zcGFjZT09PSdudW1iZXInP3RoaXMuc3BhY2UrJ3B4Jzp0aGlzLnNwYWNlP3RoaXMuc3BhY2U6MTAwLyhsZW4tKHRoaXMuaXNDZW50ZXI/MDoxKSkrJyUnO3N0eWxlLmZsZXhCYXNpcz1zcGFjZTtpZih0aGlzLmlzVmVydGljYWwpcmV0dXJuIHN0eWxlO2lmKHRoaXMuaXNMYXN0KXtzdHlsZS5tYXhXaWR0aD0xMDAvdGhpcy5zdGVwc0NvdW50KyclJzt9ZWxzZXtzdHlsZS5tYXJnaW5SaWdodD0tdGhpcy4kcGFyZW50LnN0ZXBPZmZzZXQrJ3B4Jzt9cmV0dXJuIHN0eWxlO319LG1ldGhvZHM6e3VwZGF0ZVN0YXR1czpmdW5jdGlvbiB1cGRhdGVTdGF0dXModmFsKXt2YXIgcHJldkNoaWxkPXRoaXMuJHBhcmVudC4kY2hpbGRyZW5bdGhpcy5pbmRleC0xXTtpZih2YWw+dGhpcy5pbmRleCl7dGhpcy5pbnRlcm5hbFN0YXR1cz10aGlzLiRwYXJlbnQuZmluaXNoU3RhdHVzO31lbHNlIGlmKHZhbD09PXRoaXMuaW5kZXgmJnRoaXMucHJldlN0YXR1cyE9PSdlcnJvcicpe3RoaXMuaW50ZXJuYWxTdGF0dXM9dGhpcy4kcGFyZW50LnByb2Nlc3NTdGF0dXM7fWVsc2V7dGhpcy5pbnRlcm5hbFN0YXR1cz0nd2FpdCc7fWlmKHByZXZDaGlsZClwcmV2Q2hpbGQuY2FsY1Byb2dyZXNzKHRoaXMuaW50ZXJuYWxTdGF0dXMpO30sY2FsY1Byb2dyZXNzOmZ1bmN0aW9uIGNhbGNQcm9ncmVzcyhzdGF0dXMpe3ZhciBzdGVwPTEwMDt2YXIgc3R5bGU9e307c3R5bGUudHJhbnNpdGlvbkRlbGF5PTE1MCp0aGlzLmluZGV4Kydtcyc7aWYoc3RhdHVzPT09dGhpcy4kcGFyZW50LnByb2Nlc3NTdGF0dXMpe3N0ZXA9dGhpcy5jdXJyZW50U3RhdHVzIT09J2Vycm9yJz8wOjA7fWVsc2UgaWYoc3RhdHVzPT09J3dhaXQnKXtzdGVwPTA7c3R5bGUudHJhbnNpdGlvbkRlbGF5PS0xNTAqdGhpcy5pbmRleCsnbXMnO31zdHlsZS5ib3JkZXJXaWR0aD1zdGVwJiYhdGhpcy5pc1NpbXBsZT8nMXB4JzowO3RoaXMuJHBhcmVudC5kaXJlY3Rpb249PT0ndmVydGljYWwnP3N0eWxlLmhlaWdodD1zdGVwKyclJzpzdHlsZS53aWR0aD1zdGVwKyclJzt0aGlzLmxpbmVTdHlsZT1zdHlsZTt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXM9dGhpczt2YXIgdW53YXRjaD10aGlzLiR3YXRjaCgnaW5kZXgnLGZ1bmN0aW9uKHZhbCl7X3RoaXMuJHdhdGNoKCckcGFyZW50LmFjdGl2ZScsX3RoaXMudXBkYXRlU3RhdHVzLHtpbW1lZGlhdGU6dHJ1ZX0pO190aGlzLiR3YXRjaCgnJHBhcmVudC5wcm9jZXNzU3RhdHVzJyxmdW5jdGlvbigpe3ZhciBhY3RpdmVJbmRleD1fdGhpcy4kcGFyZW50LmFjdGl2ZTtfdGhpcy51cGRhdGVTdGF0dXMoYWN0aXZlSW5kZXgpO30se2ltbWVkaWF0ZTp0cnVlfSk7dW53YXRjaCgpO30pO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc3RlcHMvc3JjL3N0ZXAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19zdGVwdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXN0ZXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zdGVwcy9zcmMvc3RlcC52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBzdGVwX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX3N0ZXB2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sc3RlcHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2Y0MTRhODdhX3JlbmRlcixzdGVwdnVlX3R5cGVfdGVtcGxhdGVfaWRfZjQxNGE4N2Ffc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBzdGVwX2FwaTt9c3RlcF9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3N0ZXBzL3NyYy9zdGVwLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzdGVwPXN0ZXBfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zdGVwL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovc3RlcC5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChzdGVwLm5hbWUsc3RlcCk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX3N0ZXA9c3RlcDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2Nhcm91c2VsL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01ZDVkMTQ4MiYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81ZDVkMTQ4Ml9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVkNWQxNDgyX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7Y2xhc3M6X3ZtLmNhcm91c2VsQ2xhc3Nlcyxvbjp7bW91c2VlbnRlcjpmdW5jdGlvbiBtb3VzZWVudGVyKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uaGFuZGxlTW91c2VFbnRlcigkZXZlbnQpO30sbW91c2VsZWF2ZTpmdW5jdGlvbiBtb3VzZWxlYXZlKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uaGFuZGxlTW91c2VMZWF2ZSgkZXZlbnQpO319fSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jYXJvdXNlbF9fY29udGFpbmVyIixzdHlsZTp7aGVpZ2h0Ol92bS5oZWlnaHR9fSxbX3ZtLmFycm93RGlzcGxheT9fYygidHJhbnNpdGlvbiIse2F0dHJzOntuYW1lOiJjYXJvdXNlbC1hcnJvdy1sZWZ0In19LFtfYygiYnV0dG9uIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6KF92bS5hcnJvdz09PSJhbHdheXMifHxfdm0uaG92ZXIpJiYoX3ZtLmxvb3B8fF92bS5hY3RpdmVJbmRleD4wKSxleHByZXNzaW9uOiIoYXJyb3cgPT09ICdhbHdheXMnIHx8IGhvdmVyKSAmJiAobG9vcCB8fCBhY3RpdmVJbmRleCA+IDApIn1dLHN0YXRpY0NsYXNzOiJlbC1jYXJvdXNlbF9fYXJyb3cgZWwtY2Fyb3VzZWxfX2Fycm93LS1sZWZ0IixhdHRyczp7dHlwZToiYnV0dG9uIn0sb246e21vdXNlZW50ZXI6ZnVuY3Rpb24gbW91c2VlbnRlcigkZXZlbnQpe192bS5oYW5kbGVCdXR0b25FbnRlcigibGVmdCIpO30sbW91c2VsZWF2ZTpfdm0uaGFuZGxlQnV0dG9uTGVhdmUsY2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7X3ZtLnRocm90dGxlZEFycm93Q2xpY2soX3ZtLmFjdGl2ZUluZGV4LTEpO319fSxbX2MoImkiLHtzdGF0aWNDbGFzczoiZWwtaWNvbi1hcnJvdy1sZWZ0In0pXSldKTpfdm0uX2UoKSxfdm0uYXJyb3dEaXNwbGF5P19jKCJ0cmFuc2l0aW9uIix7YXR0cnM6e25hbWU6ImNhcm91c2VsLWFycm93LXJpZ2h0In19LFtfYygiYnV0dG9uIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6KF92bS5hcnJvdz09PSJhbHdheXMifHxfdm0uaG92ZXIpJiYoX3ZtLmxvb3B8fF92bS5hY3RpdmVJbmRleDxfdm0uaXRlbXMubGVuZ3RoLTEpLGV4cHJlc3Npb246IihhcnJvdyA9PT0gJ2Fsd2F5cycgfHwgaG92ZXIpICYmIChsb29wIHx8IGFjdGl2ZUluZGV4IDwgaXRlbXMubGVuZ3RoIC0gMSkifV0sc3RhdGljQ2xhc3M6ImVsLWNhcm91c2VsX19hcnJvdyBlbC1jYXJvdXNlbF9fYXJyb3ctLXJpZ2h0IixhdHRyczp7dHlwZToiYnV0dG9uIn0sb246e21vdXNlZW50ZXI6ZnVuY3Rpb24gbW91c2VlbnRlcigkZXZlbnQpe192bS5oYW5kbGVCdXR0b25FbnRlcigicmlnaHQiKTt9LG1vdXNlbGVhdmU6X3ZtLmhhbmRsZUJ1dHRvbkxlYXZlLGNsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO192bS50aHJvdHRsZWRBcnJvd0NsaWNrKF92bS5hY3RpdmVJbmRleCsxKTt9fX0sW19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWljb24tYXJyb3ctcmlnaHQifSldKV0pOl92bS5fZSgpLF92bS5fdCgiZGVmYXVsdCIpXSwyKSxfdm0uaW5kaWNhdG9yUG9zaXRpb24hPT0ibm9uZSI/X2MoInVsIix7Y2xhc3M6X3ZtLmluZGljYXRvcnNDbGFzc2VzfSxfdm0uX2woX3ZtLml0ZW1zLGZ1bmN0aW9uKGl0ZW0saW5kZXgpe3JldHVybiBfYygibGkiLHtrZXk6aW5kZXgsY2xhc3M6WyJlbC1jYXJvdXNlbF9faW5kaWNhdG9yIiwiZWwtY2Fyb3VzZWxfX2luZGljYXRvci0tIitfdm0uZGlyZWN0aW9uLHsiaXMtYWN0aXZlIjppbmRleD09PV92bS5hY3RpdmVJbmRleH1dLG9uOnttb3VzZWVudGVyOmZ1bmN0aW9uIG1vdXNlZW50ZXIoJGV2ZW50KXtfdm0udGhyb3R0bGVkSW5kaWNhdG9ySG92ZXIoaW5kZXgpO30sY2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7X3ZtLmhhbmRsZUluZGljYXRvckNsaWNrKGluZGV4KTt9fX0sW19jKCJidXR0b24iLHtzdGF0aWNDbGFzczoiZWwtY2Fyb3VzZWxfX2J1dHRvbiJ9LFtfdm0uaGFzTGFiZWw/X2MoInNwYW4iLFtfdm0uX3YoX3ZtLl9zKGl0ZW0ubGFiZWwpKV0pOl92bS5fZSgpXSldKTt9KSwwKTpfdm0uX2UoKV0pO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81ZDVkMTQ4Ml9zdGF0aWNSZW5kZXJGbnM9W107bWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVkNWQxNDgyX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jYXJvdXNlbC9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWQ1ZDE0ODImCi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgInRocm90dGxlLWRlYm91bmNlL3Rocm90dGxlIgp2YXIgdGhyb3R0bGVfPV9fd2VicGFja19yZXF1aXJlX18oMjUpO3ZhciB0aHJvdHRsZV9kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4odGhyb3R0bGVfKTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jYXJvdXNlbC9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY2Fyb3VzZWxfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQ2Fyb3VzZWwnLHByb3BzOntpbml0aWFsSW5kZXg6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MH0saGVpZ2h0OlN0cmluZyx0cmlnZ2VyOnt0eXBlOlN0cmluZyxkZWZhdWx0Oidob3Zlcid9LGF1dG9wbGF5Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxpbnRlcnZhbDp7dHlwZTpOdW1iZXIsZGVmYXVsdDozMDAwfSxpbmRpY2F0b3JQb3NpdGlvbjpTdHJpbmcsaW5kaWNhdG9yOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxhcnJvdzp7dHlwZTpTdHJpbmcsZGVmYXVsdDonaG92ZXInfSx0eXBlOlN0cmluZyxsb29wOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxkaXJlY3Rpb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2hvcml6b250YWwnLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtyZXR1cm5bJ2hvcml6b250YWwnLCd2ZXJ0aWNhbCddLmluZGV4T2YodmFsKSE9PS0xO319fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aXRlbXM6W10sYWN0aXZlSW5kZXg6LTEsY29udGFpbmVyV2lkdGg6MCx0aW1lcjpudWxsLGhvdmVyOmZhbHNlfTt9LGNvbXB1dGVkOnthcnJvd0Rpc3BsYXk6ZnVuY3Rpb24gYXJyb3dEaXNwbGF5KCl7cmV0dXJuIHRoaXMuYXJyb3chPT0nbmV2ZXInJiZ0aGlzLmRpcmVjdGlvbiE9PSd2ZXJ0aWNhbCc7fSxoYXNMYWJlbDpmdW5jdGlvbiBoYXNMYWJlbCgpe3JldHVybiB0aGlzLml0ZW1zLnNvbWUoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIGl0ZW0ubGFiZWwudG9TdHJpbmcoKS5sZW5ndGg+MDt9KTt9LGNhcm91c2VsQ2xhc3NlczpmdW5jdGlvbiBjYXJvdXNlbENsYXNzZXMoKXt2YXIgY2xhc3Nlcz1bJ2VsLWNhcm91c2VsJywnZWwtY2Fyb3VzZWwtLScrdGhpcy5kaXJlY3Rpb25dO2lmKHRoaXMudHlwZT09PSdjYXJkJyl7Y2xhc3Nlcy5wdXNoKCdlbC1jYXJvdXNlbC0tY2FyZCcpO31yZXR1cm4gY2xhc3Nlczt9LGluZGljYXRvcnNDbGFzc2VzOmZ1bmN0aW9uIGluZGljYXRvcnNDbGFzc2VzKCl7dmFyIGNsYXNzZXM9WydlbC1jYXJvdXNlbF9faW5kaWNhdG9ycycsJ2VsLWNhcm91c2VsX19pbmRpY2F0b3JzLS0nK3RoaXMuZGlyZWN0aW9uXTtpZih0aGlzLmhhc0xhYmVsKXtjbGFzc2VzLnB1c2goJ2VsLWNhcm91c2VsX19pbmRpY2F0b3JzLS1sYWJlbHMnKTt9aWYodGhpcy5pbmRpY2F0b3JQb3NpdGlvbj09PSdvdXRzaWRlJ3x8dGhpcy50eXBlPT09J2NhcmQnKXtjbGFzc2VzLnB1c2goJ2VsLWNhcm91c2VsX19pbmRpY2F0b3JzLS1vdXRzaWRlJyk7fXJldHVybiBjbGFzc2VzO319LHdhdGNoOntpdGVtczpmdW5jdGlvbiBpdGVtcyh2YWwpe2lmKHZhbC5sZW5ndGg+MCl0aGlzLnNldEFjdGl2ZUl0ZW0odGhpcy5pbml0aWFsSW5kZXgpO30sYWN0aXZlSW5kZXg6ZnVuY3Rpb24gYWN0aXZlSW5kZXgodmFsLG9sZFZhbCl7dGhpcy5yZXNldEl0ZW1Qb3NpdGlvbihvbGRWYWwpO2lmKG9sZFZhbD4tMSl7dGhpcy4kZW1pdCgnY2hhbmdlJyx2YWwsb2xkVmFsKTt9fSxhdXRvcGxheTpmdW5jdGlvbiBhdXRvcGxheSh2YWwpe3ZhbD90aGlzLnN0YXJ0VGltZXIoKTp0aGlzLnBhdXNlVGltZXIoKTt9LGxvb3A6ZnVuY3Rpb24gbG9vcCgpe3RoaXMuc2V0QWN0aXZlSXRlbSh0aGlzLmFjdGl2ZUluZGV4KTt9LGludGVydmFsOmZ1bmN0aW9uIGludGVydmFsKCl7dGhpcy5wYXVzZVRpbWVyKCk7dGhpcy5zdGFydFRpbWVyKCk7fX0sbWV0aG9kczp7aGFuZGxlTW91c2VFbnRlcjpmdW5jdGlvbiBoYW5kbGVNb3VzZUVudGVyKCl7dGhpcy5ob3Zlcj10cnVlO3RoaXMucGF1c2VUaW1lcigpO30saGFuZGxlTW91c2VMZWF2ZTpmdW5jdGlvbiBoYW5kbGVNb3VzZUxlYXZlKCl7dGhpcy5ob3Zlcj1mYWxzZTt0aGlzLnN0YXJ0VGltZXIoKTt9LGl0ZW1JblN0YWdlOmZ1bmN0aW9uIGl0ZW1JblN0YWdlKGl0ZW0saW5kZXgpe3ZhciBsZW5ndGg9dGhpcy5pdGVtcy5sZW5ndGg7aWYoaW5kZXg9PT1sZW5ndGgtMSYmaXRlbS5pblN0YWdlJiZ0aGlzLml0ZW1zWzBdLmFjdGl2ZXx8aXRlbS5pblN0YWdlJiZ0aGlzLml0ZW1zW2luZGV4KzFdJiZ0aGlzLml0ZW1zW2luZGV4KzFdLmFjdGl2ZSl7cmV0dXJuJ2xlZnQnO31lbHNlIGlmKGluZGV4PT09MCYmaXRlbS5pblN0YWdlJiZ0aGlzLml0ZW1zW2xlbmd0aC0xXS5hY3RpdmV8fGl0ZW0uaW5TdGFnZSYmdGhpcy5pdGVtc1tpbmRleC0xXSYmdGhpcy5pdGVtc1tpbmRleC0xXS5hY3RpdmUpe3JldHVybidyaWdodCc7fXJldHVybiBmYWxzZTt9LGhhbmRsZUJ1dHRvbkVudGVyOmZ1bmN0aW9uIGhhbmRsZUJ1dHRvbkVudGVyKGFycm93KXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLmRpcmVjdGlvbj09PSd2ZXJ0aWNhbCcpcmV0dXJuO3RoaXMuaXRlbXMuZm9yRWFjaChmdW5jdGlvbihpdGVtLGluZGV4KXtpZihhcnJvdz09PV90aGlzLml0ZW1JblN0YWdlKGl0ZW0saW5kZXgpKXtpdGVtLmhvdmVyPXRydWU7fX0pO30saGFuZGxlQnV0dG9uTGVhdmU6ZnVuY3Rpb24gaGFuZGxlQnV0dG9uTGVhdmUoKXtpZih0aGlzLmRpcmVjdGlvbj09PSd2ZXJ0aWNhbCcpcmV0dXJuO3RoaXMuaXRlbXMuZm9yRWFjaChmdW5jdGlvbihpdGVtKXtpdGVtLmhvdmVyPWZhbHNlO30pO30sdXBkYXRlSXRlbXM6ZnVuY3Rpb24gdXBkYXRlSXRlbXMoKXt0aGlzLml0ZW1zPXRoaXMuJGNoaWxkcmVuLmZpbHRlcihmdW5jdGlvbihjaGlsZCl7cmV0dXJuIGNoaWxkLiRvcHRpb25zLm5hbWU9PT0nRWxDYXJvdXNlbEl0ZW0nO30pO30scmVzZXRJdGVtUG9zaXRpb246ZnVuY3Rpb24gcmVzZXRJdGVtUG9zaXRpb24ob2xkSW5kZXgpe3ZhciBfdGhpczI9dGhpczt0aGlzLml0ZW1zLmZvckVhY2goZnVuY3Rpb24oaXRlbSxpbmRleCl7aXRlbS50cmFuc2xhdGVJdGVtKGluZGV4LF90aGlzMi5hY3RpdmVJbmRleCxvbGRJbmRleCk7fSk7fSxwbGF5U2xpZGVzOmZ1bmN0aW9uIHBsYXlTbGlkZXMoKXtpZih0aGlzLmFjdGl2ZUluZGV4PHRoaXMuaXRlbXMubGVuZ3RoLTEpe3RoaXMuYWN0aXZlSW5kZXgrKzt9ZWxzZSBpZih0aGlzLmxvb3Ape3RoaXMuYWN0aXZlSW5kZXg9MDt9fSxwYXVzZVRpbWVyOmZ1bmN0aW9uIHBhdXNlVGltZXIoKXtpZih0aGlzLnRpbWVyKXtjbGVhckludGVydmFsKHRoaXMudGltZXIpO3RoaXMudGltZXI9bnVsbDt9fSxzdGFydFRpbWVyOmZ1bmN0aW9uIHN0YXJ0VGltZXIoKXtpZih0aGlzLmludGVydmFsPD0wfHwhdGhpcy5hdXRvcGxheXx8dGhpcy50aW1lcilyZXR1cm47dGhpcy50aW1lcj1zZXRJbnRlcnZhbCh0aGlzLnBsYXlTbGlkZXMsdGhpcy5pbnRlcnZhbCk7fSxzZXRBY3RpdmVJdGVtOmZ1bmN0aW9uIHNldEFjdGl2ZUl0ZW0oaW5kZXgpe2lmKHR5cGVvZiBpbmRleD09PSdzdHJpbmcnKXt2YXIgZmlsdGVyZWRJdGVtcz10aGlzLml0ZW1zLmZpbHRlcihmdW5jdGlvbihpdGVtKXtyZXR1cm4gaXRlbS5uYW1lPT09aW5kZXg7fSk7aWYoZmlsdGVyZWRJdGVtcy5sZW5ndGg+MCl7aW5kZXg9dGhpcy5pdGVtcy5pbmRleE9mKGZpbHRlcmVkSXRlbXNbMF0pO319aW5kZXg9TnVtYmVyKGluZGV4KTtpZihpc05hTihpbmRleCl8fGluZGV4IT09TWF0aC5mbG9vcihpbmRleCkpe2NvbnNvbGUud2FybignW0VsZW1lbnQgV2Fybl1bQ2Fyb3VzZWxdaW5kZXggbXVzdCBiZSBhbiBpbnRlZ2VyLicpO3JldHVybjt9dmFyIGxlbmd0aD10aGlzLml0ZW1zLmxlbmd0aDt2YXIgb2xkSW5kZXg9dGhpcy5hY3RpdmVJbmRleDtpZihpbmRleDwwKXt0aGlzLmFjdGl2ZUluZGV4PXRoaXMubG9vcD9sZW5ndGgtMTowO31lbHNlIGlmKGluZGV4Pj1sZW5ndGgpe3RoaXMuYWN0aXZlSW5kZXg9dGhpcy5sb29wPzA6bGVuZ3RoLTE7fWVsc2V7dGhpcy5hY3RpdmVJbmRleD1pbmRleDt9aWYob2xkSW5kZXg9PT10aGlzLmFjdGl2ZUluZGV4KXt0aGlzLnJlc2V0SXRlbVBvc2l0aW9uKG9sZEluZGV4KTt9fSxwcmV2OmZ1bmN0aW9uIHByZXYoKXt0aGlzLnNldEFjdGl2ZUl0ZW0odGhpcy5hY3RpdmVJbmRleC0xKTt9LG5leHQ6ZnVuY3Rpb24gbmV4dCgpe3RoaXMuc2V0QWN0aXZlSXRlbSh0aGlzLmFjdGl2ZUluZGV4KzEpO30saGFuZGxlSW5kaWNhdG9yQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlSW5kaWNhdG9yQ2xpY2soaW5kZXgpe3RoaXMuYWN0aXZlSW5kZXg9aW5kZXg7fSxoYW5kbGVJbmRpY2F0b3JIb3ZlcjpmdW5jdGlvbiBoYW5kbGVJbmRpY2F0b3JIb3ZlcihpbmRleCl7aWYodGhpcy50cmlnZ2VyPT09J2hvdmVyJyYmaW5kZXghPT10aGlzLmFjdGl2ZUluZGV4KXt0aGlzLmFjdGl2ZUluZGV4PWluZGV4O319fSxjcmVhdGVkOmZ1bmN0aW9uIGNyZWF0ZWQoKXt2YXIgX3RoaXMzPXRoaXM7dGhpcy50aHJvdHRsZWRBcnJvd0NsaWNrPXRocm90dGxlX2RlZmF1bHQoKSgzMDAsdHJ1ZSxmdW5jdGlvbihpbmRleCl7X3RoaXMzLnNldEFjdGl2ZUl0ZW0oaW5kZXgpO30pO3RoaXMudGhyb3R0bGVkSW5kaWNhdG9ySG92ZXI9dGhyb3R0bGVfZGVmYXVsdCgpKDMwMCxmdW5jdGlvbihpbmRleCl7X3RoaXMzLmhhbmRsZUluZGljYXRvckhvdmVyKGluZGV4KTt9KTt9LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciBfdGhpczQ9dGhpczt0aGlzLnVwZGF0ZUl0ZW1zKCk7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtPYmplY3QocmVzaXplX2V2ZW50X1siYWRkUmVzaXplTGlzdGVuZXIiXSkoX3RoaXM0LiRlbCxfdGhpczQucmVzZXRJdGVtUG9zaXRpb24pO2lmKF90aGlzNC5pbml0aWFsSW5kZXg8X3RoaXM0Lml0ZW1zLmxlbmd0aCYmX3RoaXM0LmluaXRpYWxJbmRleD49MCl7X3RoaXM0LmFjdGl2ZUluZGV4PV90aGlzNC5pbml0aWFsSW5kZXg7fV90aGlzNC5zdGFydFRpbWVyKCk7fSk7fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXtpZih0aGlzLiRlbClPYmplY3QocmVzaXplX2V2ZW50X1sicmVtb3ZlUmVzaXplTGlzdGVuZXIiXSkodGhpcy4kZWwsdGhpcy5yZXNldEl0ZW1Qb3NpdGlvbik7dGhpcy5wYXVzZVRpbWVyKCk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jYXJvdXNlbC9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfY2Fyb3VzZWxfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189Y2Fyb3VzZWxfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jYXJvdXNlbC9zcmMvbWFpbi52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBjYXJvdXNlbF9zcmNfbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhY2thZ2VzX2Nhcm91c2VsX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81ZDVkMTQ4Ml9yZW5kZXIsbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVkNWQxNDgyX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgY2Fyb3VzZWxfc3JjX21haW5fYXBpO31jYXJvdXNlbF9zcmNfbWFpbl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2Nhcm91c2VsL3NyYy9tYWluLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjYXJvdXNlbF9zcmNfbWFpbj1jYXJvdXNlbF9zcmNfbWFpbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2Nhcm91c2VsL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovY2Fyb3VzZWxfc3JjX21haW4uaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoY2Fyb3VzZWxfc3JjX21haW4ubmFtZSxjYXJvdXNlbF9zcmNfbWFpbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNhcm91c2VsPWNhcm91c2VsX3NyY19tYWluOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc2Nyb2xsYmFyL3NyYy91dGlsLmpzCnZhciBCQVJfTUFQPXt2ZXJ0aWNhbDp7b2Zmc2V0OidvZmZzZXRIZWlnaHQnLHNjcm9sbDonc2Nyb2xsVG9wJyxzY3JvbGxTaXplOidzY3JvbGxIZWlnaHQnLHNpemU6J2hlaWdodCcsa2V5Oid2ZXJ0aWNhbCcsYXhpczonWScsY2xpZW50OidjbGllbnRZJyxkaXJlY3Rpb246J3RvcCd9LGhvcml6b250YWw6e29mZnNldDonb2Zmc2V0V2lkdGgnLHNjcm9sbDonc2Nyb2xsTGVmdCcsc2Nyb2xsU2l6ZTonc2Nyb2xsV2lkdGgnLHNpemU6J3dpZHRoJyxrZXk6J2hvcml6b250YWwnLGF4aXM6J1gnLGNsaWVudDonY2xpZW50WCcsZGlyZWN0aW9uOidsZWZ0J319O2Z1bmN0aW9uIHJlbmRlclRodW1iU3R5bGUoX3JlZil7dmFyIG1vdmU9X3JlZi5tb3ZlLHNpemU9X3JlZi5zaXplLGJhcj1fcmVmLmJhcjt2YXIgc3R5bGU9e307dmFyIHRyYW5zbGF0ZT0ndHJhbnNsYXRlJytiYXIuYXhpcysnKCcrbW92ZSsnJSknO3N0eWxlW2Jhci5zaXplXT1zaXplO3N0eWxlLnRyYW5zZm9ybT10cmFuc2xhdGU7c3R5bGUubXNUcmFuc2Zvcm09dHJhbnNsYXRlO3N0eWxlLndlYmtpdFRyYW5zZm9ybT10cmFuc2xhdGU7cmV0dXJuIHN0eWxlO307Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9zY3JvbGxiYXIvc3JjL2Jhci5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19iYXI9e25hbWU6J0JhcicscHJvcHM6e3ZlcnRpY2FsOkJvb2xlYW4sc2l6ZTpTdHJpbmcsbW92ZTpOdW1iZXJ9LGNvbXB1dGVkOntiYXI6ZnVuY3Rpb24gYmFyKCl7cmV0dXJuIEJBUl9NQVBbdGhpcy52ZXJ0aWNhbD8ndmVydGljYWwnOidob3Jpem9udGFsJ107fSx3cmFwOmZ1bmN0aW9uIHdyYXAoKXtyZXR1cm4gdGhpcy4kcGFyZW50LndyYXA7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgc2l6ZT10aGlzLnNpemUsbW92ZT10aGlzLm1vdmUsYmFyPXRoaXMuYmFyO3JldHVybiBoKCdkaXYnLHsnY2xhc3MnOlsnZWwtc2Nyb2xsYmFyX19iYXInLCdpcy0nK2Jhci5rZXldLG9uOnsnbW91c2Vkb3duJzp0aGlzLmNsaWNrVHJhY2tIYW5kbGVyfX0sW2goJ2Rpdicse3JlZjondGh1bWInLCdjbGFzcyc6J2VsLXNjcm9sbGJhcl9fdGh1bWInLG9uOnsnbW91c2Vkb3duJzp0aGlzLmNsaWNrVGh1bWJIYW5kbGVyfSxzdHlsZTpyZW5kZXJUaHVtYlN0eWxlKHtzaXplOnNpemUsbW92ZTptb3ZlLGJhcjpiYXJ9KX0pXSk7fSxtZXRob2RzOntjbGlja1RodW1iSGFuZGxlcjpmdW5jdGlvbiBjbGlja1RodW1iSGFuZGxlcihlKXsvLyBwcmV2ZW50IGNsaWNrIGV2ZW50IG9mIHJpZ2h0IGJ1dHRvbgppZihlLmN0cmxLZXl8fGUuYnV0dG9uPT09Mil7cmV0dXJuO310aGlzLnN0YXJ0RHJhZyhlKTt0aGlzW3RoaXMuYmFyLmF4aXNdPWUuY3VycmVudFRhcmdldFt0aGlzLmJhci5vZmZzZXRdLShlW3RoaXMuYmFyLmNsaWVudF0tZS5jdXJyZW50VGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW3RoaXMuYmFyLmRpcmVjdGlvbl0pO30sY2xpY2tUcmFja0hhbmRsZXI6ZnVuY3Rpb24gY2xpY2tUcmFja0hhbmRsZXIoZSl7dmFyIG9mZnNldD1NYXRoLmFicyhlLnRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVt0aGlzLmJhci5kaXJlY3Rpb25dLWVbdGhpcy5iYXIuY2xpZW50XSk7dmFyIHRodW1iSGFsZj10aGlzLiRyZWZzLnRodW1iW3RoaXMuYmFyLm9mZnNldF0vMjt2YXIgdGh1bWJQb3NpdGlvblBlcmNlbnRhZ2U9KG9mZnNldC10aHVtYkhhbGYpKjEwMC90aGlzLiRlbFt0aGlzLmJhci5vZmZzZXRdO3RoaXMud3JhcFt0aGlzLmJhci5zY3JvbGxdPXRodW1iUG9zaXRpb25QZXJjZW50YWdlKnRoaXMud3JhcFt0aGlzLmJhci5zY3JvbGxTaXplXS8xMDA7fSxzdGFydERyYWc6ZnVuY3Rpb24gc3RhcnREcmFnKGUpe2Uuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7dGhpcy5jdXJzb3JEb3duPXRydWU7T2JqZWN0KGRvbV9bIm9uIl0pKGRvY3VtZW50LCdtb3VzZW1vdmUnLHRoaXMubW91c2VNb3ZlRG9jdW1lbnRIYW5kbGVyKTtPYmplY3QoZG9tX1sib24iXSkoZG9jdW1lbnQsJ21vdXNldXAnLHRoaXMubW91c2VVcERvY3VtZW50SGFuZGxlcik7ZG9jdW1lbnQub25zZWxlY3RzdGFydD1mdW5jdGlvbigpe3JldHVybiBmYWxzZTt9O30sbW91c2VNb3ZlRG9jdW1lbnRIYW5kbGVyOmZ1bmN0aW9uIG1vdXNlTW92ZURvY3VtZW50SGFuZGxlcihlKXtpZih0aGlzLmN1cnNvckRvd249PT1mYWxzZSlyZXR1cm47dmFyIHByZXZQYWdlPXRoaXNbdGhpcy5iYXIuYXhpc107aWYoIXByZXZQYWdlKXJldHVybjt2YXIgb2Zmc2V0PSh0aGlzLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVt0aGlzLmJhci5kaXJlY3Rpb25dLWVbdGhpcy5iYXIuY2xpZW50XSkqLTE7dmFyIHRodW1iQ2xpY2tQb3NpdGlvbj10aGlzLiRyZWZzLnRodW1iW3RoaXMuYmFyLm9mZnNldF0tcHJldlBhZ2U7dmFyIHRodW1iUG9zaXRpb25QZXJjZW50YWdlPShvZmZzZXQtdGh1bWJDbGlja1Bvc2l0aW9uKSoxMDAvdGhpcy4kZWxbdGhpcy5iYXIub2Zmc2V0XTt0aGlzLndyYXBbdGhpcy5iYXIuc2Nyb2xsXT10aHVtYlBvc2l0aW9uUGVyY2VudGFnZSp0aGlzLndyYXBbdGhpcy5iYXIuc2Nyb2xsU2l6ZV0vMTAwO30sbW91c2VVcERvY3VtZW50SGFuZGxlcjpmdW5jdGlvbiBtb3VzZVVwRG9jdW1lbnRIYW5kbGVyKGUpe3RoaXMuY3Vyc29yRG93bj1mYWxzZTt0aGlzW3RoaXMuYmFyLmF4aXNdPTA7T2JqZWN0KGRvbV9bIm9mZiJdKShkb2N1bWVudCwnbW91c2Vtb3ZlJyx0aGlzLm1vdXNlTW92ZURvY3VtZW50SGFuZGxlcik7ZG9jdW1lbnQub25zZWxlY3RzdGFydD1udWxsO319LGRlc3Ryb3llZDpmdW5jdGlvbiBkZXN0cm95ZWQoKXtPYmplY3QoZG9tX1sib2ZmIl0pKGRvY3VtZW50LCdtb3VzZXVwJyx0aGlzLm1vdXNlVXBEb2N1bWVudEhhbmRsZXIpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc2Nyb2xsYmFyL3NyYy9tYWluLmpzCi8vIHJlZmVyZW5jZSBodHRwczovL2dpdGh1Yi5jb20vbm9lbGRlbGdhZG8vZ2VtaW5pLXNjcm9sbGJhci9ibG9iL21hc3Rlci9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLyAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNjcm9sbGJhcl9zcmNfbWFpbj17bmFtZTonRWxTY3JvbGxiYXInLGNvbXBvbmVudHM6e0JhcjpzcmNfYmFyfSxwcm9wczp7bmF0aXZlOkJvb2xlYW4sd3JhcFN0eWxlOnt9LHdyYXBDbGFzczp7fSx2aWV3Q2xhc3M6e30sdmlld1N0eWxlOnt9LG5vcmVzaXplOkJvb2xlYW4sLy8g5aaC5p6cIGNvbnRhaW5lciDlsLrlr7jkuI3kvJrlj5HnlJ/lj5jljJbvvIzmnIDlpb3orr7nva7lroPlj6/ku6XkvJjljJbmgKfog70KdGFnOnt0eXBlOlN0cmluZyxkZWZhdWx0OidkaXYnfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3NpemVXaWR0aDonMCcsc2l6ZUhlaWdodDonMCcsbW92ZVg6MCxtb3ZlWTowfTt9LGNvbXB1dGVkOnt3cmFwOmZ1bmN0aW9uIHdyYXAoKXtyZXR1cm4gdGhpcy4kcmVmcy53cmFwO319LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGd1dHRlcj1zY3JvbGxiYXJfd2lkdGhfZGVmYXVsdCgpKCk7dmFyIHN0eWxlPXRoaXMud3JhcFN0eWxlO2lmKGd1dHRlcil7dmFyIGd1dHRlcldpdGg9Jy0nK2d1dHRlcisncHgnO3ZhciBndXR0ZXJTdHlsZT0nbWFyZ2luLWJvdHRvbTogJytndXR0ZXJXaXRoKyc7IG1hcmdpbi1yaWdodDogJytndXR0ZXJXaXRoKyc7JztpZihBcnJheS5pc0FycmF5KHRoaXMud3JhcFN0eWxlKSl7c3R5bGU9T2JqZWN0KHV0aWxfWyJ0b09iamVjdCJdKSh0aGlzLndyYXBTdHlsZSk7c3R5bGUubWFyZ2luUmlnaHQ9c3R5bGUubWFyZ2luQm90dG9tPWd1dHRlcldpdGg7fWVsc2UgaWYodHlwZW9mIHRoaXMud3JhcFN0eWxlPT09J3N0cmluZycpe3N0eWxlKz1ndXR0ZXJTdHlsZTt9ZWxzZXtzdHlsZT1ndXR0ZXJTdHlsZTt9fXZhciB2aWV3PWgodGhpcy50YWcse2NsYXNzOlsnZWwtc2Nyb2xsYmFyX192aWV3Jyx0aGlzLnZpZXdDbGFzc10sc3R5bGU6dGhpcy52aWV3U3R5bGUscmVmOidyZXNpemUnfSx0aGlzLiRzbG90cy5kZWZhdWx0KTt2YXIgd3JhcD1oKCdkaXYnLHtyZWY6J3dyYXAnLHN0eWxlOnN0eWxlLG9uOnsnc2Nyb2xsJzp0aGlzLmhhbmRsZVNjcm9sbH0sJ2NsYXNzJzpbdGhpcy53cmFwQ2xhc3MsJ2VsLXNjcm9sbGJhcl9fd3JhcCcsZ3V0dGVyPycnOidlbC1zY3JvbGxiYXJfX3dyYXAtLWhpZGRlbi1kZWZhdWx0J119LFtbdmlld11dKTt2YXIgbm9kZXM9dm9pZCAwO2lmKCF0aGlzLm5hdGl2ZSl7bm9kZXM9W3dyYXAsaChzcmNfYmFyLHthdHRyczp7bW92ZTp0aGlzLm1vdmVYLHNpemU6dGhpcy5zaXplV2lkdGh9fSksaChzcmNfYmFyLHthdHRyczp7dmVydGljYWw6dHJ1ZSxtb3ZlOnRoaXMubW92ZVksc2l6ZTp0aGlzLnNpemVIZWlnaHR9fSldO31lbHNle25vZGVzPVtoKCdkaXYnLHtyZWY6J3dyYXAnLCdjbGFzcyc6W3RoaXMud3JhcENsYXNzLCdlbC1zY3JvbGxiYXJfX3dyYXAnXSxzdHlsZTpzdHlsZX0sW1t2aWV3XV0pXTt9cmV0dXJuIGgoJ2Rpdicse2NsYXNzOidlbC1zY3JvbGxiYXInfSxub2Rlcyk7fSxtZXRob2RzOntoYW5kbGVTY3JvbGw6ZnVuY3Rpb24gaGFuZGxlU2Nyb2xsKCl7dmFyIHdyYXA9dGhpcy53cmFwO3RoaXMubW92ZVk9d3JhcC5zY3JvbGxUb3AqMTAwL3dyYXAuY2xpZW50SGVpZ2h0O3RoaXMubW92ZVg9d3JhcC5zY3JvbGxMZWZ0KjEwMC93cmFwLmNsaWVudFdpZHRoO30sdXBkYXRlOmZ1bmN0aW9uIHVwZGF0ZSgpe3ZhciBoZWlnaHRQZXJjZW50YWdlPXZvaWQgMCx3aWR0aFBlcmNlbnRhZ2U9dm9pZCAwO3ZhciB3cmFwPXRoaXMud3JhcDtpZighd3JhcClyZXR1cm47aGVpZ2h0UGVyY2VudGFnZT13cmFwLmNsaWVudEhlaWdodCoxMDAvd3JhcC5zY3JvbGxIZWlnaHQ7d2lkdGhQZXJjZW50YWdlPXdyYXAuY2xpZW50V2lkdGgqMTAwL3dyYXAuc2Nyb2xsV2lkdGg7dGhpcy5zaXplSGVpZ2h0PWhlaWdodFBlcmNlbnRhZ2U8MTAwP2hlaWdodFBlcmNlbnRhZ2UrJyUnOicnO3RoaXMuc2l6ZVdpZHRoPXdpZHRoUGVyY2VudGFnZTwxMDA/d2lkdGhQZXJjZW50YWdlKyclJzonJzt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXtpZih0aGlzLm5hdGl2ZSlyZXR1cm47dGhpcy4kbmV4dFRpY2sodGhpcy51cGRhdGUpOyF0aGlzLm5vcmVzaXplJiZPYmplY3QocmVzaXplX2V2ZW50X1siYWRkUmVzaXplTGlzdGVuZXIiXSkodGhpcy4kcmVmcy5yZXNpemUsdGhpcy51cGRhdGUpO30sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7aWYodGhpcy5uYXRpdmUpcmV0dXJuOyF0aGlzLm5vcmVzaXplJiZPYmplY3QocmVzaXplX2V2ZW50X1sicmVtb3ZlUmVzaXplTGlzdGVuZXIiXSkodGhpcy4kcmVmcy5yZXNpemUsdGhpcy51cGRhdGUpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvc2Nyb2xsYmFyL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovc2Nyb2xsYmFyX3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHNjcm9sbGJhcl9zcmNfbWFpbi5uYW1lLHNjcm9sbGJhcl9zcmNfbWFpbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNjcm9sbGJhcj1zY3JvbGxiYXJfc3JjX21haW47Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jYXJvdXNlbC9zcmMvaXRlbS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MTgwMWFlMTkmCnZhciBpdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfMTgwMWFlMTlfcmVuZGVyPWZ1bmN0aW9uIGl0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF8xODAxYWUxOV9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5yZWFkeSxleHByZXNzaW9uOiJyZWFkeSJ9XSxzdGF0aWNDbGFzczoiZWwtY2Fyb3VzZWxfX2l0ZW0iLGNsYXNzOnsiaXMtYWN0aXZlIjpfdm0uYWN0aXZlLCJlbC1jYXJvdXNlbF9faXRlbS0tY2FyZCI6X3ZtLiRwYXJlbnQudHlwZT09PSJjYXJkIiwiaXMtaW4tc3RhZ2UiOl92bS5pblN0YWdlLCJpcy1ob3ZlciI6X3ZtLmhvdmVyLCJpcy1hbmltYXRpbmciOl92bS5hbmltYXRpbmd9LHN0eWxlOl92bS5pdGVtU3R5bGUsb246e2NsaWNrOl92bS5oYW5kbGVJdGVtQ2xpY2t9fSxbX3ZtLiRwYXJlbnQudHlwZT09PSJjYXJkIj9fYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6IV92bS5hY3RpdmUsZXhwcmVzc2lvbjoiIWFjdGl2ZSJ9XSxzdGF0aWNDbGFzczoiZWwtY2Fyb3VzZWxfX21hc2sifSk6X3ZtLl9lKCksX3ZtLl90KCJkZWZhdWx0IildLDIpO307dmFyIGl0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF8xODAxYWUxOV9zdGF0aWNSZW5kZXJGbnM9W107aXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzE4MDFhZTE5X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jYXJvdXNlbC9zcmMvaXRlbS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MTgwMWFlMTkmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2Nhcm91c2VsL3NyYy9pdGVtLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIENBUkRfU0NBTEU9MC44MzsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGl0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQ2Fyb3VzZWxJdGVtJyxwcm9wczp7bmFtZTpTdHJpbmcsbGFiZWw6e3R5cGU6W1N0cmluZyxOdW1iZXJdLGRlZmF1bHQ6Jyd9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aG92ZXI6ZmFsc2UsdHJhbnNsYXRlOjAsc2NhbGU6MSxhY3RpdmU6ZmFsc2UscmVhZHk6ZmFsc2UsaW5TdGFnZTpmYWxzZSxhbmltYXRpbmc6ZmFsc2V9O30sbWV0aG9kczp7cHJvY2Vzc0luZGV4OmZ1bmN0aW9uIHByb2Nlc3NJbmRleChpbmRleCxhY3RpdmVJbmRleCxsZW5ndGgpe2lmKGFjdGl2ZUluZGV4PT09MCYmaW5kZXg9PT1sZW5ndGgtMSl7cmV0dXJuLTE7fWVsc2UgaWYoYWN0aXZlSW5kZXg9PT1sZW5ndGgtMSYmaW5kZXg9PT0wKXtyZXR1cm4gbGVuZ3RoO31lbHNlIGlmKGluZGV4PGFjdGl2ZUluZGV4LTEmJmFjdGl2ZUluZGV4LWluZGV4Pj1sZW5ndGgvMil7cmV0dXJuIGxlbmd0aCsxO31lbHNlIGlmKGluZGV4PmFjdGl2ZUluZGV4KzEmJmluZGV4LWFjdGl2ZUluZGV4Pj1sZW5ndGgvMil7cmV0dXJuLTI7fXJldHVybiBpbmRleDt9LGNhbGNDYXJkVHJhbnNsYXRlOmZ1bmN0aW9uIGNhbGNDYXJkVHJhbnNsYXRlKGluZGV4LGFjdGl2ZUluZGV4KXt2YXIgcGFyZW50V2lkdGg9dGhpcy4kcGFyZW50LiRlbC5vZmZzZXRXaWR0aDtpZih0aGlzLmluU3RhZ2Upe3JldHVybiBwYXJlbnRXaWR0aCooKDItQ0FSRF9TQ0FMRSkqKGluZGV4LWFjdGl2ZUluZGV4KSsxKS80O31lbHNlIGlmKGluZGV4PGFjdGl2ZUluZGV4KXtyZXR1cm4tKDErQ0FSRF9TQ0FMRSkqcGFyZW50V2lkdGgvNDt9ZWxzZXtyZXR1cm4oMytDQVJEX1NDQUxFKSpwYXJlbnRXaWR0aC80O319LGNhbGNUcmFuc2xhdGU6ZnVuY3Rpb24gY2FsY1RyYW5zbGF0ZShpbmRleCxhY3RpdmVJbmRleCxpc1ZlcnRpY2FsKXt2YXIgZGlzdGFuY2U9dGhpcy4kcGFyZW50LiRlbFtpc1ZlcnRpY2FsPydvZmZzZXRIZWlnaHQnOidvZmZzZXRXaWR0aCddO3JldHVybiBkaXN0YW5jZSooaW5kZXgtYWN0aXZlSW5kZXgpO30sdHJhbnNsYXRlSXRlbTpmdW5jdGlvbiB0cmFuc2xhdGVJdGVtKGluZGV4LGFjdGl2ZUluZGV4LG9sZEluZGV4KXt2YXIgcGFyZW50VHlwZT10aGlzLiRwYXJlbnQudHlwZTt2YXIgcGFyZW50RGlyZWN0aW9uPXRoaXMucGFyZW50RGlyZWN0aW9uO3ZhciBsZW5ndGg9dGhpcy4kcGFyZW50Lml0ZW1zLmxlbmd0aDtpZihwYXJlbnRUeXBlIT09J2NhcmQnJiZvbGRJbmRleCE9PXVuZGVmaW5lZCl7dGhpcy5hbmltYXRpbmc9aW5kZXg9PT1hY3RpdmVJbmRleHx8aW5kZXg9PT1vbGRJbmRleDt9aWYoaW5kZXghPT1hY3RpdmVJbmRleCYmbGVuZ3RoPjImJnRoaXMuJHBhcmVudC5sb29wKXtpbmRleD10aGlzLnByb2Nlc3NJbmRleChpbmRleCxhY3RpdmVJbmRleCxsZW5ndGgpO31pZihwYXJlbnRUeXBlPT09J2NhcmQnKXtpZihwYXJlbnREaXJlY3Rpb249PT0ndmVydGljYWwnKXtjb25zb2xlLndhcm4oJ1tFbGVtZW50IFdhcm5dW0Nhcm91c2VsXXZlcnRpY2FsIGRpcmVjdGlvbiBpcyBub3Qgc3VwcG9ydGVkIGluIGNhcmQgbW9kZScpO310aGlzLmluU3RhZ2U9TWF0aC5yb3VuZChNYXRoLmFicyhpbmRleC1hY3RpdmVJbmRleCkpPD0xO3RoaXMuYWN0aXZlPWluZGV4PT09YWN0aXZlSW5kZXg7dGhpcy50cmFuc2xhdGU9dGhpcy5jYWxjQ2FyZFRyYW5zbGF0ZShpbmRleCxhY3RpdmVJbmRleCk7dGhpcy5zY2FsZT10aGlzLmFjdGl2ZT8xOkNBUkRfU0NBTEU7fWVsc2V7dGhpcy5hY3RpdmU9aW5kZXg9PT1hY3RpdmVJbmRleDt2YXIgaXNWZXJ0aWNhbD1wYXJlbnREaXJlY3Rpb249PT0ndmVydGljYWwnO3RoaXMudHJhbnNsYXRlPXRoaXMuY2FsY1RyYW5zbGF0ZShpbmRleCxhY3RpdmVJbmRleCxpc1ZlcnRpY2FsKTt0aGlzLnNjYWxlPTE7fXRoaXMucmVhZHk9dHJ1ZTt9LGhhbmRsZUl0ZW1DbGljazpmdW5jdGlvbiBoYW5kbGVJdGVtQ2xpY2soKXt2YXIgcGFyZW50PXRoaXMuJHBhcmVudDtpZihwYXJlbnQmJnBhcmVudC50eXBlPT09J2NhcmQnKXt2YXIgaW5kZXg9cGFyZW50Lml0ZW1zLmluZGV4T2YodGhpcyk7cGFyZW50LnNldEFjdGl2ZUl0ZW0oaW5kZXgpO319fSxjb21wdXRlZDp7cGFyZW50RGlyZWN0aW9uOmZ1bmN0aW9uIHBhcmVudERpcmVjdGlvbigpe3JldHVybiB0aGlzLiRwYXJlbnQuZGlyZWN0aW9uO30saXRlbVN0eWxlOmZ1bmN0aW9uIGl0ZW1TdHlsZSgpe3ZhciB0cmFuc2xhdGVUeXBlPXRoaXMucGFyZW50RGlyZWN0aW9uPT09J3ZlcnRpY2FsJz8ndHJhbnNsYXRlWSc6J3RyYW5zbGF0ZVgnO3ZhciB2YWx1ZT10cmFuc2xhdGVUeXBlKycoJyt0aGlzLnRyYW5zbGF0ZSsncHgpIHNjYWxlKCcrdGhpcy5zY2FsZSsnKSc7dmFyIHN0eWxlPXt0cmFuc2Zvcm06dmFsdWV9O3JldHVybiBPYmplY3QodXRpbF9bImF1dG9wcmVmaXhlciJdKShzdHlsZSk7fX0sY3JlYXRlZDpmdW5jdGlvbiBjcmVhdGVkKCl7dGhpcy4kcGFyZW50JiZ0aGlzLiRwYXJlbnQudXBkYXRlSXRlbXMoKTt9LGRlc3Ryb3llZDpmdW5jdGlvbiBkZXN0cm95ZWQoKXt0aGlzLiRwYXJlbnQmJnRoaXMuJHBhcmVudC51cGRhdGVJdGVtcygpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2Fyb3VzZWwvc3JjL2l0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19pdGVtdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWl0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jYXJvdXNlbC9zcmMvaXRlbS52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBpdGVtX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoc3JjX2l0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18saXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzE4MDFhZTE5X3JlbmRlcixpdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfMTgwMWFlMTlfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBpdGVtX2FwaTt9aXRlbV9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2Nhcm91c2VsL3NyYy9pdGVtLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfaXRlbT1pdGVtX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2Fyb3VzZWwtaXRlbS9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3NyY19pdGVtLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHNyY19pdGVtLm5hbWUsc3JjX2l0ZW0pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjYXJvdXNlbF9pdGVtPXNyY19pdGVtOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY29sbGFwc2Uvc3JjL2NvbGxhcHNlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00NjFkNTdmNCYKdmFyIGNvbGxhcHNldnVlX3R5cGVfdGVtcGxhdGVfaWRfNDYxZDU3ZjRfcmVuZGVyPWZ1bmN0aW9uIGNvbGxhcHNldnVlX3R5cGVfdGVtcGxhdGVfaWRfNDYxZDU3ZjRfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtY29sbGFwc2UiLGF0dHJzOntyb2xlOiJ0YWJsaXN0IiwiYXJpYS1tdWx0aXNlbGVjdGFibGUiOiJ0cnVlIn19LFtfdm0uX3QoImRlZmF1bHQiKV0sMik7fTt2YXIgY29sbGFwc2V2dWVfdHlwZV90ZW1wbGF0ZV9pZF80NjFkNTdmNF9zdGF0aWNSZW5kZXJGbnM9W107Y29sbGFwc2V2dWVfdHlwZV90ZW1wbGF0ZV9pZF80NjFkNTdmNF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sbGFwc2Uvc3JjL2NvbGxhcHNlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00NjFkNTdmNCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY29sbGFwc2Uvc3JjL2NvbGxhcHNlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjb2xsYXBzZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxDb2xsYXBzZScsY29tcG9uZW50TmFtZTonRWxDb2xsYXBzZScscHJvcHM6e2FjY29yZGlvbjpCb29sZWFuLHZhbHVlOnt0eXBlOltBcnJheSxTdHJpbmcsTnVtYmVyXSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnthY3RpdmVOYW1lczpbXS5jb25jYXQodGhpcy52YWx1ZSl9O30scHJvdmlkZTpmdW5jdGlvbiBwcm92aWRlKCl7cmV0dXJue2NvbGxhcHNlOnRoaXN9O30sd2F0Y2g6e3ZhbHVlOmZ1bmN0aW9uIHZhbHVlKF92YWx1ZSl7dGhpcy5hY3RpdmVOYW1lcz1bXS5jb25jYXQoX3ZhbHVlKTt9fSxtZXRob2RzOntzZXRBY3RpdmVOYW1lczpmdW5jdGlvbiBzZXRBY3RpdmVOYW1lcyhhY3RpdmVOYW1lcyl7YWN0aXZlTmFtZXM9W10uY29uY2F0KGFjdGl2ZU5hbWVzKTt2YXIgdmFsdWU9dGhpcy5hY2NvcmRpb24/YWN0aXZlTmFtZXNbMF06YWN0aXZlTmFtZXM7dGhpcy5hY3RpdmVOYW1lcz1hY3RpdmVOYW1lczt0aGlzLiRlbWl0KCdpbnB1dCcsdmFsdWUpO3RoaXMuJGVtaXQoJ2NoYW5nZScsdmFsdWUpO30saGFuZGxlSXRlbUNsaWNrOmZ1bmN0aW9uIGhhbmRsZUl0ZW1DbGljayhpdGVtKXtpZih0aGlzLmFjY29yZGlvbil7dGhpcy5zZXRBY3RpdmVOYW1lcygodGhpcy5hY3RpdmVOYW1lc1swXXx8dGhpcy5hY3RpdmVOYW1lc1swXT09PTApJiZ0aGlzLmFjdGl2ZU5hbWVzWzBdPT09aXRlbS5uYW1lPycnOml0ZW0ubmFtZSk7fWVsc2V7dmFyIGFjdGl2ZU5hbWVzPXRoaXMuYWN0aXZlTmFtZXMuc2xpY2UoMCk7dmFyIGluZGV4PWFjdGl2ZU5hbWVzLmluZGV4T2YoaXRlbS5uYW1lKTtpZihpbmRleD4tMSl7YWN0aXZlTmFtZXMuc3BsaWNlKGluZGV4LDEpO31lbHNle2FjdGl2ZU5hbWVzLnB1c2goaXRlbS5uYW1lKTt9dGhpcy5zZXRBY3RpdmVOYW1lcyhhY3RpdmVOYW1lcyk7fX19LGNyZWF0ZWQ6ZnVuY3Rpb24gY3JlYXRlZCgpe3RoaXMuJG9uKCdpdGVtLWNsaWNrJyx0aGlzLmhhbmRsZUl0ZW1DbGljayk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xsYXBzZS9zcmMvY29sbGFwc2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19jb2xsYXBzZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1jb2xsYXBzZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbGxhcHNlL3NyYy9jb2xsYXBzZS52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBjb2xsYXBzZV9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19jb2xsYXBzZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxjb2xsYXBzZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ2MWQ1N2Y0X3JlbmRlcixjb2xsYXBzZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ2MWQ1N2Y0X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgY29sbGFwc2VfYXBpO31jb2xsYXBzZV9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2NvbGxhcHNlL3NyYy9jb2xsYXBzZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY29sbGFwc2U9Y29sbGFwc2VfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xsYXBzZS9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2NvbGxhcHNlLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGNvbGxhcHNlLm5hbWUsY29sbGFwc2UpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19jb2xsYXBzZT1jb2xsYXBzZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbGxhcHNlL3NyYy9jb2xsYXBzZS1pdGVtLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yZDA1ZmFhYyYKdmFyIGNvbGxhcHNlX2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF8yZDA1ZmFhY19yZW5kZXI9ZnVuY3Rpb24gY29sbGFwc2VfaXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzJkMDVmYWFjX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNvbGxhcHNlLWl0ZW0iLGNsYXNzOnsiaXMtYWN0aXZlIjpfdm0uaXNBY3RpdmUsImlzLWRpc2FibGVkIjpfdm0uZGlzYWJsZWR9fSxbX2MoImRpdiIse2F0dHJzOntyb2xlOiJ0YWIiLCJhcmlhLWV4cGFuZGVkIjpfdm0uaXNBY3RpdmUsImFyaWEtY29udHJvbHMiOiJlbC1jb2xsYXBzZS1jb250ZW50LSIrX3ZtLmlkLCJhcmlhLWRlc2NyaWJlZGJ5IjoiZWwtY29sbGFwc2UtY29udGVudC0iK192bS5pZH19LFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNvbGxhcHNlLWl0ZW1fX2hlYWRlciIsY2xhc3M6e2ZvY3VzaW5nOl92bS5mb2N1c2luZywiaXMtYWN0aXZlIjpfdm0uaXNBY3RpdmV9LGF0dHJzOntyb2xlOiJidXR0b24iLGlkOiJlbC1jb2xsYXBzZS1oZWFkLSIrX3ZtLmlkLHRhYmluZGV4Ol92bS5kaXNhYmxlZD91bmRlZmluZWQ6MH0sb246e2NsaWNrOl92bS5oYW5kbGVIZWFkZXJDbGljayxrZXl1cDpmdW5jdGlvbiBrZXl1cCgkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsInNwYWNlIiwzMiwkZXZlbnQua2V5LFsiICIsIlNwYWNlYmFyIl0pJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsImVudGVyIiwxMywkZXZlbnQua2V5LCJFbnRlciIpKXtyZXR1cm4gbnVsbDt9JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uaGFuZGxlRW50ZXJDbGljaygkZXZlbnQpO30sZm9jdXM6X3ZtLmhhbmRsZUZvY3VzLGJsdXI6ZnVuY3Rpb24gYmx1cigkZXZlbnQpe192bS5mb2N1c2luZz1mYWxzZTt9fX0sW192bS5fdCgidGl0bGUiLFtfdm0uX3YoX3ZtLl9zKF92bS50aXRsZSkpXSksX2MoImkiLHtzdGF0aWNDbGFzczoiZWwtY29sbGFwc2UtaXRlbV9fYXJyb3cgZWwtaWNvbi1hcnJvdy1yaWdodCIsY2xhc3M6eyJpcy1hY3RpdmUiOl92bS5pc0FjdGl2ZX19KV0sMildKSxfYygiZWwtY29sbGFwc2UtdHJhbnNpdGlvbiIsW19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0uaXNBY3RpdmUsZXhwcmVzc2lvbjoiaXNBY3RpdmUifV0sc3RhdGljQ2xhc3M6ImVsLWNvbGxhcHNlLWl0ZW1fX3dyYXAiLGF0dHJzOntyb2xlOiJ0YWJwYW5lbCIsImFyaWEtaGlkZGVuIjohX3ZtLmlzQWN0aXZlLCJhcmlhLWxhYmVsbGVkYnkiOiJlbC1jb2xsYXBzZS1oZWFkLSIrX3ZtLmlkLGlkOiJlbC1jb2xsYXBzZS1jb250ZW50LSIrX3ZtLmlkfX0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtY29sbGFwc2UtaXRlbV9fY29udGVudCJ9LFtfdm0uX3QoImRlZmF1bHQiKV0sMildKV0pXSwxKTt9O3ZhciBjb2xsYXBzZV9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfMmQwNWZhYWNfc3RhdGljUmVuZGVyRm5zPVtdO2NvbGxhcHNlX2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF8yZDA1ZmFhY19yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sbGFwc2Uvc3JjL2NvbGxhcHNlLWl0ZW0udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJkMDVmYWFjJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xsYXBzZS9zcmMvY29sbGFwc2UtaXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY29sbGFwc2VfaXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxDb2xsYXBzZUl0ZW0nLGNvbXBvbmVudE5hbWU6J0VsQ29sbGFwc2VJdGVtJyxtaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hXSxjb21wb25lbnRzOntFbENvbGxhcHNlVHJhbnNpdGlvbjpjb2xsYXBzZV90cmFuc2l0aW9uX2RlZmF1bHQuYX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2NvbnRlbnRXcmFwU3R5bGU6e2hlaWdodDonYXV0bycsZGlzcGxheTonYmxvY2snfSxjb250ZW50SGVpZ2h0OjAsZm9jdXNpbmc6ZmFsc2UsaXNDbGljazpmYWxzZSxpZDpPYmplY3QodXRpbF9bImdlbmVyYXRlSWQiXSkoKX07fSxpbmplY3Q6Wydjb2xsYXBzZSddLHByb3BzOnt0aXRsZTpTdHJpbmcsbmFtZTp7dHlwZTpbU3RyaW5nLE51bWJlcl0sZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybiB0aGlzLl91aWQ7fX0sZGlzYWJsZWQ6Qm9vbGVhbn0sY29tcHV0ZWQ6e2lzQWN0aXZlOmZ1bmN0aW9uIGlzQWN0aXZlKCl7cmV0dXJuIHRoaXMuY29sbGFwc2UuYWN0aXZlTmFtZXMuaW5kZXhPZih0aGlzLm5hbWUpPi0xO319LG1ldGhvZHM6e2hhbmRsZUZvY3VzOmZ1bmN0aW9uIGhhbmRsZUZvY3VzKCl7dmFyIF90aGlzPXRoaXM7c2V0VGltZW91dChmdW5jdGlvbigpe2lmKCFfdGhpcy5pc0NsaWNrKXtfdGhpcy5mb2N1c2luZz10cnVlO31lbHNle190aGlzLmlzQ2xpY2s9ZmFsc2U7fX0sNTApO30saGFuZGxlSGVhZGVyQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlSGVhZGVyQ2xpY2soKXtpZih0aGlzLmRpc2FibGVkKXJldHVybjt0aGlzLmRpc3BhdGNoKCdFbENvbGxhcHNlJywnaXRlbS1jbGljaycsdGhpcyk7dGhpcy5mb2N1c2luZz1mYWxzZTt0aGlzLmlzQ2xpY2s9dHJ1ZTt9LGhhbmRsZUVudGVyQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlRW50ZXJDbGljaygpe3RoaXMuZGlzcGF0Y2goJ0VsQ29sbGFwc2UnLCdpdGVtLWNsaWNrJyx0aGlzKTt9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xsYXBzZS9zcmMvY29sbGFwc2UtaXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2NvbGxhcHNlX2l0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189Y29sbGFwc2VfaXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbGxhcHNlL3NyYy9jb2xsYXBzZS1pdGVtLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGNvbGxhcHNlX2l0ZW1fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfY29sbGFwc2VfaXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxjb2xsYXBzZV9pdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfMmQwNWZhYWNfcmVuZGVyLGNvbGxhcHNlX2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF8yZDA1ZmFhY19zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGNvbGxhcHNlX2l0ZW1fYXBpO31jb2xsYXBzZV9pdGVtX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvY29sbGFwc2Uvc3JjL2NvbGxhcHNlLWl0ZW0udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNvbGxhcHNlX2l0ZW09Y29sbGFwc2VfaXRlbV9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbGxhcHNlLWl0ZW0vaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9jb2xsYXBzZV9pdGVtLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGNvbGxhcHNlX2l0ZW0ubmFtZSxjb2xsYXBzZV9pdGVtKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfY29sbGFwc2VfaXRlbT1jb2xsYXBzZV9pdGVtOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY2FzY2FkZXIvc3JjL2Nhc2NhZGVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wMzI1MzdhNiYKdmFyIGNhc2NhZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfMDMyNTM3YTZfcmVuZGVyPWZ1bmN0aW9uIGNhc2NhZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfMDMyNTM3YTZfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToiY2xpY2tvdXRzaWRlIixyYXdOYW1lOiJ2LWNsaWNrb3V0c2lkZSIsdmFsdWU6ZnVuY3Rpb24gdmFsdWUoKXtyZXR1cm4gX3ZtLnRvZ2dsZURyb3BEb3duVmlzaWJsZShmYWxzZSk7fSxleHByZXNzaW9uOiIoKSA9PiB0b2dnbGVEcm9wRG93blZpc2libGUoZmFsc2UpIn1dLHJlZjoicmVmZXJlbmNlIixjbGFzczpbImVsLWNhc2NhZGVyIixfdm0ucmVhbFNpemUmJiJlbC1jYXNjYWRlci0tIitfdm0ucmVhbFNpemUseyJpcy1kaXNhYmxlZCI6X3ZtLmlzRGlzYWJsZWR9XSxvbjp7bW91c2VlbnRlcjpmdW5jdGlvbiBtb3VzZWVudGVyKCRldmVudCl7X3ZtLmlucHV0SG92ZXI9dHJ1ZTt9LG1vdXNlbGVhdmU6ZnVuY3Rpb24gbW91c2VsZWF2ZSgkZXZlbnQpe192bS5pbnB1dEhvdmVyPWZhbHNlO30sY2xpY2s6ZnVuY3Rpb24gY2xpY2soKXtyZXR1cm4gX3ZtLnRvZ2dsZURyb3BEb3duVmlzaWJsZShfdm0ucmVhZG9ubHk/dW5kZWZpbmVkOnRydWUpO30sa2V5ZG93bjpfdm0uaGFuZGxlS2V5RG93bn19LFtfYygiZWwtaW5wdXQiLHtyZWY6ImlucHV0IixjbGFzczp7ImlzLWZvY3VzIjpfdm0uZHJvcERvd25WaXNpYmxlfSxhdHRyczp7c2l6ZTpfdm0ucmVhbFNpemUscGxhY2Vob2xkZXI6X3ZtLnBsYWNlaG9sZGVyLHJlYWRvbmx5Ol92bS5yZWFkb25seSxkaXNhYmxlZDpfdm0uaXNEaXNhYmxlZCwidmFsaWRhdGUtZXZlbnQiOmZhbHNlfSxvbjp7Zm9jdXM6X3ZtLmhhbmRsZUZvY3VzLGJsdXI6X3ZtLmhhbmRsZUJsdXIsaW5wdXQ6X3ZtLmhhbmRsZUlucHV0fSxtb2RlbDp7dmFsdWU6X3ZtLm11bHRpcGxlP192bS5wcmVzZW50VGV4dDpfdm0uaW5wdXRWYWx1ZSxjYWxsYmFjazpmdW5jdGlvbiBjYWxsYmFjaygkJHYpe192bS5tdWx0aXBsZT9fdm0ucHJlc2VudFRleHQ6X3ZtLmlucHV0VmFsdWU9JCR2O30sZXhwcmVzc2lvbjoibXVsdGlwbGUgPyBwcmVzZW50VGV4dCA6IGlucHV0VmFsdWUifX0sW19jKCJ0ZW1wbGF0ZSIse3Nsb3Q6InN1ZmZpeCJ9LFtfdm0uY2xlYXJCdG5WaXNpYmxlP19jKCJpIix7a2V5OiJjbGVhciIsc3RhdGljQ2xhc3M6ImVsLWlucHV0X19pY29uIGVsLWljb24tY2lyY2xlLWNsb3NlIixvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5oYW5kbGVDbGVhcigkZXZlbnQpO319fSk6X2MoImkiLHtrZXk6ImFycm93LWRvd24iLGNsYXNzOlsiZWwtaW5wdXRfX2ljb24iLCJlbC1pY29uLWFycm93LWRvd24iLF92bS5kcm9wRG93blZpc2libGUmJiJpcy1yZXZlcnNlIl0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO192bS50b2dnbGVEcm9wRG93blZpc2libGUoKTt9fX0pXSldLDIpLF92bS5tdWx0aXBsZT9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNhc2NhZGVyX190YWdzIn0sW192bS5fbChfdm0ucHJlc2VudFRhZ3MsZnVuY3Rpb24odGFnKXtyZXR1cm4gX2MoImVsLXRhZyIse2tleTp0YWcua2V5LGF0dHJzOnt0eXBlOiJpbmZvIixzaXplOl92bS50YWdTaXplLGhpdDp0YWcuaGl0U3RhdGUsY2xvc2FibGU6dGFnLmNsb3NhYmxlLCJkaXNhYmxlLXRyYW5zaXRpb25zIjoiIn0sb246e2Nsb3NlOmZ1bmN0aW9uIGNsb3NlKCRldmVudCl7X3ZtLmRlbGV0ZVRhZyh0YWcpO319fSxbX2MoInNwYW4iLFtfdm0uX3YoX3ZtLl9zKHRhZy50ZXh0KSldKV0pO30pLF92bS5maWx0ZXJhYmxlJiYhX3ZtLmlzRGlzYWJsZWQ/X2MoImlucHV0Iix7ZGlyZWN0aXZlczpbe25hbWU6Im1vZGVsIixyYXdOYW1lOiJ2LW1vZGVsLnRyaW0iLHZhbHVlOl92bS5pbnB1dFZhbHVlLGV4cHJlc3Npb246ImlucHV0VmFsdWUiLG1vZGlmaWVyczp7dHJpbTp0cnVlfX1dLHN0YXRpY0NsYXNzOiJlbC1jYXNjYWRlcl9fc2VhcmNoLWlucHV0IixhdHRyczp7dHlwZToidGV4dCIscGxhY2Vob2xkZXI6X3ZtLnByZXNlbnRUYWdzLmxlbmd0aD8iIjpfdm0ucGxhY2Vob2xkZXJ9LGRvbVByb3BzOnt2YWx1ZTpfdm0uaW5wdXRWYWx1ZX0sb246e2lucHV0OltmdW5jdGlvbigkZXZlbnQpe2lmKCRldmVudC50YXJnZXQuY29tcG9zaW5nKXtyZXR1cm47fV92bS5pbnB1dFZhbHVlPSRldmVudC50YXJnZXQudmFsdWUudHJpbSgpO30sZnVuY3Rpb24oZSl7cmV0dXJuIF92bS5oYW5kbGVJbnB1dChfdm0uaW5wdXRWYWx1ZSxlKTt9XSxjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpeyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtfdm0udG9nZ2xlRHJvcERvd25WaXNpYmxlKHRydWUpO30sa2V5ZG93bjpmdW5jdGlvbiBrZXlkb3duKCRldmVudCl7aWYoISgiYnV0dG9uImluICRldmVudCkmJl92bS5faygkZXZlbnQua2V5Q29kZSwiZGVsZXRlIixbOCw0Nl0sJGV2ZW50LmtleSxbIkJhY2tzcGFjZSIsIkRlbGV0ZSIsIkRlbCJdKSl7cmV0dXJuIG51bGw7fXJldHVybiBfdm0uaGFuZGxlRGVsZXRlKCRldmVudCk7fSxibHVyOmZ1bmN0aW9uIGJsdXIoJGV2ZW50KXtfdm0uJGZvcmNlVXBkYXRlKCk7fX19KTpfdm0uX2UoKV0sMik6X3ZtLl9lKCksX2MoInRyYW5zaXRpb24iLHthdHRyczp7bmFtZToiZWwtem9vbS1pbi10b3AifSxvbjp7ImFmdGVyLWxlYXZlIjpfdm0uaGFuZGxlRHJvcGRvd25MZWF2ZX19LFtfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLmRyb3BEb3duVmlzaWJsZSxleHByZXNzaW9uOiJkcm9wRG93blZpc2libGUifV0scmVmOiJwb3BwZXIiLGNsYXNzOlsiZWwtcG9wcGVyIiwiZWwtY2FzY2FkZXJfX2Ryb3Bkb3duIixfdm0ucG9wcGVyQ2xhc3NdfSxbX2MoImVsLWNhc2NhZGVyLXBhbmVsIix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6IV92bS5maWx0ZXJpbmcsZXhwcmVzc2lvbjoiIWZpbHRlcmluZyJ9XSxyZWY6InBhbmVsIixhdHRyczp7b3B0aW9uczpfdm0ub3B0aW9ucyxwcm9wczpfdm0uY29uZmlnLGJvcmRlcjpmYWxzZSwicmVuZGVyLWxhYmVsIjpfdm0uJHNjb3BlZFNsb3RzLmRlZmF1bHR9LG9uOnsiZXhwYW5kLWNoYW5nZSI6X3ZtLmhhbmRsZUV4cGFuZENoYW5nZSxjbG9zZTpmdW5jdGlvbiBjbG9zZSgkZXZlbnQpe192bS50b2dnbGVEcm9wRG93blZpc2libGUoZmFsc2UpO319LG1vZGVsOnt2YWx1ZTpfdm0uY2hlY2tlZFZhbHVlLGNhbGxiYWNrOmZ1bmN0aW9uIGNhbGxiYWNrKCQkdil7X3ZtLmNoZWNrZWRWYWx1ZT0kJHY7fSxleHByZXNzaW9uOiJjaGVja2VkVmFsdWUifX0pLF92bS5maWx0ZXJhYmxlP19jKCJlbC1zY3JvbGxiYXIiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0uZmlsdGVyaW5nLGV4cHJlc3Npb246ImZpbHRlcmluZyJ9XSxyZWY6InN1Z2dlc3Rpb25QYW5lbCIsc3RhdGljQ2xhc3M6ImVsLWNhc2NhZGVyX19zdWdnZXN0aW9uLXBhbmVsIixhdHRyczp7dGFnOiJ1bCIsInZpZXctY2xhc3MiOiJlbC1jYXNjYWRlcl9fc3VnZ2VzdGlvbi1saXN0In0sbmF0aXZlT246e2tleWRvd246ZnVuY3Rpb24ga2V5ZG93bigkZXZlbnQpe3JldHVybiBfdm0uaGFuZGxlU3VnZ2VzdGlvbktleURvd24oJGV2ZW50KTt9fX0sW192bS5zdWdnZXN0aW9ucy5sZW5ndGg/X3ZtLl9sKF92bS5zdWdnZXN0aW9ucyxmdW5jdGlvbihpdGVtLGluZGV4KXtyZXR1cm4gX2MoImxpIix7a2V5Oml0ZW0udWlkLGNsYXNzOlsiZWwtY2FzY2FkZXJfX3N1Z2dlc3Rpb24taXRlbSIsaXRlbS5jaGVja2VkJiYiaXMtY2hlY2tlZCJdLGF0dHJzOnt0YWJpbmRleDotMX0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLmhhbmRsZVN1Z2dlc3Rpb25DbGljayhpbmRleCk7fX19LFtfYygic3BhbiIsW192bS5fdihfdm0uX3MoaXRlbS50ZXh0KSldKSxpdGVtLmNoZWNrZWQ/X2MoImkiLHtzdGF0aWNDbGFzczoiZWwtaWNvbi1jaGVjayJ9KTpfdm0uX2UoKV0pO30pOl92bS5fdCgiZW1wdHkiLFtfYygibGkiLHtzdGF0aWNDbGFzczoiZWwtY2FzY2FkZXJfX2VtcHR5LXRleHQifSxbX3ZtLl92KF92bS5fcyhfdm0udCgiZWwuY2FzY2FkZXIubm9NYXRjaCIpKSldKV0pXSwyKTpfdm0uX2UoKV0sMSldKV0sMSk7fTt2YXIgY2FzY2FkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wMzI1MzdhNl9zdGF0aWNSZW5kZXJGbnM9W107Y2FzY2FkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wMzI1MzdhNl9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FzY2FkZXIvc3JjL2Nhc2NhZGVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wMzI1MzdhNiYKLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvY2FzY2FkZXItcGFuZWwiCnZhciBjYXNjYWRlcl9wYW5lbF89X193ZWJwYWNrX3JlcXVpcmVfXyg0Mik7dmFyIGNhc2NhZGVyX3BhbmVsX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihjYXNjYWRlcl9wYW5lbF8pOy8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3V0aWxzL2FyaWEtdXRpbHMiCnZhciBhcmlhX3V0aWxzXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDM0KTt2YXIgYXJpYV91dGlsc19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oYXJpYV91dGlsc18pOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2Nhc2NhZGVyL3NyYy9jYXNjYWRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBLZXlDb2RlPWFyaWFfdXRpbHNfZGVmYXVsdC5hLmtleXM7dmFyIE1pZ3JhdGluZ1Byb3BzPXtleHBhbmRUcmlnZ2VyOntuZXdQcm9wOidleHBhbmRUcmlnZ2VyJyx0eXBlOlN0cmluZ30sY2hhbmdlT25TZWxlY3Q6e25ld1Byb3A6J2NoZWNrU3RyaWN0bHknLHR5cGU6Qm9vbGVhbn0saG92ZXJUaHJlc2hvbGQ6e25ld1Byb3A6J2hvdmVyVGhyZXNob2xkJyx0eXBlOk51bWJlcn19O3ZhciBQb3BwZXJNaXhpbj17cHJvcHM6e3BsYWNlbWVudDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonYm90dG9tLXN0YXJ0J30sYXBwZW5kVG9Cb2R5OnZ1ZV9wb3BwZXJfZGVmYXVsdC5hLnByb3BzLmFwcGVuZFRvQm9keSx2aXNpYmxlQXJyb3c6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGFycm93T2Zmc2V0OnZ1ZV9wb3BwZXJfZGVmYXVsdC5hLnByb3BzLmFycm93T2Zmc2V0LG9mZnNldDp2dWVfcG9wcGVyX2RlZmF1bHQuYS5wcm9wcy5vZmZzZXQsYm91bmRhcmllc1BhZGRpbmc6dnVlX3BvcHBlcl9kZWZhdWx0LmEucHJvcHMuYm91bmRhcmllc1BhZGRpbmcscG9wcGVyT3B0aW9uczp2dWVfcG9wcGVyX2RlZmF1bHQuYS5wcm9wcy5wb3BwZXJPcHRpb25zfSxtZXRob2RzOnZ1ZV9wb3BwZXJfZGVmYXVsdC5hLm1ldGhvZHMsZGF0YTp2dWVfcG9wcGVyX2RlZmF1bHQuYS5kYXRhLGJlZm9yZURlc3Ryb3k6dnVlX3BvcHBlcl9kZWZhdWx0LmEuYmVmb3JlRGVzdHJveX07dmFyIElucHV0U2l6ZU1hcD17bWVkaXVtOjM2LHNtYWxsOjMyLG1pbmk6Mjh9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY2FzY2FkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQ2FzY2FkZXInLGRpcmVjdGl2ZXM6e0NsaWNrb3V0c2lkZTpjbGlja291dHNpZGVfZGVmYXVsdC5hfSxtaXhpbnM6W1BvcHBlck1peGluLGVtaXR0ZXJfZGVmYXVsdC5hLGxvY2FsZV9kZWZhdWx0LmEsbWlncmF0aW5nX2RlZmF1bHQuYV0saW5qZWN0OntlbEZvcm06e2RlZmF1bHQ6Jyd9LGVsRm9ybUl0ZW06e2RlZmF1bHQ6Jyd9fSxjb21wb25lbnRzOntFbElucHV0OmlucHV0X2RlZmF1bHQuYSxFbFRhZzp0YWdfZGVmYXVsdC5hLEVsU2Nyb2xsYmFyOnNjcm9sbGJhcl9kZWZhdWx0LmEsRWxDYXNjYWRlclBhbmVsOmNhc2NhZGVyX3BhbmVsX2RlZmF1bHQuYX0scHJvcHM6e3ZhbHVlOnt9LG9wdGlvbnM6QXJyYXkscHJvcHM6T2JqZWN0LHNpemU6U3RyaW5nLHBsYWNlaG9sZGVyOnt0eXBlOlN0cmluZyxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuIE9iamVjdChsaWJfbG9jYWxlX1sidCJdKSgnZWwuY2FzY2FkZXIucGxhY2Vob2xkZXInKTt9fSxkaXNhYmxlZDpCb29sZWFuLGNsZWFyYWJsZTpCb29sZWFuLGZpbHRlcmFibGU6Qm9vbGVhbixmaWx0ZXJNZXRob2Q6RnVuY3Rpb24sc2VwYXJhdG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OicgLyAnfSxzaG93QWxsTGV2ZWxzOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxjb2xsYXBzZVRhZ3M6Qm9vbGVhbixkZWJvdW5jZTp7dHlwZTpOdW1iZXIsZGVmYXVsdDozMDB9LGJlZm9yZUZpbHRlcjp7dHlwZTpGdW5jdGlvbixkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuIGZ1bmN0aW9uKCl7fTt9fSxwb3BwZXJDbGFzczpTdHJpbmd9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntkcm9wRG93blZpc2libGU6ZmFsc2UsY2hlY2tlZFZhbHVlOnRoaXMudmFsdWV8fG51bGwsaW5wdXRIb3ZlcjpmYWxzZSxpbnB1dFZhbHVlOm51bGwscHJlc2VudFRleHQ6bnVsbCxwcmVzZW50VGFnczpbXSxjaGVja2VkTm9kZXM6W10sZmlsdGVyaW5nOmZhbHNlLHN1Z2dlc3Rpb25zOltdLGlucHV0SW5pdGlhbEhlaWdodDowLHByZXNzRGVsZXRlQ291bnQ6MH07fSxjb21wdXRlZDp7cmVhbFNpemU6ZnVuY3Rpb24gcmVhbFNpemUoKXt2YXIgX2VsRm9ybUl0ZW1TaXplPSh0aGlzLmVsRm9ybUl0ZW18fHt9KS5lbEZvcm1JdGVtU2l6ZTtyZXR1cm4gdGhpcy5zaXplfHxfZWxGb3JtSXRlbVNpemV8fCh0aGlzLiRFTEVNRU5UfHx7fSkuc2l6ZTt9LHRhZ1NpemU6ZnVuY3Rpb24gdGFnU2l6ZSgpe3JldHVyblsnc21hbGwnLCdtaW5pJ10uaW5kZXhPZih0aGlzLnJlYWxTaXplKT4tMT8nbWluaSc6J3NtYWxsJzt9LGlzRGlzYWJsZWQ6ZnVuY3Rpb24gaXNEaXNhYmxlZCgpe3JldHVybiB0aGlzLmRpc2FibGVkfHwodGhpcy5lbEZvcm18fHt9KS5kaXNhYmxlZDt9LGNvbmZpZzpmdW5jdGlvbiBjb25maWcoKXt2YXIgY29uZmlnPXRoaXMucHJvcHN8fHt9O3ZhciAkYXR0cnM9dGhpcy4kYXR0cnM7T2JqZWN0LmtleXMoTWlncmF0aW5nUHJvcHMpLmZvckVhY2goZnVuY3Rpb24ob2xkUHJvcCl7dmFyIF9NaWdyYXRpbmdQcm9wcyRvbGRQcj1NaWdyYXRpbmdQcm9wc1tvbGRQcm9wXSxuZXdQcm9wPV9NaWdyYXRpbmdQcm9wcyRvbGRQci5uZXdQcm9wLHR5cGU9X01pZ3JhdGluZ1Byb3BzJG9sZFByLnR5cGU7dmFyIG9sZFZhbHVlPSRhdHRyc1tvbGRQcm9wXXx8JGF0dHJzW09iamVjdCh1dGlsX1sia2ViYWJDYXNlIl0pKG9sZFByb3ApXTtpZihPYmplY3Qoc2hhcmVkX1siaXNEZWYiXSkob2xkUHJvcCkmJiFPYmplY3Qoc2hhcmVkX1siaXNEZWYiXSkoY29uZmlnW25ld1Byb3BdKSl7aWYodHlwZT09PUJvb2xlYW4mJm9sZFZhbHVlPT09Jycpe29sZFZhbHVlPXRydWU7fWNvbmZpZ1tuZXdQcm9wXT1vbGRWYWx1ZTt9fSk7cmV0dXJuIGNvbmZpZzt9LG11bHRpcGxlOmZ1bmN0aW9uIG11bHRpcGxlKCl7cmV0dXJuIHRoaXMuY29uZmlnLm11bHRpcGxlO30sbGVhZk9ubHk6ZnVuY3Rpb24gbGVhZk9ubHkoKXtyZXR1cm4hdGhpcy5jb25maWcuY2hlY2tTdHJpY3RseTt9LHJlYWRvbmx5OmZ1bmN0aW9uIHJlYWRvbmx5KCl7cmV0dXJuIXRoaXMuZmlsdGVyYWJsZXx8dGhpcy5tdWx0aXBsZTt9LGNsZWFyQnRuVmlzaWJsZTpmdW5jdGlvbiBjbGVhckJ0blZpc2libGUoKXtpZighdGhpcy5jbGVhcmFibGV8fHRoaXMuaXNEaXNhYmxlZHx8dGhpcy5maWx0ZXJpbmd8fCF0aGlzLmlucHV0SG92ZXIpe3JldHVybiBmYWxzZTt9cmV0dXJuIHRoaXMubXVsdGlwbGU/ISF0aGlzLmNoZWNrZWROb2Rlcy5maWx0ZXIoZnVuY3Rpb24obm9kZSl7cmV0dXJuIW5vZGUuaXNEaXNhYmxlZDt9KS5sZW5ndGg6ISF0aGlzLnByZXNlbnRUZXh0O30scGFuZWw6ZnVuY3Rpb24gcGFuZWwoKXtyZXR1cm4gdGhpcy4kcmVmcy5wYW5lbDt9fSx3YXRjaDp7ZGlzYWJsZWQ6ZnVuY3Rpb24gZGlzYWJsZWQoKXt0aGlzLmNvbXB1dGVQcmVzZW50Q29udGVudCgpO30sdmFsdWU6ZnVuY3Rpb24gdmFsdWUodmFsKXtpZighT2JqZWN0KHV0aWxfWyJpc0VxdWFsIl0pKHZhbCx0aGlzLmNoZWNrZWRWYWx1ZSkpe3RoaXMuY2hlY2tlZFZhbHVlPXZhbDt0aGlzLmNvbXB1dGVQcmVzZW50Q29udGVudCgpO319LGNoZWNrZWRWYWx1ZTpmdW5jdGlvbiBjaGVja2VkVmFsdWUodmFsKXt2YXIgdmFsdWU9dGhpcy52YWx1ZSxkcm9wRG93blZpc2libGU9dGhpcy5kcm9wRG93blZpc2libGU7dmFyIF9jb25maWc9dGhpcy5jb25maWcsY2hlY2tTdHJpY3RseT1fY29uZmlnLmNoZWNrU3RyaWN0bHksbXVsdGlwbGU9X2NvbmZpZy5tdWx0aXBsZTtpZighT2JqZWN0KHV0aWxfWyJpc0VxdWFsIl0pKHZhbCx2YWx1ZSl8fE9iamVjdCh0eXBlc19bImlzVW5kZWZpbmVkIl0pKHZhbHVlKSl7dGhpcy5jb21wdXRlUHJlc2VudENvbnRlbnQoKTsvLyBoaWRlIGRyb3Bkb3duIHdoZW4gc2luZ2xlIG1vZGUKaWYoIW11bHRpcGxlJiYhY2hlY2tTdHJpY3RseSYmZHJvcERvd25WaXNpYmxlKXt0aGlzLnRvZ2dsZURyb3BEb3duVmlzaWJsZShmYWxzZSk7fXRoaXMuJGVtaXQoJ2lucHV0Jyx2YWwpO3RoaXMuJGVtaXQoJ2NoYW5nZScsdmFsKTt0aGlzLmRpc3BhdGNoKCdFbEZvcm1JdGVtJywnZWwuZm9ybS5jaGFuZ2UnLFt2YWxdKTt9fSxvcHRpb25zOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIoKXt0aGlzLiRuZXh0VGljayh0aGlzLmNvbXB1dGVQcmVzZW50Q29udGVudCk7fSxkZWVwOnRydWV9LHByZXNlbnRUZXh0OmZ1bmN0aW9uIHByZXNlbnRUZXh0KHZhbCl7dGhpcy5pbnB1dFZhbHVlPXZhbDt9LHByZXNlbnRUYWdzOmZ1bmN0aW9uIHByZXNlbnRUYWdzKHZhbCxvbGRWYWwpe2lmKHRoaXMubXVsdGlwbGUmJih2YWwubGVuZ3RofHxvbGRWYWwubGVuZ3RoKSl7dGhpcy4kbmV4dFRpY2sodGhpcy51cGRhdGVTdHlsZSk7fX0sZmlsdGVyaW5nOmZ1bmN0aW9uIGZpbHRlcmluZyh2YWwpe3RoaXMuJG5leHRUaWNrKHRoaXMudXBkYXRlUG9wcGVyKTt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXM9dGhpczt2YXIgaW5wdXQ9dGhpcy4kcmVmcy5pbnB1dDtpZihpbnB1dCYmaW5wdXQuJGVsKXt0aGlzLmlucHV0SW5pdGlhbEhlaWdodD1pbnB1dC4kZWwub2Zmc2V0SGVpZ2h0fHxJbnB1dFNpemVNYXBbdGhpcy5yZWFsU2l6ZV18fDQwO31pZighT2JqZWN0KHV0aWxfWyJpc0VtcHR5Il0pKHRoaXMudmFsdWUpKXt0aGlzLmNvbXB1dGVQcmVzZW50Q29udGVudCgpO310aGlzLmZpbHRlckhhbmRsZXI9ZGVib3VuY2VfZGVmYXVsdCgpKHRoaXMuZGVib3VuY2UsZnVuY3Rpb24oKXt2YXIgaW5wdXRWYWx1ZT1fdGhpcy5pbnB1dFZhbHVlO2lmKCFpbnB1dFZhbHVlKXtfdGhpcy5maWx0ZXJpbmc9ZmFsc2U7cmV0dXJuO312YXIgYmVmb3JlPV90aGlzLmJlZm9yZUZpbHRlcihpbnB1dFZhbHVlKTtpZihiZWZvcmUmJmJlZm9yZS50aGVuKXtiZWZvcmUudGhlbihfdGhpcy5nZXRTdWdnZXN0aW9ucyk7fWVsc2UgaWYoYmVmb3JlIT09ZmFsc2Upe190aGlzLmdldFN1Z2dlc3Rpb25zKCk7fWVsc2V7X3RoaXMuZmlsdGVyaW5nPWZhbHNlO319KTtPYmplY3QocmVzaXplX2V2ZW50X1siYWRkUmVzaXplTGlzdGVuZXIiXSkodGhpcy4kZWwsdGhpcy51cGRhdGVTdHlsZSk7fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXtPYmplY3QocmVzaXplX2V2ZW50X1sicmVtb3ZlUmVzaXplTGlzdGVuZXIiXSkodGhpcy4kZWwsdGhpcy51cGRhdGVTdHlsZSk7fSxtZXRob2RzOntnZXRNaWdyYXRpbmdDb25maWc6ZnVuY3Rpb24gZ2V0TWlncmF0aW5nQ29uZmlnKCl7cmV0dXJue3Byb3BzOnsnZXhwYW5kLXRyaWdnZXInOidleHBhbmQtdHJpZ2dlciBpcyByZW1vdmVkLCB1c2UgYHByb3BzLmV4cGFuZFRyaWdnZXJgIGluc3RlYWQuJywnY2hhbmdlLW9uLXNlbGVjdCc6J2NoYW5nZS1vbi1zZWxlY3QgaXMgcmVtb3ZlZCwgdXNlIGBwcm9wcy5jaGVja1N0cmljdGx5YCBpbnN0ZWFkLicsJ2hvdmVyLXRocmVzaG9sZCc6J2hvdmVyLXRocmVzaG9sZCBpcyByZW1vdmVkLCB1c2UgYHByb3BzLmhvdmVyVGhyZXNob2xkYCBpbnN0ZWFkJ30sZXZlbnRzOnsnYWN0aXZlLWl0ZW0tY2hhbmdlJzonYWN0aXZlLWl0ZW0tY2hhbmdlIGlzIHJlbmFtZWQgdG8gZXhwYW5kLWNoYW5nZSd9fTt9LHRvZ2dsZURyb3BEb3duVmlzaWJsZTpmdW5jdGlvbiB0b2dnbGVEcm9wRG93blZpc2libGUodmlzaWJsZSl7dmFyIF90aGlzMj10aGlzO2lmKHRoaXMuaXNEaXNhYmxlZClyZXR1cm47dmFyIGRyb3BEb3duVmlzaWJsZT10aGlzLmRyb3BEb3duVmlzaWJsZTt2YXIgaW5wdXQ9dGhpcy4kcmVmcy5pbnB1dDt2aXNpYmxlPU9iamVjdChzaGFyZWRfWyJpc0RlZiJdKSh2aXNpYmxlKT92aXNpYmxlOiFkcm9wRG93blZpc2libGU7aWYodmlzaWJsZSE9PWRyb3BEb3duVmlzaWJsZSl7dGhpcy5kcm9wRG93blZpc2libGU9dmlzaWJsZTtpZih2aXNpYmxlKXt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe190aGlzMi51cGRhdGVQb3BwZXIoKTtfdGhpczIucGFuZWwuc2Nyb2xsSW50b1ZpZXcoKTt9KTt9aW5wdXQuJHJlZnMuaW5wdXQuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJyx2aXNpYmxlKTt0aGlzLiRlbWl0KCd2aXNpYmxlLWNoYW5nZScsdmlzaWJsZSk7fX0saGFuZGxlRHJvcGRvd25MZWF2ZTpmdW5jdGlvbiBoYW5kbGVEcm9wZG93bkxlYXZlKCl7dGhpcy5maWx0ZXJpbmc9ZmFsc2U7dGhpcy5pbnB1dFZhbHVlPXRoaXMucHJlc2VudFRleHQ7fSxoYW5kbGVLZXlEb3duOmZ1bmN0aW9uIGhhbmRsZUtleURvd24oZXZlbnQpe3N3aXRjaChldmVudC5rZXlDb2RlKXtjYXNlIEtleUNvZGUuZW50ZXI6dGhpcy50b2dnbGVEcm9wRG93blZpc2libGUoKTticmVhaztjYXNlIEtleUNvZGUuZG93bjp0aGlzLnRvZ2dsZURyb3BEb3duVmlzaWJsZSh0cnVlKTt0aGlzLmZvY3VzRmlyc3ROb2RlKCk7ZXZlbnQucHJldmVudERlZmF1bHQoKTticmVhaztjYXNlIEtleUNvZGUuZXNjOmNhc2UgS2V5Q29kZS50YWI6dGhpcy50b2dnbGVEcm9wRG93blZpc2libGUoZmFsc2UpO2JyZWFrO319LGhhbmRsZUZvY3VzOmZ1bmN0aW9uIGhhbmRsZUZvY3VzKGUpe3RoaXMuJGVtaXQoJ2ZvY3VzJyxlKTt9LGhhbmRsZUJsdXI6ZnVuY3Rpb24gaGFuZGxlQmx1cihlKXt0aGlzLiRlbWl0KCdibHVyJyxlKTt9LGhhbmRsZUlucHV0OmZ1bmN0aW9uIGhhbmRsZUlucHV0KHZhbCxldmVudCl7IXRoaXMuZHJvcERvd25WaXNpYmxlJiZ0aGlzLnRvZ2dsZURyb3BEb3duVmlzaWJsZSh0cnVlKTtpZihldmVudCYmZXZlbnQuaXNDb21wb3NpbmcpcmV0dXJuO2lmKHZhbCl7dGhpcy5maWx0ZXJIYW5kbGVyKCk7fWVsc2V7dGhpcy5maWx0ZXJpbmc9ZmFsc2U7fX0saGFuZGxlQ2xlYXI6ZnVuY3Rpb24gaGFuZGxlQ2xlYXIoKXt0aGlzLnByZXNlbnRUZXh0PScnO3RoaXMucGFuZWwuY2xlYXJDaGVja2VkTm9kZXMoKTt9LGhhbmRsZUV4cGFuZENoYW5nZTpmdW5jdGlvbiBoYW5kbGVFeHBhbmRDaGFuZ2UodmFsdWUpe3RoaXMuJG5leHRUaWNrKHRoaXMudXBkYXRlUG9wcGVyLmJpbmQodGhpcykpO3RoaXMuJGVtaXQoJ2V4cGFuZC1jaGFuZ2UnLHZhbHVlKTt0aGlzLiRlbWl0KCdhY3RpdmUtaXRlbS1jaGFuZ2UnLHZhbHVlKTsvLyBEZXByZWNhdGVkCn0sZm9jdXNGaXJzdE5vZGU6ZnVuY3Rpb24gZm9jdXNGaXJzdE5vZGUoKXt2YXIgX3RoaXMzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXt2YXIgZmlsdGVyaW5nPV90aGlzMy5maWx0ZXJpbmc7dmFyIF8kcmVmcz1fdGhpczMuJHJlZnMscG9wcGVyPV8kcmVmcy5wb3BwZXIsc3VnZ2VzdGlvblBhbmVsPV8kcmVmcy5zdWdnZXN0aW9uUGFuZWw7dmFyIGZpcnN0Tm9kZT1udWxsO2lmKGZpbHRlcmluZyYmc3VnZ2VzdGlvblBhbmVsKXtmaXJzdE5vZGU9c3VnZ2VzdGlvblBhbmVsLiRlbC5xdWVyeVNlbGVjdG9yKCcuZWwtY2FzY2FkZXJfX3N1Z2dlc3Rpb24taXRlbScpO31lbHNle3ZhciBmaXJzdE1lbnU9cG9wcGVyLnF1ZXJ5U2VsZWN0b3IoJy5lbC1jYXNjYWRlci1tZW51Jyk7Zmlyc3ROb2RlPWZpcnN0TWVudS5xdWVyeVNlbGVjdG9yKCcuZWwtY2FzY2FkZXItbm9kZVt0YWJpbmRleD0iLTEiXScpO31pZihmaXJzdE5vZGUpe2ZpcnN0Tm9kZS5mb2N1cygpOyFmaWx0ZXJpbmcmJmZpcnN0Tm9kZS5jbGljaygpO319KTt9LGNvbXB1dGVQcmVzZW50Q29udGVudDpmdW5jdGlvbiBjb21wdXRlUHJlc2VudENvbnRlbnQoKXt2YXIgX3RoaXM0PXRoaXM7Ly8gbmV4dFRpY2sgaXMgcmVxdWlyZWQsIGJlY2F1c2UgY2hlY2tlZCBub2RlcyBtYXkgbm90IGNoYW5nZSByaWdodCBub3cKdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtpZihfdGhpczQuY29uZmlnLm11bHRpcGxlKXtfdGhpczQuY29tcHV0ZVByZXNlbnRUYWdzKCk7X3RoaXM0LnByZXNlbnRUZXh0PV90aGlzNC5wcmVzZW50VGFncy5sZW5ndGg/JyAnOm51bGw7fWVsc2V7X3RoaXM0LmNvbXB1dGVQcmVzZW50VGV4dCgpO319KTt9LGNvbXB1dGVQcmVzZW50VGV4dDpmdW5jdGlvbiBjb21wdXRlUHJlc2VudFRleHQoKXt2YXIgY2hlY2tlZFZhbHVlPXRoaXMuY2hlY2tlZFZhbHVlLGNvbmZpZz10aGlzLmNvbmZpZztpZighT2JqZWN0KHV0aWxfWyJpc0VtcHR5Il0pKGNoZWNrZWRWYWx1ZSkpe3ZhciBub2RlPXRoaXMucGFuZWwuZ2V0Tm9kZUJ5VmFsdWUoY2hlY2tlZFZhbHVlKTtpZihub2RlJiYoY29uZmlnLmNoZWNrU3RyaWN0bHl8fG5vZGUuaXNMZWFmKSl7dGhpcy5wcmVzZW50VGV4dD1ub2RlLmdldFRleHQodGhpcy5zaG93QWxsTGV2ZWxzLHRoaXMuc2VwYXJhdG9yKTtyZXR1cm47fX10aGlzLnByZXNlbnRUZXh0PW51bGw7fSxjb21wdXRlUHJlc2VudFRhZ3M6ZnVuY3Rpb24gY29tcHV0ZVByZXNlbnRUYWdzKCl7dmFyIGlzRGlzYWJsZWQ9dGhpcy5pc0Rpc2FibGVkLGxlYWZPbmx5PXRoaXMubGVhZk9ubHksc2hvd0FsbExldmVscz10aGlzLnNob3dBbGxMZXZlbHMsc2VwYXJhdG9yPXRoaXMuc2VwYXJhdG9yLGNvbGxhcHNlVGFncz10aGlzLmNvbGxhcHNlVGFnczt2YXIgY2hlY2tlZE5vZGVzPXRoaXMuZ2V0Q2hlY2tlZE5vZGVzKGxlYWZPbmx5KTt2YXIgdGFncz1bXTt2YXIgZ2VuVGFnPWZ1bmN0aW9uIGdlblRhZyhub2RlKXtyZXR1cm57bm9kZTpub2RlLGtleTpub2RlLnVpZCx0ZXh0Om5vZGUuZ2V0VGV4dChzaG93QWxsTGV2ZWxzLHNlcGFyYXRvciksaGl0U3RhdGU6ZmFsc2UsY2xvc2FibGU6IWlzRGlzYWJsZWQmJiFub2RlLmlzRGlzYWJsZWR9O307aWYoY2hlY2tlZE5vZGVzLmxlbmd0aCl7dmFyIGZpcnN0PWNoZWNrZWROb2Rlc1swXSxyZXN0PWNoZWNrZWROb2Rlcy5zbGljZSgxKTt2YXIgcmVzdENvdW50PXJlc3QubGVuZ3RoO3RhZ3MucHVzaChnZW5UYWcoZmlyc3QpKTtpZihyZXN0Q291bnQpe2lmKGNvbGxhcHNlVGFncyl7dGFncy5wdXNoKHtrZXk6LTEsdGV4dDonKyAnK3Jlc3RDb3VudCxjbG9zYWJsZTpmYWxzZX0pO31lbHNle3Jlc3QuZm9yRWFjaChmdW5jdGlvbihub2RlKXtyZXR1cm4gdGFncy5wdXNoKGdlblRhZyhub2RlKSk7fSk7fX19dGhpcy5jaGVja2VkTm9kZXM9Y2hlY2tlZE5vZGVzO3RoaXMucHJlc2VudFRhZ3M9dGFnczt9LGdldFN1Z2dlc3Rpb25zOmZ1bmN0aW9uIGdldFN1Z2dlc3Rpb25zKCl7dmFyIF90aGlzNT10aGlzO3ZhciBmaWx0ZXJNZXRob2Q9dGhpcy5maWx0ZXJNZXRob2Q7aWYoIU9iamVjdCh0eXBlc19bImlzRnVuY3Rpb24iXSkoZmlsdGVyTWV0aG9kKSl7ZmlsdGVyTWV0aG9kPWZ1bmN0aW9uIGZpbHRlck1ldGhvZChub2RlLGtleXdvcmQpe3JldHVybiBub2RlLnRleHQuaW5jbHVkZXMoa2V5d29yZCk7fTt9dmFyIHN1Z2dlc3Rpb25zPXRoaXMucGFuZWwuZ2V0RmxhdHRlZE5vZGVzKHRoaXMubGVhZk9ubHkpLmZpbHRlcihmdW5jdGlvbihub2RlKXtpZihub2RlLmlzRGlzYWJsZWQpcmV0dXJuIGZhbHNlO25vZGUudGV4dD1ub2RlLmdldFRleHQoX3RoaXM1LnNob3dBbGxMZXZlbHMsX3RoaXM1LnNlcGFyYXRvcil8fCcnO3JldHVybiBmaWx0ZXJNZXRob2Qobm9kZSxfdGhpczUuaW5wdXRWYWx1ZSk7fSk7aWYodGhpcy5tdWx0aXBsZSl7dGhpcy5wcmVzZW50VGFncy5mb3JFYWNoKGZ1bmN0aW9uKHRhZyl7dGFnLmhpdFN0YXRlPWZhbHNlO30pO31lbHNle3N1Z2dlc3Rpb25zLmZvckVhY2goZnVuY3Rpb24obm9kZSl7bm9kZS5jaGVja2VkPU9iamVjdCh1dGlsX1siaXNFcXVhbCJdKShfdGhpczUuY2hlY2tlZFZhbHVlLG5vZGUuZ2V0VmFsdWVCeU9wdGlvbigpKTt9KTt9dGhpcy5maWx0ZXJpbmc9dHJ1ZTt0aGlzLnN1Z2dlc3Rpb25zPXN1Z2dlc3Rpb25zO3RoaXMuJG5leHRUaWNrKHRoaXMudXBkYXRlUG9wcGVyKTt9LGhhbmRsZVN1Z2dlc3Rpb25LZXlEb3duOmZ1bmN0aW9uIGhhbmRsZVN1Z2dlc3Rpb25LZXlEb3duKGV2ZW50KXt2YXIga2V5Q29kZT1ldmVudC5rZXlDb2RlLHRhcmdldD1ldmVudC50YXJnZXQ7c3dpdGNoKGtleUNvZGUpe2Nhc2UgS2V5Q29kZS5lbnRlcjp0YXJnZXQuY2xpY2soKTticmVhaztjYXNlIEtleUNvZGUudXA6dmFyIHByZXY9dGFyZ2V0LnByZXZpb3VzRWxlbWVudFNpYmxpbmc7cHJldiYmcHJldi5mb2N1cygpO2JyZWFrO2Nhc2UgS2V5Q29kZS5kb3duOnZhciBuZXh0PXRhcmdldC5uZXh0RWxlbWVudFNpYmxpbmc7bmV4dCYmbmV4dC5mb2N1cygpO2JyZWFrO2Nhc2UgS2V5Q29kZS5lc2M6Y2FzZSBLZXlDb2RlLnRhYjp0aGlzLnRvZ2dsZURyb3BEb3duVmlzaWJsZShmYWxzZSk7YnJlYWs7fX0saGFuZGxlRGVsZXRlOmZ1bmN0aW9uIGhhbmRsZURlbGV0ZSgpe3ZhciBpbnB1dFZhbHVlPXRoaXMuaW5wdXRWYWx1ZSxwcmVzc0RlbGV0ZUNvdW50PXRoaXMucHJlc3NEZWxldGVDb3VudCxwcmVzZW50VGFncz10aGlzLnByZXNlbnRUYWdzO3ZhciBsYXN0SW5kZXg9cHJlc2VudFRhZ3MubGVuZ3RoLTE7dmFyIGxhc3RUYWc9cHJlc2VudFRhZ3NbbGFzdEluZGV4XTt0aGlzLnByZXNzRGVsZXRlQ291bnQ9aW5wdXRWYWx1ZT8wOnByZXNzRGVsZXRlQ291bnQrMTtpZighbGFzdFRhZylyZXR1cm47aWYodGhpcy5wcmVzc0RlbGV0ZUNvdW50KXtpZihsYXN0VGFnLmhpdFN0YXRlKXt0aGlzLmRlbGV0ZVRhZyhsYXN0VGFnKTt9ZWxzZXtsYXN0VGFnLmhpdFN0YXRlPXRydWU7fX19LGhhbmRsZVN1Z2dlc3Rpb25DbGljazpmdW5jdGlvbiBoYW5kbGVTdWdnZXN0aW9uQ2xpY2soaW5kZXgpe3ZhciBtdWx0aXBsZT10aGlzLm11bHRpcGxlO3ZhciB0YXJnZXROb2RlPXRoaXMuc3VnZ2VzdGlvbnNbaW5kZXhdO2lmKG11bHRpcGxlKXt2YXIgY2hlY2tlZD10YXJnZXROb2RlLmNoZWNrZWQ7dGFyZ2V0Tm9kZS5kb0NoZWNrKCFjaGVja2VkKTt0aGlzLnBhbmVsLmNhbGN1bGF0ZU11bHRpQ2hlY2tlZFZhbHVlKCk7fWVsc2V7dGhpcy5jaGVja2VkVmFsdWU9dGFyZ2V0Tm9kZS5nZXRWYWx1ZUJ5T3B0aW9uKCk7dGhpcy50b2dnbGVEcm9wRG93blZpc2libGUoZmFsc2UpO319LGRlbGV0ZVRhZzpmdW5jdGlvbiBkZWxldGVUYWcodGFnKXt2YXIgY2hlY2tlZFZhbHVlPXRoaXMuY2hlY2tlZFZhbHVlO3ZhciBjdXJyZW50PXRhZy5ub2RlLmdldFZhbHVlQnlPcHRpb24oKTt2YXIgdmFsPWNoZWNrZWRWYWx1ZS5maW5kKGZ1bmN0aW9uKG4pe3JldHVybiBPYmplY3QodXRpbF9bImlzRXF1YWwiXSkobixjdXJyZW50KTt9KTt0aGlzLmNoZWNrZWRWYWx1ZT1jaGVja2VkVmFsdWUuZmlsdGVyKGZ1bmN0aW9uKG4pe3JldHVybiFPYmplY3QodXRpbF9bImlzRXF1YWwiXSkobixjdXJyZW50KTt9KTt0aGlzLiRlbWl0KCdyZW1vdmUtdGFnJyx2YWwpO30sdXBkYXRlU3R5bGU6ZnVuY3Rpb24gdXBkYXRlU3R5bGUoKXt2YXIgJGVsPXRoaXMuJGVsLGlucHV0SW5pdGlhbEhlaWdodD10aGlzLmlucHV0SW5pdGlhbEhlaWdodDtpZih0aGlzLiRpc1NlcnZlcnx8ISRlbClyZXR1cm47dmFyIHN1Z2dlc3Rpb25QYW5lbD10aGlzLiRyZWZzLnN1Z2dlc3Rpb25QYW5lbDt2YXIgaW5wdXRJbm5lcj0kZWwucXVlcnlTZWxlY3RvcignLmVsLWlucHV0X19pbm5lcicpO2lmKCFpbnB1dElubmVyKXJldHVybjt2YXIgdGFncz0kZWwucXVlcnlTZWxlY3RvcignLmVsLWNhc2NhZGVyX190YWdzJyk7dmFyIHN1Z2dlc3Rpb25QYW5lbEVsPW51bGw7aWYoc3VnZ2VzdGlvblBhbmVsJiYoc3VnZ2VzdGlvblBhbmVsRWw9c3VnZ2VzdGlvblBhbmVsLiRlbCkpe3ZhciBzdWdnZXN0aW9uTGlzdD1zdWdnZXN0aW9uUGFuZWxFbC5xdWVyeVNlbGVjdG9yKCcuZWwtY2FzY2FkZXJfX3N1Z2dlc3Rpb24tbGlzdCcpO3N1Z2dlc3Rpb25MaXN0LnN0eWxlLm1pbldpZHRoPWlucHV0SW5uZXIub2Zmc2V0V2lkdGgrJ3B4Jzt9aWYodGFncyl7dmFyIG9mZnNldEhlaWdodD10YWdzLm9mZnNldEhlaWdodDt2YXIgaGVpZ2h0PU1hdGgubWF4KG9mZnNldEhlaWdodCs2LGlucHV0SW5pdGlhbEhlaWdodCkrJ3B4JztpbnB1dElubmVyLnN0eWxlLmhlaWdodD1oZWlnaHQ7dGhpcy51cGRhdGVQb3BwZXIoKTt9fSwvKioKICAgICAqIHB1YmxpYyBtZXRob2RzCiAgICAqL2dldENoZWNrZWROb2RlczpmdW5jdGlvbiBnZXRDaGVja2VkTm9kZXMobGVhZk9ubHkpe3JldHVybiB0aGlzLnBhbmVsLmdldENoZWNrZWROb2RlcyhsZWFmT25seSk7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FzY2FkZXIvc3JjL2Nhc2NhZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfY2FzY2FkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189Y2FzY2FkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jYXNjYWRlci9zcmMvY2FzY2FkZXIudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgY2FzY2FkZXJfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfY2FzY2FkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sY2FzY2FkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wMzI1MzdhNl9yZW5kZXIsY2FzY2FkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wMzI1MzdhNl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGNhc2NhZGVyX2FwaTt9Y2FzY2FkZXJfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9jYXNjYWRlci9zcmMvY2FzY2FkZXIudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNhc2NhZGVyPWNhc2NhZGVyX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FzY2FkZXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9jYXNjYWRlci5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChjYXNjYWRlci5uYW1lLGNhc2NhZGVyKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfY2FzY2FkZXI9Y2FzY2FkZXI7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTU1YzhhZGU3Jgp2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzU1YzhhZGU3X3JlbmRlcj1mdW5jdGlvbiBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNTVjOGFkZTdfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToiY2xpY2tvdXRzaWRlIixyYXdOYW1lOiJ2LWNsaWNrb3V0c2lkZSIsdmFsdWU6X3ZtLmhpZGUsZXhwcmVzc2lvbjoiaGlkZSJ9XSxjbGFzczpbImVsLWNvbG9yLXBpY2tlciIsX3ZtLmNvbG9yRGlzYWJsZWQ/ImlzLWRpc2FibGVkIjoiIixfdm0uY29sb3JTaXplPyJlbC1jb2xvci1waWNrZXItLSIrX3ZtLmNvbG9yU2l6ZToiIl19LFtfdm0uY29sb3JEaXNhYmxlZD9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNvbG9yLXBpY2tlcl9fbWFzayJ9KTpfdm0uX2UoKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNvbG9yLXBpY2tlcl9fdHJpZ2dlciIsb246e2NsaWNrOl92bS5oYW5kbGVUcmlnZ2VyfX0sW19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWNvbG9yLXBpY2tlcl9fY29sb3IiLGNsYXNzOnsiaXMtYWxwaGEiOl92bS5zaG93QWxwaGF9fSxbX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtY29sb3ItcGlja2VyX19jb2xvci1pbm5lciIsc3R5bGU6e2JhY2tncm91bmRDb2xvcjpfdm0uZGlzcGxheWVkQ29sb3J9fSksIV92bS52YWx1ZSYmIV92bS5zaG93UGFuZWxDb2xvcj9fYygic3BhbiIse3N0YXRpY0NsYXNzOiJlbC1jb2xvci1waWNrZXJfX2VtcHR5IGVsLWljb24tY2xvc2UifSk6X3ZtLl9lKCldKSxfYygic3BhbiIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS52YWx1ZXx8X3ZtLnNob3dQYW5lbENvbG9yLGV4cHJlc3Npb246InZhbHVlIHx8IHNob3dQYW5lbENvbG9yIn1dLHN0YXRpY0NsYXNzOiJlbC1jb2xvci1waWNrZXJfX2ljb24gZWwtaWNvbi1hcnJvdy1kb3duIn0pXSksX2MoInBpY2tlci1kcm9wZG93biIse3JlZjoiZHJvcGRvd24iLGNsYXNzOlsiZWwtY29sb3ItcGlja2VyX19wYW5lbCIsX3ZtLnBvcHBlckNsYXNzfHwiIl0sYXR0cnM6e2NvbG9yOl92bS5jb2xvciwic2hvdy1hbHBoYSI6X3ZtLnNob3dBbHBoYSxwcmVkZWZpbmU6X3ZtLnByZWRlZmluZX0sb246e3BpY2s6X3ZtLmNvbmZpcm1WYWx1ZSxjbGVhcjpfdm0uY2xlYXJWYWx1ZX0sbW9kZWw6e3ZhbHVlOl92bS5zaG93UGlja2VyLGNhbGxiYWNrOmZ1bmN0aW9uIGNhbGxiYWNrKCQkdil7X3ZtLnNob3dQaWNrZXI9JCR2O30sZXhwcmVzc2lvbjoic2hvd1BpY2tlciJ9fSldLDEpO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81NWM4YWRlN19zdGF0aWNSZW5kZXJGbnM9W107bWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzU1YzhhZGU3X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTU1YzhhZGU3JgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29sb3IuanMKdmFyIGNvbG9yX3R5cGVvZj10eXBlb2YgU3ltYm9sPT09ImZ1bmN0aW9uIiYmX3R5cGVvZjIoU3ltYm9sLml0ZXJhdG9yKT09PSJzeW1ib2wiP2Z1bmN0aW9uKG9iail7cmV0dXJuIF90eXBlb2YyKG9iaik7fTpmdW5jdGlvbihvYmope3JldHVybiBvYmomJnR5cGVvZiBTeW1ib2w9PT0iZnVuY3Rpb24iJiZvYmouY29uc3RydWN0b3I9PT1TeW1ib2wmJm9iaiE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6X3R5cGVvZjIob2JqKTt9O2Z1bmN0aW9uIGNvbG9yX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTt9fXZhciBoc3YyaHNsPWZ1bmN0aW9uIGhzdjJoc2woaHVlLHNhdCx2YWwpe3JldHVybltodWUsc2F0KnZhbC8oKGh1ZT0oMi1zYXQpKnZhbCk8MT9odWU6Mi1odWUpfHwwLGh1ZS8yXTt9Oy8vIE5lZWQgdG8gaGFuZGxlIDEuMCBhcyAxMDAlLCBzaW5jZSBvbmNlIGl0IGlzIGEgbnVtYmVyLCB0aGVyZSBpcyBubyBkaWZmZXJlbmNlIGJldHdlZW4gaXQgYW5kIDEKLy8gPGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNzQyMjA3Mi9qYXZhc2NyaXB0LWhvdy10by1kZXRlY3QtbnVtYmVyLWFzLWEtZGVjaW1hbC1pbmNsdWRpbmctMS0wPgp2YXIgaXNPbmVQb2ludFplcm89ZnVuY3Rpb24gaXNPbmVQb2ludFplcm8obil7cmV0dXJuIHR5cGVvZiBuPT09J3N0cmluZycmJm4uaW5kZXhPZignLicpIT09LTEmJnBhcnNlRmxvYXQobik9PT0xO307dmFyIGlzUGVyY2VudGFnZT1mdW5jdGlvbiBpc1BlcmNlbnRhZ2Uobil7cmV0dXJuIHR5cGVvZiBuPT09J3N0cmluZycmJm4uaW5kZXhPZignJScpIT09LTE7fTsvLyBUYWtlIGlucHV0IGZyb20gWzAsIG5dIGFuZCByZXR1cm4gaXQgYXMgWzAsIDFdCnZhciBib3VuZDAxPWZ1bmN0aW9uIGJvdW5kMDEodmFsdWUsbWF4KXtpZihpc09uZVBvaW50WmVybyh2YWx1ZSkpdmFsdWU9JzEwMCUnO3ZhciBwcm9jZXNzUGVyY2VudD1pc1BlcmNlbnRhZ2UodmFsdWUpO3ZhbHVlPU1hdGgubWluKG1heCxNYXRoLm1heCgwLHBhcnNlRmxvYXQodmFsdWUpKSk7Ly8gQXV0b21hdGljYWxseSBjb252ZXJ0IHBlcmNlbnRhZ2UgaW50byBudW1iZXIKaWYocHJvY2Vzc1BlcmNlbnQpe3ZhbHVlPXBhcnNlSW50KHZhbHVlKm1heCwxMCkvMTAwO30vLyBIYW5kbGUgZmxvYXRpbmcgcG9pbnQgcm91bmRpbmcgZXJyb3JzCmlmKE1hdGguYWJzKHZhbHVlLW1heCk8MC4wMDAwMDEpe3JldHVybiAxO30vLyBDb252ZXJ0IGludG8gWzAsIDFdIHJhbmdlIGlmIGl0IGlzbid0IGFscmVhZHkKcmV0dXJuIHZhbHVlJW1heC9wYXJzZUZsb2F0KG1heCk7fTt2YXIgSU5UX0hFWF9NQVA9ezEwOidBJywxMTonQicsMTI6J0MnLDEzOidEJywxNDonRScsMTU6J0YnfTt2YXIgdG9IZXg9ZnVuY3Rpb24gdG9IZXgoX3JlZil7dmFyIHI9X3JlZi5yLGc9X3JlZi5nLGI9X3JlZi5iO3ZhciBoZXhPbmU9ZnVuY3Rpb24gaGV4T25lKHZhbHVlKXt2YWx1ZT1NYXRoLm1pbihNYXRoLnJvdW5kKHZhbHVlKSwyNTUpO3ZhciBoaWdoPU1hdGguZmxvb3IodmFsdWUvMTYpO3ZhciBsb3c9dmFsdWUlMTY7cmV0dXJuJycrKElOVF9IRVhfTUFQW2hpZ2hdfHxoaWdoKSsoSU5UX0hFWF9NQVBbbG93XXx8bG93KTt9O2lmKGlzTmFOKHIpfHxpc05hTihnKXx8aXNOYU4oYikpcmV0dXJuJyc7cmV0dXJuJyMnK2hleE9uZShyKStoZXhPbmUoZykraGV4T25lKGIpO307dmFyIEhFWF9JTlRfTUFQPXtBOjEwLEI6MTEsQzoxMixEOjEzLEU6MTQsRjoxNX07dmFyIHBhcnNlSGV4Q2hhbm5lbD1mdW5jdGlvbiBwYXJzZUhleENoYW5uZWwoaGV4KXtpZihoZXgubGVuZ3RoPT09Mil7cmV0dXJuKEhFWF9JTlRfTUFQW2hleFswXS50b1VwcGVyQ2FzZSgpXXx8K2hleFswXSkqMTYrKEhFWF9JTlRfTUFQW2hleFsxXS50b1VwcGVyQ2FzZSgpXXx8K2hleFsxXSk7fXJldHVybiBIRVhfSU5UX01BUFtoZXhbMV0udG9VcHBlckNhc2UoKV18fCtoZXhbMV07fTt2YXIgaHNsMmhzdj1mdW5jdGlvbiBoc2wyaHN2KGh1ZSxzYXQsbGlnaHQpe3NhdD1zYXQvMTAwO2xpZ2h0PWxpZ2h0LzEwMDt2YXIgc21pbj1zYXQ7dmFyIGxtaW49TWF0aC5tYXgobGlnaHQsMC4wMSk7dmFyIHN2PXZvaWQgMDt2YXIgdj12b2lkIDA7bGlnaHQqPTI7c2F0Kj1saWdodDw9MT9saWdodDoyLWxpZ2h0O3NtaW4qPWxtaW48PTE/bG1pbjoyLWxtaW47dj0obGlnaHQrc2F0KS8yO3N2PWxpZ2h0PT09MD8yKnNtaW4vKGxtaW4rc21pbik6MipzYXQvKGxpZ2h0K3NhdCk7cmV0dXJue2g6aHVlLHM6c3YqMTAwLHY6dioxMDB9O307Ly8gYHJnYlRvSHN2YAovLyBDb252ZXJ0cyBhbiBSR0IgY29sb3IgdmFsdWUgdG8gSFNWCi8vICpBc3N1bWVzOiogciwgZywgYW5kIGIgYXJlIGNvbnRhaW5lZCBpbiB0aGUgc2V0IFswLCAyNTVdIG9yIFswLCAxXQovLyAqUmV0dXJuczoqIHsgaCwgcywgdiB9IGluIFswLDFdCnZhciByZ2IyaHN2PWZ1bmN0aW9uIHJnYjJoc3YocixnLGIpe3I9Ym91bmQwMShyLDI1NSk7Zz1ib3VuZDAxKGcsMjU1KTtiPWJvdW5kMDEoYiwyNTUpO3ZhciBtYXg9TWF0aC5tYXgocixnLGIpO3ZhciBtaW49TWF0aC5taW4ocixnLGIpO3ZhciBoPXZvaWQgMCxzPXZvaWQgMDt2YXIgdj1tYXg7dmFyIGQ9bWF4LW1pbjtzPW1heD09PTA/MDpkL21heDtpZihtYXg9PT1taW4pe2g9MDsvLyBhY2hyb21hdGljCn1lbHNle3N3aXRjaChtYXgpe2Nhc2UgcjpoPShnLWIpL2QrKGc8Yj82OjApO2JyZWFrO2Nhc2UgZzpoPShiLXIpL2QrMjticmVhaztjYXNlIGI6aD0oci1nKS9kKzQ7YnJlYWs7fWgvPTY7fXJldHVybntoOmgqMzYwLHM6cyoxMDAsdjp2KjEwMH07fTsvLyBgaHN2VG9SZ2JgCi8vIENvbnZlcnRzIGFuIEhTViBjb2xvciB2YWx1ZSB0byBSR0IuCi8vICpBc3N1bWVzOiogaCBpcyBjb250YWluZWQgaW4gWzAsIDFdIG9yIFswLCAzNjBdIGFuZCBzIGFuZCB2IGFyZSBjb250YWluZWQgaW4gWzAsIDFdIG9yIFswLCAxMDBdCi8vICpSZXR1cm5zOiogeyByLCBnLCBiIH0gaW4gdGhlIHNldCBbMCwgMjU1XQp2YXIgaHN2MnJnYj1mdW5jdGlvbiBoc3YycmdiKGgscyx2KXtoPWJvdW5kMDEoaCwzNjApKjY7cz1ib3VuZDAxKHMsMTAwKTt2PWJvdW5kMDEodiwxMDApO3ZhciBpPU1hdGguZmxvb3IoaCk7dmFyIGY9aC1pO3ZhciBwPXYqKDEtcyk7dmFyIHE9diooMS1mKnMpO3ZhciB0PXYqKDEtKDEtZikqcyk7dmFyIG1vZD1pJTY7dmFyIHI9W3YscSxwLHAsdCx2XVttb2RdO3ZhciBnPVt0LHYsdixxLHAscF1bbW9kXTt2YXIgYj1bcCxwLHQsdix2LHFdW21vZF07cmV0dXJue3I6TWF0aC5yb3VuZChyKjI1NSksZzpNYXRoLnJvdW5kKGcqMjU1KSxiOk1hdGgucm91bmQoYioyNTUpfTt9O3ZhciBDb2xvcj1mdW5jdGlvbigpe2Z1bmN0aW9uIENvbG9yKG9wdGlvbnMpe2NvbG9yX2NsYXNzQ2FsbENoZWNrKHRoaXMsQ29sb3IpO3RoaXMuX2h1ZT0wO3RoaXMuX3NhdHVyYXRpb249MTAwO3RoaXMuX3ZhbHVlPTEwMDt0aGlzLl9hbHBoYT0xMDA7dGhpcy5lbmFibGVBbHBoYT1mYWxzZTt0aGlzLmZvcm1hdD0naGV4Jzt0aGlzLnZhbHVlPScnO29wdGlvbnM9b3B0aW9uc3x8e307Zm9yKHZhciBvcHRpb24gaW4gb3B0aW9ucyl7aWYob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShvcHRpb24pKXt0aGlzW29wdGlvbl09b3B0aW9uc1tvcHRpb25dO319dGhpcy5kb09uQ2hhbmdlKCk7fUNvbG9yLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24gc2V0KHByb3AsdmFsdWUpe2lmKGFyZ3VtZW50cy5sZW5ndGg9PT0xJiYodHlwZW9mIHByb3A9PT0ndW5kZWZpbmVkJz8ndW5kZWZpbmVkJzpjb2xvcl90eXBlb2YocHJvcCkpPT09J29iamVjdCcpe2Zvcih2YXIgcCBpbiBwcm9wKXtpZihwcm9wLmhhc093blByb3BlcnR5KHApKXt0aGlzLnNldChwLHByb3BbcF0pO319cmV0dXJuO310aGlzWydfJytwcm9wXT12YWx1ZTt0aGlzLmRvT25DaGFuZ2UoKTt9O0NvbG9yLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24gZ2V0KHByb3Ape3JldHVybiB0aGlzWydfJytwcm9wXTt9O0NvbG9yLnByb3RvdHlwZS50b1JnYj1mdW5jdGlvbiB0b1JnYigpe3JldHVybiBoc3YycmdiKHRoaXMuX2h1ZSx0aGlzLl9zYXR1cmF0aW9uLHRoaXMuX3ZhbHVlKTt9O0NvbG9yLnByb3RvdHlwZS5mcm9tU3RyaW5nPWZ1bmN0aW9uIGZyb21TdHJpbmcodmFsdWUpe3ZhciBfdGhpcz10aGlzO2lmKCF2YWx1ZSl7dGhpcy5faHVlPTA7dGhpcy5fc2F0dXJhdGlvbj0xMDA7dGhpcy5fdmFsdWU9MTAwO3RoaXMuZG9PbkNoYW5nZSgpO3JldHVybjt9dmFyIGZyb21IU1Y9ZnVuY3Rpb24gZnJvbUhTVihoLHMsdil7X3RoaXMuX2h1ZT1NYXRoLm1heCgwLE1hdGgubWluKDM2MCxoKSk7X3RoaXMuX3NhdHVyYXRpb249TWF0aC5tYXgoMCxNYXRoLm1pbigxMDAscykpO190aGlzLl92YWx1ZT1NYXRoLm1heCgwLE1hdGgubWluKDEwMCx2KSk7X3RoaXMuZG9PbkNoYW5nZSgpO307aWYodmFsdWUuaW5kZXhPZignaHNsJykhPT0tMSl7dmFyIHBhcnRzPXZhbHVlLnJlcGxhY2UoL2hzbGF8aHNsfFwofFwpL2dtLCcnKS5zcGxpdCgvXHN8LC9nKS5maWx0ZXIoZnVuY3Rpb24odmFsKXtyZXR1cm4gdmFsIT09Jyc7fSkubWFwKGZ1bmN0aW9uKHZhbCxpbmRleCl7cmV0dXJuIGluZGV4PjI/cGFyc2VGbG9hdCh2YWwpOnBhcnNlSW50KHZhbCwxMCk7fSk7aWYocGFydHMubGVuZ3RoPT09NCl7dGhpcy5fYWxwaGE9TWF0aC5mbG9vcihwYXJzZUZsb2F0KHBhcnRzWzNdKSoxMDApO31lbHNlIGlmKHBhcnRzLmxlbmd0aD09PTMpe3RoaXMuX2FscGhhPTEwMDt9aWYocGFydHMubGVuZ3RoPj0zKXt2YXIgX2hzbDJoc3Y9aHNsMmhzdihwYXJ0c1swXSxwYXJ0c1sxXSxwYXJ0c1syXSksaD1faHNsMmhzdi5oLHM9X2hzbDJoc3Yucyx2PV9oc2wyaHN2LnY7ZnJvbUhTVihoLHMsdik7fX1lbHNlIGlmKHZhbHVlLmluZGV4T2YoJ2hzdicpIT09LTEpe3ZhciBfcGFydHM9dmFsdWUucmVwbGFjZSgvaHN2YXxoc3Z8XCh8XCkvZ20sJycpLnNwbGl0KC9cc3wsL2cpLmZpbHRlcihmdW5jdGlvbih2YWwpe3JldHVybiB2YWwhPT0nJzt9KS5tYXAoZnVuY3Rpb24odmFsLGluZGV4KXtyZXR1cm4gaW5kZXg+Mj9wYXJzZUZsb2F0KHZhbCk6cGFyc2VJbnQodmFsLDEwKTt9KTtpZihfcGFydHMubGVuZ3RoPT09NCl7dGhpcy5fYWxwaGE9TWF0aC5mbG9vcihwYXJzZUZsb2F0KF9wYXJ0c1szXSkqMTAwKTt9ZWxzZSBpZihfcGFydHMubGVuZ3RoPT09Myl7dGhpcy5fYWxwaGE9MTAwO31pZihfcGFydHMubGVuZ3RoPj0zKXtmcm9tSFNWKF9wYXJ0c1swXSxfcGFydHNbMV0sX3BhcnRzWzJdKTt9fWVsc2UgaWYodmFsdWUuaW5kZXhPZigncmdiJykhPT0tMSl7dmFyIF9wYXJ0czI9dmFsdWUucmVwbGFjZSgvcmdiYXxyZ2J8XCh8XCkvZ20sJycpLnNwbGl0KC9cc3wsL2cpLmZpbHRlcihmdW5jdGlvbih2YWwpe3JldHVybiB2YWwhPT0nJzt9KS5tYXAoZnVuY3Rpb24odmFsLGluZGV4KXtyZXR1cm4gaW5kZXg+Mj9wYXJzZUZsb2F0KHZhbCk6cGFyc2VJbnQodmFsLDEwKTt9KTtpZihfcGFydHMyLmxlbmd0aD09PTQpe3RoaXMuX2FscGhhPU1hdGguZmxvb3IocGFyc2VGbG9hdChfcGFydHMyWzNdKSoxMDApO31lbHNlIGlmKF9wYXJ0czIubGVuZ3RoPT09Myl7dGhpcy5fYWxwaGE9MTAwO31pZihfcGFydHMyLmxlbmd0aD49Myl7dmFyIF9yZ2IyaHN2PXJnYjJoc3YoX3BhcnRzMlswXSxfcGFydHMyWzFdLF9wYXJ0czJbMl0pLF9oPV9yZ2IyaHN2LmgsX3M9X3JnYjJoc3Yucyxfdj1fcmdiMmhzdi52O2Zyb21IU1YoX2gsX3MsX3YpO319ZWxzZSBpZih2YWx1ZS5pbmRleE9mKCcjJykhPT0tMSl7dmFyIGhleD12YWx1ZS5yZXBsYWNlKCcjJywnJykudHJpbSgpO2lmKCEvXig/OlswLTlhLWZBLUZdezN9KXsxLDJ9fFswLTlhLWZBLUZdezh9JC8udGVzdChoZXgpKXJldHVybjt2YXIgcj12b2lkIDAsZz12b2lkIDAsYj12b2lkIDA7aWYoaGV4Lmxlbmd0aD09PTMpe3I9cGFyc2VIZXhDaGFubmVsKGhleFswXStoZXhbMF0pO2c9cGFyc2VIZXhDaGFubmVsKGhleFsxXStoZXhbMV0pO2I9cGFyc2VIZXhDaGFubmVsKGhleFsyXStoZXhbMl0pO31lbHNlIGlmKGhleC5sZW5ndGg9PT02fHxoZXgubGVuZ3RoPT09OCl7cj1wYXJzZUhleENoYW5uZWwoaGV4LnN1YnN0cmluZygwLDIpKTtnPXBhcnNlSGV4Q2hhbm5lbChoZXguc3Vic3RyaW5nKDIsNCkpO2I9cGFyc2VIZXhDaGFubmVsKGhleC5zdWJzdHJpbmcoNCw2KSk7fWlmKGhleC5sZW5ndGg9PT04KXt0aGlzLl9hbHBoYT1NYXRoLmZsb29yKHBhcnNlSGV4Q2hhbm5lbChoZXguc3Vic3RyaW5nKDYpKS8yNTUqMTAwKTt9ZWxzZSBpZihoZXgubGVuZ3RoPT09M3x8aGV4Lmxlbmd0aD09PTYpe3RoaXMuX2FscGhhPTEwMDt9dmFyIF9yZ2IyaHN2Mj1yZ2IyaHN2KHIsZyxiKSxfaDI9X3JnYjJoc3YyLmgsX3MyPV9yZ2IyaHN2Mi5zLF92Mj1fcmdiMmhzdjIudjtmcm9tSFNWKF9oMixfczIsX3YyKTt9fTtDb2xvci5wcm90b3R5cGUuY29tcGFyZT1mdW5jdGlvbiBjb21wYXJlKGNvbG9yKXtyZXR1cm4gTWF0aC5hYnMoY29sb3IuX2h1ZS10aGlzLl9odWUpPDImJk1hdGguYWJzKGNvbG9yLl9zYXR1cmF0aW9uLXRoaXMuX3NhdHVyYXRpb24pPDEmJk1hdGguYWJzKGNvbG9yLl92YWx1ZS10aGlzLl92YWx1ZSk8MSYmTWF0aC5hYnMoY29sb3IuX2FscGhhLXRoaXMuX2FscGhhKTwxO307Q29sb3IucHJvdG90eXBlLmRvT25DaGFuZ2U9ZnVuY3Rpb24gZG9PbkNoYW5nZSgpe3ZhciBfaHVlPXRoaXMuX2h1ZSxfc2F0dXJhdGlvbj10aGlzLl9zYXR1cmF0aW9uLF92YWx1ZT10aGlzLl92YWx1ZSxfYWxwaGE9dGhpcy5fYWxwaGEsZm9ybWF0PXRoaXMuZm9ybWF0O2lmKHRoaXMuZW5hYmxlQWxwaGEpe3N3aXRjaChmb3JtYXQpe2Nhc2UnaHNsJzp2YXIgaHNsPWhzdjJoc2woX2h1ZSxfc2F0dXJhdGlvbi8xMDAsX3ZhbHVlLzEwMCk7dGhpcy52YWx1ZT0naHNsYSgnK19odWUrJywgJytNYXRoLnJvdW5kKGhzbFsxXSoxMDApKyclLCAnK01hdGgucm91bmQoaHNsWzJdKjEwMCkrJyUsICcrX2FscGhhLzEwMCsnKSc7YnJlYWs7Y2FzZSdoc3YnOnRoaXMudmFsdWU9J2hzdmEoJytfaHVlKycsICcrTWF0aC5yb3VuZChfc2F0dXJhdGlvbikrJyUsICcrTWF0aC5yb3VuZChfdmFsdWUpKyclLCAnK19hbHBoYS8xMDArJyknO2JyZWFrO2RlZmF1bHQ6dmFyIF9oc3YycmdiPWhzdjJyZ2IoX2h1ZSxfc2F0dXJhdGlvbixfdmFsdWUpLHI9X2hzdjJyZ2IucixnPV9oc3YycmdiLmcsYj1faHN2MnJnYi5iO3RoaXMudmFsdWU9J3JnYmEoJytyKycsICcrZysnLCAnK2IrJywgJytfYWxwaGEvMTAwKycpJzt9fWVsc2V7c3dpdGNoKGZvcm1hdCl7Y2FzZSdoc2wnOnZhciBfaHNsPWhzdjJoc2woX2h1ZSxfc2F0dXJhdGlvbi8xMDAsX3ZhbHVlLzEwMCk7dGhpcy52YWx1ZT0naHNsKCcrX2h1ZSsnLCAnK01hdGgucm91bmQoX2hzbFsxXSoxMDApKyclLCAnK01hdGgucm91bmQoX2hzbFsyXSoxMDApKyclKSc7YnJlYWs7Y2FzZSdoc3YnOnRoaXMudmFsdWU9J2hzdignK19odWUrJywgJytNYXRoLnJvdW5kKF9zYXR1cmF0aW9uKSsnJSwgJytNYXRoLnJvdW5kKF92YWx1ZSkrJyUpJzticmVhaztjYXNlJ3JnYic6dmFyIF9oc3YycmdiMj1oc3YycmdiKF9odWUsX3NhdHVyYXRpb24sX3ZhbHVlKSxfcj1faHN2MnJnYjIucixfZz1faHN2MnJnYjIuZyxfYj1faHN2MnJnYjIuYjt0aGlzLnZhbHVlPSdyZ2IoJytfcisnLCAnK19nKycsICcrX2IrJyknO2JyZWFrO2RlZmF1bHQ6dGhpcy52YWx1ZT10b0hleChoc3YycmdiKF9odWUsX3NhdHVyYXRpb24sX3ZhbHVlKSk7fX19O3JldHVybiBDb2xvcjt9KCk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfY29sb3I9Q29sb3I7Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3BpY2tlci1kcm9wZG93bi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MDY2MDE2MjUmCnZhciBwaWNrZXJfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjYwMTYyNV9yZW5kZXI9ZnVuY3Rpb24gcGlja2VyX2Ryb3Bkb3dudnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY2MDE2MjVfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJ0cmFuc2l0aW9uIix7YXR0cnM6e25hbWU6ImVsLXpvb20taW4tdG9wIn0sb246eyJhZnRlci1sZWF2ZSI6X3ZtLmRvRGVzdHJveX19LFtfYygiZGl2Iix7ZGlyZWN0aXZlczpbe25hbWU6InNob3ciLHJhd05hbWU6InYtc2hvdyIsdmFsdWU6X3ZtLnNob3dQb3BwZXIsZXhwcmVzc2lvbjoic2hvd1BvcHBlciJ9XSxzdGF0aWNDbGFzczoiZWwtY29sb3ItZHJvcGRvd24ifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jb2xvci1kcm9wZG93bl9fbWFpbi13cmFwcGVyIn0sW19jKCJodWUtc2xpZGVyIix7cmVmOiJodWUiLHN0YXRpY1N0eWxlOntmbG9hdDoicmlnaHQifSxhdHRyczp7Y29sb3I6X3ZtLmNvbG9yLHZlcnRpY2FsOiIifX0pLF9jKCJzdi1wYW5lbCIse3JlZjoic2wiLGF0dHJzOntjb2xvcjpfdm0uY29sb3J9fSldLDEpLF92bS5zaG93QWxwaGE/X2MoImFscGhhLXNsaWRlciIse3JlZjoiYWxwaGEiLGF0dHJzOntjb2xvcjpfdm0uY29sb3J9fSk6X3ZtLl9lKCksX3ZtLnByZWRlZmluZT9fYygicHJlZGVmaW5lIix7YXR0cnM6e2NvbG9yOl92bS5jb2xvcixjb2xvcnM6X3ZtLnByZWRlZmluZX19KTpfdm0uX2UoKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNvbG9yLWRyb3Bkb3duX19idG5zIn0sW19jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWNvbG9yLWRyb3Bkb3duX192YWx1ZSJ9LFtfYygiZWwtaW5wdXQiLHthdHRyczp7InZhbGlkYXRlLWV2ZW50IjpmYWxzZSxzaXplOiJtaW5pIn0sb246e2JsdXI6X3ZtLmhhbmRsZUNvbmZpcm19LG5hdGl2ZU9uOntrZXl1cDpmdW5jdGlvbiBrZXl1cCgkZXZlbnQpe2lmKCEoImJ1dHRvbiJpbiAkZXZlbnQpJiZfdm0uX2soJGV2ZW50LmtleUNvZGUsImVudGVyIiwxMywkZXZlbnQua2V5LCJFbnRlciIpKXtyZXR1cm4gbnVsbDt9cmV0dXJuIF92bS5oYW5kbGVDb25maXJtKCRldmVudCk7fX0sbW9kZWw6e3ZhbHVlOl92bS5jdXN0b21JbnB1dCxjYWxsYmFjazpmdW5jdGlvbiBjYWxsYmFjaygkJHYpe192bS5jdXN0b21JbnB1dD0kJHY7fSxleHByZXNzaW9uOiJjdXN0b21JbnB1dCJ9fSldLDEpLF9jKCJlbC1idXR0b24iLHtzdGF0aWNDbGFzczoiZWwtY29sb3ItZHJvcGRvd25fX2xpbmstYnRuIixhdHRyczp7c2l6ZToibWluaSIsdHlwZToidGV4dCJ9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS4kZW1pdCgiY2xlYXIiKTt9fX0sW192bS5fdigiXG4gICAgICAgICIrX3ZtLl9zKF92bS50KCJlbC5jb2xvcnBpY2tlci5jbGVhciIpKSsiXG4gICAgICAiKV0pLF9jKCJlbC1idXR0b24iLHtzdGF0aWNDbGFzczoiZWwtY29sb3ItZHJvcGRvd25fX2J0biIsYXR0cnM6e3BsYWluOiIiLHNpemU6Im1pbmkifSxvbjp7Y2xpY2s6X3ZtLmNvbmZpcm1WYWx1ZX19LFtfdm0uX3YoIlxuICAgICAgICAiK192bS5fcyhfdm0udCgiZWwuY29sb3JwaWNrZXIuY29uZmlybSIpKSsiXG4gICAgICAiKV0pXSwxKV0sMSldKTt9O3ZhciBwaWNrZXJfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjYwMTYyNV9zdGF0aWNSZW5kZXJGbnM9W107cGlja2VyX2Ryb3Bkb3dudnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY2MDE2MjVfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9waWNrZXItZHJvcGRvd24udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA2NjAxNjI1JgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9zdi1wYW5lbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZDg1ODM1OTYmCnZhciBzdl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2Q4NTgzNTk2X3JlbmRlcj1mdW5jdGlvbiBzdl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2Q4NTgzNTk2X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNvbG9yLXN2cGFuZWwiLHN0eWxlOntiYWNrZ3JvdW5kQ29sb3I6X3ZtLmJhY2tncm91bmR9fSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jb2xvci1zdnBhbmVsX193aGl0ZSJ9KSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNvbG9yLXN2cGFuZWxfX2JsYWNrIn0pLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtY29sb3Itc3ZwYW5lbF9fY3Vyc29yIixzdHlsZTp7dG9wOl92bS5jdXJzb3JUb3ArInB4IixsZWZ0Ol92bS5jdXJzb3JMZWZ0KyJweCJ9fSxbX2MoImRpdiIpXSldKTt9O3ZhciBzdl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2Q4NTgzNTk2X3N0YXRpY1JlbmRlckZucz1bXTtzdl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2Q4NTgzNTk2X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvc3YtcGFuZWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWQ4NTgzNTk2JgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvZHJhZ2dhYmxlLmpzCnZhciBpc0RyYWdnaW5nPWZhbHNlOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZHJhZ2dhYmxlPWZ1bmN0aW9uIGRyYWdnYWJsZShlbGVtZW50LG9wdGlvbnMpe2lmKGV4dGVybmFsX3Z1ZV9kZWZhdWx0LmEucHJvdG90eXBlLiRpc1NlcnZlcilyZXR1cm47dmFyIG1vdmVGbj1mdW5jdGlvbiBtb3ZlRm4oZXZlbnQpe2lmKG9wdGlvbnMuZHJhZyl7b3B0aW9ucy5kcmFnKGV2ZW50KTt9fTt2YXIgdXBGbj1mdW5jdGlvbiB1cEZuKGV2ZW50KXtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLG1vdmVGbik7ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsdXBGbik7ZG9jdW1lbnQub25zZWxlY3RzdGFydD1udWxsO2RvY3VtZW50Lm9uZHJhZ3N0YXJ0PW51bGw7aXNEcmFnZ2luZz1mYWxzZTtpZihvcHRpb25zLmVuZCl7b3B0aW9ucy5lbmQoZXZlbnQpO319O2VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJyxmdW5jdGlvbihldmVudCl7aWYoaXNEcmFnZ2luZylyZXR1cm47ZG9jdW1lbnQub25zZWxlY3RzdGFydD1mdW5jdGlvbigpe3JldHVybiBmYWxzZTt9O2RvY3VtZW50Lm9uZHJhZ3N0YXJ0PWZ1bmN0aW9uKCl7cmV0dXJuIGZhbHNlO307ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJyxtb3ZlRm4pO2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLHVwRm4pO2lzRHJhZ2dpbmc9dHJ1ZTtpZihvcHRpb25zLnN0YXJ0KXtvcHRpb25zLnN0YXJ0KGV2ZW50KTt9fSk7fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvc3YtcGFuZWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHN2X3BhbmVsdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidlbC1zbC1wYW5lbCcscHJvcHM6e2NvbG9yOntyZXF1aXJlZDp0cnVlfX0sY29tcHV0ZWQ6e2NvbG9yVmFsdWU6ZnVuY3Rpb24gY29sb3JWYWx1ZSgpe3ZhciBodWU9dGhpcy5jb2xvci5nZXQoJ2h1ZScpO3ZhciB2YWx1ZT10aGlzLmNvbG9yLmdldCgndmFsdWUnKTtyZXR1cm57aHVlOmh1ZSx2YWx1ZTp2YWx1ZX07fX0sd2F0Y2g6e2NvbG9yVmFsdWU6ZnVuY3Rpb24gY29sb3JWYWx1ZSgpe3RoaXMudXBkYXRlKCk7fX0sbWV0aG9kczp7dXBkYXRlOmZ1bmN0aW9uIHVwZGF0ZSgpe3ZhciBzYXR1cmF0aW9uPXRoaXMuY29sb3IuZ2V0KCdzYXR1cmF0aW9uJyk7dmFyIHZhbHVlPXRoaXMuY29sb3IuZ2V0KCd2YWx1ZScpO3ZhciBlbD10aGlzLiRlbDt2YXIgd2lkdGg9ZWwuY2xpZW50V2lkdGgsaGVpZ2h0PWVsLmNsaWVudEhlaWdodDt0aGlzLmN1cnNvckxlZnQ9c2F0dXJhdGlvbip3aWR0aC8xMDA7dGhpcy5jdXJzb3JUb3A9KDEwMC12YWx1ZSkqaGVpZ2h0LzEwMDt0aGlzLmJhY2tncm91bmQ9J2hzbCgnK3RoaXMuY29sb3IuZ2V0KCdodWUnKSsnLCAxMDAlLCA1MCUpJzt9LGhhbmRsZURyYWc6ZnVuY3Rpb24gaGFuZGxlRHJhZyhldmVudCl7dmFyIGVsPXRoaXMuJGVsO3ZhciByZWN0PWVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3ZhciBsZWZ0PWV2ZW50LmNsaWVudFgtcmVjdC5sZWZ0O3ZhciB0b3A9ZXZlbnQuY2xpZW50WS1yZWN0LnRvcDtsZWZ0PU1hdGgubWF4KDAsbGVmdCk7bGVmdD1NYXRoLm1pbihsZWZ0LHJlY3Qud2lkdGgpO3RvcD1NYXRoLm1heCgwLHRvcCk7dG9wPU1hdGgubWluKHRvcCxyZWN0LmhlaWdodCk7dGhpcy5jdXJzb3JMZWZ0PWxlZnQ7dGhpcy5jdXJzb3JUb3A9dG9wO3RoaXMuY29sb3Iuc2V0KHtzYXR1cmF0aW9uOmxlZnQvcmVjdC53aWR0aCoxMDAsdmFsdWU6MTAwLXRvcC9yZWN0LmhlaWdodCoxMDB9KTt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgX3RoaXM9dGhpcztkcmFnZ2FibGUodGhpcy4kZWwse2RyYWc6ZnVuY3Rpb24gZHJhZyhldmVudCl7X3RoaXMuaGFuZGxlRHJhZyhldmVudCk7fSxlbmQ6ZnVuY3Rpb24gZW5kKGV2ZW50KXtfdGhpcy5oYW5kbGVEcmFnKGV2ZW50KTt9fSk7dGhpcy51cGRhdGUoKTt9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntjdXJzb3JUb3A6MCxjdXJzb3JMZWZ0OjAsYmFja2dyb3VuZDonaHNsKDAsIDEwMCUsIDUwJSknfTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9zdi1wYW5lbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY29tcG9uZW50c19zdl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1zdl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9zdi1wYW5lbC52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBzdl9wYW5lbF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KGNvbXBvbmVudHNfc3ZfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sc3ZfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF9kODU4MzU5Nl9yZW5kZXIsc3ZfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF9kODU4MzU5Nl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHN2X3BhbmVsX2FwaTt9c3ZfcGFuZWxfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvc3YtcGFuZWwudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHN2X3BhbmVsPXN2X3BhbmVsX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL2h1ZS1zbGlkZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTVjZGM0M2IxJgp2YXIgaHVlX3NsaWRlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVjZGM0M2IxX3JlbmRlcj1mdW5jdGlvbiBodWVfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNWNkYzQzYjFfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtY29sb3ItaHVlLXNsaWRlciIsY2xhc3M6eyJpcy12ZXJ0aWNhbCI6X3ZtLnZlcnRpY2FsfX0sW19jKCJkaXYiLHtyZWY6ImJhciIsc3RhdGljQ2xhc3M6ImVsLWNvbG9yLWh1ZS1zbGlkZXJfX2JhciIsb246e2NsaWNrOl92bS5oYW5kbGVDbGlja319KSxfYygiZGl2Iix7cmVmOiJ0aHVtYiIsc3RhdGljQ2xhc3M6ImVsLWNvbG9yLWh1ZS1zbGlkZXJfX3RodW1iIixzdHlsZTp7bGVmdDpfdm0udGh1bWJMZWZ0KyJweCIsdG9wOl92bS50aHVtYlRvcCsicHgifX0pXSk7fTt2YXIgaHVlX3NsaWRlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVjZGM0M2IxX3N0YXRpY1JlbmRlckZucz1bXTtodWVfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNWNkYzQzYjFfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9odWUtc2xpZGVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01Y2RjNDNiMSYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL2h1ZS1zbGlkZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGh1ZV9zbGlkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J2VsLWNvbG9yLWh1ZS1zbGlkZXInLHByb3BzOntjb2xvcjp7cmVxdWlyZWQ6dHJ1ZX0sdmVydGljYWw6Qm9vbGVhbn0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3RodW1iTGVmdDowLHRodW1iVG9wOjB9O30sY29tcHV0ZWQ6e2h1ZVZhbHVlOmZ1bmN0aW9uIGh1ZVZhbHVlKCl7dmFyIGh1ZT10aGlzLmNvbG9yLmdldCgnaHVlJyk7cmV0dXJuIGh1ZTt9fSx3YXRjaDp7aHVlVmFsdWU6ZnVuY3Rpb24gaHVlVmFsdWUoKXt0aGlzLnVwZGF0ZSgpO319LG1ldGhvZHM6e2hhbmRsZUNsaWNrOmZ1bmN0aW9uIGhhbmRsZUNsaWNrKGV2ZW50KXt2YXIgdGh1bWI9dGhpcy4kcmVmcy50aHVtYjt2YXIgdGFyZ2V0PWV2ZW50LnRhcmdldDtpZih0YXJnZXQhPT10aHVtYil7dGhpcy5oYW5kbGVEcmFnKGV2ZW50KTt9fSxoYW5kbGVEcmFnOmZ1bmN0aW9uIGhhbmRsZURyYWcoZXZlbnQpe3ZhciByZWN0PXRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3ZhciB0aHVtYj10aGlzLiRyZWZzLnRodW1iO3ZhciBodWU9dm9pZCAwO2lmKCF0aGlzLnZlcnRpY2FsKXt2YXIgbGVmdD1ldmVudC5jbGllbnRYLXJlY3QubGVmdDtsZWZ0PU1hdGgubWluKGxlZnQscmVjdC53aWR0aC10aHVtYi5vZmZzZXRXaWR0aC8yKTtsZWZ0PU1hdGgubWF4KHRodW1iLm9mZnNldFdpZHRoLzIsbGVmdCk7aHVlPU1hdGgucm91bmQoKGxlZnQtdGh1bWIub2Zmc2V0V2lkdGgvMikvKHJlY3Qud2lkdGgtdGh1bWIub2Zmc2V0V2lkdGgpKjM2MCk7fWVsc2V7dmFyIHRvcD1ldmVudC5jbGllbnRZLXJlY3QudG9wO3RvcD1NYXRoLm1pbih0b3AscmVjdC5oZWlnaHQtdGh1bWIub2Zmc2V0SGVpZ2h0LzIpO3RvcD1NYXRoLm1heCh0aHVtYi5vZmZzZXRIZWlnaHQvMix0b3ApO2h1ZT1NYXRoLnJvdW5kKCh0b3AtdGh1bWIub2Zmc2V0SGVpZ2h0LzIpLyhyZWN0LmhlaWdodC10aHVtYi5vZmZzZXRIZWlnaHQpKjM2MCk7fXRoaXMuY29sb3Iuc2V0KCdodWUnLGh1ZSk7fSxnZXRUaHVtYkxlZnQ6ZnVuY3Rpb24gZ2V0VGh1bWJMZWZ0KCl7aWYodGhpcy52ZXJ0aWNhbClyZXR1cm4gMDt2YXIgZWw9dGhpcy4kZWw7dmFyIGh1ZT10aGlzLmNvbG9yLmdldCgnaHVlJyk7aWYoIWVsKXJldHVybiAwO3ZhciB0aHVtYj10aGlzLiRyZWZzLnRodW1iO3JldHVybiBNYXRoLnJvdW5kKGh1ZSooZWwub2Zmc2V0V2lkdGgtdGh1bWIub2Zmc2V0V2lkdGgvMikvMzYwKTt9LGdldFRodW1iVG9wOmZ1bmN0aW9uIGdldFRodW1iVG9wKCl7aWYoIXRoaXMudmVydGljYWwpcmV0dXJuIDA7dmFyIGVsPXRoaXMuJGVsO3ZhciBodWU9dGhpcy5jb2xvci5nZXQoJ2h1ZScpO2lmKCFlbClyZXR1cm4gMDt2YXIgdGh1bWI9dGhpcy4kcmVmcy50aHVtYjtyZXR1cm4gTWF0aC5yb3VuZChodWUqKGVsLm9mZnNldEhlaWdodC10aHVtYi5vZmZzZXRIZWlnaHQvMikvMzYwKTt9LHVwZGF0ZTpmdW5jdGlvbiB1cGRhdGUoKXt0aGlzLnRodW1iTGVmdD10aGlzLmdldFRodW1iTGVmdCgpO3RoaXMudGh1bWJUb3A9dGhpcy5nZXRUaHVtYlRvcCgpO319LG1vdW50ZWQ6ZnVuY3Rpb24gbW91bnRlZCgpe3ZhciBfdGhpcz10aGlzO3ZhciBfJHJlZnM9dGhpcy4kcmVmcyxiYXI9XyRyZWZzLmJhcix0aHVtYj1fJHJlZnMudGh1bWI7dmFyIGRyYWdDb25maWc9e2RyYWc6ZnVuY3Rpb24gZHJhZyhldmVudCl7X3RoaXMuaGFuZGxlRHJhZyhldmVudCk7fSxlbmQ6ZnVuY3Rpb24gZW5kKGV2ZW50KXtfdGhpcy5oYW5kbGVEcmFnKGV2ZW50KTt9fTtkcmFnZ2FibGUoYmFyLGRyYWdDb25maWcpO2RyYWdnYWJsZSh0aHVtYixkcmFnQ29uZmlnKTt0aGlzLnVwZGF0ZSgpO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL2h1ZS1zbGlkZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNvbXBvbmVudHNfaHVlX3NsaWRlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1odWVfc2xpZGVydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL2h1ZS1zbGlkZXIudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgaHVlX3NsaWRlcl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KGNvbXBvbmVudHNfaHVlX3NsaWRlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxodWVfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNWNkYzQzYjFfcmVuZGVyLGh1ZV9zbGlkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF81Y2RjNDNiMV9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGh1ZV9zbGlkZXJfYXBpO31odWVfc2xpZGVyX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL2h1ZS1zbGlkZXIudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGh1ZV9zbGlkZXI9aHVlX3NsaWRlcl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9hbHBoYS1zbGlkZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA2OGM2NmNiJgp2YXIgYWxwaGFfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY4YzY2Y2JfcmVuZGVyPWZ1bmN0aW9uIGFscGhhX3NsaWRlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2OGM2NmNiX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNvbG9yLWFscGhhLXNsaWRlciIsY2xhc3M6eyJpcy12ZXJ0aWNhbCI6X3ZtLnZlcnRpY2FsfX0sW19jKCJkaXYiLHtyZWY6ImJhciIsc3RhdGljQ2xhc3M6ImVsLWNvbG9yLWFscGhhLXNsaWRlcl9fYmFyIixzdHlsZTp7YmFja2dyb3VuZDpfdm0uYmFja2dyb3VuZH0sb246e2NsaWNrOl92bS5oYW5kbGVDbGlja319KSxfYygiZGl2Iix7cmVmOiJ0aHVtYiIsc3RhdGljQ2xhc3M6ImVsLWNvbG9yLWFscGhhLXNsaWRlcl9fdGh1bWIiLHN0eWxlOntsZWZ0Ol92bS50aHVtYkxlZnQrInB4Iix0b3A6X3ZtLnRodW1iVG9wKyJweCJ9fSldKTt9O3ZhciBhbHBoYV9zbGlkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjhjNjZjYl9zdGF0aWNSZW5kZXJGbnM9W107YWxwaGFfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY4YzY2Y2JfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9hbHBoYS1zbGlkZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA2OGM2NmNiJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvYWxwaGEtc2xpZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBhbHBoYV9zbGlkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J2VsLWNvbG9yLWFscGhhLXNsaWRlcicscHJvcHM6e2NvbG9yOntyZXF1aXJlZDp0cnVlfSx2ZXJ0aWNhbDpCb29sZWFufSx3YXRjaDp7J2NvbG9yLl9hbHBoYSc6ZnVuY3Rpb24gY29sb3JfYWxwaGEoKXt0aGlzLnVwZGF0ZSgpO30sJ2NvbG9yLnZhbHVlJzpmdW5jdGlvbiBjb2xvclZhbHVlKCl7dGhpcy51cGRhdGUoKTt9fSxtZXRob2RzOntoYW5kbGVDbGljazpmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCl7dmFyIHRodW1iPXRoaXMuJHJlZnMudGh1bWI7dmFyIHRhcmdldD1ldmVudC50YXJnZXQ7aWYodGFyZ2V0IT09dGh1bWIpe3RoaXMuaGFuZGxlRHJhZyhldmVudCk7fX0saGFuZGxlRHJhZzpmdW5jdGlvbiBoYW5kbGVEcmFnKGV2ZW50KXt2YXIgcmVjdD10aGlzLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt2YXIgdGh1bWI9dGhpcy4kcmVmcy50aHVtYjtpZighdGhpcy52ZXJ0aWNhbCl7dmFyIGxlZnQ9ZXZlbnQuY2xpZW50WC1yZWN0LmxlZnQ7bGVmdD1NYXRoLm1heCh0aHVtYi5vZmZzZXRXaWR0aC8yLGxlZnQpO2xlZnQ9TWF0aC5taW4obGVmdCxyZWN0LndpZHRoLXRodW1iLm9mZnNldFdpZHRoLzIpO3RoaXMuY29sb3Iuc2V0KCdhbHBoYScsTWF0aC5yb3VuZCgobGVmdC10aHVtYi5vZmZzZXRXaWR0aC8yKS8ocmVjdC53aWR0aC10aHVtYi5vZmZzZXRXaWR0aCkqMTAwKSk7fWVsc2V7dmFyIHRvcD1ldmVudC5jbGllbnRZLXJlY3QudG9wO3RvcD1NYXRoLm1heCh0aHVtYi5vZmZzZXRIZWlnaHQvMix0b3ApO3RvcD1NYXRoLm1pbih0b3AscmVjdC5oZWlnaHQtdGh1bWIub2Zmc2V0SGVpZ2h0LzIpO3RoaXMuY29sb3Iuc2V0KCdhbHBoYScsTWF0aC5yb3VuZCgodG9wLXRodW1iLm9mZnNldEhlaWdodC8yKS8ocmVjdC5oZWlnaHQtdGh1bWIub2Zmc2V0SGVpZ2h0KSoxMDApKTt9fSxnZXRUaHVtYkxlZnQ6ZnVuY3Rpb24gZ2V0VGh1bWJMZWZ0KCl7aWYodGhpcy52ZXJ0aWNhbClyZXR1cm4gMDt2YXIgZWw9dGhpcy4kZWw7dmFyIGFscGhhPXRoaXMuY29sb3IuX2FscGhhO2lmKCFlbClyZXR1cm4gMDt2YXIgdGh1bWI9dGhpcy4kcmVmcy50aHVtYjtyZXR1cm4gTWF0aC5yb3VuZChhbHBoYSooZWwub2Zmc2V0V2lkdGgtdGh1bWIub2Zmc2V0V2lkdGgvMikvMTAwKTt9LGdldFRodW1iVG9wOmZ1bmN0aW9uIGdldFRodW1iVG9wKCl7aWYoIXRoaXMudmVydGljYWwpcmV0dXJuIDA7dmFyIGVsPXRoaXMuJGVsO3ZhciBhbHBoYT10aGlzLmNvbG9yLl9hbHBoYTtpZighZWwpcmV0dXJuIDA7dmFyIHRodW1iPXRoaXMuJHJlZnMudGh1bWI7cmV0dXJuIE1hdGgucm91bmQoYWxwaGEqKGVsLm9mZnNldEhlaWdodC10aHVtYi5vZmZzZXRIZWlnaHQvMikvMTAwKTt9LGdldEJhY2tncm91bmQ6ZnVuY3Rpb24gZ2V0QmFja2dyb3VuZCgpe2lmKHRoaXMuY29sb3ImJnRoaXMuY29sb3IudmFsdWUpe3ZhciBfY29sb3IkdG9SZ2I9dGhpcy5jb2xvci50b1JnYigpLHI9X2NvbG9yJHRvUmdiLnIsZz1fY29sb3IkdG9SZ2IuZyxiPV9jb2xvciR0b1JnYi5iO3JldHVybidsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoJytyKycsICcrZysnLCAnK2IrJywgMCkgMCUsIHJnYmEoJytyKycsICcrZysnLCAnK2IrJywgMSkgMTAwJSknO31yZXR1cm4gbnVsbDt9LHVwZGF0ZTpmdW5jdGlvbiB1cGRhdGUoKXt0aGlzLnRodW1iTGVmdD10aGlzLmdldFRodW1iTGVmdCgpO3RoaXMudGh1bWJUb3A9dGhpcy5nZXRUaHVtYlRvcCgpO3RoaXMuYmFja2dyb3VuZD10aGlzLmdldEJhY2tncm91bmQoKTt9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57dGh1bWJMZWZ0OjAsdGh1bWJUb3A6MCxiYWNrZ3JvdW5kOm51bGx9O30sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dmFyIF90aGlzPXRoaXM7dmFyIF8kcmVmcz10aGlzLiRyZWZzLGJhcj1fJHJlZnMuYmFyLHRodW1iPV8kcmVmcy50aHVtYjt2YXIgZHJhZ0NvbmZpZz17ZHJhZzpmdW5jdGlvbiBkcmFnKGV2ZW50KXtfdGhpcy5oYW5kbGVEcmFnKGV2ZW50KTt9LGVuZDpmdW5jdGlvbiBlbmQoZXZlbnQpe190aGlzLmhhbmRsZURyYWcoZXZlbnQpO319O2RyYWdnYWJsZShiYXIsZHJhZ0NvbmZpZyk7ZHJhZ2dhYmxlKHRodW1iLGRyYWdDb25maWcpO3RoaXMudXBkYXRlKCk7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvYWxwaGEtc2xpZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjb21wb25lbnRzX2FscGhhX3NsaWRlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1hbHBoYV9zbGlkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvYWxwaGEtc2xpZGVyLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGFscGhhX3NsaWRlcl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KGNvbXBvbmVudHNfYWxwaGFfc2xpZGVydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLGFscGhhX3NsaWRlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2OGM2NmNiX3JlbmRlcixhbHBoYV9zbGlkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjhjNjZjYl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGFscGhhX3NsaWRlcl9hcGk7fWFscGhhX3NsaWRlcl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9hbHBoYS1zbGlkZXIudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGFscGhhX3NsaWRlcj1hbHBoYV9zbGlkZXJfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcHJlZGVmaW5lLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNmUwMzA5MyYKdmFyIHByZWRlZmluZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2ZTAzMDkzX3JlbmRlcj1mdW5jdGlvbiBwcmVkZWZpbmV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNmUwMzA5M19yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jb2xvci1wcmVkZWZpbmUifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jb2xvci1wcmVkZWZpbmVfX2NvbG9ycyJ9LF92bS5fbChfdm0ucmdiYUNvbG9ycyxmdW5jdGlvbihpdGVtLGluZGV4KXtyZXR1cm4gX2MoImRpdiIse2tleTpfdm0uY29sb3JzW2luZGV4XSxzdGF0aWNDbGFzczoiZWwtY29sb3ItcHJlZGVmaW5lX19jb2xvci1zZWxlY3RvciIsY2xhc3M6e3NlbGVjdGVkOml0ZW0uc2VsZWN0ZWQsImlzLWFscGhhIjppdGVtLl9hbHBoYTwxMDB9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVTZWxlY3QoaW5kZXgpO319fSxbX2MoImRpdiIse3N0eWxlOnsiYmFja2dyb3VuZC1jb2xvciI6aXRlbS52YWx1ZX19KV0pO30pLDApXSk7fTt2YXIgcHJlZGVmaW5ldnVlX3R5cGVfdGVtcGxhdGVfaWRfMDZlMDMwOTNfc3RhdGljUmVuZGVyRm5zPVtdO3ByZWRlZmluZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2ZTAzMDkzX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcHJlZGVmaW5lLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNmUwMzA5MyYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3ByZWRlZmluZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcHJlZGVmaW5ldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtwcm9wczp7Y29sb3JzOnt0eXBlOkFycmF5LHJlcXVpcmVkOnRydWV9LGNvbG9yOntyZXF1aXJlZDp0cnVlfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3JnYmFDb2xvcnM6dGhpcy5wYXJzZUNvbG9ycyh0aGlzLmNvbG9ycyx0aGlzLmNvbG9yKX07fSxtZXRob2RzOntoYW5kbGVTZWxlY3Q6ZnVuY3Rpb24gaGFuZGxlU2VsZWN0KGluZGV4KXt0aGlzLmNvbG9yLmZyb21TdHJpbmcodGhpcy5jb2xvcnNbaW5kZXhdKTt9LHBhcnNlQ29sb3JzOmZ1bmN0aW9uIHBhcnNlQ29sb3JzKGNvbG9ycyxjb2xvcil7cmV0dXJuIGNvbG9ycy5tYXAoZnVuY3Rpb24odmFsdWUpe3ZhciBjPW5ldyBzcmNfY29sb3IoKTtjLmVuYWJsZUFscGhhPXRydWU7Yy5mb3JtYXQ9J3JnYmEnO2MuZnJvbVN0cmluZyh2YWx1ZSk7Yy5zZWxlY3RlZD1jLnZhbHVlPT09Y29sb3IudmFsdWU7cmV0dXJuIGM7fSk7fX0sd2F0Y2g6eyckcGFyZW50LmN1cnJlbnRDb2xvcic6ZnVuY3Rpb24gJHBhcmVudEN1cnJlbnRDb2xvcih2YWwpe3ZhciBjb2xvcj1uZXcgc3JjX2NvbG9yKCk7Y29sb3IuZnJvbVN0cmluZyh2YWwpO3RoaXMucmdiYUNvbG9ycy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pe2l0ZW0uc2VsZWN0ZWQ9Y29sb3IuY29tcGFyZShpdGVtKTt9KTt9LGNvbG9yczpmdW5jdGlvbiBjb2xvcnMobmV3VmFsKXt0aGlzLnJnYmFDb2xvcnM9dGhpcy5wYXJzZUNvbG9ycyhuZXdWYWwsdGhpcy5jb2xvcik7fSxjb2xvcjpmdW5jdGlvbiBjb2xvcihuZXdWYWwpe3RoaXMucmdiYUNvbG9ycz10aGlzLnBhcnNlQ29sb3JzKHRoaXMuY29sb3JzLG5ld1ZhbCk7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3ByZWRlZmluZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY29tcG9uZW50c19wcmVkZWZpbmV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189cHJlZGVmaW5ldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3ByZWRlZmluZS52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBwcmVkZWZpbmVfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChjb21wb25lbnRzX3ByZWRlZmluZXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxwcmVkZWZpbmV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNmUwMzA5M19yZW5kZXIscHJlZGVmaW5ldnVlX3R5cGVfdGVtcGxhdGVfaWRfMDZlMDMwOTNfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBwcmVkZWZpbmVfYXBpO31wcmVkZWZpbmVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcHJlZGVmaW5lLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwcmVkZWZpbmU9cHJlZGVmaW5lX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9waWNrZXItZHJvcGRvd24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBpY2tlcl9kcm9wZG93bnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonZWwtY29sb3ItcGlja2VyLWRyb3Bkb3duJyxtaXhpbnM6W3Z1ZV9wb3BwZXJfZGVmYXVsdC5hLGxvY2FsZV9kZWZhdWx0LmFdLGNvbXBvbmVudHM6e1N2UGFuZWw6c3ZfcGFuZWwsSHVlU2xpZGVyOmh1ZV9zbGlkZXIsQWxwaGFTbGlkZXI6YWxwaGFfc2xpZGVyLEVsSW5wdXQ6aW5wdXRfZGVmYXVsdC5hLEVsQnV0dG9uOmJ1dHRvbl9kZWZhdWx0LmEsUHJlZGVmaW5lOnByZWRlZmluZX0scHJvcHM6e2NvbG9yOntyZXF1aXJlZDp0cnVlfSxzaG93QWxwaGE6Qm9vbGVhbixwcmVkZWZpbmU6QXJyYXl9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntjdXN0b21JbnB1dDonJ307fSxjb21wdXRlZDp7Y3VycmVudENvbG9yOmZ1bmN0aW9uIGN1cnJlbnRDb2xvcigpe3ZhciBwYXJlbnQ9dGhpcy4kcGFyZW50O3JldHVybiFwYXJlbnQudmFsdWUmJiFwYXJlbnQuc2hvd1BhbmVsQ29sb3I/Jyc6cGFyZW50LmNvbG9yLnZhbHVlO319LG1ldGhvZHM6e2NvbmZpcm1WYWx1ZTpmdW5jdGlvbiBjb25maXJtVmFsdWUoKXt0aGlzLiRlbWl0KCdwaWNrJyk7fSxoYW5kbGVDb25maXJtOmZ1bmN0aW9uIGhhbmRsZUNvbmZpcm0oKXt0aGlzLmNvbG9yLmZyb21TdHJpbmcodGhpcy5jdXN0b21JbnB1dCk7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy4kcGFyZW50LnBvcHBlckVsbT10aGlzLnBvcHBlckVsbT10aGlzLiRlbDt0aGlzLnJlZmVyZW5jZUVsbT10aGlzLiRwYXJlbnQuJGVsO30sd2F0Y2g6e3Nob3dQb3BwZXI6ZnVuY3Rpb24gc2hvd1BvcHBlcih2YWwpe3ZhciBfdGhpcz10aGlzO2lmKHZhbD09PXRydWUpe3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7dmFyIF8kcmVmcz1fdGhpcy4kcmVmcyxzbD1fJHJlZnMuc2wsaHVlPV8kcmVmcy5odWUsYWxwaGE9XyRyZWZzLmFscGhhO3NsJiZzbC51cGRhdGUoKTtodWUmJmh1ZS51cGRhdGUoKTthbHBoYSYmYWxwaGEudXBkYXRlKCk7fSk7fX0sY3VycmVudENvbG9yOntpbW1lZGlhdGU6dHJ1ZSxoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIodmFsKXt0aGlzLmN1c3RvbUlucHV0PXZhbDt9fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3BpY2tlci1kcm9wZG93bi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY29tcG9uZW50c19waWNrZXJfZHJvcGRvd252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189cGlja2VyX2Ryb3Bkb3dudnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3BpY2tlci1kcm9wZG93bi52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBwaWNrZXJfZHJvcGRvd25fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChjb21wb25lbnRzX3BpY2tlcl9kcm9wZG93bnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxwaWNrZXJfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjYwMTYyNV9yZW5kZXIscGlja2VyX2Ryb3Bkb3dudnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY2MDE2MjVfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBwaWNrZXJfZHJvcGRvd25fYXBpO31waWNrZXJfZHJvcGRvd25fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcGlja2VyLWRyb3Bkb3duLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwaWNrZXJfZHJvcGRvd249cGlja2VyX2Ryb3Bkb3duX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY29sb3JfcGlja2VyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbENvbG9yUGlja2VyJyxtaXhpbnM6W2VtaXR0ZXJfZGVmYXVsdC5hXSxwcm9wczp7dmFsdWU6U3RyaW5nLHNob3dBbHBoYTpCb29sZWFuLGNvbG9yRm9ybWF0OlN0cmluZyxkaXNhYmxlZDpCb29sZWFuLHNpemU6U3RyaW5nLHBvcHBlckNsYXNzOlN0cmluZyxwcmVkZWZpbmU6QXJyYXl9LGluamVjdDp7ZWxGb3JtOntkZWZhdWx0OicnfSxlbEZvcm1JdGVtOntkZWZhdWx0OicnfX0sZGlyZWN0aXZlczp7Q2xpY2tvdXRzaWRlOmNsaWNrb3V0c2lkZV9kZWZhdWx0LmF9LGNvbXB1dGVkOntkaXNwbGF5ZWRDb2xvcjpmdW5jdGlvbiBkaXNwbGF5ZWRDb2xvcigpe2lmKCF0aGlzLnZhbHVlJiYhdGhpcy5zaG93UGFuZWxDb2xvcil7cmV0dXJuJ3RyYW5zcGFyZW50Jzt9cmV0dXJuIHRoaXMuZGlzcGxheWVkUmdiKHRoaXMuY29sb3IsdGhpcy5zaG93QWxwaGEpO30sX2VsRm9ybUl0ZW1TaXplOmZ1bmN0aW9uIF9lbEZvcm1JdGVtU2l6ZSgpe3JldHVybih0aGlzLmVsRm9ybUl0ZW18fHt9KS5lbEZvcm1JdGVtU2l6ZTt9LGNvbG9yU2l6ZTpmdW5jdGlvbiBjb2xvclNpemUoKXtyZXR1cm4gdGhpcy5zaXplfHx0aGlzLl9lbEZvcm1JdGVtU2l6ZXx8KHRoaXMuJEVMRU1FTlR8fHt9KS5zaXplO30sY29sb3JEaXNhYmxlZDpmdW5jdGlvbiBjb2xvckRpc2FibGVkKCl7cmV0dXJuIHRoaXMuZGlzYWJsZWR8fCh0aGlzLmVsRm9ybXx8e30pLmRpc2FibGVkO319LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZSh2YWwpe2lmKCF2YWwpe3RoaXMuc2hvd1BhbmVsQ29sb3I9ZmFsc2U7fWVsc2UgaWYodmFsJiZ2YWwhPT10aGlzLmNvbG9yLnZhbHVlKXt0aGlzLmNvbG9yLmZyb21TdHJpbmcodmFsKTt9fSxjb2xvcjp7ZGVlcDp0cnVlLGhhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcigpe3RoaXMuc2hvd1BhbmVsQ29sb3I9dHJ1ZTt9fSxkaXNwbGF5ZWRDb2xvcjpmdW5jdGlvbiBkaXNwbGF5ZWRDb2xvcih2YWwpe2lmKCF0aGlzLnNob3dQaWNrZXIpcmV0dXJuO3ZhciBjdXJyZW50VmFsdWVDb2xvcj1uZXcgc3JjX2NvbG9yKHtlbmFibGVBbHBoYTp0aGlzLnNob3dBbHBoYSxmb3JtYXQ6dGhpcy5jb2xvckZvcm1hdH0pO2N1cnJlbnRWYWx1ZUNvbG9yLmZyb21TdHJpbmcodGhpcy52YWx1ZSk7dmFyIGN1cnJlbnRWYWx1ZUNvbG9yUmdiPXRoaXMuZGlzcGxheWVkUmdiKGN1cnJlbnRWYWx1ZUNvbG9yLHRoaXMuc2hvd0FscGhhKTtpZih2YWwhPT1jdXJyZW50VmFsdWVDb2xvclJnYil7dGhpcy4kZW1pdCgnYWN0aXZlLWNoYW5nZScsdmFsKTt9fX0sbWV0aG9kczp7aGFuZGxlVHJpZ2dlcjpmdW5jdGlvbiBoYW5kbGVUcmlnZ2VyKCl7aWYodGhpcy5jb2xvckRpc2FibGVkKXJldHVybjt0aGlzLnNob3dQaWNrZXI9IXRoaXMuc2hvd1BpY2tlcjt9LGNvbmZpcm1WYWx1ZTpmdW5jdGlvbiBjb25maXJtVmFsdWUoKXt2YXIgdmFsdWU9dGhpcy5jb2xvci52YWx1ZTt0aGlzLiRlbWl0KCdpbnB1dCcsdmFsdWUpO3RoaXMuJGVtaXQoJ2NoYW5nZScsdmFsdWUpO3RoaXMuZGlzcGF0Y2goJ0VsRm9ybUl0ZW0nLCdlbC5mb3JtLmNoYW5nZScsdmFsdWUpO3RoaXMuc2hvd1BpY2tlcj1mYWxzZTt9LGNsZWFyVmFsdWU6ZnVuY3Rpb24gY2xlYXJWYWx1ZSgpe3RoaXMuJGVtaXQoJ2lucHV0JyxudWxsKTt0aGlzLiRlbWl0KCdjaGFuZ2UnLG51bGwpO2lmKHRoaXMudmFsdWUhPT1udWxsKXt0aGlzLmRpc3BhdGNoKCdFbEZvcm1JdGVtJywnZWwuZm9ybS5jaGFuZ2UnLG51bGwpO310aGlzLnNob3dQYW5lbENvbG9yPWZhbHNlO3RoaXMuc2hvd1BpY2tlcj1mYWxzZTt0aGlzLnJlc2V0Q29sb3IoKTt9LGhpZGU6ZnVuY3Rpb24gaGlkZSgpe3RoaXMuc2hvd1BpY2tlcj1mYWxzZTt0aGlzLnJlc2V0Q29sb3IoKTt9LHJlc2V0Q29sb3I6ZnVuY3Rpb24gcmVzZXRDb2xvcigpe3ZhciBfdGhpcz10aGlzO3RoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKF8pe2lmKF90aGlzLnZhbHVlKXtfdGhpcy5jb2xvci5mcm9tU3RyaW5nKF90aGlzLnZhbHVlKTt9ZWxzZXtfdGhpcy5zaG93UGFuZWxDb2xvcj1mYWxzZTt9fSk7fSxkaXNwbGF5ZWRSZ2I6ZnVuY3Rpb24gZGlzcGxheWVkUmdiKGNvbG9yLHNob3dBbHBoYSl7aWYoIShjb2xvciBpbnN0YW5jZW9mIHNyY19jb2xvcikpe3Rocm93IEVycm9yKCdjb2xvciBzaG91bGQgYmUgaW5zdGFuY2Ugb2YgQ29sb3IgQ2xhc3MnKTt9dmFyIF9jb2xvciR0b1JnYj1jb2xvci50b1JnYigpLHI9X2NvbG9yJHRvUmdiLnIsZz1fY29sb3IkdG9SZ2IuZyxiPV9jb2xvciR0b1JnYi5iO3JldHVybiBzaG93QWxwaGE/J3JnYmEoJytyKycsICcrZysnLCAnK2IrJywgJytjb2xvci5nZXQoJ2FscGhhJykvMTAwKycpJzoncmdiKCcrcisnLCAnK2crJywgJytiKycpJzt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXt2YXIgdmFsdWU9dGhpcy52YWx1ZTtpZih2YWx1ZSl7dGhpcy5jb2xvci5mcm9tU3RyaW5nKHZhbHVlKTt9dGhpcy5wb3BwZXJFbG09dGhpcy4kcmVmcy5kcm9wZG93bi4kZWw7fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXt2YXIgY29sb3I9bmV3IHNyY19jb2xvcih7ZW5hYmxlQWxwaGE6dGhpcy5zaG93QWxwaGEsZm9ybWF0OnRoaXMuY29sb3JGb3JtYXR9KTtyZXR1cm57Y29sb3I6Y29sb3Isc2hvd1BpY2tlcjpmYWxzZSxzaG93UGFuZWxDb2xvcjpmYWxzZX07fSxjb21wb25lbnRzOntQaWNrZXJEcm9wZG93bjpwaWNrZXJfZHJvcGRvd259fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfY29sb3JfcGlja2VyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWNvbG9yX3BpY2tlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvbWFpbi52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBjb2xvcl9waWNrZXJfc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19jb2xvcl9waWNrZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzU1YzhhZGU3X3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNTVjOGFkZTdfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBjb2xvcl9waWNrZXJfc3JjX21haW5fYXBpO31jb2xvcl9waWNrZXJfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNvbG9yX3BpY2tlcl9zcmNfbWFpbj1jb2xvcl9waWNrZXJfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9jb2xvcl9waWNrZXJfc3JjX21haW4uaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoY29sb3JfcGlja2VyX3NyY19tYWluLm5hbWUsY29sb3JfcGlja2VyX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY29sb3JfcGlja2VyPWNvbG9yX3BpY2tlcl9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RyYW5zZmVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01YzY1NGRkOCYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81YzY1NGRkOF9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVjNjU0ZGQ4X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRyYW5zZmVyIn0sW19jKCJ0cmFuc2Zlci1wYW5lbCIsX3ZtLl9iKHtyZWY6ImxlZnRQYW5lbCIsYXR0cnM6e2RhdGE6X3ZtLnNvdXJjZURhdGEsdGl0bGU6X3ZtLnRpdGxlc1swXXx8X3ZtLnQoImVsLnRyYW5zZmVyLnRpdGxlcy4wIiksImRlZmF1bHQtY2hlY2tlZCI6X3ZtLmxlZnREZWZhdWx0Q2hlY2tlZCxwbGFjZWhvbGRlcjpfdm0uZmlsdGVyUGxhY2Vob2xkZXJ8fF92bS50KCJlbC50cmFuc2Zlci5maWx0ZXJQbGFjZWhvbGRlciIpfSxvbjp7ImNoZWNrZWQtY2hhbmdlIjpfdm0ub25Tb3VyY2VDaGVja2VkQ2hhbmdlfX0sInRyYW5zZmVyLXBhbmVsIixfdm0uJHByb3BzLGZhbHNlKSxbX3ZtLl90KCJsZWZ0LWZvb3RlciIpXSwyKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRyYW5zZmVyX19idXR0b25zIn0sW19jKCJlbC1idXR0b24iLHtjbGFzczpbImVsLXRyYW5zZmVyX19idXR0b24iLF92bS5oYXNCdXR0b25UZXh0cz8iaXMtd2l0aC10ZXh0cyI6IiJdLGF0dHJzOnt0eXBlOiJwcmltYXJ5IixkaXNhYmxlZDpfdm0ucmlnaHRDaGVja2VkLmxlbmd0aD09PTB9LG5hdGl2ZU9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe3JldHVybiBfdm0uYWRkVG9MZWZ0KCRldmVudCk7fX19LFtfYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pY29uLWFycm93LWxlZnQifSksX3ZtLmJ1dHRvblRleHRzWzBdIT09dW5kZWZpbmVkP19jKCJzcGFuIixbX3ZtLl92KF92bS5fcyhfdm0uYnV0dG9uVGV4dHNbMF0pKV0pOl92bS5fZSgpXSksX2MoImVsLWJ1dHRvbiIse2NsYXNzOlsiZWwtdHJhbnNmZXJfX2J1dHRvbiIsX3ZtLmhhc0J1dHRvblRleHRzPyJpcy13aXRoLXRleHRzIjoiIl0sYXR0cnM6e3R5cGU6InByaW1hcnkiLGRpc2FibGVkOl92bS5sZWZ0Q2hlY2tlZC5sZW5ndGg9PT0wfSxuYXRpdmVPbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXtyZXR1cm4gX3ZtLmFkZFRvUmlnaHQoJGV2ZW50KTt9fX0sW192bS5idXR0b25UZXh0c1sxXSE9PXVuZGVmaW5lZD9fYygic3BhbiIsW192bS5fdihfdm0uX3MoX3ZtLmJ1dHRvblRleHRzWzFdKSldKTpfdm0uX2UoKSxfYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pY29uLWFycm93LXJpZ2h0In0pXSldLDEpLF9jKCJ0cmFuc2Zlci1wYW5lbCIsX3ZtLl9iKHtyZWY6InJpZ2h0UGFuZWwiLGF0dHJzOntkYXRhOl92bS50YXJnZXREYXRhLHRpdGxlOl92bS50aXRsZXNbMV18fF92bS50KCJlbC50cmFuc2Zlci50aXRsZXMuMSIpLCJkZWZhdWx0LWNoZWNrZWQiOl92bS5yaWdodERlZmF1bHRDaGVja2VkLHBsYWNlaG9sZGVyOl92bS5maWx0ZXJQbGFjZWhvbGRlcnx8X3ZtLnQoImVsLnRyYW5zZmVyLmZpbHRlclBsYWNlaG9sZGVyIil9LG9uOnsiY2hlY2tlZC1jaGFuZ2UiOl92bS5vblRhcmdldENoZWNrZWRDaGFuZ2V9fSwidHJhbnNmZXItcGFuZWwiLF92bS4kcHJvcHMsZmFsc2UpLFtfdm0uX3QoInJpZ2h0LWZvb3RlciIpXSwyKV0sMSk7fTt2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVjNjU0ZGQ4X3N0YXRpY1JlbmRlckZucz1bXTttYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNWM2NTRkZDhfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RyYW5zZmVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01YzY1NGRkOCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy90cmFuc2Zlci9zcmMvdHJhbnNmZXItcGFuZWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJkZGFiOGJkJgp2YXIgdHJhbnNmZXJfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yZGRhYjhiZF9yZW5kZXI9ZnVuY3Rpb24gdHJhbnNmZXJfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yZGRhYjhiZF9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10cmFuc2Zlci1wYW5lbCJ9LFtfYygicCIse3N0YXRpY0NsYXNzOiJlbC10cmFuc2Zlci1wYW5lbF9faGVhZGVyIn0sW19jKCJlbC1jaGVja2JveCIse2F0dHJzOntpbmRldGVybWluYXRlOl92bS5pc0luZGV0ZXJtaW5hdGV9LG9uOntjaGFuZ2U6X3ZtLmhhbmRsZUFsbENoZWNrZWRDaGFuZ2V9LG1vZGVsOnt2YWx1ZTpfdm0uYWxsQ2hlY2tlZCxjYWxsYmFjazpmdW5jdGlvbiBjYWxsYmFjaygkJHYpe192bS5hbGxDaGVja2VkPSQkdjt9LGV4cHJlc3Npb246ImFsbENoZWNrZWQifX0sW192bS5fdigiXG4gICAgICAiK192bS5fcyhfdm0udGl0bGUpKyJcbiAgICAgICIpLF9jKCJzcGFuIixbX3ZtLl92KF92bS5fcyhfdm0uY2hlY2tlZFN1bW1hcnkpKV0pXSldLDEpLF9jKCJkaXYiLHtjbGFzczpbImVsLXRyYW5zZmVyLXBhbmVsX19ib2R5Iixfdm0uaGFzRm9vdGVyPyJpcy13aXRoLWZvb3RlciI6IiJdfSxbX3ZtLmZpbHRlcmFibGU/X2MoImVsLWlucHV0Iix7c3RhdGljQ2xhc3M6ImVsLXRyYW5zZmVyLXBhbmVsX19maWx0ZXIiLGF0dHJzOntzaXplOiJzbWFsbCIscGxhY2Vob2xkZXI6X3ZtLnBsYWNlaG9sZGVyfSxuYXRpdmVPbjp7bW91c2VlbnRlcjpmdW5jdGlvbiBtb3VzZWVudGVyKCRldmVudCl7X3ZtLmlucHV0SG92ZXI9dHJ1ZTt9LG1vdXNlbGVhdmU6ZnVuY3Rpb24gbW91c2VsZWF2ZSgkZXZlbnQpe192bS5pbnB1dEhvdmVyPWZhbHNlO319LG1vZGVsOnt2YWx1ZTpfdm0ucXVlcnksY2FsbGJhY2s6ZnVuY3Rpb24gY2FsbGJhY2soJCR2KXtfdm0ucXVlcnk9JCR2O30sZXhwcmVzc2lvbjoicXVlcnkifX0sW19jKCJpIix7Y2xhc3M6WyJlbC1pbnB1dF9faWNvbiIsImVsLWljb24tIitfdm0uaW5wdXRJY29uXSxhdHRyczp7c2xvdDoicHJlZml4In0sb246e2NsaWNrOl92bS5jbGVhclF1ZXJ5fSxzbG90OiJwcmVmaXgifSldKTpfdm0uX2UoKSxfYygiZWwtY2hlY2tib3gtZ3JvdXAiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTohX3ZtLmhhc05vTWF0Y2gmJl92bS5kYXRhLmxlbmd0aD4wLGV4cHJlc3Npb246IiFoYXNOb01hdGNoICYmIGRhdGEubGVuZ3RoID4gMCJ9XSxzdGF0aWNDbGFzczoiZWwtdHJhbnNmZXItcGFuZWxfX2xpc3QiLGNsYXNzOnsiaXMtZmlsdGVyYWJsZSI6X3ZtLmZpbHRlcmFibGV9LG1vZGVsOnt2YWx1ZTpfdm0uY2hlY2tlZCxjYWxsYmFjazpmdW5jdGlvbiBjYWxsYmFjaygkJHYpe192bS5jaGVja2VkPSQkdjt9LGV4cHJlc3Npb246ImNoZWNrZWQifX0sX3ZtLl9sKF92bS5maWx0ZXJlZERhdGEsZnVuY3Rpb24oaXRlbSl7cmV0dXJuIF9jKCJlbC1jaGVja2JveCIse2tleTppdGVtW192bS5rZXlQcm9wXSxzdGF0aWNDbGFzczoiZWwtdHJhbnNmZXItcGFuZWxfX2l0ZW0iLGF0dHJzOntsYWJlbDppdGVtW192bS5rZXlQcm9wXSxkaXNhYmxlZDppdGVtW192bS5kaXNhYmxlZFByb3BdfX0sW19jKCJvcHRpb24tY29udGVudCIse2F0dHJzOntvcHRpb246aXRlbX19KV0sMSk7fSksMSksX2MoInAiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0uaGFzTm9NYXRjaCxleHByZXNzaW9uOiJoYXNOb01hdGNoIn1dLHN0YXRpY0NsYXNzOiJlbC10cmFuc2Zlci1wYW5lbF9fZW1wdHkifSxbX3ZtLl92KF92bS5fcyhfdm0udCgiZWwudHJhbnNmZXIubm9NYXRjaCIpKSldKSxfYygicCIse2RpcmVjdGl2ZXM6W3tuYW1lOiJzaG93IixyYXdOYW1lOiJ2LXNob3ciLHZhbHVlOl92bS5kYXRhLmxlbmd0aD09PTAmJiFfdm0uaGFzTm9NYXRjaCxleHByZXNzaW9uOiJkYXRhLmxlbmd0aCA9PT0gMCAmJiAhaGFzTm9NYXRjaCJ9XSxzdGF0aWNDbGFzczoiZWwtdHJhbnNmZXItcGFuZWxfX2VtcHR5In0sW192bS5fdihfdm0uX3MoX3ZtLnQoImVsLnRyYW5zZmVyLm5vRGF0YSIpKSldKV0sMSksX3ZtLmhhc0Zvb3Rlcj9fYygicCIse3N0YXRpY0NsYXNzOiJlbC10cmFuc2Zlci1wYW5lbF9fZm9vdGVyIn0sW192bS5fdCgiZGVmYXVsdCIpXSwyKTpfdm0uX2UoKV0pO307dmFyIHRyYW5zZmVyX3BhbmVsdnVlX3R5cGVfdGVtcGxhdGVfaWRfMmRkYWI4YmRfc3RhdGljUmVuZGVyRm5zPVtdO3RyYW5zZmVyX3BhbmVsdnVlX3R5cGVfdGVtcGxhdGVfaWRfMmRkYWI4YmRfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3RyYW5zZmVyL3NyYy90cmFuc2Zlci1wYW5lbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MmRkYWI4YmQmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RyYW5zZmVyL3NyYy90cmFuc2Zlci1wYW5lbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdHJhbnNmZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e21peGluczpbbG9jYWxlX2RlZmF1bHQuYV0sbmFtZTonRWxUcmFuc2ZlclBhbmVsJyxjb21wb25lbnROYW1lOidFbFRyYW5zZmVyUGFuZWwnLGNvbXBvbmVudHM6e0VsQ2hlY2tib3hHcm91cDpjaGVja2JveF9ncm91cF9kZWZhdWx0LmEsRWxDaGVja2JveDpjaGVja2JveF9kZWZhdWx0LmEsRWxJbnB1dDppbnB1dF9kZWZhdWx0LmEsT3B0aW9uQ29udGVudDp7cHJvcHM6e29wdGlvbjpPYmplY3R9LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoaCl7dmFyIGdldFBhcmVudD1mdW5jdGlvbiBnZXRQYXJlbnQodm0pe2lmKHZtLiRvcHRpb25zLmNvbXBvbmVudE5hbWU9PT0nRWxUcmFuc2ZlclBhbmVsJyl7cmV0dXJuIHZtO31lbHNlIGlmKHZtLiRwYXJlbnQpe3JldHVybiBnZXRQYXJlbnQodm0uJHBhcmVudCk7fWVsc2V7cmV0dXJuIHZtO319O3ZhciBwYW5lbD1nZXRQYXJlbnQodGhpcyk7dmFyIHRyYW5zZmVyPXBhbmVsLiRwYXJlbnR8fHBhbmVsO3JldHVybiBwYW5lbC5yZW5kZXJDb250ZW50P3BhbmVsLnJlbmRlckNvbnRlbnQoaCx0aGlzLm9wdGlvbik6dHJhbnNmZXIuJHNjb3BlZFNsb3RzLmRlZmF1bHQ/dHJhbnNmZXIuJHNjb3BlZFNsb3RzLmRlZmF1bHQoe29wdGlvbjp0aGlzLm9wdGlvbn0pOmgoJ3NwYW4nLFt0aGlzLm9wdGlvbltwYW5lbC5sYWJlbFByb3BdfHx0aGlzLm9wdGlvbltwYW5lbC5rZXlQcm9wXV0pO319fSxwcm9wczp7ZGF0YTp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX0scmVuZGVyQ29udGVudDpGdW5jdGlvbixwbGFjZWhvbGRlcjpTdHJpbmcsdGl0bGU6U3RyaW5nLGZpbHRlcmFibGU6Qm9vbGVhbixmb3JtYXQ6T2JqZWN0LGZpbHRlck1ldGhvZDpGdW5jdGlvbixkZWZhdWx0Q2hlY2tlZDpBcnJheSxwcm9wczpPYmplY3R9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntjaGVja2VkOltdLGFsbENoZWNrZWQ6ZmFsc2UscXVlcnk6JycsaW5wdXRIb3ZlcjpmYWxzZSxjaGVja0NoYW5nZUJ5VXNlcjp0cnVlfTt9LHdhdGNoOntjaGVja2VkOmZ1bmN0aW9uIGNoZWNrZWQodmFsLG9sZFZhbCl7dGhpcy51cGRhdGVBbGxDaGVja2VkKCk7aWYodGhpcy5jaGVja0NoYW5nZUJ5VXNlcil7dmFyIG1vdmVkS2V5cz12YWwuY29uY2F0KG9sZFZhbCkuZmlsdGVyKGZ1bmN0aW9uKHYpe3JldHVybiB2YWwuaW5kZXhPZih2KT09PS0xfHxvbGRWYWwuaW5kZXhPZih2KT09PS0xO30pO3RoaXMuJGVtaXQoJ2NoZWNrZWQtY2hhbmdlJyx2YWwsbW92ZWRLZXlzKTt9ZWxzZXt0aGlzLiRlbWl0KCdjaGVja2VkLWNoYW5nZScsdmFsKTt0aGlzLmNoZWNrQ2hhbmdlQnlVc2VyPXRydWU7fX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7dmFyIF90aGlzPXRoaXM7dmFyIGNoZWNrZWQ9W107dmFyIGZpbHRlcmVkRGF0YUtleXM9dGhpcy5maWx0ZXJlZERhdGEubWFwKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBpdGVtW190aGlzLmtleVByb3BdO30pO3RoaXMuY2hlY2tlZC5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pe2lmKGZpbHRlcmVkRGF0YUtleXMuaW5kZXhPZihpdGVtKT4tMSl7Y2hlY2tlZC5wdXNoKGl0ZW0pO319KTt0aGlzLmNoZWNrQ2hhbmdlQnlVc2VyPWZhbHNlO3RoaXMuY2hlY2tlZD1jaGVja2VkO30sY2hlY2thYmxlRGF0YTpmdW5jdGlvbiBjaGVja2FibGVEYXRhKCl7dGhpcy51cGRhdGVBbGxDaGVja2VkKCk7fSxkZWZhdWx0Q2hlY2tlZDp7aW1tZWRpYXRlOnRydWUsaGFuZGxlcjpmdW5jdGlvbiBoYW5kbGVyKHZhbCxvbGRWYWwpe3ZhciBfdGhpczI9dGhpcztpZihvbGRWYWwmJnZhbC5sZW5ndGg9PT1vbGRWYWwubGVuZ3RoJiZ2YWwuZXZlcnkoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIG9sZFZhbC5pbmRleE9mKGl0ZW0pPi0xO30pKXJldHVybjt2YXIgY2hlY2tlZD1bXTt2YXIgY2hlY2thYmxlRGF0YUtleXM9dGhpcy5jaGVja2FibGVEYXRhLm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gaXRlbVtfdGhpczIua2V5UHJvcF07fSk7dmFsLmZvckVhY2goZnVuY3Rpb24oaXRlbSl7aWYoY2hlY2thYmxlRGF0YUtleXMuaW5kZXhPZihpdGVtKT4tMSl7Y2hlY2tlZC5wdXNoKGl0ZW0pO319KTt0aGlzLmNoZWNrQ2hhbmdlQnlVc2VyPWZhbHNlO3RoaXMuY2hlY2tlZD1jaGVja2VkO319fSxjb21wdXRlZDp7ZmlsdGVyZWREYXRhOmZ1bmN0aW9uIGZpbHRlcmVkRGF0YSgpe3ZhciBfdGhpczM9dGhpcztyZXR1cm4gdGhpcy5kYXRhLmZpbHRlcihmdW5jdGlvbihpdGVtKXtpZih0eXBlb2YgX3RoaXMzLmZpbHRlck1ldGhvZD09PSdmdW5jdGlvbicpe3JldHVybiBfdGhpczMuZmlsdGVyTWV0aG9kKF90aGlzMy5xdWVyeSxpdGVtKTt9ZWxzZXt2YXIgbGFiZWw9aXRlbVtfdGhpczMubGFiZWxQcm9wXXx8aXRlbVtfdGhpczMua2V5UHJvcF0udG9TdHJpbmcoKTtyZXR1cm4gbGFiZWwudG9Mb3dlckNhc2UoKS5pbmRleE9mKF90aGlzMy5xdWVyeS50b0xvd2VyQ2FzZSgpKT4tMTt9fSk7fSxjaGVja2FibGVEYXRhOmZ1bmN0aW9uIGNoZWNrYWJsZURhdGEoKXt2YXIgX3RoaXM0PXRoaXM7cmV0dXJuIHRoaXMuZmlsdGVyZWREYXRhLmZpbHRlcihmdW5jdGlvbihpdGVtKXtyZXR1cm4haXRlbVtfdGhpczQuZGlzYWJsZWRQcm9wXTt9KTt9LGNoZWNrZWRTdW1tYXJ5OmZ1bmN0aW9uIGNoZWNrZWRTdW1tYXJ5KCl7dmFyIGNoZWNrZWRMZW5ndGg9dGhpcy5jaGVja2VkLmxlbmd0aDt2YXIgZGF0YUxlbmd0aD10aGlzLmRhdGEubGVuZ3RoO3ZhciBfZm9ybWF0PXRoaXMuZm9ybWF0LG5vQ2hlY2tlZD1fZm9ybWF0Lm5vQ2hlY2tlZCxoYXNDaGVja2VkPV9mb3JtYXQuaGFzQ2hlY2tlZDtpZihub0NoZWNrZWQmJmhhc0NoZWNrZWQpe3JldHVybiBjaGVja2VkTGVuZ3RoPjA/aGFzQ2hlY2tlZC5yZXBsYWNlKC9cJHtjaGVja2VkfS9nLGNoZWNrZWRMZW5ndGgpLnJlcGxhY2UoL1wke3RvdGFsfS9nLGRhdGFMZW5ndGgpOm5vQ2hlY2tlZC5yZXBsYWNlKC9cJHt0b3RhbH0vZyxkYXRhTGVuZ3RoKTt9ZWxzZXtyZXR1cm4gY2hlY2tlZExlbmd0aCsnLycrZGF0YUxlbmd0aDt9fSxpc0luZGV0ZXJtaW5hdGU6ZnVuY3Rpb24gaXNJbmRldGVybWluYXRlKCl7dmFyIGNoZWNrZWRMZW5ndGg9dGhpcy5jaGVja2VkLmxlbmd0aDtyZXR1cm4gY2hlY2tlZExlbmd0aD4wJiZjaGVja2VkTGVuZ3RoPHRoaXMuY2hlY2thYmxlRGF0YS5sZW5ndGg7fSxoYXNOb01hdGNoOmZ1bmN0aW9uIGhhc05vTWF0Y2goKXtyZXR1cm4gdGhpcy5xdWVyeS5sZW5ndGg+MCYmdGhpcy5maWx0ZXJlZERhdGEubGVuZ3RoPT09MDt9LGlucHV0SWNvbjpmdW5jdGlvbiBpbnB1dEljb24oKXtyZXR1cm4gdGhpcy5xdWVyeS5sZW5ndGg+MCYmdGhpcy5pbnB1dEhvdmVyPydjaXJjbGUtY2xvc2UnOidzZWFyY2gnO30sbGFiZWxQcm9wOmZ1bmN0aW9uIGxhYmVsUHJvcCgpe3JldHVybiB0aGlzLnByb3BzLmxhYmVsfHwnbGFiZWwnO30sa2V5UHJvcDpmdW5jdGlvbiBrZXlQcm9wKCl7cmV0dXJuIHRoaXMucHJvcHMua2V5fHwna2V5Jzt9LGRpc2FibGVkUHJvcDpmdW5jdGlvbiBkaXNhYmxlZFByb3AoKXtyZXR1cm4gdGhpcy5wcm9wcy5kaXNhYmxlZHx8J2Rpc2FibGVkJzt9LGhhc0Zvb3RlcjpmdW5jdGlvbiBoYXNGb290ZXIoKXtyZXR1cm4hIXRoaXMuJHNsb3RzLmRlZmF1bHQ7fX0sbWV0aG9kczp7dXBkYXRlQWxsQ2hlY2tlZDpmdW5jdGlvbiB1cGRhdGVBbGxDaGVja2VkKCl7dmFyIF90aGlzNT10aGlzO3ZhciBjaGVja2FibGVEYXRhS2V5cz10aGlzLmNoZWNrYWJsZURhdGEubWFwKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBpdGVtW190aGlzNS5rZXlQcm9wXTt9KTt0aGlzLmFsbENoZWNrZWQ9Y2hlY2thYmxlRGF0YUtleXMubGVuZ3RoPjAmJmNoZWNrYWJsZURhdGFLZXlzLmV2ZXJ5KGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBfdGhpczUuY2hlY2tlZC5pbmRleE9mKGl0ZW0pPi0xO30pO30saGFuZGxlQWxsQ2hlY2tlZENoYW5nZTpmdW5jdGlvbiBoYW5kbGVBbGxDaGVja2VkQ2hhbmdlKHZhbHVlKXt2YXIgX3RoaXM2PXRoaXM7dGhpcy5jaGVja2VkPXZhbHVlP3RoaXMuY2hlY2thYmxlRGF0YS5tYXAoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIGl0ZW1bX3RoaXM2LmtleVByb3BdO30pOltdO30sY2xlYXJRdWVyeTpmdW5jdGlvbiBjbGVhclF1ZXJ5KCl7aWYodGhpcy5pbnB1dEljb249PT0nY2lyY2xlLWNsb3NlJyl7dGhpcy5xdWVyeT0nJzt9fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdHJhbnNmZXIvc3JjL3RyYW5zZmVyLXBhbmVsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfdHJhbnNmZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189dHJhbnNmZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90cmFuc2Zlci9zcmMvdHJhbnNmZXItcGFuZWwudnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgdHJhbnNmZXJfcGFuZWxfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfdHJhbnNmZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sdHJhbnNmZXJfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yZGRhYjhiZF9yZW5kZXIsdHJhbnNmZXJfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF8yZGRhYjhiZF9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHRyYW5zZmVyX3BhbmVsX2FwaTt9dHJhbnNmZXJfcGFuZWxfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy90cmFuc2Zlci9zcmMvdHJhbnNmZXItcGFuZWwudnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRyYW5zZmVyX3BhbmVsPXRyYW5zZmVyX3BhbmVsX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RyYW5zZmVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0cmFuc2Zlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxUcmFuc2ZlcicsbWl4aW5zOltlbWl0dGVyX2RlZmF1bHQuYSxsb2NhbGVfZGVmYXVsdC5hLG1pZ3JhdGluZ19kZWZhdWx0LmFdLGNvbXBvbmVudHM6e1RyYW5zZmVyUGFuZWw6dHJhbnNmZXJfcGFuZWwsRWxCdXR0b246YnV0dG9uX2RlZmF1bHQuYX0scHJvcHM6e2RhdGE6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LHRpdGxlczp7dHlwZTpBcnJheSxkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7cmV0dXJuW107fX0sYnV0dG9uVGV4dHM6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LGZpbHRlclBsYWNlaG9sZGVyOnt0eXBlOlN0cmluZyxkZWZhdWx0OicnfSxmaWx0ZXJNZXRob2Q6RnVuY3Rpb24sbGVmdERlZmF1bHRDaGVja2VkOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSxyaWdodERlZmF1bHRDaGVja2VkOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSxyZW5kZXJDb250ZW50OkZ1bmN0aW9uLHZhbHVlOnt0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSxmb3JtYXQ6e3R5cGU6T2JqZWN0LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm57fTt9fSxmaWx0ZXJhYmxlOkJvb2xlYW4scHJvcHM6e3R5cGU6T2JqZWN0LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm57bGFiZWw6J2xhYmVsJyxrZXk6J2tleScsZGlzYWJsZWQ6J2Rpc2FibGVkJ307fX0sdGFyZ2V0T3JkZXI6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J29yaWdpbmFsJ319LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntsZWZ0Q2hlY2tlZDpbXSxyaWdodENoZWNrZWQ6W119O30sY29tcHV0ZWQ6e2RhdGFPYmo6ZnVuY3Rpb24gZGF0YU9iaigpe3ZhciBrZXk9dGhpcy5wcm9wcy5rZXk7cmV0dXJuIHRoaXMuZGF0YS5yZWR1Y2UoZnVuY3Rpb24obyxjdXIpe3JldHVybihvW2N1cltrZXldXT1jdXIpJiZvO30se30pO30sc291cmNlRGF0YTpmdW5jdGlvbiBzb3VyY2VEYXRhKCl7dmFyIF90aGlzPXRoaXM7cmV0dXJuIHRoaXMuZGF0YS5maWx0ZXIoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIF90aGlzLnZhbHVlLmluZGV4T2YoaXRlbVtfdGhpcy5wcm9wcy5rZXldKT09PS0xO30pO30sdGFyZ2V0RGF0YTpmdW5jdGlvbiB0YXJnZXREYXRhKCl7dmFyIF90aGlzMj10aGlzO2lmKHRoaXMudGFyZ2V0T3JkZXI9PT0nb3JpZ2luYWwnKXtyZXR1cm4gdGhpcy5kYXRhLmZpbHRlcihmdW5jdGlvbihpdGVtKXtyZXR1cm4gX3RoaXMyLnZhbHVlLmluZGV4T2YoaXRlbVtfdGhpczIucHJvcHMua2V5XSk+LTE7fSk7fWVsc2V7cmV0dXJuIHRoaXMudmFsdWUucmVkdWNlKGZ1bmN0aW9uKGFycixjdXIpe3ZhciB2YWw9X3RoaXMyLmRhdGFPYmpbY3VyXTtpZih2YWwpe2Fyci5wdXNoKHZhbCk7fXJldHVybiBhcnI7fSxbXSk7fX0saGFzQnV0dG9uVGV4dHM6ZnVuY3Rpb24gaGFzQnV0dG9uVGV4dHMoKXtyZXR1cm4gdGhpcy5idXR0b25UZXh0cy5sZW5ndGg9PT0yO319LHdhdGNoOnt2YWx1ZTpmdW5jdGlvbiB2YWx1ZSh2YWwpe3RoaXMuZGlzcGF0Y2goJ0VsRm9ybUl0ZW0nLCdlbC5mb3JtLmNoYW5nZScsdmFsKTt9fSxtZXRob2RzOntnZXRNaWdyYXRpbmdDb25maWc6ZnVuY3Rpb24gZ2V0TWlncmF0aW5nQ29uZmlnKCl7cmV0dXJue3Byb3BzOnsnZm9vdGVyLWZvcm1hdCc6J2Zvb3Rlci1mb3JtYXQgaXMgcmVuYW1lZCB0byBmb3JtYXQuJ319O30sb25Tb3VyY2VDaGVja2VkQ2hhbmdlOmZ1bmN0aW9uIG9uU291cmNlQ2hlY2tlZENoYW5nZSh2YWwsbW92ZWRLZXlzKXt0aGlzLmxlZnRDaGVja2VkPXZhbDtpZihtb3ZlZEtleXM9PT11bmRlZmluZWQpcmV0dXJuO3RoaXMuJGVtaXQoJ2xlZnQtY2hlY2stY2hhbmdlJyx2YWwsbW92ZWRLZXlzKTt9LG9uVGFyZ2V0Q2hlY2tlZENoYW5nZTpmdW5jdGlvbiBvblRhcmdldENoZWNrZWRDaGFuZ2UodmFsLG1vdmVkS2V5cyl7dGhpcy5yaWdodENoZWNrZWQ9dmFsO2lmKG1vdmVkS2V5cz09PXVuZGVmaW5lZClyZXR1cm47dGhpcy4kZW1pdCgncmlnaHQtY2hlY2stY2hhbmdlJyx2YWwsbW92ZWRLZXlzKTt9LGFkZFRvTGVmdDpmdW5jdGlvbiBhZGRUb0xlZnQoKXt2YXIgY3VycmVudFZhbHVlPXRoaXMudmFsdWUuc2xpY2UoKTt0aGlzLnJpZ2h0Q2hlY2tlZC5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pe3ZhciBpbmRleD1jdXJyZW50VmFsdWUuaW5kZXhPZihpdGVtKTtpZihpbmRleD4tMSl7Y3VycmVudFZhbHVlLnNwbGljZShpbmRleCwxKTt9fSk7dGhpcy4kZW1pdCgnaW5wdXQnLGN1cnJlbnRWYWx1ZSk7dGhpcy4kZW1pdCgnY2hhbmdlJyxjdXJyZW50VmFsdWUsJ2xlZnQnLHRoaXMucmlnaHRDaGVja2VkKTt9LGFkZFRvUmlnaHQ6ZnVuY3Rpb24gYWRkVG9SaWdodCgpe3ZhciBfdGhpczM9dGhpczt2YXIgY3VycmVudFZhbHVlPXRoaXMudmFsdWUuc2xpY2UoKTt2YXIgaXRlbXNUb0JlTW92ZWQ9W107dmFyIGtleT10aGlzLnByb3BzLmtleTt0aGlzLmRhdGEuZm9yRWFjaChmdW5jdGlvbihpdGVtKXt2YXIgaXRlbUtleT1pdGVtW2tleV07aWYoX3RoaXMzLmxlZnRDaGVja2VkLmluZGV4T2YoaXRlbUtleSk+LTEmJl90aGlzMy52YWx1ZS5pbmRleE9mKGl0ZW1LZXkpPT09LTEpe2l0ZW1zVG9CZU1vdmVkLnB1c2goaXRlbUtleSk7fX0pO2N1cnJlbnRWYWx1ZT10aGlzLnRhcmdldE9yZGVyPT09J3Vuc2hpZnQnP2l0ZW1zVG9CZU1vdmVkLmNvbmNhdChjdXJyZW50VmFsdWUpOmN1cnJlbnRWYWx1ZS5jb25jYXQoaXRlbXNUb0JlTW92ZWQpO3RoaXMuJGVtaXQoJ2lucHV0JyxjdXJyZW50VmFsdWUpO3RoaXMuJGVtaXQoJ2NoYW5nZScsY3VycmVudFZhbHVlLCdyaWdodCcsdGhpcy5sZWZ0Q2hlY2tlZCk7fSxjbGVhclF1ZXJ5OmZ1bmN0aW9uIGNsZWFyUXVlcnkod2hpY2gpe2lmKHdoaWNoPT09J2xlZnQnKXt0aGlzLiRyZWZzLmxlZnRQYW5lbC5xdWVyeT0nJzt9ZWxzZSBpZih3aGljaD09PSdyaWdodCcpe3RoaXMuJHJlZnMucmlnaHRQYW5lbC5xdWVyeT0nJzt9fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdHJhbnNmZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX3RyYW5zZmVyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXRyYW5zZmVyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdHJhbnNmZXIvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgdHJhbnNmZXJfc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc190cmFuc2Zlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNWM2NTRkZDhfcmVuZGVyLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81YzY1NGRkOF9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHRyYW5zZmVyX3NyY19tYWluX2FwaTt9dHJhbnNmZXJfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy90cmFuc2Zlci9zcmMvbWFpbi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdHJhbnNmZXJfc3JjX21haW49dHJhbnNmZXJfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90cmFuc2Zlci9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3RyYW5zZmVyX3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHRyYW5zZmVyX3NyY19tYWluLm5hbWUsdHJhbnNmZXJfc3JjX21haW4pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0cmFuc2Zlcj10cmFuc2Zlcl9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbnRhaW5lci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWJmMTgxZDQmCnZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNWJmMTgxZDRfcmVuZGVyPWZ1bmN0aW9uIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81YmYxODFkNF9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInNlY3Rpb24iLHtzdGF0aWNDbGFzczoiZWwtY29udGFpbmVyIixjbGFzczp7ImlzLXZlcnRpY2FsIjpfdm0uaXNWZXJ0aWNhbH19LFtfdm0uX3QoImRlZmF1bHQiKV0sMik7fTt2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzViZjE4MWQ0X3N0YXRpY1JlbmRlckZucz1bXTttYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNWJmMTgxZDRfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbnRhaW5lci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWJmMTgxZDQmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbnRhaW5lci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY29udGFpbmVyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbENvbnRhaW5lcicsY29tcG9uZW50TmFtZTonRWxDb250YWluZXInLHByb3BzOntkaXJlY3Rpb246U3RyaW5nfSxjb21wdXRlZDp7aXNWZXJ0aWNhbDpmdW5jdGlvbiBpc1ZlcnRpY2FsKCl7aWYodGhpcy5kaXJlY3Rpb249PT0ndmVydGljYWwnKXtyZXR1cm4gdHJ1ZTt9ZWxzZSBpZih0aGlzLmRpcmVjdGlvbj09PSdob3Jpem9udGFsJyl7cmV0dXJuIGZhbHNlO31yZXR1cm4gdGhpcy4kc2xvdHMmJnRoaXMuJHNsb3RzLmRlZmF1bHQ/dGhpcy4kc2xvdHMuZGVmYXVsdC5zb21lKGZ1bmN0aW9uKHZub2RlKXt2YXIgdGFnPXZub2RlLmNvbXBvbmVudE9wdGlvbnMmJnZub2RlLmNvbXBvbmVudE9wdGlvbnMudGFnO3JldHVybiB0YWc9PT0nZWwtaGVhZGVyJ3x8dGFnPT09J2VsLWZvb3Rlcic7fSk6ZmFsc2U7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29udGFpbmVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19jb250YWluZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189Y29udGFpbmVyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29udGFpbmVyL3NyYy9tYWluLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGNvbnRhaW5lcl9zcmNfbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhY2thZ2VzX2NvbnRhaW5lcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNWJmMTgxZDRfcmVuZGVyLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81YmYxODFkNF9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGNvbnRhaW5lcl9zcmNfbWFpbl9hcGk7fWNvbnRhaW5lcl9zcmNfbWFpbl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2NvbnRhaW5lci9zcmMvbWFpbi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY29udGFpbmVyX3NyY19tYWluPWNvbnRhaW5lcl9zcmNfbWFpbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbnRhaW5lci9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2NvbnRhaW5lcl9zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChjb250YWluZXJfc3JjX21haW4ubmFtZSxjb250YWluZXJfc3JjX21haW4pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19jb250YWluZXI9Y29udGFpbmVyX3NyY19tYWluOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvaGVhZGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yYjI5NmFiMiYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8yYjI5NmFiMl9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzJiMjk2YWIyX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiaGVhZGVyIix7c3RhdGljQ2xhc3M6ImVsLWhlYWRlciIsc3R5bGU6e2hlaWdodDpfdm0uaGVpZ2h0fX0sW192bS5fdCgiZGVmYXVsdCIpXSwyKTt9O3ZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMmIyOTZhYjJfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8yYjI5NmFiMl9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvaGVhZGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yYjI5NmFiMiYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvaGVhZGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBoZWFkZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsSGVhZGVyJyxjb21wb25lbnROYW1lOidFbEhlYWRlcicscHJvcHM6e2hlaWdodDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonNjBweCd9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9oZWFkZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2hlYWRlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1oZWFkZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9oZWFkZXIvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgaGVhZGVyX3NyY19tYWluX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQocGFja2FnZXNfaGVhZGVyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8yYjI5NmFiMl9yZW5kZXIsbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzJiMjk2YWIyX3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgaGVhZGVyX3NyY19tYWluX2FwaTt9aGVhZGVyX3NyY19tYWluX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvaGVhZGVyL3NyYy9tYWluLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBoZWFkZXJfc3JjX21haW49aGVhZGVyX3NyY19tYWluX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvaGVhZGVyL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovaGVhZGVyX3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGhlYWRlcl9zcmNfbWFpbi5uYW1lLGhlYWRlcl9zcmNfbWFpbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGhlYWRlcj1oZWFkZXJfc3JjX21haW47Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9hc2lkZS9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MDM0MTFkYmYmCnZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMDM0MTFkYmZfcmVuZGVyPWZ1bmN0aW9uIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8wMzQxMWRiZl9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImFzaWRlIix7c3RhdGljQ2xhc3M6ImVsLWFzaWRlIixzdHlsZTp7d2lkdGg6X3ZtLndpZHRofX0sW192bS5fdCgiZGVmYXVsdCIpXSwyKTt9O3ZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMDM0MTFkYmZfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8wMzQxMWRiZl9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYXNpZGUvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTAzNDExZGJmJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9hc2lkZS9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYXNpZGVfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQXNpZGUnLGNvbXBvbmVudE5hbWU6J0VsQXNpZGUnLHByb3BzOnt3aWR0aDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonMzAwcHgnfX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYXNpZGUvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2FzaWRlX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWFzaWRlX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYXNpZGUvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgYXNpZGVfc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19hc2lkZV9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMDM0MTFkYmZfcmVuZGVyLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8wMzQxMWRiZl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIGFzaWRlX3NyY19tYWluX2FwaTt9YXNpZGVfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9hc2lkZS9zcmMvbWFpbi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYXNpZGVfc3JjX21haW49YXNpZGVfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9hc2lkZS9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2FzaWRlX3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGFzaWRlX3NyY19tYWluLm5hbWUsYXNpZGVfc3JjX21haW4pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBhc2lkZT1hc2lkZV9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL21haW4vc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJhM2E3NDA2Jgp2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzJhM2E3NDA2X3JlbmRlcj1mdW5jdGlvbiBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMmEzYTc0MDZfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJtYWluIix7c3RhdGljQ2xhc3M6ImVsLW1haW4ifSxbX3ZtLl90KCJkZWZhdWx0IildLDIpO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8yYTNhNzQwNl9zdGF0aWNSZW5kZXJGbnM9W107bWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzJhM2E3NDA2X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9tYWluL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yYTNhNzQwNiYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvbWFpbi9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgbWFpbl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxNYWluJyxjb21wb25lbnROYW1lOidFbE1haW4nfTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21haW4vc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX21haW5fc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189bWFpbl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21haW4vc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgbWFpbl9zcmNfbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhY2thZ2VzX21haW5fc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzJhM2E3NDA2X3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMmEzYTc0MDZfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBtYWluX3NyY19tYWluX2FwaTt9bWFpbl9zcmNfbWFpbl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL21haW4vc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIG1haW5fc3JjX21haW49bWFpbl9zcmNfbWFpbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL21haW4vaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9tYWluX3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KG1haW5fc3JjX21haW4ubmFtZSxtYWluX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfbWFpbj1tYWluX3NyY19tYWluOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZm9vdGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD04MDIxMDMzOCYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF84MDIxMDMzOF9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzgwMjEwMzM4X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZm9vdGVyIix7c3RhdGljQ2xhc3M6ImVsLWZvb3RlciIsc3R5bGU6e2hlaWdodDpfdm0uaGVpZ2h0fX0sW192bS5fdCgiZGVmYXVsdCIpXSwyKTt9O3ZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfODAyMTAzMzhfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF84MDIxMDMzOF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZm9vdGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD04MDIxMDMzOCYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZm9vdGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBmb290ZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsRm9vdGVyJyxjb21wb25lbnROYW1lOidFbEZvb3RlcicscHJvcHM6e2hlaWdodDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonNjBweCd9fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9mb290ZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2Zvb3Rlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1mb290ZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9mb290ZXIvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgZm9vdGVyX3NyY19tYWluX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQocGFja2FnZXNfZm9vdGVyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF84MDIxMDMzOF9yZW5kZXIsbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzgwMjEwMzM4X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgZm9vdGVyX3NyY19tYWluX2FwaTt9Zm9vdGVyX3NyY19tYWluX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvZm9vdGVyL3NyYy9tYWluLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBmb290ZXJfc3JjX21haW49Zm9vdGVyX3NyY19tYWluX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvZm9vdGVyL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovZm9vdGVyX3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGZvb3Rlcl9zcmNfbWFpbi5uYW1lLGZvb3Rlcl9zcmNfbWFpbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGZvb3Rlcj1mb290ZXJfc3JjX21haW47Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvdGltZWxpbmUvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRpbWVsaW5lX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbFRpbWVsaW5lJyxwcm9wczp7cmV2ZXJzZTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6ZmFsc2V9fSxwcm92aWRlOmZ1bmN0aW9uIHByb3ZpZGUoKXtyZXR1cm57dGltZWxpbmU6dGhpc307fSxyZW5kZXI6ZnVuY3Rpb24gcmVuZGVyKCl7dmFyIGg9YXJndW1lbnRzWzBdO3ZhciByZXZlcnNlPXRoaXMucmV2ZXJzZTt2YXIgY2xhc3Nlcz17J2VsLXRpbWVsaW5lJzp0cnVlLCdpcy1yZXZlcnNlJzpyZXZlcnNlfTt2YXIgc2xvdHM9dGhpcy4kc2xvdHMuZGVmYXVsdHx8W107aWYocmV2ZXJzZSl7c2xvdHM9c2xvdHMucmV2ZXJzZSgpO31yZXR1cm4gaCgndWwnLHsnY2xhc3MnOmNsYXNzZXN9LFtzbG90c10pO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGltZWxpbmUvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX3RpbWVsaW5lX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXRpbWVsaW5lX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGltZWxpbmUvc3JjL21haW4udnVlCnZhciBtYWluX3JlbmRlcixtYWluX3N0YXRpY1JlbmRlckZuczsvKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHRpbWVsaW5lX3NyY19tYWluX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQocGFja2FnZXNfdGltZWxpbmVfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbl9yZW5kZXIsbWFpbl9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHRpbWVsaW5lX3NyY19tYWluX2FwaTt9dGltZWxpbmVfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy90aW1lbGluZS9zcmMvbWFpbi52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGltZWxpbmVfc3JjX21haW49dGltZWxpbmVfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90aW1lbGluZS9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL3RpbWVsaW5lX3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHRpbWVsaW5lX3NyY19tYWluLm5hbWUsdGltZWxpbmVfc3JjX21haW4pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciB0aW1lbGluZT10aW1lbGluZV9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3RpbWVsaW5lL3NyYy9pdGVtLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02MWE2OWU1MCYKdmFyIGl0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF82MWE2OWU1MF9yZW5kZXI9ZnVuY3Rpb24gaXRlbXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzYxYTY5ZTUwX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygibGkiLHtzdGF0aWNDbGFzczoiZWwtdGltZWxpbmUtaXRlbSJ9LFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRpbWVsaW5lLWl0ZW1fX3RhaWwifSksIV92bS4kc2xvdHMuZG90P19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdGltZWxpbmUtaXRlbV9fbm9kZSIsY2xhc3M6WyJlbC10aW1lbGluZS1pdGVtX19ub2RlLS0iKyhfdm0uc2l6ZXx8IiIpLCJlbC10aW1lbGluZS1pdGVtX19ub2RlLS0iKyhfdm0udHlwZXx8IiIpXSxzdHlsZTp7YmFja2dyb3VuZENvbG9yOl92bS5jb2xvcn19LFtfdm0uaWNvbj9fYygiaSIse3N0YXRpY0NsYXNzOiJlbC10aW1lbGluZS1pdGVtX19pY29uIixjbGFzczpfdm0uaWNvbn0pOl92bS5fZSgpXSk6X3ZtLl9lKCksX3ZtLiRzbG90cy5kb3Q/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10aW1lbGluZS1pdGVtX19kb3QifSxbX3ZtLl90KCJkb3QiKV0sMik6X3ZtLl9lKCksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10aW1lbGluZS1pdGVtX193cmFwcGVyIn0sWyFfdm0uaGlkZVRpbWVzdGFtcCYmX3ZtLnBsYWNlbWVudD09PSJ0b3AiP19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtdGltZWxpbmUtaXRlbV9fdGltZXN0YW1wIGlzLXRvcCJ9LFtfdm0uX3YoIlxuICAgICAgIitfdm0uX3MoX3ZtLnRpbWVzdGFtcCkrIlxuICAgICIpXSk6X3ZtLl9lKCksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC10aW1lbGluZS1pdGVtX19jb250ZW50In0sW192bS5fdCgiZGVmYXVsdCIpXSwyKSwhX3ZtLmhpZGVUaW1lc3RhbXAmJl92bS5wbGFjZW1lbnQ9PT0iYm90dG9tIj9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXRpbWVsaW5lLWl0ZW1fX3RpbWVzdGFtcCBpcy1ib3R0b20ifSxbX3ZtLl92KCJcbiAgICAgICIrX3ZtLl9zKF92bS50aW1lc3RhbXApKyJcbiAgICAiKV0pOl92bS5fZSgpXSldKTt9O3ZhciBpdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfNjFhNjllNTBfc3RhdGljUmVuZGVyRm5zPVtdO2l0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF82MWE2OWU1MF9yZW5kZXIuX3dpdGhTdHJpcHBlZD10cnVlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGltZWxpbmUvc3JjL2l0ZW0udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTYxYTY5ZTUwJgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy90aW1lbGluZS9zcmMvaXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGltZWxpbmVfc3JjX2l0ZW12dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsVGltZWxpbmVJdGVtJyxpbmplY3Q6Wyd0aW1lbGluZSddLHByb3BzOnt0aW1lc3RhbXA6U3RyaW5nLGhpZGVUaW1lc3RhbXA6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfSxwbGFjZW1lbnQ6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2JvdHRvbSd9LHR5cGU6U3RyaW5nLGNvbG9yOlN0cmluZyxzaXplOnt0eXBlOlN0cmluZyxkZWZhdWx0Oidub3JtYWwnfSxpY29uOlN0cmluZ319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGltZWxpbmUvc3JjL2l0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX3RpbWVsaW5lX3NyY19pdGVtdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXRpbWVsaW5lX3NyY19pdGVtdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvdGltZWxpbmUvc3JjL2l0ZW0udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgc3JjX2l0ZW1fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc190aW1lbGluZV9zcmNfaXRlbXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxpdGVtdnVlX3R5cGVfdGVtcGxhdGVfaWRfNjFhNjllNTBfcmVuZGVyLGl0ZW12dWVfdHlwZV90ZW1wbGF0ZV9pZF82MWE2OWU1MF9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHNyY19pdGVtX2FwaTt9c3JjX2l0ZW1fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy90aW1lbGluZS9zcmMvaXRlbS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgdGltZWxpbmVfc3JjX2l0ZW09c3JjX2l0ZW1fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy90aW1lbGluZS1pdGVtL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovdGltZWxpbmVfc3JjX2l0ZW0uaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQodGltZWxpbmVfc3JjX2l0ZW0ubmFtZSx0aW1lbGluZV9zcmNfaXRlbSk7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHRpbWVsaW5lX2l0ZW09dGltZWxpbmVfc3JjX2l0ZW07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9saW5rL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wMWNmM2I2NSYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8wMWNmM2I2NV9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzAxY2YzYjY1X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiYSIsX3ZtLl9iKHtjbGFzczpbImVsLWxpbmsiLF92bS50eXBlPyJlbC1saW5rLS0iK192bS50eXBlOiIiLF92bS5kaXNhYmxlZCYmImlzLWRpc2FibGVkIixfdm0udW5kZXJsaW5lJiYhX3ZtLmRpc2FibGVkJiYiaXMtdW5kZXJsaW5lIl0sYXR0cnM6e2hyZWY6X3ZtLmRpc2FibGVkP251bGw6X3ZtLmhyZWZ9LG9uOntjbGljazpfdm0uaGFuZGxlQ2xpY2t9fSwiYSIsX3ZtLiRhdHRycyxmYWxzZSksW192bS5pY29uP19jKCJpIix7Y2xhc3M6X3ZtLmljb259KTpfdm0uX2UoKSxfdm0uJHNsb3RzLmRlZmF1bHQ/X2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtbGluay0taW5uZXIifSxbX3ZtLl90KCJkZWZhdWx0IildLDIpOl92bS5fZSgpLF92bS4kc2xvdHMuaWNvbj9bX3ZtLiRzbG90cy5pY29uP192bS5fdCgiaWNvbiIpOl92bS5fZSgpXTpfdm0uX2UoKV0sMik7fTt2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzAxY2YzYjY1X3N0YXRpY1JlbmRlckZucz1bXTttYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMDFjZjNiNjVfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2xpbmsvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTAxY2YzYjY1JgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9saW5rL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBsaW5rX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtuYW1lOidFbExpbmsnLHByb3BzOnt0eXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0OidkZWZhdWx0J30sdW5kZXJsaW5lOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxkaXNhYmxlZDpCb29sZWFuLGhyZWY6U3RyaW5nLGljb246U3RyaW5nfSxtZXRob2RzOntoYW5kbGVDbGljazpmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCl7aWYoIXRoaXMuZGlzYWJsZWQpe2lmKCF0aGlzLmhyZWYpe3RoaXMuJGVtaXQoJ2NsaWNrJyxldmVudCk7fX19fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9saW5rL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19saW5rX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWxpbmtfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9saW5rL3NyYy9tYWluLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGxpbmtfc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19saW5rX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8wMWNmM2I2NV9yZW5kZXIsbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzAxY2YzYjY1X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgbGlua19zcmNfbWFpbl9hcGk7fWxpbmtfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9saW5rL3NyYy9tYWluLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBsaW5rX3NyY19tYWluPWxpbmtfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9saW5rL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovbGlua19zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChsaW5rX3NyY19tYWluLm5hbWUsbGlua19zcmNfbWFpbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2xpbms9bGlua19zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RpdmlkZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdmYTAyYTdlJmZ1bmN0aW9uYWw9dHJ1ZSYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF83ZmEwMmE3ZV9mdW5jdGlvbmFsX3RydWVfcmVuZGVyPWZ1bmN0aW9uIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF83ZmEwMmE3ZV9mdW5jdGlvbmFsX3RydWVfcmVuZGVyKF9oLF92bSl7dmFyIF9jPV92bS5fYztyZXR1cm4gX2MoImRpdiIsX3ZtLl9nKF92bS5fYih7Y2xhc3M6W192bS5kYXRhLnN0YXRpY0NsYXNzLCJlbC1kaXZpZGVyIiwiZWwtZGl2aWRlci0tIitfdm0ucHJvcHMuZGlyZWN0aW9uXX0sImRpdiIsX3ZtLmRhdGEuYXR0cnMsZmFsc2UpLF92bS5saXN0ZW5lcnMpLFtfdm0uc2xvdHMoKS5kZWZhdWx0JiZfdm0ucHJvcHMuZGlyZWN0aW9uIT09InZlcnRpY2FsIj9fYygiZGl2Iix7Y2xhc3M6WyJlbC1kaXZpZGVyX190ZXh0IiwiaXMtIitfdm0ucHJvcHMuY29udGVudFBvc2l0aW9uXX0sW192bS5fdCgiZGVmYXVsdCIpXSwyKTpfdm0uX2UoKV0pO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF83ZmEwMmE3ZV9mdW5jdGlvbmFsX3RydWVfc3RhdGljUmVuZGVyRm5zPVtdO21haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF83ZmEwMmE3ZV9mdW5jdGlvbmFsX3RydWVfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RpdmlkZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTdmYTAyYTdlJmZ1bmN0aW9uYWw9dHJ1ZSYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvZGl2aWRlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZGl2aWRlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxEaXZpZGVyJyxwcm9wczp7ZGlyZWN0aW9uOnt0eXBlOlN0cmluZyxkZWZhdWx0Oidob3Jpem9udGFsJyx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7cmV0dXJuWydob3Jpem9udGFsJywndmVydGljYWwnXS5pbmRleE9mKHZhbCkhPT0tMTt9fSxjb250ZW50UG9zaXRpb246e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J2NlbnRlcicsdmFsaWRhdG9yOmZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpe3JldHVyblsnbGVmdCcsJ2NlbnRlcicsJ3JpZ2h0J10uaW5kZXhPZih2YWwpIT09LTE7fX19fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RpdmlkZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX2RpdmlkZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189ZGl2aWRlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RpdmlkZXIvc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgZGl2aWRlcl9zcmNfbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhY2thZ2VzX2RpdmlkZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdmYTAyYTdlX2Z1bmN0aW9uYWxfdHJ1ZV9yZW5kZXIsbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzdmYTAyYTdlX2Z1bmN0aW9uYWxfdHJ1ZV9zdGF0aWNSZW5kZXJGbnMsdHJ1ZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgZGl2aWRlcl9zcmNfbWFpbl9hcGk7fWRpdmlkZXJfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9kaXZpZGVyL3NyYy9tYWluLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBkaXZpZGVyX3NyY19tYWluPWRpdmlkZXJfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kaXZpZGVyL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovZGl2aWRlcl9zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChkaXZpZGVyX3NyY19tYWluLm5hbWUsZGl2aWRlcl9zcmNfbWFpbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGRpdmlkZXI9ZGl2aWRlcl9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2ltYWdlL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00NGQ4NGE3YyYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF80NGQ4NGE3Y19yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ0ZDg0YTdjX3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWltYWdlIn0sW192bS5sb2FkaW5nP192bS5fdCgicGxhY2Vob2xkZXIiLFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWltYWdlX19wbGFjZWhvbGRlciJ9KV0pOl92bS5lcnJvcj9fdm0uX3QoImVycm9yIixbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1pbWFnZV9fZXJyb3IifSxbX3ZtLl92KF92bS5fcyhfdm0udCgiZWwuaW1hZ2UuZXJyb3IiKSkpXSldKTpfYygiaW1nIixfdm0uX2coX3ZtLl9iKHtzdGF0aWNDbGFzczoiZWwtaW1hZ2VfX2lubmVyIixjbGFzczp7ImVsLWltYWdlX19pbm5lci0tY2VudGVyIjpfdm0uYWxpZ25DZW50ZXIsImVsLWltYWdlX19wcmV2aWV3Ijpfdm0ucHJldmlld30sc3R5bGU6X3ZtLmltYWdlU3R5bGUsYXR0cnM6e3NyYzpfdm0uc3JjfSxvbjp7Y2xpY2s6X3ZtLmNsaWNrSGFuZGxlcn19LCJpbWciLF92bS4kYXR0cnMsZmFsc2UpLF92bS4kbGlzdGVuZXJzKSksX3ZtLnByZXZpZXc/W192bS5zaG93Vmlld2VyP19jKCJpbWFnZS12aWV3ZXIiLHthdHRyczp7InotaW5kZXgiOl92bS56SW5kZXgsImluaXRpYWwtaW5kZXgiOl92bS5pbWFnZUluZGV4LCJvbi1jbG9zZSI6X3ZtLmNsb3NlVmlld2VyLCJ1cmwtbGlzdCI6X3ZtLnByZXZpZXdTcmNMaXN0fX0pOl92bS5fZSgpXTpfdm0uX2UoKV0sMik7fTt2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ0ZDg0YTdjX3N0YXRpY1JlbmRlckZucz1bXTttYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNDRkODRhN2NfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2ltYWdlL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00NGQ4NGE3YyYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9pbWFnZS9zcmMvaW1hZ2Utdmlld2VyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01ZTczYjMwNyYKdmFyIGltYWdlX3ZpZXdlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVlNzNiMzA3X3JlbmRlcj1mdW5jdGlvbiBpbWFnZV92aWV3ZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF81ZTczYjMwN19yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInRyYW5zaXRpb24iLHthdHRyczp7bmFtZToidmlld2VyLWZhZGUifX0sW19jKCJkaXYiLHtyZWY6ImVsLWltYWdlLXZpZXdlcl9fd3JhcHBlciIsc3RhdGljQ2xhc3M6ImVsLWltYWdlLXZpZXdlcl9fd3JhcHBlciIsc3R5bGU6eyJ6LWluZGV4Ijpfdm0udmlld2VyWkluZGV4fSxhdHRyczp7dGFiaW5kZXg6Ii0xIn19LFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWltYWdlLXZpZXdlcl9fbWFzayIsb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7aWYoJGV2ZW50LnRhcmdldCE9PSRldmVudC5jdXJyZW50VGFyZ2V0KXtyZXR1cm4gbnVsbDt9cmV0dXJuIF92bS5oYW5kbGVNYXNrQ2xpY2soJGV2ZW50KTt9fX0pLF9jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWltYWdlLXZpZXdlcl9fYnRuIGVsLWltYWdlLXZpZXdlcl9fY2xvc2UiLG9uOntjbGljazpfdm0uaGlkZX19LFtfYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pY29uLWNsb3NlIn0pXSksIV92bS5pc1NpbmdsZT9bX2MoInNwYW4iLHtzdGF0aWNDbGFzczoiZWwtaW1hZ2Utdmlld2VyX19idG4gZWwtaW1hZ2Utdmlld2VyX19wcmV2IixjbGFzczp7ImlzLWRpc2FibGVkIjohX3ZtLmluZmluaXRlJiZfdm0uaXNGaXJzdH0sb246e2NsaWNrOl92bS5wcmV2fX0sW19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWljb24tYXJyb3ctbGVmdCJ9KV0pLF9jKCJzcGFuIix7c3RhdGljQ2xhc3M6ImVsLWltYWdlLXZpZXdlcl9fYnRuIGVsLWltYWdlLXZpZXdlcl9fbmV4dCIsY2xhc3M6eyJpcy1kaXNhYmxlZCI6IV92bS5pbmZpbml0ZSYmX3ZtLmlzTGFzdH0sb246e2NsaWNrOl92bS5uZXh0fX0sW19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWljb24tYXJyb3ctcmlnaHQifSldKV06X3ZtLl9lKCksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1pbWFnZS12aWV3ZXJfX2J0biBlbC1pbWFnZS12aWV3ZXJfX2FjdGlvbnMifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1pbWFnZS12aWV3ZXJfX2FjdGlvbnNfX2lubmVyIn0sW19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWljb24tem9vbS1vdXQiLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVBY3Rpb25zKCJ6b29tT3V0Iik7fX19KSxfYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pY29uLXpvb20taW4iLG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe192bS5oYW5kbGVBY3Rpb25zKCJ6b29tSW4iKTt9fX0pLF9jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWltYWdlLXZpZXdlcl9fYWN0aW9uc19fZGl2aWRlciJ9KSxfYygiaSIse2NsYXNzOl92bS5tb2RlLmljb24sb246e2NsaWNrOl92bS50b2dnbGVNb2RlfX0pLF9jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWltYWdlLXZpZXdlcl9fYWN0aW9uc19fZGl2aWRlciJ9KSxfYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pY29uLXJlZnJlc2gtbGVmdCIsb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLmhhbmRsZUFjdGlvbnMoImFudGljbG9jZWxpc2UiKTt9fX0pLF9jKCJpIix7c3RhdGljQ2xhc3M6ImVsLWljb24tcmVmcmVzaC1yaWdodCIsb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLmhhbmRsZUFjdGlvbnMoImNsb2NlbGlzZSIpO319fSldKV0pLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtaW1hZ2Utdmlld2VyX19jYW52YXMifSxfdm0uX2woX3ZtLnVybExpc3QsZnVuY3Rpb24odXJsLGkpe3JldHVybiBpPT09X3ZtLmluZGV4P19jKCJpbWciLHtrZXk6dXJsLHJlZjoiaW1nIixyZWZJbkZvcjp0cnVlLHN0YXRpY0NsYXNzOiJlbC1pbWFnZS12aWV3ZXJfX2ltZyIsc3R5bGU6X3ZtLmltZ1N0eWxlLGF0dHJzOntzcmM6X3ZtLmN1cnJlbnRJbWd9LG9uOntsb2FkOl92bS5oYW5kbGVJbWdMb2FkLGVycm9yOl92bS5oYW5kbGVJbWdFcnJvcixtb3VzZWRvd246X3ZtLmhhbmRsZU1vdXNlRG93bn19KTpfdm0uX2UoKTt9KSwwKV0sMildKTt9O3ZhciBpbWFnZV92aWV3ZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF81ZTczYjMwN19zdGF0aWNSZW5kZXJGbnM9W107aW1hZ2Vfdmlld2VydnVlX3R5cGVfdGVtcGxhdGVfaWRfNWU3M2IzMDdfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2ltYWdlL3NyYy9pbWFnZS12aWV3ZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTVlNzNiMzA3JgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9pbWFnZS9zcmMvaW1hZ2Utdmlld2VyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKdmFyIGltYWdlX3ZpZXdlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2V4dGVuZHM9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odGFyZ2V0KXtmb3IodmFyIGk9MTtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXt2YXIgc291cmNlPWFyZ3VtZW50c1tpXTtmb3IodmFyIGtleSBpbiBzb3VyY2Upe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2Usa2V5KSl7dGFyZ2V0W2tleV09c291cmNlW2tleV07fX19cmV0dXJuIHRhcmdldDt9Oy8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBNb2RlPXtDT05UQUlOOntuYW1lOidjb250YWluJyxpY29uOidlbC1pY29uLWZ1bGwtc2NyZWVuJ30sT1JJR0lOQUw6e25hbWU6J29yaWdpbmFsJyxpY29uOidlbC1pY29uLWMtc2NhbGUtdG8tb3JpZ2luYWwnfX07dmFyIG1vdXNld2hlZWxFdmVudE5hbWU9T2JqZWN0KHV0aWxfWyJpc0ZpcmVmb3giXSkoKT8nRE9NTW91c2VTY3JvbGwnOidtb3VzZXdoZWVsJzsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGltYWdlX3ZpZXdlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonZWxJbWFnZVZpZXdlcicscHJvcHM6e3VybExpc3Q6e3R5cGU6QXJyYXksZGVmYXVsdDpmdW5jdGlvbiBfZGVmYXVsdCgpe3JldHVybltdO319LHpJbmRleDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoyMDAwfSxvblN3aXRjaDp7dHlwZTpGdW5jdGlvbixkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7fX0sb25DbG9zZTp7dHlwZTpGdW5jdGlvbixkZWZhdWx0OmZ1bmN0aW9uIF9kZWZhdWx0KCl7fX0saW5pdGlhbEluZGV4Ont0eXBlOk51bWJlcixkZWZhdWx0OjB9LGFwcGVuZFRvQm9keTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sbWFza0Nsb3NhYmxlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2luZGV4OnRoaXMuaW5pdGlhbEluZGV4LGlzU2hvdzpmYWxzZSxpbmZpbml0ZTp0cnVlLGxvYWRpbmc6ZmFsc2UsbW9kZTpNb2RlLkNPTlRBSU4sdHJhbnNmb3JtOntzY2FsZToxLGRlZzowLG9mZnNldFg6MCxvZmZzZXRZOjAsZW5hYmxlVHJhbnNpdGlvbjpmYWxzZX19O30sY29tcHV0ZWQ6e2lzU2luZ2xlOmZ1bmN0aW9uIGlzU2luZ2xlKCl7cmV0dXJuIHRoaXMudXJsTGlzdC5sZW5ndGg8PTE7fSxpc0ZpcnN0OmZ1bmN0aW9uIGlzRmlyc3QoKXtyZXR1cm4gdGhpcy5pbmRleD09PTA7fSxpc0xhc3Q6ZnVuY3Rpb24gaXNMYXN0KCl7cmV0dXJuIHRoaXMuaW5kZXg9PT10aGlzLnVybExpc3QubGVuZ3RoLTE7fSxjdXJyZW50SW1nOmZ1bmN0aW9uIGN1cnJlbnRJbWcoKXtyZXR1cm4gdGhpcy51cmxMaXN0W3RoaXMuaW5kZXhdO30saW1nU3R5bGU6ZnVuY3Rpb24gaW1nU3R5bGUoKXt2YXIgX3RyYW5zZm9ybT10aGlzLnRyYW5zZm9ybSxzY2FsZT1fdHJhbnNmb3JtLnNjYWxlLGRlZz1fdHJhbnNmb3JtLmRlZyxvZmZzZXRYPV90cmFuc2Zvcm0ub2Zmc2V0WCxvZmZzZXRZPV90cmFuc2Zvcm0ub2Zmc2V0WSxlbmFibGVUcmFuc2l0aW9uPV90cmFuc2Zvcm0uZW5hYmxlVHJhbnNpdGlvbjt2YXIgc3R5bGU9e3RyYW5zZm9ybTonc2NhbGUoJytzY2FsZSsnKSByb3RhdGUoJytkZWcrJ2RlZyknLHRyYW5zaXRpb246ZW5hYmxlVHJhbnNpdGlvbj8ndHJhbnNmb3JtIC4zcyc6JycsJ21hcmdpbi1sZWZ0JzpvZmZzZXRYKydweCcsJ21hcmdpbi10b3AnOm9mZnNldFkrJ3B4J307aWYodGhpcy5tb2RlPT09TW9kZS5DT05UQUlOKXtzdHlsZS5tYXhXaWR0aD1zdHlsZS5tYXhIZWlnaHQ9JzEwMCUnO31yZXR1cm4gc3R5bGU7fSx2aWV3ZXJaSW5kZXg6ZnVuY3Rpb24gdmlld2VyWkluZGV4KCl7dmFyIG5leHRaSW5kZXg9cG9wdXBfWyJQb3B1cE1hbmFnZXIiXS5uZXh0WkluZGV4KCk7cmV0dXJuIHRoaXMuekluZGV4Pm5leHRaSW5kZXg/dGhpcy56SW5kZXg6bmV4dFpJbmRleDt9fSx3YXRjaDp7aW5kZXg6e2hhbmRsZXI6ZnVuY3Rpb24gaGFuZGxlcih2YWwpe3RoaXMucmVzZXQoKTt0aGlzLm9uU3dpdGNoKHZhbCk7fX0sY3VycmVudEltZzpmdW5jdGlvbiBjdXJyZW50SW1nKHZhbCl7dmFyIF90aGlzPXRoaXM7dGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oXyl7dmFyICRpbWc9X3RoaXMuJHJlZnMuaW1nWzBdO2lmKCEkaW1nLmNvbXBsZXRlKXtfdGhpcy5sb2FkaW5nPXRydWU7fX0pO319LG1ldGhvZHM6e2hpZGU6ZnVuY3Rpb24gaGlkZSgpe3RoaXMuZGV2aWNlU3VwcG9ydFVuaW5zdGFsbCgpO3RoaXMub25DbG9zZSgpO30sZGV2aWNlU3VwcG9ydEluc3RhbGw6ZnVuY3Rpb24gZGV2aWNlU3VwcG9ydEluc3RhbGwoKXt2YXIgX3RoaXMyPXRoaXM7dGhpcy5fa2V5RG93bkhhbmRsZXI9ZnVuY3Rpb24oZSl7ZS5zdG9wUHJvcGFnYXRpb24oKTt2YXIga2V5Q29kZT1lLmtleUNvZGU7c3dpdGNoKGtleUNvZGUpey8vIEVTQwpjYXNlIDI3Ol90aGlzMi5oaWRlKCk7YnJlYWs7Ly8gU1BBQ0UKY2FzZSAzMjpfdGhpczIudG9nZ2xlTW9kZSgpO2JyZWFrOy8vIExFRlRfQVJST1cKY2FzZSAzNzpfdGhpczIucHJldigpO2JyZWFrOy8vIFVQX0FSUk9XCmNhc2UgMzg6X3RoaXMyLmhhbmRsZUFjdGlvbnMoJ3pvb21JbicpO2JyZWFrOy8vIFJJR0hUX0FSUk9XCmNhc2UgMzk6X3RoaXMyLm5leHQoKTticmVhazsvLyBET1dOX0FSUk9XCmNhc2UgNDA6X3RoaXMyLmhhbmRsZUFjdGlvbnMoJ3pvb21PdXQnKTticmVhazt9fTt0aGlzLl9tb3VzZVdoZWVsSGFuZGxlcj1PYmplY3QodXRpbF9bInJhZlRocm90dGxlIl0pKGZ1bmN0aW9uKGUpe3ZhciBkZWx0YT1lLndoZWVsRGVsdGE/ZS53aGVlbERlbHRhOi1lLmRldGFpbDtpZihkZWx0YT4wKXtfdGhpczIuaGFuZGxlQWN0aW9ucygnem9vbUluJyx7em9vbVJhdGU6MC4wMTUsZW5hYmxlVHJhbnNpdGlvbjpmYWxzZX0pO31lbHNle190aGlzMi5oYW5kbGVBY3Rpb25zKCd6b29tT3V0Jyx7em9vbVJhdGU6MC4wMTUsZW5hYmxlVHJhbnNpdGlvbjpmYWxzZX0pO319KTtPYmplY3QoZG9tX1sib24iXSkoZG9jdW1lbnQsJ2tleWRvd24nLHRoaXMuX2tleURvd25IYW5kbGVyKTtPYmplY3QoZG9tX1sib24iXSkoZG9jdW1lbnQsbW91c2V3aGVlbEV2ZW50TmFtZSx0aGlzLl9tb3VzZVdoZWVsSGFuZGxlcik7fSxkZXZpY2VTdXBwb3J0VW5pbnN0YWxsOmZ1bmN0aW9uIGRldmljZVN1cHBvcnRVbmluc3RhbGwoKXtPYmplY3QoZG9tX1sib2ZmIl0pKGRvY3VtZW50LCdrZXlkb3duJyx0aGlzLl9rZXlEb3duSGFuZGxlcik7T2JqZWN0KGRvbV9bIm9mZiJdKShkb2N1bWVudCxtb3VzZXdoZWVsRXZlbnROYW1lLHRoaXMuX21vdXNlV2hlZWxIYW5kbGVyKTt0aGlzLl9rZXlEb3duSGFuZGxlcj1udWxsO3RoaXMuX21vdXNlV2hlZWxIYW5kbGVyPW51bGw7fSxoYW5kbGVJbWdMb2FkOmZ1bmN0aW9uIGhhbmRsZUltZ0xvYWQoZSl7dGhpcy5sb2FkaW5nPWZhbHNlO30saGFuZGxlSW1nRXJyb3I6ZnVuY3Rpb24gaGFuZGxlSW1nRXJyb3IoZSl7dGhpcy5sb2FkaW5nPWZhbHNlO2UudGFyZ2V0LmFsdD0n5Yqg6L295aSx6LSlJzt9LGhhbmRsZU1vdXNlRG93bjpmdW5jdGlvbiBoYW5kbGVNb3VzZURvd24oZSl7dmFyIF90aGlzMz10aGlzO2lmKHRoaXMubG9hZGluZ3x8ZS5idXR0b24hPT0wKXJldHVybjt2YXIgX3RyYW5zZm9ybTI9dGhpcy50cmFuc2Zvcm0sb2Zmc2V0WD1fdHJhbnNmb3JtMi5vZmZzZXRYLG9mZnNldFk9X3RyYW5zZm9ybTIub2Zmc2V0WTt2YXIgc3RhcnRYPWUucGFnZVg7dmFyIHN0YXJ0WT1lLnBhZ2VZO3RoaXMuX2RyYWdIYW5kbGVyPU9iamVjdCh1dGlsX1sicmFmVGhyb3R0bGUiXSkoZnVuY3Rpb24oZXYpe190aGlzMy50cmFuc2Zvcm0ub2Zmc2V0WD1vZmZzZXRYK2V2LnBhZ2VYLXN0YXJ0WDtfdGhpczMudHJhbnNmb3JtLm9mZnNldFk9b2Zmc2V0WStldi5wYWdlWS1zdGFydFk7fSk7T2JqZWN0KGRvbV9bIm9uIl0pKGRvY3VtZW50LCdtb3VzZW1vdmUnLHRoaXMuX2RyYWdIYW5kbGVyKTtPYmplY3QoZG9tX1sib24iXSkoZG9jdW1lbnQsJ21vdXNldXAnLGZ1bmN0aW9uKGV2KXtPYmplY3QoZG9tX1sib2ZmIl0pKGRvY3VtZW50LCdtb3VzZW1vdmUnLF90aGlzMy5fZHJhZ0hhbmRsZXIpO30pO2UucHJldmVudERlZmF1bHQoKTt9LGhhbmRsZU1hc2tDbGljazpmdW5jdGlvbiBoYW5kbGVNYXNrQ2xpY2soKXtpZih0aGlzLm1hc2tDbG9zYWJsZSl7dGhpcy5oaWRlKCk7fX0scmVzZXQ6ZnVuY3Rpb24gcmVzZXQoKXt0aGlzLnRyYW5zZm9ybT17c2NhbGU6MSxkZWc6MCxvZmZzZXRYOjAsb2Zmc2V0WTowLGVuYWJsZVRyYW5zaXRpb246ZmFsc2V9O30sdG9nZ2xlTW9kZTpmdW5jdGlvbiB0b2dnbGVNb2RlKCl7aWYodGhpcy5sb2FkaW5nKXJldHVybjt2YXIgbW9kZU5hbWVzPU9iamVjdC5rZXlzKE1vZGUpO3ZhciBtb2RlVmFsdWVzPU9iamVjdC52YWx1ZXMoTW9kZSk7dmFyIGluZGV4PW1vZGVWYWx1ZXMuaW5kZXhPZih0aGlzLm1vZGUpO3ZhciBuZXh0SW5kZXg9KGluZGV4KzEpJW1vZGVOYW1lcy5sZW5ndGg7dGhpcy5tb2RlPU1vZGVbbW9kZU5hbWVzW25leHRJbmRleF1dO3RoaXMucmVzZXQoKTt9LHByZXY6ZnVuY3Rpb24gcHJldigpe2lmKHRoaXMuaXNGaXJzdCYmIXRoaXMuaW5maW5pdGUpcmV0dXJuO3ZhciBsZW49dGhpcy51cmxMaXN0Lmxlbmd0aDt0aGlzLmluZGV4PSh0aGlzLmluZGV4LTErbGVuKSVsZW47fSxuZXh0OmZ1bmN0aW9uIG5leHQoKXtpZih0aGlzLmlzTGFzdCYmIXRoaXMuaW5maW5pdGUpcmV0dXJuO3ZhciBsZW49dGhpcy51cmxMaXN0Lmxlbmd0aDt0aGlzLmluZGV4PSh0aGlzLmluZGV4KzEpJWxlbjt9LGhhbmRsZUFjdGlvbnM6ZnVuY3Rpb24gaGFuZGxlQWN0aW9ucyhhY3Rpb24pe3ZhciBvcHRpb25zPWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1sxXTp7fTtpZih0aGlzLmxvYWRpbmcpcmV0dXJuO3ZhciBfem9vbVJhdGUkcm90YXRlRGVnJGU9aW1hZ2Vfdmlld2VydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfZXh0ZW5kcyh7em9vbVJhdGU6MC4yLHJvdGF0ZURlZzo5MCxlbmFibGVUcmFuc2l0aW9uOnRydWV9LG9wdGlvbnMpLHpvb21SYXRlPV96b29tUmF0ZSRyb3RhdGVEZWckZS56b29tUmF0ZSxyb3RhdGVEZWc9X3pvb21SYXRlJHJvdGF0ZURlZyRlLnJvdGF0ZURlZyxlbmFibGVUcmFuc2l0aW9uPV96b29tUmF0ZSRyb3RhdGVEZWckZS5lbmFibGVUcmFuc2l0aW9uO3ZhciB0cmFuc2Zvcm09dGhpcy50cmFuc2Zvcm07c3dpdGNoKGFjdGlvbil7Y2FzZSd6b29tT3V0JzppZih0cmFuc2Zvcm0uc2NhbGU+MC4yKXt0cmFuc2Zvcm0uc2NhbGU9cGFyc2VGbG9hdCgodHJhbnNmb3JtLnNjYWxlLXpvb21SYXRlKS50b0ZpeGVkKDMpKTt9YnJlYWs7Y2FzZSd6b29tSW4nOnRyYW5zZm9ybS5zY2FsZT1wYXJzZUZsb2F0KCh0cmFuc2Zvcm0uc2NhbGUrem9vbVJhdGUpLnRvRml4ZWQoMykpO2JyZWFrO2Nhc2UnY2xvY2VsaXNlJzp0cmFuc2Zvcm0uZGVnKz1yb3RhdGVEZWc7YnJlYWs7Y2FzZSdhbnRpY2xvY2VsaXNlJzp0cmFuc2Zvcm0uZGVnLT1yb3RhdGVEZWc7YnJlYWs7fXRyYW5zZm9ybS5lbmFibGVUcmFuc2l0aW9uPWVuYWJsZVRyYW5zaXRpb247fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy5kZXZpY2VTdXBwb3J0SW5zdGFsbCgpO2lmKHRoaXMuYXBwZW5kVG9Cb2R5KXtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuJGVsKTt9Ly8gYWRkIHRhYmluZGV4IHRoZW4gd3JhcHBlciBjYW4gYmUgZm9jdXNhYmxlIHZpYSBKYXZhc2NyaXB0Ci8vIGZvY3VzIHdyYXBwZXIgc28gYXJyb3cga2V5IGNhbid0IGNhdXNlIGlubmVyIHNjcm9sbCBiZWhhdmlvciB1bmRlcm5lYXRoCnRoaXMuJHJlZnNbJ2VsLWltYWdlLXZpZXdlcl9fd3JhcHBlciddLmZvY3VzKCk7fSxkZXN0cm95ZWQ6ZnVuY3Rpb24gZGVzdHJveWVkKCl7Ly8gaWYgYXBwZW5kVG9Cb2R5IGlzIHRydWUsIHJlbW92ZSBET00gbm9kZSBhZnRlciBkZXN0cm95CmlmKHRoaXMuYXBwZW5kVG9Cb2R5JiZ0aGlzLiRlbCYmdGhpcy4kZWwucGFyZW50Tm9kZSl7dGhpcy4kZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLiRlbCk7fX19Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvaW1hZ2Uvc3JjL2ltYWdlLXZpZXdlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2ltYWdlX3ZpZXdlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1pbWFnZV92aWV3ZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9pbWFnZS9zcmMvaW1hZ2Utdmlld2VyLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGltYWdlX3ZpZXdlcl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19pbWFnZV92aWV3ZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18saW1hZ2Vfdmlld2VydnVlX3R5cGVfdGVtcGxhdGVfaWRfNWU3M2IzMDdfcmVuZGVyLGltYWdlX3ZpZXdlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVlNzNiMzA3X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgaW1hZ2Vfdmlld2VyX2FwaTt9aW1hZ2Vfdmlld2VyX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvaW1hZ2Uvc3JjL2ltYWdlLXZpZXdlci52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgaW1hZ2Vfdmlld2VyPWltYWdlX3ZpZXdlcl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9pbWFnZS9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBpc1N1cHBvcnRPYmplY3RGaXQ9ZnVuY3Rpb24gaXNTdXBwb3J0T2JqZWN0Rml0KCl7cmV0dXJuIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5vYmplY3RGaXQhPT11bmRlZmluZWQ7fTt2YXIgT2JqZWN0Rml0PXtOT05FOidub25lJyxDT05UQUlOOidjb250YWluJyxDT1ZFUjonY292ZXInLEZJTEw6J2ZpbGwnLFNDQUxFX0RPV046J3NjYWxlLWRvd24nfTt2YXIgcHJldk92ZXJmbG93PScnOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgaW1hZ2Vfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsSW1hZ2UnLG1peGluczpbbG9jYWxlX2RlZmF1bHQuYV0saW5oZXJpdEF0dHJzOmZhbHNlLGNvbXBvbmVudHM6e0ltYWdlVmlld2VyOmltYWdlX3ZpZXdlcn0scHJvcHM6e3NyYzpTdHJpbmcsZml0OlN0cmluZyxsYXp5OkJvb2xlYW4sc2Nyb2xsQ29udGFpbmVyOnt9LHByZXZpZXdTcmNMaXN0Ont0eXBlOkFycmF5LGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm5bXTt9fSx6SW5kZXg6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MjAwMH19LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntsb2FkaW5nOnRydWUsZXJyb3I6ZmFsc2Usc2hvdzohdGhpcy5sYXp5LGltYWdlV2lkdGg6MCxpbWFnZUhlaWdodDowLHNob3dWaWV3ZXI6ZmFsc2V9O30sY29tcHV0ZWQ6e2ltYWdlU3R5bGU6ZnVuY3Rpb24gaW1hZ2VTdHlsZSgpe3ZhciBmaXQ9dGhpcy5maXQ7aWYoIXRoaXMuJGlzU2VydmVyJiZmaXQpe3JldHVybiBpc1N1cHBvcnRPYmplY3RGaXQoKT97J29iamVjdC1maXQnOmZpdH06dGhpcy5nZXRJbWFnZVN0eWxlKGZpdCk7fXJldHVybnt9O30sYWxpZ25DZW50ZXI6ZnVuY3Rpb24gYWxpZ25DZW50ZXIoKXtyZXR1cm4hdGhpcy4kaXNTZXJ2ZXImJiFpc1N1cHBvcnRPYmplY3RGaXQoKSYmdGhpcy5maXQhPT1PYmplY3RGaXQuRklMTDt9LHByZXZpZXc6ZnVuY3Rpb24gcHJldmlldygpe3ZhciBwcmV2aWV3U3JjTGlzdD10aGlzLnByZXZpZXdTcmNMaXN0O3JldHVybiBBcnJheS5pc0FycmF5KHByZXZpZXdTcmNMaXN0KSYmcHJldmlld1NyY0xpc3QubGVuZ3RoPjA7fSxpbWFnZUluZGV4OmZ1bmN0aW9uIGltYWdlSW5kZXgoKXt2YXIgcHJldmlld0luZGV4PTA7dmFyIHNyY0luZGV4PXRoaXMucHJldmlld1NyY0xpc3QuaW5kZXhPZih0aGlzLnNyYyk7aWYoc3JjSW5kZXg+PTApe3ByZXZpZXdJbmRleD1zcmNJbmRleDt9cmV0dXJuIHByZXZpZXdJbmRleDt9fSx3YXRjaDp7c3JjOmZ1bmN0aW9uIHNyYyh2YWwpe3RoaXMuc2hvdyYmdGhpcy5sb2FkSW1hZ2UoKTt9LHNob3c6ZnVuY3Rpb24gc2hvdyh2YWwpe3ZhbCYmdGhpcy5sb2FkSW1hZ2UoKTt9fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXtpZih0aGlzLmxhenkpe3RoaXMuYWRkTGF6eUxvYWRMaXN0ZW5lcigpO31lbHNle3RoaXMubG9hZEltYWdlKCk7fX0sYmVmb3JlRGVzdHJveTpmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCl7dGhpcy5sYXp5JiZ0aGlzLnJlbW92ZUxhenlMb2FkTGlzdGVuZXIoKTt9LG1ldGhvZHM6e2xvYWRJbWFnZTpmdW5jdGlvbiBsb2FkSW1hZ2UoKXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLiRpc1NlcnZlcilyZXR1cm47Ly8gcmVzZXQgc3RhdHVzCnRoaXMubG9hZGluZz10cnVlO3RoaXMuZXJyb3I9ZmFsc2U7dmFyIGltZz1uZXcgSW1hZ2UoKTtpbWcub25sb2FkPWZ1bmN0aW9uKGUpe3JldHVybiBfdGhpcy5oYW5kbGVMb2FkKGUsaW1nKTt9O2ltZy5vbmVycm9yPXRoaXMuaGFuZGxlRXJyb3IuYmluZCh0aGlzKTsvLyBiaW5kIGh0bWwgYXR0cnMKLy8gc28gaXQgY2FuIGJlaGF2ZSBjb25zaXN0ZW50bHkKT2JqZWN0LmtleXModGhpcy4kYXR0cnMpLmZvckVhY2goZnVuY3Rpb24oa2V5KXt2YXIgdmFsdWU9X3RoaXMuJGF0dHJzW2tleV07aW1nLnNldEF0dHJpYnV0ZShrZXksdmFsdWUpO30pO2ltZy5zcmM9dGhpcy5zcmM7fSxoYW5kbGVMb2FkOmZ1bmN0aW9uIGhhbmRsZUxvYWQoZSxpbWcpe3RoaXMuaW1hZ2VXaWR0aD1pbWcud2lkdGg7dGhpcy5pbWFnZUhlaWdodD1pbWcuaGVpZ2h0O3RoaXMubG9hZGluZz1mYWxzZTt0aGlzLmVycm9yPWZhbHNlO30saGFuZGxlRXJyb3I6ZnVuY3Rpb24gaGFuZGxlRXJyb3IoZSl7dGhpcy5sb2FkaW5nPWZhbHNlO3RoaXMuZXJyb3I9dHJ1ZTt0aGlzLiRlbWl0KCdlcnJvcicsZSk7fSxoYW5kbGVMYXp5TG9hZDpmdW5jdGlvbiBoYW5kbGVMYXp5TG9hZCgpe2lmKE9iamVjdChkb21fWyJpc0luQ29udGFpbmVyIl0pKHRoaXMuJGVsLHRoaXMuX3Njcm9sbENvbnRhaW5lcikpe3RoaXMuc2hvdz10cnVlO3RoaXMucmVtb3ZlTGF6eUxvYWRMaXN0ZW5lcigpO319LGFkZExhenlMb2FkTGlzdGVuZXI6ZnVuY3Rpb24gYWRkTGF6eUxvYWRMaXN0ZW5lcigpe2lmKHRoaXMuJGlzU2VydmVyKXJldHVybjt2YXIgc2Nyb2xsQ29udGFpbmVyPXRoaXMuc2Nyb2xsQ29udGFpbmVyO3ZhciBfc2Nyb2xsQ29udGFpbmVyPW51bGw7aWYoT2JqZWN0KHR5cGVzX1siaXNIdG1sRWxlbWVudCJdKShzY3JvbGxDb250YWluZXIpKXtfc2Nyb2xsQ29udGFpbmVyPXNjcm9sbENvbnRhaW5lcjt9ZWxzZSBpZihPYmplY3QodHlwZXNfWyJpc1N0cmluZyJdKShzY3JvbGxDb250YWluZXIpKXtfc2Nyb2xsQ29udGFpbmVyPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2Nyb2xsQ29udGFpbmVyKTt9ZWxzZXtfc2Nyb2xsQ29udGFpbmVyPU9iamVjdChkb21fWyJnZXRTY3JvbGxDb250YWluZXIiXSkodGhpcy4kZWwpO31pZihfc2Nyb2xsQ29udGFpbmVyKXt0aGlzLl9zY3JvbGxDb250YWluZXI9X3Njcm9sbENvbnRhaW5lcjt0aGlzLl9sYXp5TG9hZEhhbmRsZXI9dGhyb3R0bGVfZGVmYXVsdCgpKDIwMCx0aGlzLmhhbmRsZUxhenlMb2FkKTtPYmplY3QoZG9tX1sib24iXSkoX3Njcm9sbENvbnRhaW5lciwnc2Nyb2xsJyx0aGlzLl9sYXp5TG9hZEhhbmRsZXIpO3RoaXMuaGFuZGxlTGF6eUxvYWQoKTt9fSxyZW1vdmVMYXp5TG9hZExpc3RlbmVyOmZ1bmN0aW9uIHJlbW92ZUxhenlMb2FkTGlzdGVuZXIoKXt2YXIgX3Njcm9sbENvbnRhaW5lcj10aGlzLl9zY3JvbGxDb250YWluZXIsX2xhenlMb2FkSGFuZGxlcj10aGlzLl9sYXp5TG9hZEhhbmRsZXI7aWYodGhpcy4kaXNTZXJ2ZXJ8fCFfc2Nyb2xsQ29udGFpbmVyfHwhX2xhenlMb2FkSGFuZGxlcilyZXR1cm47T2JqZWN0KGRvbV9bIm9mZiJdKShfc2Nyb2xsQ29udGFpbmVyLCdzY3JvbGwnLF9sYXp5TG9hZEhhbmRsZXIpO3RoaXMuX3Njcm9sbENvbnRhaW5lcj1udWxsO3RoaXMuX2xhenlMb2FkSGFuZGxlcj1udWxsO30sLyoqCiAgICAgKiBzaW11bGF0ZSBvYmplY3QtZml0IGJlaGF2aW9yIHRvIGNvbXBhdGlibGUgd2l0aCBJRTExIGFuZCBvdGhlciBicm93c2VycyB3aGljaCBub3Qgc3VwcG9ydCBvYmplY3QtZml0CiAgICAgKi9nZXRJbWFnZVN0eWxlOmZ1bmN0aW9uIGdldEltYWdlU3R5bGUoZml0KXt2YXIgaW1hZ2VXaWR0aD10aGlzLmltYWdlV2lkdGgsaW1hZ2VIZWlnaHQ9dGhpcy5pbWFnZUhlaWdodDt2YXIgXyRlbD10aGlzLiRlbCxjb250YWluZXJXaWR0aD1fJGVsLmNsaWVudFdpZHRoLGNvbnRhaW5lckhlaWdodD1fJGVsLmNsaWVudEhlaWdodDtpZighaW1hZ2VXaWR0aHx8IWltYWdlSGVpZ2h0fHwhY29udGFpbmVyV2lkdGh8fCFjb250YWluZXJIZWlnaHQpcmV0dXJue307dmFyIGltYWdlQXNwZWN0UmF0aW89aW1hZ2VXaWR0aC9pbWFnZUhlaWdodDt2YXIgY29udGFpbmVyQXNwZWN0UmF0aW89Y29udGFpbmVyV2lkdGgvY29udGFpbmVySGVpZ2h0O2lmKGZpdD09PU9iamVjdEZpdC5TQ0FMRV9ET1dOKXt2YXIgaXNTbWFsbGVyPWltYWdlV2lkdGg8Y29udGFpbmVyV2lkdGgmJmltYWdlSGVpZ2h0PGNvbnRhaW5lckhlaWdodDtmaXQ9aXNTbWFsbGVyP09iamVjdEZpdC5OT05FOk9iamVjdEZpdC5DT05UQUlOO31zd2l0Y2goZml0KXtjYXNlIE9iamVjdEZpdC5OT05FOnJldHVybnt3aWR0aDonYXV0bycsaGVpZ2h0OidhdXRvJ307Y2FzZSBPYmplY3RGaXQuQ09OVEFJTjpyZXR1cm4gaW1hZ2VBc3BlY3RSYXRpbzxjb250YWluZXJBc3BlY3RSYXRpbz97d2lkdGg6J2F1dG8nfTp7aGVpZ2h0OidhdXRvJ307Y2FzZSBPYmplY3RGaXQuQ09WRVI6cmV0dXJuIGltYWdlQXNwZWN0UmF0aW88Y29udGFpbmVyQXNwZWN0UmF0aW8/e2hlaWdodDonYXV0byd9Ont3aWR0aDonYXV0byd9O2RlZmF1bHQ6cmV0dXJue307fX0sY2xpY2tIYW5kbGVyOmZ1bmN0aW9uIGNsaWNrSGFuZGxlcigpey8vIGRvbid0IHNob3cgdmlld2VyIHdoZW4gcHJldmlldyBpcyBmYWxzZQppZighdGhpcy5wcmV2aWV3KXtyZXR1cm47fS8vIHByZXZlbnQgYm9keSBzY3JvbGwKcHJldk92ZXJmbG93PWRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c7ZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz0naGlkZGVuJzt0aGlzLnNob3dWaWV3ZXI9dHJ1ZTt9LGNsb3NlVmlld2VyOmZ1bmN0aW9uIGNsb3NlVmlld2VyKCl7ZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdz1wcmV2T3ZlcmZsb3c7dGhpcy5zaG93Vmlld2VyPWZhbHNlO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2ltYWdlL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19pbWFnZV9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1pbWFnZV9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2ltYWdlL3NyYy9tYWluLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGltYWdlX3NyY19tYWluX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQocGFja2FnZXNfaW1hZ2Vfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzQ0ZDg0YTdjX3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNDRkODRhN2Nfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBpbWFnZV9zcmNfbWFpbl9hcGk7fWltYWdlX3NyY19tYWluX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvaW1hZ2Uvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGltYWdlX3NyY19tYWluPWltYWdlX3NyY19tYWluX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvaW1hZ2UvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9pbWFnZV9zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChpbWFnZV9zcmNfbWFpbi5uYW1lLGltYWdlX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfaW1hZ2U9aW1hZ2Vfc3JjX21haW47Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jYWxlbmRhci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NmQ5NzU2YmUmCnZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNmQ5NzU2YmVfcmVuZGVyPWZ1bmN0aW9uIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF82ZDk3NTZiZV9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jYWxlbmRhciJ9LFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWNhbGVuZGFyX19oZWFkZXIifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jYWxlbmRhcl9fdGl0bGUifSxbX3ZtLl92KCJcbiAgICAgICIrX3ZtLl9zKF92bS5pMThuRGF0ZSkrIlxuICAgICIpXSksX3ZtLnZhbGlkYXRlZFJhbmdlLmxlbmd0aD09PTA/X2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1jYWxlbmRhcl9fYnV0dG9uLWdyb3VwIn0sW19jKCJlbC1idXR0b24tZ3JvdXAiLFtfYygiZWwtYnV0dG9uIix7YXR0cnM6e3R5cGU6InBsYWluIixzaXplOiJtaW5pIn0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLnNlbGVjdERhdGUoInByZXYtbW9udGgiKTt9fX0sW192bS5fdigiXG4gICAgICAgICAgIitfdm0uX3MoX3ZtLnQoImVsLmRhdGVwaWNrZXIucHJldk1vbnRoIikpKyJcbiAgICAgICAgIildKSxfYygiZWwtYnV0dG9uIix7YXR0cnM6e3R5cGU6InBsYWluIixzaXplOiJtaW5pIn0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLnNlbGVjdERhdGUoInRvZGF5Iik7fX19LFtfdm0uX3YoIlxuICAgICAgICAgICIrX3ZtLl9zKF92bS50KCJlbC5kYXRlcGlja2VyLnRvZGF5IikpKyJcbiAgICAgICAgIildKSxfYygiZWwtYnV0dG9uIix7YXR0cnM6e3R5cGU6InBsYWluIixzaXplOiJtaW5pIn0sb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLnNlbGVjdERhdGUoIm5leHQtbW9udGgiKTt9fX0sW192bS5fdigiXG4gICAgICAgICAgIitfdm0uX3MoX3ZtLnQoImVsLmRhdGVwaWNrZXIubmV4dE1vbnRoIikpKyJcbiAgICAgICAgIildKV0sMSldLDEpOl92bS5fZSgpXSksX3ZtLnZhbGlkYXRlZFJhbmdlLmxlbmd0aD09PTA/X2MoImRpdiIse2tleToibm8tcmFuZ2UiLHN0YXRpY0NsYXNzOiJlbC1jYWxlbmRhcl9fYm9keSJ9LFtfYygiZGF0ZS10YWJsZSIse2F0dHJzOntkYXRlOl92bS5kYXRlLCJzZWxlY3RlZC1kYXkiOl92bS5yZWFsU2VsZWN0ZWREYXksImZpcnN0LWRheS1vZi13ZWVrIjpfdm0ucmVhbEZpcnN0RGF5T2ZXZWVrfSxvbjp7cGljazpfdm0ucGlja0RheX19KV0sMSk6X2MoImRpdiIse2tleToiaGFzLXJhbmdlIixzdGF0aWNDbGFzczoiZWwtY2FsZW5kYXJfX2JvZHkifSxfdm0uX2woX3ZtLnZhbGlkYXRlZFJhbmdlLGZ1bmN0aW9uKHJhbmdlLGluZGV4KXtyZXR1cm4gX2MoImRhdGUtdGFibGUiLHtrZXk6aW5kZXgsYXR0cnM6e2RhdGU6cmFuZ2VbMF0sInNlbGVjdGVkLWRheSI6X3ZtLnJlYWxTZWxlY3RlZERheSxyYW5nZTpyYW5nZSwiaGlkZS1oZWFkZXIiOmluZGV4IT09MCwiZmlyc3QtZGF5LW9mLXdlZWsiOl92bS5yZWFsRmlyc3REYXlPZldlZWt9LG9uOntwaWNrOl92bS5waWNrRGF5fX0pO30pLDEpXSk7fTt2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzZkOTc1NmJlX3N0YXRpY1JlbmRlckZucz1bXTttYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNmQ5NzU2YmVfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NhbGVuZGFyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02ZDk3NTZiZSYKLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvdXRpbHMvZGF0ZSIKdmFyIGRhdGVfPV9fd2VicGFja19yZXF1aXJlX18oMjApO3ZhciBkYXRlX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihkYXRlXyk7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY2FsZW5kYXIvc3JjL2RhdGUtdGFibGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19kYXRlX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtwcm9wczp7c2VsZWN0ZWREYXk6U3RyaW5nLC8vIGZvcm1hdGVkIGRhdGUgeXl5eS1NTS1kZApyYW5nZTp7dHlwZTpBcnJheSx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7aWYoISh2YWwmJnZhbC5sZW5ndGgpKXJldHVybiB0cnVlO3ZhciBzdGFydD12YWxbMF0sZW5kPXZhbFsxXTtyZXR1cm4gT2JqZWN0KGRhdGVfdXRpbF9bInZhbGlkYXRlUmFuZ2VJbk9uZU1vbnRoIl0pKHN0YXJ0LGVuZCk7fX0sZGF0ZTpEYXRlLGhpZGVIZWFkZXI6Qm9vbGVhbixmaXJzdERheU9mV2VlazpOdW1iZXJ9LGluamVjdDpbJ2VsQ2FsZW5kYXInXSxtZXRob2RzOnt0b05lc3RlZEFycjpmdW5jdGlvbiB0b05lc3RlZEFycihkYXlzKXtyZXR1cm4gT2JqZWN0KGRhdGVfdXRpbF9bInJhbmdlIl0pKGRheXMubGVuZ3RoLzcpLm1hcChmdW5jdGlvbihfLGluZGV4KXt2YXIgc3RhcnQ9aW5kZXgqNztyZXR1cm4gZGF5cy5zbGljZShzdGFydCxzdGFydCs3KTt9KTt9LGdldEZvcm1hdGVEYXRlOmZ1bmN0aW9uIGdldEZvcm1hdGVEYXRlKGRheSx0eXBlKXtpZighZGF5fHxbJ3ByZXYnLCdjdXJyZW50JywnbmV4dCddLmluZGV4T2YodHlwZSk9PT0tMSl7dGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGRheSBvciB0eXBlJyk7fXZhciBwcmVmaXg9dGhpcy5jdXJNb250aERhdGVQcmVmaXg7aWYodHlwZT09PSdwcmV2Jyl7cHJlZml4PXRoaXMucHJldk1vbnRoRGF0ZVByZWZpeDt9ZWxzZSBpZih0eXBlPT09J25leHQnKXtwcmVmaXg9dGhpcy5uZXh0TW9udGhEYXRlUHJlZml4O31kYXk9KCcwMCcrZGF5KS5zbGljZSgtMik7cmV0dXJuIHByZWZpeCsnLScrZGF5O30sZ2V0Q2VsbENsYXNzOmZ1bmN0aW9uIGdldENlbGxDbGFzcyhfcmVmKXt2YXIgdGV4dD1fcmVmLnRleHQsdHlwZT1fcmVmLnR5cGU7dmFyIGNsYXNzZXM9W3R5cGVdO2lmKHR5cGU9PT0nY3VycmVudCcpe3ZhciBkYXRlPXRoaXMuZ2V0Rm9ybWF0ZURhdGUodGV4dCx0eXBlKTtpZihkYXRlPT09dGhpcy5zZWxlY3RlZERheSl7Y2xhc3Nlcy5wdXNoKCdpcy1zZWxlY3RlZCcpO31pZihkYXRlPT09dGhpcy5mb3JtYXRlZFRvZGF5KXtjbGFzc2VzLnB1c2goJ2lzLXRvZGF5Jyk7fX1yZXR1cm4gY2xhc3Nlczt9LHBpY2tEYXk6ZnVuY3Rpb24gcGlja0RheShfcmVmMil7dmFyIHRleHQ9X3JlZjIudGV4dCx0eXBlPV9yZWYyLnR5cGU7dmFyIGRhdGU9dGhpcy5nZXRGb3JtYXRlRGF0ZSh0ZXh0LHR5cGUpO3RoaXMuJGVtaXQoJ3BpY2snLGRhdGUpO30sY2VsbFJlbmRlclByb3h5OmZ1bmN0aW9uIGNlbGxSZW5kZXJQcm94eShfcmVmMyl7dmFyIHRleHQ9X3JlZjMudGV4dCx0eXBlPV9yZWYzLnR5cGU7dmFyIGg9dGhpcy4kY3JlYXRlRWxlbWVudDt2YXIgcmVuZGVyPXRoaXMuZWxDYWxlbmRhci4kc2NvcGVkU2xvdHMuZGF0ZUNlbGw7aWYoIXJlbmRlcilyZXR1cm4gaCgnc3BhbicsW3RleHRdKTt2YXIgZGF5PXRoaXMuZ2V0Rm9ybWF0ZURhdGUodGV4dCx0eXBlKTt2YXIgZGF0ZT1uZXcgRGF0ZShkYXkpO3ZhciBkYXRhPXtpc1NlbGVjdGVkOnRoaXMuc2VsZWN0ZWREYXk9PT1kYXksdHlwZTp0eXBlKyctbW9udGgnLGRheTpkYXl9O3JldHVybiByZW5kZXIoe2RhdGU6ZGF0ZSxkYXRhOmRhdGF9KTt9fSxjb21wdXRlZDp7V0VFS19EQVlTOmZ1bmN0aW9uIFdFRUtfREFZUygpe3JldHVybiBPYmplY3QoZGF0ZV91dGlsX1siZ2V0STE4blNldHRpbmdzIl0pKCkuZGF5TmFtZXM7fSxwcmV2TW9udGhEYXRlUHJlZml4OmZ1bmN0aW9uIHByZXZNb250aERhdGVQcmVmaXgoKXt2YXIgdGVtcD1uZXcgRGF0ZSh0aGlzLmRhdGUuZ2V0VGltZSgpKTt0ZW1wLnNldERhdGUoMCk7cmV0dXJuIGRhdGVfZGVmYXVsdC5hLmZvcm1hdCh0ZW1wLCd5eXl5LU1NJyk7fSxjdXJNb250aERhdGVQcmVmaXg6ZnVuY3Rpb24gY3VyTW9udGhEYXRlUHJlZml4KCl7cmV0dXJuIGRhdGVfZGVmYXVsdC5hLmZvcm1hdCh0aGlzLmRhdGUsJ3l5eXktTU0nKTt9LG5leHRNb250aERhdGVQcmVmaXg6ZnVuY3Rpb24gbmV4dE1vbnRoRGF0ZVByZWZpeCgpe3ZhciB0ZW1wPW5ldyBEYXRlKHRoaXMuZGF0ZS5nZXRGdWxsWWVhcigpLHRoaXMuZGF0ZS5nZXRNb250aCgpKzEsMSk7cmV0dXJuIGRhdGVfZGVmYXVsdC5hLmZvcm1hdCh0ZW1wLCd5eXl5LU1NJyk7fSxmb3JtYXRlZFRvZGF5OmZ1bmN0aW9uIGZvcm1hdGVkVG9kYXkoKXtyZXR1cm4gdGhpcy5lbENhbGVuZGFyLmZvcm1hdGVkVG9kYXk7fSxpc0luUmFuZ2U6ZnVuY3Rpb24gaXNJblJhbmdlKCl7cmV0dXJuIHRoaXMucmFuZ2UmJnRoaXMucmFuZ2UubGVuZ3RoO30scm93czpmdW5jdGlvbiByb3dzKCl7dmFyIGRheXM9W107Ly8gaWYgcmFuZ2UgZXhpc3RzLCBzaG91bGQgcmVuZGVyIGRheXMgaW4gcmFuZ2UuCmlmKHRoaXMuaXNJblJhbmdlKXt2YXIgX3JhbmdlPXRoaXMucmFuZ2Usc3RhcnQ9X3JhbmdlWzBdLGVuZD1fcmFuZ2VbMV07dmFyIGN1cnJlbnRNb250aFJhbmdlPU9iamVjdChkYXRlX3V0aWxfWyJyYW5nZSJdKShlbmQuZ2V0RGF0ZSgpLXN0YXJ0LmdldERhdGUoKSsxKS5tYXAoZnVuY3Rpb24oXyxpbmRleCl7cmV0dXJue3RleHQ6c3RhcnQuZ2V0RGF0ZSgpK2luZGV4LHR5cGU6J2N1cnJlbnQnfTt9KTt2YXIgcmVtYWluaW5nPWN1cnJlbnRNb250aFJhbmdlLmxlbmd0aCU3O3JlbWFpbmluZz1yZW1haW5pbmc9PT0wPzA6Ny1yZW1haW5pbmc7dmFyIG5leHRNb250aFJhbmdlPU9iamVjdChkYXRlX3V0aWxfWyJyYW5nZSJdKShyZW1haW5pbmcpLm1hcChmdW5jdGlvbihfLGluZGV4KXtyZXR1cm57dGV4dDppbmRleCsxLHR5cGU6J25leHQnfTt9KTtkYXlzPWN1cnJlbnRNb250aFJhbmdlLmNvbmNhdChuZXh0TW9udGhSYW5nZSk7fWVsc2V7dmFyIGRhdGU9dGhpcy5kYXRlO3ZhciBmaXJzdERheT1PYmplY3QoZGF0ZV91dGlsX1siZ2V0Rmlyc3REYXlPZk1vbnRoIl0pKGRhdGUpO2ZpcnN0RGF5PWZpcnN0RGF5PT09MD83OmZpcnN0RGF5O3ZhciBmaXJzdERheU9mV2Vlaz10eXBlb2YgdGhpcy5maXJzdERheU9mV2Vlaz09PSdudW1iZXInP3RoaXMuZmlyc3REYXlPZldlZWs6MTt2YXIgcHJldk1vbnRoRGF5cz1PYmplY3QoZGF0ZV91dGlsX1siZ2V0UHJldk1vbnRoTGFzdERheXMiXSkoZGF0ZSxmaXJzdERheS1maXJzdERheU9mV2VlaykubWFwKGZ1bmN0aW9uKGRheSl7cmV0dXJue3RleHQ6ZGF5LHR5cGU6J3ByZXYnfTt9KTt2YXIgY3VycmVudE1vbnRoRGF5cz1PYmplY3QoZGF0ZV91dGlsX1siZ2V0TW9udGhEYXlzIl0pKGRhdGUpLm1hcChmdW5jdGlvbihkYXkpe3JldHVybnt0ZXh0OmRheSx0eXBlOidjdXJyZW50J307fSk7ZGF5cz1bXS5jb25jYXQocHJldk1vbnRoRGF5cyxjdXJyZW50TW9udGhEYXlzKTt2YXIgbmV4dE1vbnRoRGF5cz1PYmplY3QoZGF0ZV91dGlsX1sicmFuZ2UiXSkoNDItZGF5cy5sZW5ndGgpLm1hcChmdW5jdGlvbihfLGluZGV4KXtyZXR1cm57dGV4dDppbmRleCsxLHR5cGU6J25leHQnfTt9KTtkYXlzPWRheXMuY29uY2F0KG5leHRNb250aERheXMpO31yZXR1cm4gdGhpcy50b05lc3RlZEFycihkYXlzKTt9LHdlZWtEYXlzOmZ1bmN0aW9uIHdlZWtEYXlzKCl7dmFyIHN0YXJ0PXRoaXMuZmlyc3REYXlPZldlZWs7dmFyIFdFRUtfREFZUz10aGlzLldFRUtfREFZUztpZih0eXBlb2Ygc3RhcnQhPT0nbnVtYmVyJ3x8c3RhcnQ9PT0wKXtyZXR1cm4gV0VFS19EQVlTLnNsaWNlKCk7fWVsc2V7cmV0dXJuIFdFRUtfREFZUy5zbGljZShzdGFydCkuY29uY2F0KFdFRUtfREFZUy5zbGljZSgwLHN0YXJ0KSk7fX19LHJlbmRlcjpmdW5jdGlvbiByZW5kZXIoKXt2YXIgX3RoaXM9dGhpczt2YXIgaD1hcmd1bWVudHNbMF07dmFyIHRoZWFkPXRoaXMuaGlkZUhlYWRlcj9udWxsOmgoJ3RoZWFkJyxbdGhpcy53ZWVrRGF5cy5tYXAoZnVuY3Rpb24oZGF5KXtyZXR1cm4gaCgndGgnLHtrZXk6ZGF5fSxbZGF5XSk7fSldKTtyZXR1cm4gaCgndGFibGUnLHsnY2xhc3MnOnsnZWwtY2FsZW5kYXItdGFibGUnOnRydWUsJ2lzLXJhbmdlJzp0aGlzLmlzSW5SYW5nZX0sYXR0cnM6e2NlbGxzcGFjaW5nOicwJyxjZWxscGFkZGluZzonMCd9fSxbdGhlYWQsaCgndGJvZHknLFt0aGlzLnJvd3MubWFwKGZ1bmN0aW9uKHJvdyxpbmRleCl7cmV0dXJuIGgoJ3RyJyx7J2NsYXNzJzp7J2VsLWNhbGVuZGFyLXRhYmxlX19yb3cnOnRydWUsJ2VsLWNhbGVuZGFyLXRhYmxlX19yb3ctLWhpZGUtYm9yZGVyJzppbmRleD09PTAmJl90aGlzLmhpZGVIZWFkZXJ9LGtleTppbmRleH0sW3Jvdy5tYXAoZnVuY3Rpb24oY2VsbCxrZXkpe3JldHVybiBoKCd0ZCcse2tleTprZXksJ2NsYXNzJzpfdGhpcy5nZXRDZWxsQ2xhc3MoY2VsbCksb246eydjbGljayc6X3RoaXMucGlja0RheS5iaW5kKF90aGlzLGNlbGwpfX0sW2goJ2RpdicseydjbGFzcyc6J2VsLWNhbGVuZGFyLWRheSd9LFtfdGhpcy5jZWxsUmVuZGVyUHJveHkoY2VsbCldKV0pO30pXSk7fSldKV0pO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FsZW5kYXIvc3JjL2RhdGUtdGFibGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNhbGVuZGFyX3NyY19kYXRlX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXNyY19kYXRlX3RhYmxldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FsZW5kYXIvc3JjL2RhdGUtdGFibGUudnVlCnZhciBkYXRlX3RhYmxlX3JlbmRlcixkYXRlX3RhYmxlX3N0YXRpY1JlbmRlckZuczsvKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHNyY19kYXRlX3RhYmxlX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQoY2FsZW5kYXJfc3JjX2RhdGVfdGFibGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sZGF0ZV90YWJsZV9yZW5kZXIsZGF0ZV90YWJsZV9zdGF0aWNSZW5kZXJGbnMsZmFsc2UsbnVsbCxudWxsLG51bGwpOy8qIGhvdCByZWxvYWQgKi9pZihmYWxzZSl7dmFyIHNyY19kYXRlX3RhYmxlX2FwaTt9c3JjX2RhdGVfdGFibGVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9jYWxlbmRhci9zcmMvZGF0ZS10YWJsZS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjX2RhdGVfdGFibGU9c3JjX2RhdGVfdGFibGVfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY2FsZW5kYXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgdmFsaWRUeXBlcz1bJ3ByZXYtbW9udGgnLCd0b2RheScsJ25leHQtbW9udGgnXTt2YXIgd2Vla0RheXM9WydTdW5kYXknLCdNb25kYXknLCdUdWVzZGF5JywnV2VkbmVzZGF5JywnVGh1cnNkYXknLCdGcmlkYXknLCdTYXR1cmRheSddO3ZhciBvbmVEYXk9ODY0MDAwMDA7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjYWxlbmRhcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxDYWxlbmRhcicsbWl4aW5zOltsb2NhbGVfZGVmYXVsdC5hXSxjb21wb25lbnRzOntEYXRlVGFibGU6c3JjX2RhdGVfdGFibGUsRWxCdXR0b246YnV0dG9uX2RlZmF1bHQuYSxFbEJ1dHRvbkdyb3VwOmJ1dHRvbl9ncm91cF9kZWZhdWx0LmF9LHByb3BzOnt2YWx1ZTpbRGF0ZSxTdHJpbmcsTnVtYmVyXSxyYW5nZTp7dHlwZTpBcnJheSx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHJhbmdlKXtpZihBcnJheS5pc0FycmF5KHJhbmdlKSl7cmV0dXJuIHJhbmdlLmxlbmd0aD09PTImJnJhbmdlLmV2ZXJ5KGZ1bmN0aW9uKGl0ZW0pe3JldHVybiB0eXBlb2YgaXRlbT09PSdzdHJpbmcnfHx0eXBlb2YgaXRlbT09PSdudW1iZXInfHxpdGVtIGluc3RhbmNlb2YgRGF0ZTt9KTt9ZWxzZXtyZXR1cm4gdHJ1ZTt9fX0sZmlyc3REYXlPZldlZWs6e3R5cGU6TnVtYmVyLGRlZmF1bHQ6MX19LHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybntlbENhbGVuZGFyOnRoaXN9O30sbWV0aG9kczp7cGlja0RheTpmdW5jdGlvbiBwaWNrRGF5KGRheSl7dGhpcy5yZWFsU2VsZWN0ZWREYXk9ZGF5O30sc2VsZWN0RGF0ZTpmdW5jdGlvbiBzZWxlY3REYXRlKHR5cGUpe2lmKHZhbGlkVHlwZXMuaW5kZXhPZih0eXBlKT09PS0xKXt0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgdHlwZSAnK3R5cGUpO312YXIgZGF5PScnO2lmKHR5cGU9PT0ncHJldi1tb250aCcpe2RheT10aGlzLnByZXZNb250aERhdGVQcmVmaXgrJy0wMSc7fWVsc2UgaWYodHlwZT09PSduZXh0LW1vbnRoJyl7ZGF5PXRoaXMubmV4dE1vbnRoRGF0ZVByZWZpeCsnLTAxJzt9ZWxzZXtkYXk9dGhpcy5mb3JtYXRlZFRvZGF5O31pZihkYXk9PT10aGlzLmZvcm1hdGVkRGF0ZSlyZXR1cm47dGhpcy5waWNrRGF5KGRheSk7fSx0b0RhdGU6ZnVuY3Rpb24gdG9EYXRlKHZhbCl7aWYoIXZhbCl7dGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHZhbCcpO31yZXR1cm4gdmFsIGluc3RhbmNlb2YgRGF0ZT92YWw6bmV3IERhdGUodmFsKTt9LHJhbmdlVmFsaWRhdG9yOmZ1bmN0aW9uIHJhbmdlVmFsaWRhdG9yKGRhdGUsaXNTdGFydCl7dmFyIGZpcnN0RGF5T2ZXZWVrPXRoaXMucmVhbEZpcnN0RGF5T2ZXZWVrO3ZhciBleHBlY3RlZD1pc1N0YXJ0P2ZpcnN0RGF5T2ZXZWVrOmZpcnN0RGF5T2ZXZWVrPT09MD82OmZpcnN0RGF5T2ZXZWVrLTE7dmFyIG1lc3NhZ2U9KGlzU3RhcnQ/J3N0YXJ0JzonZW5kJykrJyBvZiByYW5nZSBzaG91bGQgYmUgJyt3ZWVrRGF5c1tleHBlY3RlZF0rJy4nO2lmKGRhdGUuZ2V0RGF5KCkhPT1leHBlY3RlZCl7Y29uc29sZS53YXJuKCdbRWxlbWVudENhbGVuZGFyXScsbWVzc2FnZSwnSW52YWxpZCByYW5nZSB3aWxsIGJlIGlnbm9yZWQuJyk7cmV0dXJuIGZhbHNlO31yZXR1cm4gdHJ1ZTt9fSxjb21wdXRlZDp7cHJldk1vbnRoRGF0ZVByZWZpeDpmdW5jdGlvbiBwcmV2TW9udGhEYXRlUHJlZml4KCl7dmFyIHRlbXA9bmV3IERhdGUodGhpcy5kYXRlLmdldFRpbWUoKSk7dGVtcC5zZXREYXRlKDApO3JldHVybiBkYXRlX2RlZmF1bHQuYS5mb3JtYXQodGVtcCwneXl5eS1NTScpO30sY3VyTW9udGhEYXRlUHJlZml4OmZ1bmN0aW9uIGN1ck1vbnRoRGF0ZVByZWZpeCgpe3JldHVybiBkYXRlX2RlZmF1bHQuYS5mb3JtYXQodGhpcy5kYXRlLCd5eXl5LU1NJyk7fSxuZXh0TW9udGhEYXRlUHJlZml4OmZ1bmN0aW9uIG5leHRNb250aERhdGVQcmVmaXgoKXt2YXIgdGVtcD1uZXcgRGF0ZSh0aGlzLmRhdGUuZ2V0RnVsbFllYXIoKSx0aGlzLmRhdGUuZ2V0TW9udGgoKSsxLDEpO3JldHVybiBkYXRlX2RlZmF1bHQuYS5mb3JtYXQodGVtcCwneXl5eS1NTScpO30sZm9ybWF0ZWREYXRlOmZ1bmN0aW9uIGZvcm1hdGVkRGF0ZSgpe3JldHVybiBkYXRlX2RlZmF1bHQuYS5mb3JtYXQodGhpcy5kYXRlLCd5eXl5LU1NLWRkJyk7fSxpMThuRGF0ZTpmdW5jdGlvbiBpMThuRGF0ZSgpe3ZhciB5ZWFyPXRoaXMuZGF0ZS5nZXRGdWxsWWVhcigpO3ZhciBtb250aD10aGlzLmRhdGUuZ2V0TW9udGgoKSsxO3JldHVybiB5ZWFyKycgJyt0aGlzLnQoJ2VsLmRhdGVwaWNrZXIueWVhcicpKycgJyt0aGlzLnQoJ2VsLmRhdGVwaWNrZXIubW9udGgnK21vbnRoKTt9LGZvcm1hdGVkVG9kYXk6ZnVuY3Rpb24gZm9ybWF0ZWRUb2RheSgpe3JldHVybiBkYXRlX2RlZmF1bHQuYS5mb3JtYXQodGhpcy5ub3csJ3l5eXktTU0tZGQnKTt9LHJlYWxTZWxlY3RlZERheTp7Z2V0OmZ1bmN0aW9uIGdldCgpe2lmKCF0aGlzLnZhbHVlKXJldHVybiB0aGlzLnNlbGVjdGVkRGF5O3JldHVybiB0aGlzLmZvcm1hdGVkRGF0ZTt9LHNldDpmdW5jdGlvbiBzZXQodmFsKXt0aGlzLnNlbGVjdGVkRGF5PXZhbDt2YXIgZGF0ZT1uZXcgRGF0ZSh2YWwpO3RoaXMuJGVtaXQoJ2lucHV0JyxkYXRlKTt9fSxkYXRlOmZ1bmN0aW9uIGRhdGUoKXtpZighdGhpcy52YWx1ZSl7aWYodGhpcy5yZWFsU2VsZWN0ZWREYXkpe3ZhciBkPXRoaXMuc2VsZWN0ZWREYXkuc3BsaXQoJy0nKTtyZXR1cm4gbmV3IERhdGUoZFswXSxkWzFdLTEsZFsyXSk7fWVsc2UgaWYodGhpcy52YWxpZGF0ZWRSYW5nZS5sZW5ndGgpe3JldHVybiB0aGlzLnZhbGlkYXRlZFJhbmdlWzBdWzBdO31yZXR1cm4gdGhpcy5ub3c7fWVsc2V7cmV0dXJuIHRoaXMudG9EYXRlKHRoaXMudmFsdWUpO319LC8vIGlmIHJhbmdlIGlzIHZhbGlkLCB3ZSBnZXQgYSB0d28tZGlnaXQgYXJyYXkKdmFsaWRhdGVkUmFuZ2U6ZnVuY3Rpb24gdmFsaWRhdGVkUmFuZ2UoKXt2YXIgX3RoaXM9dGhpczt2YXIgcmFuZ2U9dGhpcy5yYW5nZTtpZighcmFuZ2UpcmV0dXJuW107cmFuZ2U9cmFuZ2UucmVkdWNlKGZ1bmN0aW9uKHByZXYsdmFsLGluZGV4KXt2YXIgZGF0ZT1fdGhpcy50b0RhdGUodmFsKTtpZihfdGhpcy5yYW5nZVZhbGlkYXRvcihkYXRlLGluZGV4PT09MCkpe3ByZXY9cHJldi5jb25jYXQoZGF0ZSk7fXJldHVybiBwcmV2O30sW10pO2lmKHJhbmdlLmxlbmd0aD09PTIpe3ZhciBfcmFuZ2U9cmFuZ2Usc3RhcnQ9X3JhbmdlWzBdLGVuZD1fcmFuZ2VbMV07aWYoc3RhcnQ+ZW5kKXtjb25zb2xlLndhcm4oJ1tFbGVtZW50Q2FsZW5kYXJdZW5kIHRpbWUgc2hvdWxkIGJlIGdyZWF0ZXIgdGhhbiBzdGFydCB0aW1lJyk7cmV0dXJuW107fS8vIHN0YXJ0IHRpbWUgYW5kIGVuZCB0aW1lIGluIG9uZSBtb250aAppZihPYmplY3QoZGF0ZV91dGlsX1sidmFsaWRhdGVSYW5nZUluT25lTW9udGgiXSkoc3RhcnQsZW5kKSl7cmV0dXJuW1tzdGFydCxlbmRdXTt9dmFyIGRhdGE9W107dmFyIHN0YXJ0RGF5PW5ldyBEYXRlKHN0YXJ0LmdldEZ1bGxZZWFyKCksc3RhcnQuZ2V0TW9udGgoKSsxLDEpO3ZhciBsYXN0RGF5PXRoaXMudG9EYXRlKHN0YXJ0RGF5LmdldFRpbWUoKS1vbmVEYXkpO2lmKCFPYmplY3QoZGF0ZV91dGlsX1sidmFsaWRhdGVSYW5nZUluT25lTW9udGgiXSkoc3RhcnREYXksZW5kKSl7Y29uc29sZS53YXJuKCdbRWxlbWVudENhbGVuZGFyXXN0YXJ0IHRpbWUgYW5kIGVuZCB0aW1lIGludGVydmFsIG11c3Qgbm90IGV4Y2VlZCB0d28gbW9udGhzJyk7cmV0dXJuW107fS8vIOesrOS4gOS4quaciOeahOaXtumXtOiMg+WbtApkYXRhLnB1c2goW3N0YXJ0LGxhc3REYXldKTsvLyDkuIvkuIDmnIjnmoTml7bpl7TojIPlm7TvvIzpnIDopoHorqHnrpfkuIDkuIvor6XmnIjnmoTnrKzkuIDkuKrlkajotbflp4vml6UKdmFyIGZpcnN0RGF5T2ZXZWVrPXRoaXMucmVhbEZpcnN0RGF5T2ZXZWVrO3ZhciBuZXh0TW9udEZpcnN0RGF5PXN0YXJ0RGF5LmdldERheSgpO3ZhciBpbnRlcnZhbD0wO2lmKG5leHRNb250Rmlyc3REYXkhPT1maXJzdERheU9mV2Vlayl7aWYoZmlyc3REYXlPZldlZWs9PT0wKXtpbnRlcnZhbD03LW5leHRNb250Rmlyc3REYXk7fWVsc2V7aW50ZXJ2YWw9Zmlyc3REYXlPZldlZWstbmV4dE1vbnRGaXJzdERheTtpbnRlcnZhbD1pbnRlcnZhbD4wP2ludGVydmFsOjcraW50ZXJ2YWw7fX1zdGFydERheT10aGlzLnRvRGF0ZShzdGFydERheS5nZXRUaW1lKCkraW50ZXJ2YWwqb25lRGF5KTtpZihzdGFydERheS5nZXREYXRlKCk8ZW5kLmdldERhdGUoKSl7ZGF0YS5wdXNoKFtzdGFydERheSxlbmRdKTt9cmV0dXJuIGRhdGE7fXJldHVybltdO30scmVhbEZpcnN0RGF5T2ZXZWVrOmZ1bmN0aW9uIHJlYWxGaXJzdERheU9mV2Vlaygpe2lmKHRoaXMuZmlyc3REYXlPZldlZWs8MXx8dGhpcy5maXJzdERheU9mV2Vlaz42KXtyZXR1cm4gMDt9cmV0dXJuIE1hdGguZmxvb3IodGhpcy5maXJzdERheU9mV2Vlayk7fX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue3NlbGVjdGVkRGF5OicnLG5vdzpuZXcgRGF0ZSgpfTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NhbGVuZGFyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19jYWxlbmRhcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1jYWxlbmRhcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NhbGVuZGFyL3NyYy9tYWluLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGNhbGVuZGFyX3NyY19tYWluX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQocGFja2FnZXNfY2FsZW5kYXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzZkOTc1NmJlX3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNmQ5NzU2YmVfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBjYWxlbmRhcl9zcmNfbWFpbl9hcGk7fWNhbGVuZGFyX3NyY19tYWluX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvY2FsZW5kYXIvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNhbGVuZGFyX3NyY19tYWluPWNhbGVuZGFyX3NyY19tYWluX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FsZW5kYXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9jYWxlbmRhcl9zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChjYWxlbmRhcl9zcmNfbWFpbi5uYW1lLGNhbGVuZGFyX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY2FsZW5kYXI9Y2FsZW5kYXJfc3JjX21haW47Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9iYWNrdG9wL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yNTdkZDRhOSYKdmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8yNTdkZDRhOV9yZW5kZXI9ZnVuY3Rpb24gbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzI1N2RkNGE5X3JlbmRlcigpe3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygidHJhbnNpdGlvbiIse2F0dHJzOntuYW1lOiJlbC1mYWRlLWluIn19LFtfdm0udmlzaWJsZT9fYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLWJhY2t0b3AiLHN0eWxlOntyaWdodDpfdm0uc3R5bGVSaWdodCxib3R0b206X3ZtLnN0eWxlQm90dG9tfSxvbjp7Y2xpY2s6ZnVuY3Rpb24gY2xpY2soJGV2ZW50KXskZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7cmV0dXJuIF92bS5oYW5kbGVDbGljaygkZXZlbnQpO319fSxbX3ZtLl90KCJkZWZhdWx0IixbX2MoImVsLWljb24iLHthdHRyczp7bmFtZToiY2FyZXQtdG9wIn19KV0pXSwyKTpfdm0uX2UoKV0pO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8yNTdkZDRhOV9zdGF0aWNSZW5kZXJGbnM9W107bWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzI1N2RkNGE5X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9iYWNrdG9wL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yNTdkZDRhOSYKLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvYmFja3RvcC9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBjdWJpYz1mdW5jdGlvbiBjdWJpYyh2YWx1ZSl7cmV0dXJuIE1hdGgucG93KHZhbHVlLDMpO307dmFyIGVhc2VJbk91dEN1YmljPWZ1bmN0aW9uIGVhc2VJbk91dEN1YmljKHZhbHVlKXtyZXR1cm4gdmFsdWU8MC41P2N1YmljKHZhbHVlKjIpLzI6MS1jdWJpYygoMS12YWx1ZSkqMikvMjt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYmFja3RvcF9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxCYWNrdG9wJyxwcm9wczp7dmlzaWJpbGl0eUhlaWdodDp7dHlwZTpOdW1iZXIsZGVmYXVsdDoyMDB9LHRhcmdldDpbU3RyaW5nXSxyaWdodDp7dHlwZTpOdW1iZXIsZGVmYXVsdDo0MH0sYm90dG9tOnt0eXBlOk51bWJlcixkZWZhdWx0OjQwfX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2VsOm51bGwsY29udGFpbmVyOm51bGwsdmlzaWJsZTpmYWxzZX07fSxjb21wdXRlZDp7c3R5bGVCb3R0b206ZnVuY3Rpb24gc3R5bGVCb3R0b20oKXtyZXR1cm4gdGhpcy5ib3R0b20rJ3B4Jzt9LHN0eWxlUmlnaHQ6ZnVuY3Rpb24gc3R5bGVSaWdodCgpe3JldHVybiB0aGlzLnJpZ2h0KydweCc7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7dGhpcy5pbml0KCk7dGhpcy50aHJvdHRsZWRTY3JvbGxIYW5kbGVyPXRocm90dGxlX2RlZmF1bHQoKSgzMDAsdGhpcy5vblNjcm9sbCk7dGhpcy5jb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJyx0aGlzLnRocm90dGxlZFNjcm9sbEhhbmRsZXIpO30sbWV0aG9kczp7aW5pdDpmdW5jdGlvbiBpbml0KCl7dGhpcy5jb250YWluZXI9ZG9jdW1lbnQ7dGhpcy5lbD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7aWYodGhpcy50YXJnZXQpe3RoaXMuZWw9ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnRhcmdldCk7aWYoIXRoaXMuZWwpe3Rocm93IG5ldyBFcnJvcigndGFyZ2V0IGlzIG5vdCBleGlzdGVkOiAnK3RoaXMudGFyZ2V0KTt9dGhpcy5jb250YWluZXI9dGhpcy5lbDt9fSxvblNjcm9sbDpmdW5jdGlvbiBvblNjcm9sbCgpe3ZhciBzY3JvbGxUb3A9dGhpcy5lbC5zY3JvbGxUb3A7dGhpcy52aXNpYmxlPXNjcm9sbFRvcD49dGhpcy52aXNpYmlsaXR5SGVpZ2h0O30saGFuZGxlQ2xpY2s6ZnVuY3Rpb24gaGFuZGxlQ2xpY2soZSl7dGhpcy5zY3JvbGxUb1RvcCgpO3RoaXMuJGVtaXQoJ2NsaWNrJyxlKTt9LHNjcm9sbFRvVG9wOmZ1bmN0aW9uIHNjcm9sbFRvVG9wKCl7dmFyIGVsPXRoaXMuZWw7dmFyIGJlZ2luVGltZT1EYXRlLm5vdygpO3ZhciBiZWdpblZhbHVlPWVsLnNjcm9sbFRvcDt2YXIgckFGPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fGZ1bmN0aW9uKGZ1bmMpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmMsMTYpO307dmFyIGZyYW1lRnVuYz1mdW5jdGlvbiBmcmFtZUZ1bmMoKXt2YXIgcHJvZ3Jlc3M9KERhdGUubm93KCktYmVnaW5UaW1lKS81MDA7aWYocHJvZ3Jlc3M8MSl7ZWwuc2Nyb2xsVG9wPWJlZ2luVmFsdWUqKDEtZWFzZUluT3V0Q3ViaWMocHJvZ3Jlc3MpKTtyQUYoZnJhbWVGdW5jKTt9ZWxzZXtlbC5zY3JvbGxUb3A9MDt9fTtyQUYoZnJhbWVGdW5jKTt9fSxiZWZvcmVEZXN0cm95OmZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKXt0aGlzLmNvbnRhaW5lci5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLHRoaXMudGhyb3R0bGVkU2Nyb2xsSGFuZGxlcik7fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9iYWNrdG9wL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19iYWNrdG9wX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWJhY2t0b3Bfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9iYWNrdG9wL3NyYy9tYWluLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGJhY2t0b3Bfc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19iYWNrdG9wX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8yNTdkZDRhOV9yZW5kZXIsbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzI1N2RkNGE5X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgYmFja3RvcF9zcmNfbWFpbl9hcGk7fWJhY2t0b3Bfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9iYWNrdG9wL3NyYy9tYWluLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBiYWNrdG9wX3NyY19tYWluPWJhY2t0b3Bfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9iYWNrdG9wL2luZGV4LmpzCi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovYmFja3RvcF9zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChiYWNrdG9wX3NyY19tYWluLm5hbWUsYmFja3RvcF9zcmNfbWFpbik7fTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGJhY2t0b3A9YmFja3RvcF9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2luZmluaXRlLXNjcm9sbC9zcmMvbWFpbi5qcwp2YXIgZ2V0U3R5bGVDb21wdXRlZFByb3BlcnR5PWZ1bmN0aW9uIGdldFN0eWxlQ29tcHV0ZWRQcm9wZXJ0eShlbGVtZW50LHByb3BlcnR5KXtpZihlbGVtZW50PT09d2luZG93KXtlbGVtZW50PWRvY3VtZW50LmRvY3VtZW50RWxlbWVudDt9aWYoZWxlbWVudC5ub2RlVHlwZSE9PTEpe3JldHVybltdO30vLyBOT1RFOiAxIERPTSBhY2Nlc3MgaGVyZQp2YXIgY3NzPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQsbnVsbCk7cmV0dXJuIHByb3BlcnR5P2Nzc1twcm9wZXJ0eV06Y3NzO307dmFyIGVudHJpZXM9ZnVuY3Rpb24gZW50cmllcyhvYmope3JldHVybiBPYmplY3Qua2V5cyhvYmp8fHt9KS5tYXAoZnVuY3Rpb24oa2V5KXtyZXR1cm5ba2V5LG9ialtrZXldXTt9KTt9O3ZhciBnZXRQb3NpdGlvblNpemU9ZnVuY3Rpb24gZ2V0UG9zaXRpb25TaXplKGVsLHByb3Ape3JldHVybiBlbD09PXdpbmRvd3x8ZWw9PT1kb2N1bWVudD9kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbcHJvcF06ZWxbcHJvcF07fTt2YXIgZ2V0T2Zmc2V0SGVpZ2h0PWZ1bmN0aW9uIGdldE9mZnNldEhlaWdodChlbCl7cmV0dXJuIGdldFBvc2l0aW9uU2l6ZShlbCwnb2Zmc2V0SGVpZ2h0Jyk7fTt2YXIgZ2V0Q2xpZW50SGVpZ2h0PWZ1bmN0aW9uIGdldENsaWVudEhlaWdodChlbCl7cmV0dXJuIGdldFBvc2l0aW9uU2l6ZShlbCwnY2xpZW50SGVpZ2h0Jyk7fTt2YXIgc2NvcGU9J0VsSW5maW5pdGVTY3JvbGwnO3ZhciBhdHRyaWJ1dGVzPXtkZWxheTp7dHlwZTpOdW1iZXIsZGVmYXVsdDoyMDB9LGRpc3RhbmNlOnt0eXBlOk51bWJlcixkZWZhdWx0OjB9LGRpc2FibGVkOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0saW1tZWRpYXRlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfX07dmFyIG1haW5fZ2V0U2Nyb2xsT3B0aW9ucz1mdW5jdGlvbiBnZXRTY3JvbGxPcHRpb25zKGVsLHZtKXtpZighT2JqZWN0KHR5cGVzX1siaXNIdG1sRWxlbWVudCJdKShlbCkpcmV0dXJue307cmV0dXJuIGVudHJpZXMoYXR0cmlidXRlcykucmVkdWNlKGZ1bmN0aW9uKG1hcCxfcmVmKXt2YXIga2V5PV9yZWZbMF0sb3B0aW9uPV9yZWZbMV07dmFyIHR5cGU9b3B0aW9uLnR5cGUsZGVmYXVsdFZhbHVlPW9wdGlvbi5kZWZhdWx0O3ZhciB2YWx1ZT1lbC5nZXRBdHRyaWJ1dGUoJ2luZmluaXRlLXNjcm9sbC0nK2tleSk7dmFsdWU9T2JqZWN0KHR5cGVzX1siaXNVbmRlZmluZWQiXSkodm1bdmFsdWVdKT92YWx1ZTp2bVt2YWx1ZV07c3dpdGNoKHR5cGUpe2Nhc2UgTnVtYmVyOnZhbHVlPU51bWJlcih2YWx1ZSk7dmFsdWU9TnVtYmVyLmlzTmFOKHZhbHVlKT9kZWZhdWx0VmFsdWU6dmFsdWU7YnJlYWs7Y2FzZSBCb29sZWFuOnZhbHVlPU9iamVjdCh0eXBlc19bImlzRGVmaW5lZCJdKSh2YWx1ZSk/dmFsdWU9PT0nZmFsc2UnP2ZhbHNlOkJvb2xlYW4odmFsdWUpOmRlZmF1bHRWYWx1ZTticmVhaztkZWZhdWx0OnZhbHVlPXR5cGUodmFsdWUpO31tYXBba2V5XT12YWx1ZTtyZXR1cm4gbWFwO30se30pO307dmFyIGdldEVsZW1lbnRUb3A9ZnVuY3Rpb24gZ2V0RWxlbWVudFRvcChlbCl7cmV0dXJuIGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDt9O3ZhciBtYWluX2hhbmRsZVNjcm9sbD1mdW5jdGlvbiBoYW5kbGVTY3JvbGwoY2Ipe3ZhciBfc2NvcGU9dGhpc1tzY29wZV0sZWw9X3Njb3BlLmVsLHZtPV9zY29wZS52bSxjb250YWluZXI9X3Njb3BlLmNvbnRhaW5lcixvYnNlcnZlcj1fc2NvcGUub2JzZXJ2ZXI7dmFyIF9nZXRTY3JvbGxPcHRpb25zPW1haW5fZ2V0U2Nyb2xsT3B0aW9ucyhlbCx2bSksZGlzdGFuY2U9X2dldFNjcm9sbE9wdGlvbnMuZGlzdGFuY2UsZGlzYWJsZWQ9X2dldFNjcm9sbE9wdGlvbnMuZGlzYWJsZWQ7aWYoZGlzYWJsZWQpcmV0dXJuO3ZhciBjb250YWluZXJJbmZvPWNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpZighY29udGFpbmVySW5mby53aWR0aCYmIWNvbnRhaW5lckluZm8uaGVpZ2h0KXJldHVybjt2YXIgc2hvdWxkVHJpZ2dlcj1mYWxzZTtpZihjb250YWluZXI9PT1lbCl7Ly8gYmUgYXdhcmUgb2YgZGlmZmVyZW5jZSBiZXR3ZWVuIGNsaWVudEhlaWdodCAmIG9mZnNldEhlaWdodCAmIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCkuaGVpZ2h0CnZhciBzY3JvbGxCb3R0b209Y29udGFpbmVyLnNjcm9sbFRvcCtnZXRDbGllbnRIZWlnaHQoY29udGFpbmVyKTtzaG91bGRUcmlnZ2VyPWNvbnRhaW5lci5zY3JvbGxIZWlnaHQtc2Nyb2xsQm90dG9tPD1kaXN0YW5jZTt9ZWxzZXt2YXIgaGVpZ2h0QmVsb3dUb3A9Z2V0T2Zmc2V0SGVpZ2h0KGVsKStnZXRFbGVtZW50VG9wKGVsKS1nZXRFbGVtZW50VG9wKGNvbnRhaW5lcik7dmFyIG9mZnNldEhlaWdodD1nZXRPZmZzZXRIZWlnaHQoY29udGFpbmVyKTt2YXIgYm9yZGVyQm90dG9tPU51bWJlci5wYXJzZUZsb2F0KGdldFN0eWxlQ29tcHV0ZWRQcm9wZXJ0eShjb250YWluZXIsJ2JvcmRlckJvdHRvbVdpZHRoJykpO3Nob3VsZFRyaWdnZXI9aGVpZ2h0QmVsb3dUb3Atb2Zmc2V0SGVpZ2h0K2JvcmRlckJvdHRvbTw9ZGlzdGFuY2U7fWlmKHNob3VsZFRyaWdnZXImJk9iamVjdCh0eXBlc19bImlzRnVuY3Rpb24iXSkoY2IpKXtjYi5jYWxsKHZtKTt9ZWxzZSBpZihvYnNlcnZlcil7b2JzZXJ2ZXIuZGlzY29ubmVjdCgpO3RoaXNbc2NvcGVdLm9ic2VydmVyPW51bGw7fX07LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBpbmZpbml0ZV9zY3JvbGxfc3JjX21haW49e25hbWU6J0luZmluaXRlU2Nyb2xsJyxpbnNlcnRlZDpmdW5jdGlvbiBpbnNlcnRlZChlbCxiaW5kaW5nLHZub2RlKXt2YXIgY2I9YmluZGluZy52YWx1ZTt2YXIgdm09dm5vZGUuY29udGV4dDsvLyBvbmx5IGluY2x1ZGUgdmVydGljYWwgc2Nyb2xsCnZhciBjb250YWluZXI9T2JqZWN0KGRvbV9bImdldFNjcm9sbENvbnRhaW5lciJdKShlbCx0cnVlKTt2YXIgX2dldFNjcm9sbE9wdGlvbnMyPW1haW5fZ2V0U2Nyb2xsT3B0aW9ucyhlbCx2bSksZGVsYXk9X2dldFNjcm9sbE9wdGlvbnMyLmRlbGF5LGltbWVkaWF0ZT1fZ2V0U2Nyb2xsT3B0aW9uczIuaW1tZWRpYXRlO3ZhciBvblNjcm9sbD1kZWJvdW5jZV9kZWZhdWx0KCkoZGVsYXksbWFpbl9oYW5kbGVTY3JvbGwuYmluZChlbCxjYikpO2VsW3Njb3BlXT17ZWw6ZWwsdm06dm0sY29udGFpbmVyOmNvbnRhaW5lcixvblNjcm9sbDpvblNjcm9sbH07aWYoY29udGFpbmVyKXtjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJyxvblNjcm9sbCk7aWYoaW1tZWRpYXRlKXt2YXIgb2JzZXJ2ZXI9ZWxbc2NvcGVdLm9ic2VydmVyPW5ldyBNdXRhdGlvbk9ic2VydmVyKG9uU2Nyb2xsKTtvYnNlcnZlci5vYnNlcnZlKGNvbnRhaW5lcix7Y2hpbGRMaXN0OnRydWUsc3VidHJlZTp0cnVlfSk7b25TY3JvbGwoKTt9fX0sdW5iaW5kOmZ1bmN0aW9uIHVuYmluZChlbCl7dmFyIF9lbCRzY29wZT1lbFtzY29wZV0sY29udGFpbmVyPV9lbCRzY29wZS5jb250YWluZXIsb25TY3JvbGw9X2VsJHNjb3BlLm9uU2Nyb2xsO2lmKGNvbnRhaW5lcil7Y29udGFpbmVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsb25TY3JvbGwpO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2luZmluaXRlLXNjcm9sbC9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2luZmluaXRlX3Njcm9sbF9zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmRpcmVjdGl2ZShpbmZpbml0ZV9zY3JvbGxfc3JjX21haW4ubmFtZSxpbmZpbml0ZV9zY3JvbGxfc3JjX21haW4pO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBpbmZpbml0ZV9zY3JvbGw9aW5maW5pdGVfc2Nyb2xsX3NyY19tYWluOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvcGFnZS1oZWFkZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTUwNzA5NTRjJgp2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzUwNzA5NTRjX3JlbmRlcj1mdW5jdGlvbiBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNTA3MDk1NGNfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtcGFnZS1oZWFkZXIifSxbX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1wYWdlLWhlYWRlcl9fbGVmdCIsb246e2NsaWNrOmZ1bmN0aW9uIGNsaWNrKCRldmVudCl7X3ZtLiRlbWl0KCJiYWNrIik7fX19LFtfYygiaSIse3N0YXRpY0NsYXNzOiJlbC1pY29uLWJhY2sifSksX2MoImRpdiIse3N0YXRpY0NsYXNzOiJlbC1wYWdlLWhlYWRlcl9fdGl0bGUifSxbX3ZtLl90KCJ0aXRsZSIsW192bS5fdihfdm0uX3MoX3ZtLnRpdGxlKSldKV0sMildKSxfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXBhZ2UtaGVhZGVyX19jb250ZW50In0sW192bS5fdCgiY29udGVudCIsW192bS5fdihfdm0uX3MoX3ZtLmNvbnRlbnQpKV0pXSwyKV0pO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF81MDcwOTU0Y19zdGF0aWNSZW5kZXJGbnM9W107bWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzUwNzA5NTRjX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9wYWdlLWhlYWRlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NTA3MDk1NGMmCi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3BhZ2UtaGVhZGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWdlX2hlYWRlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxQYWdlSGVhZGVyJyxwcm9wczp7dGl0bGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6ZnVuY3Rpb24gX2RlZmF1bHQoKXtyZXR1cm4gT2JqZWN0KGxpYl9sb2NhbGVfWyJ0Il0pKCdlbC5wYWdlSGVhZGVyLnRpdGxlJyk7fX0sY29udGVudDpTdHJpbmd9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BhZ2UtaGVhZGVyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19wYWdlX2hlYWRlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1wYWdlX2hlYWRlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BhZ2UtaGVhZGVyL3NyYy9tYWluLnZ1ZQovKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIHBhZ2VfaGVhZGVyX3NyY19tYWluX2NvbXBvbmVudD1ub3JtYWxpemVDb21wb25lbnQocGFja2FnZXNfcGFnZV9oZWFkZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzUwNzA5NTRjX3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfNTA3MDk1NGNfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBwYWdlX2hlYWRlcl9zcmNfbWFpbl9hcGk7fXBhZ2VfaGVhZGVyX3NyY19tYWluX2NvbXBvbmVudC5vcHRpb25zLl9fZmlsZT0icGFja2FnZXMvcGFnZS1oZWFkZXIvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhZ2VfaGVhZGVyX3NyY19tYWluPXBhZ2VfaGVhZGVyX3NyY19tYWluX2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvcGFnZS1oZWFkZXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9wYWdlX2hlYWRlcl9zcmNfbWFpbi5pbnN0YWxsPWZ1bmN0aW9uKFZ1ZSl7VnVlLmNvbXBvbmVudChwYWdlX2hlYWRlcl9zcmNfbWFpbi5uYW1lLHBhZ2VfaGVhZGVyX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFnZV9oZWFkZXI9cGFnZV9oZWFkZXJfc3JjX21haW47Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jYXNjYWRlci1wYW5lbC9zcmMvY2FzY2FkZXItcGFuZWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTM0OTMyMzQ2Jgp2YXIgY2FzY2FkZXJfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zNDkzMjM0Nl9yZW5kZXI9ZnVuY3Rpb24gY2FzY2FkZXJfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF8zNDkzMjM0Nl9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoImRpdiIse2NsYXNzOlsiZWwtY2FzY2FkZXItcGFuZWwiLF92bS5ib3JkZXImJiJpcy1ib3JkZXJlZCJdLG9uOntrZXlkb3duOl92bS5oYW5kbGVLZXlEb3dufX0sX3ZtLl9sKF92bS5tZW51cyxmdW5jdGlvbihtZW51LGluZGV4KXtyZXR1cm4gX2MoImNhc2NhZGVyLW1lbnUiLHtrZXk6aW5kZXgscmVmOiJtZW51IixyZWZJbkZvcjp0cnVlLGF0dHJzOntpbmRleDppbmRleCxub2RlczptZW51fX0pO30pLDEpO307dmFyIGNhc2NhZGVyX3BhbmVsdnVlX3R5cGVfdGVtcGxhdGVfaWRfMzQ5MzIzNDZfc3RhdGljUmVuZGVyRm5zPVtdO2Nhc2NhZGVyX3BhbmVsdnVlX3R5cGVfdGVtcGxhdGVfaWRfMzQ5MzIzNDZfcmVuZGVyLl93aXRoU3RyaXBwZWQ9dHJ1ZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2Nhc2NhZGVyLXBhbmVsL3NyYy9jYXNjYWRlci1wYW5lbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MzQ5MzIzNDYmCi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgImVsZW1lbnQtdWkvbGliL3JhZGlvIgp2YXIgcmFkaW9fPV9fd2VicGFja19yZXF1aXJlX18oNDMpO3ZhciByYWRpb19kZWZhdWx0PS8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4ocmFkaW9fKTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jYXNjYWRlci1wYW5lbC9zcmMvY2FzY2FkZXItbm9kZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCnZhciBzdG9wUHJvcGFnYXRpb249ZnVuY3Rpb24gc3RvcFByb3BhZ2F0aW9uKGUpe3JldHVybiBlLnN0b3BQcm9wYWdhdGlvbigpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjYXNjYWRlcl9ub2RldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPXtpbmplY3Q6WydwYW5lbCddLGNvbXBvbmVudHM6e0VsQ2hlY2tib3g6Y2hlY2tib3hfZGVmYXVsdC5hLEVsUmFkaW86cmFkaW9fZGVmYXVsdC5hfSxwcm9wczp7bm9kZTp7cmVxdWlyZWQ6dHJ1ZX0sbm9kZUlkOlN0cmluZ30sY29tcHV0ZWQ6e2NvbmZpZzpmdW5jdGlvbiBjb25maWcoKXtyZXR1cm4gdGhpcy5wYW5lbC5jb25maWc7fSxpc0xlYWY6ZnVuY3Rpb24gaXNMZWFmKCl7cmV0dXJuIHRoaXMubm9kZS5pc0xlYWY7fSxpc0Rpc2FibGVkOmZ1bmN0aW9uIGlzRGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5ub2RlLmlzRGlzYWJsZWQ7fSxjaGVja2VkVmFsdWU6ZnVuY3Rpb24gY2hlY2tlZFZhbHVlKCl7cmV0dXJuIHRoaXMucGFuZWwuY2hlY2tlZFZhbHVlO30saXNDaGVja2VkOmZ1bmN0aW9uIGlzQ2hlY2tlZCgpe3JldHVybiB0aGlzLm5vZGUuaXNTYW1lTm9kZSh0aGlzLmNoZWNrZWRWYWx1ZSk7fSxpbkFjdGl2ZVBhdGg6ZnVuY3Rpb24gaW5BY3RpdmVQYXRoKCl7cmV0dXJuIHRoaXMuaXNJblBhdGgodGhpcy5wYW5lbC5hY3RpdmVQYXRoKTt9LGluQ2hlY2tlZFBhdGg6ZnVuY3Rpb24gaW5DaGVja2VkUGF0aCgpe3ZhciBfdGhpcz10aGlzO2lmKCF0aGlzLmNvbmZpZy5jaGVja1N0cmljdGx5KXJldHVybiBmYWxzZTtyZXR1cm4gdGhpcy5wYW5lbC5jaGVja2VkTm9kZVBhdGhzLnNvbWUoZnVuY3Rpb24oY2hlY2tlZFBhdGgpe3JldHVybiBfdGhpcy5pc0luUGF0aChjaGVja2VkUGF0aCk7fSk7fSx2YWx1ZTpmdW5jdGlvbiB2YWx1ZSgpe3JldHVybiB0aGlzLm5vZGUuZ2V0VmFsdWVCeU9wdGlvbigpO319LG1ldGhvZHM6e2hhbmRsZUV4cGFuZDpmdW5jdGlvbiBoYW5kbGVFeHBhbmQoKXt2YXIgX3RoaXMyPXRoaXM7dmFyIHBhbmVsPXRoaXMucGFuZWwsbm9kZT10aGlzLm5vZGUsaXNEaXNhYmxlZD10aGlzLmlzRGlzYWJsZWQsY29uZmlnPXRoaXMuY29uZmlnO3ZhciBtdWx0aXBsZT1jb25maWcubXVsdGlwbGUsY2hlY2tTdHJpY3RseT1jb25maWcuY2hlY2tTdHJpY3RseTtpZighY2hlY2tTdHJpY3RseSYmaXNEaXNhYmxlZHx8bm9kZS5sb2FkaW5nKXJldHVybjtpZihjb25maWcubGF6eSYmIW5vZGUubG9hZGVkKXtwYW5lbC5sYXp5TG9hZChub2RlLGZ1bmN0aW9uKCl7Ly8gZG8gbm90IHVzZSBjYWNoZWQgbGVhZiB2YWx1ZSBoZXJlLCBpbnZva2UgdGhpcy5pc0xlYWYgdG8gZ2V0IG5ldyB2YWx1ZS4KdmFyIGlzTGVhZj1fdGhpczIuaXNMZWFmO2lmKCFpc0xlYWYpX3RoaXMyLmhhbmRsZUV4cGFuZCgpO2lmKG11bHRpcGxlKXsvLyBpZiBsZWFmIHN5bmMgY2hlY2tlZCBzdGF0ZSwgZWxzZSBjbGVhciBjaGVja2VkIHN0YXRlCnZhciBjaGVja2VkPWlzTGVhZj9ub2RlLmNoZWNrZWQ6ZmFsc2U7X3RoaXMyLmhhbmRsZU11bHRpQ2hlY2tDaGFuZ2UoY2hlY2tlZCk7fX0pO31lbHNle3BhbmVsLmhhbmRsZUV4cGFuZChub2RlKTt9fSxoYW5kbGVDaGVja0NoYW5nZTpmdW5jdGlvbiBoYW5kbGVDaGVja0NoYW5nZSgpe3ZhciBwYW5lbD10aGlzLnBhbmVsLHZhbHVlPXRoaXMudmFsdWUsbm9kZT10aGlzLm5vZGU7cGFuZWwuaGFuZGxlQ2hlY2tDaGFuZ2UodmFsdWUpO3BhbmVsLmhhbmRsZUV4cGFuZChub2RlKTt9LGhhbmRsZU11bHRpQ2hlY2tDaGFuZ2U6ZnVuY3Rpb24gaGFuZGxlTXVsdGlDaGVja0NoYW5nZShjaGVja2VkKXt0aGlzLm5vZGUuZG9DaGVjayhjaGVja2VkKTt0aGlzLnBhbmVsLmNhbGN1bGF0ZU11bHRpQ2hlY2tlZFZhbHVlKCk7fSxpc0luUGF0aDpmdW5jdGlvbiBpc0luUGF0aChwYXRoTm9kZXMpe3ZhciBub2RlPXRoaXMubm9kZTt2YXIgc2VsZWN0ZWRQYXRoTm9kZT1wYXRoTm9kZXNbbm9kZS5sZXZlbC0xXXx8e307cmV0dXJuIHNlbGVjdGVkUGF0aE5vZGUudWlkPT09bm9kZS51aWQ7fSxyZW5kZXJQcmVmaXg6ZnVuY3Rpb24gcmVuZGVyUHJlZml4KGgpe3ZhciBpc0xlYWY9dGhpcy5pc0xlYWYsaXNDaGVja2VkPXRoaXMuaXNDaGVja2VkLGNvbmZpZz10aGlzLmNvbmZpZzt2YXIgY2hlY2tTdHJpY3RseT1jb25maWcuY2hlY2tTdHJpY3RseSxtdWx0aXBsZT1jb25maWcubXVsdGlwbGU7aWYobXVsdGlwbGUpe3JldHVybiB0aGlzLnJlbmRlckNoZWNrYm94KGgpO31lbHNlIGlmKGNoZWNrU3RyaWN0bHkpe3JldHVybiB0aGlzLnJlbmRlclJhZGlvKGgpO31lbHNlIGlmKGlzTGVhZiYmaXNDaGVja2VkKXtyZXR1cm4gdGhpcy5yZW5kZXJDaGVja0ljb24oaCk7fXJldHVybiBudWxsO30scmVuZGVyUG9zdGZpeDpmdW5jdGlvbiByZW5kZXJQb3N0Zml4KGgpe3ZhciBub2RlPXRoaXMubm9kZSxpc0xlYWY9dGhpcy5pc0xlYWY7aWYobm9kZS5sb2FkaW5nKXtyZXR1cm4gdGhpcy5yZW5kZXJMb2FkaW5nSWNvbihoKTt9ZWxzZSBpZighaXNMZWFmKXtyZXR1cm4gdGhpcy5yZW5kZXJFeHBhbmRJY29uKGgpO31yZXR1cm4gbnVsbDt9LHJlbmRlckNoZWNrYm94OmZ1bmN0aW9uIHJlbmRlckNoZWNrYm94KGgpe3ZhciBub2RlPXRoaXMubm9kZSxjb25maWc9dGhpcy5jb25maWcsaXNEaXNhYmxlZD10aGlzLmlzRGlzYWJsZWQ7dmFyIGV2ZW50cz17b246e2NoYW5nZTp0aGlzLmhhbmRsZU11bHRpQ2hlY2tDaGFuZ2V9LG5hdGl2ZU9uOnt9fTtpZihjb25maWcuY2hlY2tTdHJpY3RseSl7Ly8gd2hlbiBldmVyeSBub2RlIGlzIHNlbGVjdGFibGUsIGNsaWNrIGV2ZW50IHNob3VsZCBub3QgdHJpZ2dlciBleHBhbmQgZXZlbnQuCmV2ZW50cy5uYXRpdmVPbi5jbGljaz1zdG9wUHJvcGFnYXRpb247fXJldHVybiBoKCdlbC1jaGVja2JveCcsZXh0ZXJuYWxfYmFiZWxfaGVscGVyX3Z1ZV9qc3hfbWVyZ2VfcHJvcHNfZGVmYXVsdCgpKFt7YXR0cnM6e3ZhbHVlOm5vZGUuY2hlY2tlZCxpbmRldGVybWluYXRlOm5vZGUuaW5kZXRlcm1pbmF0ZSxkaXNhYmxlZDppc0Rpc2FibGVkfX0sZXZlbnRzXSkpO30scmVuZGVyUmFkaW86ZnVuY3Rpb24gcmVuZGVyUmFkaW8oaCl7dmFyIGNoZWNrZWRWYWx1ZT10aGlzLmNoZWNrZWRWYWx1ZSx2YWx1ZT10aGlzLnZhbHVlLGlzRGlzYWJsZWQ9dGhpcy5pc0Rpc2FibGVkOy8vIHRvIGtlZXAgc2FtZSByZWZlcmVuY2UgaWYgdmFsdWUgY2F1c2UgcmFkaW8ncyBjaGVja2VkIHN0YXRlIGlzIGNhbGN1bGF0ZWQgYnkgcmVmZXJlbmNlIGNvbXBhcmlzaW9uOwppZihPYmplY3QodXRpbF9bImlzRXF1YWwiXSkodmFsdWUsY2hlY2tlZFZhbHVlKSl7dmFsdWU9Y2hlY2tlZFZhbHVlO31yZXR1cm4gaCgnZWwtcmFkaW8nLHthdHRyczp7dmFsdWU6Y2hlY2tlZFZhbHVlLGxhYmVsOnZhbHVlLGRpc2FibGVkOmlzRGlzYWJsZWR9LG9uOnsnY2hhbmdlJzp0aGlzLmhhbmRsZUNoZWNrQ2hhbmdlfSxuYXRpdmVPbjp7J2NsaWNrJzpzdG9wUHJvcGFnYXRpb259fSxbaCgnc3BhbicpXSk7fSxyZW5kZXJDaGVja0ljb246ZnVuY3Rpb24gcmVuZGVyQ2hlY2tJY29uKGgpe3JldHVybiBoKCdpJyx7J2NsYXNzJzonZWwtaWNvbi1jaGVjayBlbC1jYXNjYWRlci1ub2RlX19wcmVmaXgnfSk7fSxyZW5kZXJMb2FkaW5nSWNvbjpmdW5jdGlvbiByZW5kZXJMb2FkaW5nSWNvbihoKXtyZXR1cm4gaCgnaScseydjbGFzcyc6J2VsLWljb24tbG9hZGluZyBlbC1jYXNjYWRlci1ub2RlX19wb3N0Zml4J30pO30scmVuZGVyRXhwYW5kSWNvbjpmdW5jdGlvbiByZW5kZXJFeHBhbmRJY29uKGgpe3JldHVybiBoKCdpJyx7J2NsYXNzJzonZWwtaWNvbi1hcnJvdy1yaWdodCBlbC1jYXNjYWRlci1ub2RlX19wb3N0Zml4J30pO30scmVuZGVyQ29udGVudDpmdW5jdGlvbiByZW5kZXJDb250ZW50KGgpe3ZhciBwYW5lbD10aGlzLnBhbmVsLG5vZGU9dGhpcy5ub2RlO3ZhciByZW5kZXI9cGFuZWwucmVuZGVyTGFiZWxGbjt2YXIgdm5vZGU9cmVuZGVyP3JlbmRlcih7bm9kZTpub2RlLGRhdGE6bm9kZS5kYXRhfSk6bnVsbDtyZXR1cm4gaCgnc3BhbicseydjbGFzcyc6J2VsLWNhc2NhZGVyLW5vZGVfX2xhYmVsJ30sW3Zub2RlfHxub2RlLmxhYmVsXSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgX3RoaXMzPXRoaXM7dmFyIGluQWN0aXZlUGF0aD10aGlzLmluQWN0aXZlUGF0aCxpbkNoZWNrZWRQYXRoPXRoaXMuaW5DaGVja2VkUGF0aCxpc0NoZWNrZWQ9dGhpcy5pc0NoZWNrZWQsaXNMZWFmPXRoaXMuaXNMZWFmLGlzRGlzYWJsZWQ9dGhpcy5pc0Rpc2FibGVkLGNvbmZpZz10aGlzLmNvbmZpZyxub2RlSWQ9dGhpcy5ub2RlSWQ7dmFyIGV4cGFuZFRyaWdnZXI9Y29uZmlnLmV4cGFuZFRyaWdnZXIsY2hlY2tTdHJpY3RseT1jb25maWcuY2hlY2tTdHJpY3RseSxtdWx0aXBsZT1jb25maWcubXVsdGlwbGU7dmFyIGRpc2FibGVkPSFjaGVja1N0cmljdGx5JiZpc0Rpc2FibGVkO3ZhciBldmVudHM9e29uOnt9fTtpZihleHBhbmRUcmlnZ2VyPT09J2NsaWNrJyl7ZXZlbnRzLm9uLmNsaWNrPXRoaXMuaGFuZGxlRXhwYW5kO31lbHNle2V2ZW50cy5vbi5tb3VzZWVudGVyPWZ1bmN0aW9uKGUpe190aGlzMy5oYW5kbGVFeHBhbmQoKTtfdGhpczMuJGVtaXQoJ2V4cGFuZCcsZSk7fTtldmVudHMub24uZm9jdXM9ZnVuY3Rpb24oZSl7X3RoaXMzLmhhbmRsZUV4cGFuZCgpO190aGlzMy4kZW1pdCgnZXhwYW5kJyxlKTt9O31pZihpc0xlYWYmJiFpc0Rpc2FibGVkJiYhY2hlY2tTdHJpY3RseSYmIW11bHRpcGxlKXtldmVudHMub24uY2xpY2s9dGhpcy5oYW5kbGVDaGVja0NoYW5nZTt9cmV0dXJuIGgoJ2xpJyxleHRlcm5hbF9iYWJlbF9oZWxwZXJfdnVlX2pzeF9tZXJnZV9wcm9wc19kZWZhdWx0KCkoW3thdHRyczp7cm9sZTonbWVudWl0ZW0nLGlkOm5vZGVJZCwnYXJpYS1leHBhbmRlZCc6aW5BY3RpdmVQYXRoLHRhYmluZGV4OmRpc2FibGVkP251bGw6LTF9LCdjbGFzcyc6eydlbC1jYXNjYWRlci1ub2RlJzp0cnVlLCdpcy1zZWxlY3RhYmxlJzpjaGVja1N0cmljdGx5LCdpbi1hY3RpdmUtcGF0aCc6aW5BY3RpdmVQYXRoLCdpbi1jaGVja2VkLXBhdGgnOmluQ2hlY2tlZFBhdGgsJ2lzLWFjdGl2ZSc6aXNDaGVja2VkLCdpcy1kaXNhYmxlZCc6ZGlzYWJsZWR9fSxldmVudHNdKSxbdGhpcy5yZW5kZXJQcmVmaXgoaCksdGhpcy5yZW5kZXJDb250ZW50KGgpLHRoaXMucmVuZGVyUG9zdGZpeChoKV0pO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FzY2FkZXItcGFuZWwvc3JjL2Nhc2NhZGVyLW5vZGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19jYXNjYWRlcl9ub2RldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWNhc2NhZGVyX25vZGV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc187Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jYXNjYWRlci1wYW5lbC9zcmMvY2FzY2FkZXItbm9kZS52dWUKdmFyIGNhc2NhZGVyX25vZGVfcmVuZGVyLGNhc2NhZGVyX25vZGVfc3RhdGljUmVuZGVyRm5zOy8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgY2FzY2FkZXJfbm9kZV9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19jYXNjYWRlcl9ub2RldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLGNhc2NhZGVyX25vZGVfcmVuZGVyLGNhc2NhZGVyX25vZGVfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBjYXNjYWRlcl9ub2RlX2FwaTt9Y2FzY2FkZXJfbm9kZV9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2Nhc2NhZGVyLXBhbmVsL3NyYy9jYXNjYWRlci1ub2RlLnZ1ZSI7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjYXNjYWRlcl9ub2RlPWNhc2NhZGVyX25vZGVfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY2FzY2FkZXItcGFuZWwvc3JjL2Nhc2NhZGVyLW1lbnUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNhc2NhZGVyX21lbnV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189e25hbWU6J0VsQ2FzY2FkZXJNZW51JyxtaXhpbnM6W2xvY2FsZV9kZWZhdWx0LmFdLGluamVjdDpbJ3BhbmVsJ10sY29tcG9uZW50czp7RWxTY3JvbGxiYXI6c2Nyb2xsYmFyX2RlZmF1bHQuYSxDYXNjYWRlck5vZGU6Y2FzY2FkZXJfbm9kZX0scHJvcHM6e25vZGVzOnt0eXBlOkFycmF5LHJlcXVpcmVkOnRydWV9LGluZGV4Ok51bWJlcn0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2FjdGl2ZU5vZGU6bnVsbCxob3ZlclRpbWVyOm51bGwsaWQ6T2JqZWN0KHV0aWxfWyJnZW5lcmF0ZUlkIl0pKCl9O30sY29tcHV0ZWQ6e2lzRW1wdHk6ZnVuY3Rpb24gaXNFbXB0eSgpe3JldHVybiF0aGlzLm5vZGVzLmxlbmd0aDt9LG1lbnVJZDpmdW5jdGlvbiBtZW51SWQoKXtyZXR1cm4nY2FzY2FkZXItbWVudS0nK3RoaXMuaWQrJy0nK3RoaXMuaW5kZXg7fX0sbWV0aG9kczp7aGFuZGxlRXhwYW5kOmZ1bmN0aW9uIGhhbmRsZUV4cGFuZChlKXt0aGlzLmFjdGl2ZU5vZGU9ZS50YXJnZXQ7fSxoYW5kbGVNb3VzZU1vdmU6ZnVuY3Rpb24gaGFuZGxlTW91c2VNb3ZlKGUpe3ZhciBhY3RpdmVOb2RlPXRoaXMuYWN0aXZlTm9kZSxob3ZlclRpbWVyPXRoaXMuaG92ZXJUaW1lcjt2YXIgaG92ZXJab25lPXRoaXMuJHJlZnMuaG92ZXJab25lO2lmKCFhY3RpdmVOb2RlfHwhaG92ZXJab25lKXJldHVybjtpZihhY3RpdmVOb2RlLmNvbnRhaW5zKGUudGFyZ2V0KSl7Y2xlYXJUaW1lb3V0KGhvdmVyVGltZXIpO3ZhciBfJGVsJGdldEJvdW5kaW5nQ2xpZW49dGhpcy4kZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksbGVmdD1fJGVsJGdldEJvdW5kaW5nQ2xpZW4ubGVmdDt2YXIgc3RhcnRYPWUuY2xpZW50WC1sZWZ0O3ZhciBfJGVsPXRoaXMuJGVsLG9mZnNldFdpZHRoPV8kZWwub2Zmc2V0V2lkdGgsb2Zmc2V0SGVpZ2h0PV8kZWwub2Zmc2V0SGVpZ2h0O3ZhciB0b3A9YWN0aXZlTm9kZS5vZmZzZXRUb3A7dmFyIGJvdHRvbT10b3ArYWN0aXZlTm9kZS5vZmZzZXRIZWlnaHQ7aG92ZXJab25lLmlubmVySFRNTD0nXG4gICAgICAgICAgPHBhdGggc3R5bGU9InBvaW50ZXItZXZlbnRzOiBhdXRvOyIgZmlsbD0idHJhbnNwYXJlbnQiIGQ9Ik0nK3N0YXJ0WCsnICcrdG9wKycgTCcrb2Zmc2V0V2lkdGgrJyAwIFYnK3RvcCsnIFoiIC8+XG4gICAgICAgICAgPHBhdGggc3R5bGU9InBvaW50ZXItZXZlbnRzOiBhdXRvOyIgZmlsbD0idHJhbnNwYXJlbnQiIGQ9Ik0nK3N0YXJ0WCsnICcrYm90dG9tKycgTCcrb2Zmc2V0V2lkdGgrJyAnK29mZnNldEhlaWdodCsnIFYnK2JvdHRvbSsnIFoiIC8+XG4gICAgICAgICc7fWVsc2UgaWYoIWhvdmVyVGltZXIpe3RoaXMuaG92ZXJUaW1lcj1zZXRUaW1lb3V0KHRoaXMuY2xlYXJIb3ZlclpvbmUsdGhpcy5wYW5lbC5jb25maWcuaG92ZXJUaHJlc2hvbGQpO319LGNsZWFySG92ZXJab25lOmZ1bmN0aW9uIGNsZWFySG92ZXJab25lKCl7dmFyIGhvdmVyWm9uZT10aGlzLiRyZWZzLmhvdmVyWm9uZTtpZighaG92ZXJab25lKXJldHVybjtob3ZlclpvbmUuaW5uZXJIVE1MPScnO30scmVuZGVyRW1wdHlUZXh0OmZ1bmN0aW9uIHJlbmRlckVtcHR5VGV4dChoKXtyZXR1cm4gaCgnZGl2Jyx7J2NsYXNzJzonZWwtY2FzY2FkZXItbWVudV9fZW1wdHktdGV4dCd9LFt0aGlzLnQoJ2VsLmNhc2NhZGVyLm5vRGF0YScpXSk7fSxyZW5kZXJOb2RlTGlzdDpmdW5jdGlvbiByZW5kZXJOb2RlTGlzdChoKXt2YXIgbWVudUlkPXRoaXMubWVudUlkO3ZhciBpc0hvdmVyTWVudT10aGlzLnBhbmVsLmlzSG92ZXJNZW51O3ZhciBldmVudHM9e29uOnt9fTtpZihpc0hvdmVyTWVudSl7ZXZlbnRzLm9uLmV4cGFuZD10aGlzLmhhbmRsZUV4cGFuZDt9dmFyIG5vZGVzPXRoaXMubm9kZXMubWFwKGZ1bmN0aW9uKG5vZGUsaW5kZXgpe3ZhciBoYXNDaGlsZHJlbj1ub2RlLmhhc0NoaWxkcmVuO3JldHVybiBoKCdjYXNjYWRlci1ub2RlJyxleHRlcm5hbF9iYWJlbF9oZWxwZXJfdnVlX2pzeF9tZXJnZV9wcm9wc19kZWZhdWx0KCkoW3trZXk6bm9kZS51aWQsYXR0cnM6e25vZGU6bm9kZSwnbm9kZS1pZCc6bWVudUlkKyctJytpbmRleCwnYXJpYS1oYXNwb3B1cCc6aGFzQ2hpbGRyZW4sJ2FyaWEtb3ducyc6aGFzQ2hpbGRyZW4/bWVudUlkOm51bGx9fSxldmVudHNdKSk7fSk7cmV0dXJuW10uY29uY2F0KG5vZGVzLFtpc0hvdmVyTWVudT9oKCdzdmcnLHtyZWY6J2hvdmVyWm9uZScsJ2NsYXNzJzonZWwtY2FzY2FkZXItbWVudV9faG92ZXItem9uZSd9KTpudWxsXSk7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcihoKXt2YXIgaXNFbXB0eT10aGlzLmlzRW1wdHksbWVudUlkPXRoaXMubWVudUlkO3ZhciBldmVudHM9e25hdGl2ZU9uOnt9fTsvLyBvcHRpbWl6ZSBob3ZlciB0byBleHBhbmQgZXhwZXJpZW5jZSAoIzgwMTApCmlmKHRoaXMucGFuZWwuaXNIb3Zlck1lbnUpe2V2ZW50cy5uYXRpdmVPbi5tb3VzZW1vdmU9dGhpcy5oYW5kbGVNb3VzZU1vdmU7Ly8gZXZlbnRzLm5hdGl2ZU9uLm1vdXNlbGVhdmUgPSB0aGlzLmNsZWFySG92ZXJab25lOwp9cmV0dXJuIGgoJ2VsLXNjcm9sbGJhcicsZXh0ZXJuYWxfYmFiZWxfaGVscGVyX3Z1ZV9qc3hfbWVyZ2VfcHJvcHNfZGVmYXVsdCgpKFt7YXR0cnM6e3RhZzondWwnLHJvbGU6J21lbnUnLGlkOm1lbnVJZCwnd3JhcC1jbGFzcyc6J2VsLWNhc2NhZGVyLW1lbnVfX3dyYXAnLCd2aWV3LWNsYXNzJzp7J2VsLWNhc2NhZGVyLW1lbnVfX2xpc3QnOnRydWUsJ2lzLWVtcHR5Jzppc0VtcHR5fX0sJ2NsYXNzJzonZWwtY2FzY2FkZXItbWVudSd9LGV2ZW50c10pLFtpc0VtcHR5P3RoaXMucmVuZGVyRW1wdHlUZXh0KGgpOnRoaXMucmVuZGVyTm9kZUxpc3QoaCldKTt9fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2Nhc2NhZGVyLXBhbmVsL3NyYy9jYXNjYWRlci1tZW51LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfY2FzY2FkZXJfbWVudXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1jYXNjYWRlcl9tZW51dnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FzY2FkZXItcGFuZWwvc3JjL2Nhc2NhZGVyLW1lbnUudnVlCnZhciBjYXNjYWRlcl9tZW51X3JlbmRlcixjYXNjYWRlcl9tZW51X3N0YXRpY1JlbmRlckZuczsvKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGNhc2NhZGVyX21lbnVfY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChzcmNfY2FzY2FkZXJfbWVudXZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxjYXNjYWRlcl9tZW51X3JlbmRlcixjYXNjYWRlcl9tZW51X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgY2FzY2FkZXJfbWVudV9hcGk7fWNhc2NhZGVyX21lbnVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9jYXNjYWRlci1wYW5lbC9zcmMvY2FzY2FkZXItbWVudS52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY2FzY2FkZXJfbWVudT1jYXNjYWRlcl9tZW51X2NvbXBvbmVudC5leHBvcnRzOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FzY2FkZXItcGFuZWwvc3JjL25vZGUuanMKdmFyIG5vZGVfY3JlYXRlQ2xhc3M9ZnVuY3Rpb24oKXtmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHxmYWxzZTtkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT10cnVlO2lmKCJ2YWx1ZSJpbiBkZXNjcmlwdG9yKWRlc2NyaXB0b3Iud3JpdGFibGU9dHJ1ZTtPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpO319cmV0dXJuIGZ1bmN0aW9uKENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHMpe2lmKHByb3RvUHJvcHMpZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyk7aWYoc3RhdGljUHJvcHMpZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3RvcixzdGF0aWNQcm9wcyk7cmV0dXJuIENvbnN0cnVjdG9yO307fSgpO2Z1bmN0aW9uIHNyY19ub2RlX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTt9fXZhciB1aWQ9MDt2YXIgc3JjX25vZGVfTm9kZT1mdW5jdGlvbigpe2Z1bmN0aW9uIE5vZGUoZGF0YSxjb25maWcscGFyZW50Tm9kZSl7c3JjX25vZGVfY2xhc3NDYWxsQ2hlY2sodGhpcyxOb2RlKTt0aGlzLmRhdGE9ZGF0YTt0aGlzLmNvbmZpZz1jb25maWc7dGhpcy5wYXJlbnQ9cGFyZW50Tm9kZXx8bnVsbDt0aGlzLmxldmVsPSF0aGlzLnBhcmVudD8xOnRoaXMucGFyZW50LmxldmVsKzE7dGhpcy51aWQ9dWlkKys7dGhpcy5pbml0U3RhdGUoKTt0aGlzLmluaXRDaGlsZHJlbigpO31Ob2RlLnByb3RvdHlwZS5pbml0U3RhdGU9ZnVuY3Rpb24gaW5pdFN0YXRlKCl7dmFyIF9jb25maWc9dGhpcy5jb25maWcsdmFsdWVLZXk9X2NvbmZpZy52YWx1ZSxsYWJlbEtleT1fY29uZmlnLmxhYmVsO3RoaXMudmFsdWU9dGhpcy5kYXRhW3ZhbHVlS2V5XTt0aGlzLmxhYmVsPXRoaXMuZGF0YVtsYWJlbEtleV07dGhpcy5wYXRoTm9kZXM9dGhpcy5jYWxjdWxhdGVQYXRoTm9kZXMoKTt0aGlzLnBhdGg9dGhpcy5wYXRoTm9kZXMubWFwKGZ1bmN0aW9uKG5vZGUpe3JldHVybiBub2RlLnZhbHVlO30pO3RoaXMucGF0aExhYmVscz10aGlzLnBhdGhOb2Rlcy5tYXAoZnVuY3Rpb24obm9kZSl7cmV0dXJuIG5vZGUubGFiZWw7fSk7Ly8gbGF6eSBsb2FkCnRoaXMubG9hZGluZz1mYWxzZTt0aGlzLmxvYWRlZD1mYWxzZTt9O05vZGUucHJvdG90eXBlLmluaXRDaGlsZHJlbj1mdW5jdGlvbiBpbml0Q2hpbGRyZW4oKXt2YXIgX3RoaXM9dGhpczt2YXIgY29uZmlnPXRoaXMuY29uZmlnO3ZhciBjaGlsZHJlbktleT1jb25maWcuY2hpbGRyZW47dmFyIGNoaWxkcmVuRGF0YT10aGlzLmRhdGFbY2hpbGRyZW5LZXldO3RoaXMuaGFzQ2hpbGRyZW49QXJyYXkuaXNBcnJheShjaGlsZHJlbkRhdGEpO3RoaXMuY2hpbGRyZW49KGNoaWxkcmVuRGF0YXx8W10pLm1hcChmdW5jdGlvbihjaGlsZCl7cmV0dXJuIG5ldyBOb2RlKGNoaWxkLGNvbmZpZyxfdGhpcyk7fSk7fTtOb2RlLnByb3RvdHlwZS5jYWxjdWxhdGVQYXRoTm9kZXM9ZnVuY3Rpb24gY2FsY3VsYXRlUGF0aE5vZGVzKCl7dmFyIG5vZGVzPVt0aGlzXTt2YXIgcGFyZW50PXRoaXMucGFyZW50O3doaWxlKHBhcmVudCl7bm9kZXMudW5zaGlmdChwYXJlbnQpO3BhcmVudD1wYXJlbnQucGFyZW50O31yZXR1cm4gbm9kZXM7fTtOb2RlLnByb3RvdHlwZS5nZXRQYXRoPWZ1bmN0aW9uIGdldFBhdGgoKXtyZXR1cm4gdGhpcy5wYXRoO307Tm9kZS5wcm90b3R5cGUuZ2V0VmFsdWU9ZnVuY3Rpb24gZ2V0VmFsdWUoKXtyZXR1cm4gdGhpcy52YWx1ZTt9O05vZGUucHJvdG90eXBlLmdldFZhbHVlQnlPcHRpb249ZnVuY3Rpb24gZ2V0VmFsdWVCeU9wdGlvbigpe3JldHVybiB0aGlzLmNvbmZpZy5lbWl0UGF0aD90aGlzLmdldFBhdGgoKTp0aGlzLmdldFZhbHVlKCk7fTtOb2RlLnByb3RvdHlwZS5nZXRUZXh0PWZ1bmN0aW9uIGdldFRleHQoYWxsTGV2ZWxzLHNlcGFyYXRvcil7cmV0dXJuIGFsbExldmVscz90aGlzLnBhdGhMYWJlbHMuam9pbihzZXBhcmF0b3IpOnRoaXMubGFiZWw7fTtOb2RlLnByb3RvdHlwZS5pc1NhbWVOb2RlPWZ1bmN0aW9uIGlzU2FtZU5vZGUoY2hlY2tlZFZhbHVlKXt2YXIgdmFsdWU9dGhpcy5nZXRWYWx1ZUJ5T3B0aW9uKCk7cmV0dXJuIHRoaXMuY29uZmlnLm11bHRpcGxlJiZBcnJheS5pc0FycmF5KGNoZWNrZWRWYWx1ZSk/Y2hlY2tlZFZhbHVlLnNvbWUoZnVuY3Rpb24odmFsKXtyZXR1cm4gT2JqZWN0KHV0aWxfWyJpc0VxdWFsIl0pKHZhbCx2YWx1ZSk7fSk6T2JqZWN0KHV0aWxfWyJpc0VxdWFsIl0pKGNoZWNrZWRWYWx1ZSx2YWx1ZSk7fTtOb2RlLnByb3RvdHlwZS5icm9hZGNhc3Q9ZnVuY3Rpb24gYnJvYWRjYXN0KGV2ZW50KXtmb3IodmFyIF9sZW49YXJndW1lbnRzLmxlbmd0aCxhcmdzPUFycmF5KF9sZW4+MT9fbGVuLTE6MCksX2tleT0xO19rZXk8X2xlbjtfa2V5Kyspe2FyZ3NbX2tleS0xXT1hcmd1bWVudHNbX2tleV07fXZhciBoYW5kbGVyTmFtZT0nb25QYXJlbnQnK09iamVjdCh1dGlsX1siY2FwaXRhbGl6ZSJdKShldmVudCk7dGhpcy5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKXtpZihjaGlsZCl7Ly8gYm90dG9tIHVwCmNoaWxkLmJyb2FkY2FzdC5hcHBseShjaGlsZCxbZXZlbnRdLmNvbmNhdChhcmdzKSk7Y2hpbGRbaGFuZGxlck5hbWVdJiZjaGlsZFtoYW5kbGVyTmFtZV0uYXBwbHkoY2hpbGQsYXJncyk7fX0pO307Tm9kZS5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbiBlbWl0KGV2ZW50KXt2YXIgcGFyZW50PXRoaXMucGFyZW50O3ZhciBoYW5kbGVyTmFtZT0nb25DaGlsZCcrT2JqZWN0KHV0aWxfWyJjYXBpdGFsaXplIl0pKGV2ZW50KTtpZihwYXJlbnQpe2Zvcih2YXIgX2xlbjI9YXJndW1lbnRzLmxlbmd0aCxhcmdzPUFycmF5KF9sZW4yPjE/X2xlbjItMTowKSxfa2V5Mj0xO19rZXkyPF9sZW4yO19rZXkyKyspe2FyZ3NbX2tleTItMV09YXJndW1lbnRzW19rZXkyXTt9cGFyZW50W2hhbmRsZXJOYW1lXSYmcGFyZW50W2hhbmRsZXJOYW1lXS5hcHBseShwYXJlbnQsYXJncyk7cGFyZW50LmVtaXQuYXBwbHkocGFyZW50LFtldmVudF0uY29uY2F0KGFyZ3MpKTt9fTtOb2RlLnByb3RvdHlwZS5vblBhcmVudENoZWNrPWZ1bmN0aW9uIG9uUGFyZW50Q2hlY2soY2hlY2tlZCl7aWYoIXRoaXMuaXNEaXNhYmxlZCl7dGhpcy5zZXRDaGVja1N0YXRlKGNoZWNrZWQpO319O05vZGUucHJvdG90eXBlLm9uQ2hpbGRDaGVjaz1mdW5jdGlvbiBvbkNoaWxkQ2hlY2soKXt2YXIgY2hpbGRyZW49dGhpcy5jaGlsZHJlbjt2YXIgdmFsaWRDaGlsZHJlbj1jaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24oY2hpbGQpe3JldHVybiFjaGlsZC5pc0Rpc2FibGVkO30pO3ZhciBjaGVja2VkPXZhbGlkQ2hpbGRyZW4ubGVuZ3RoP3ZhbGlkQ2hpbGRyZW4uZXZlcnkoZnVuY3Rpb24oY2hpbGQpe3JldHVybiBjaGlsZC5jaGVja2VkO30pOmZhbHNlO3RoaXMuc2V0Q2hlY2tTdGF0ZShjaGVja2VkKTt9O05vZGUucHJvdG90eXBlLnNldENoZWNrU3RhdGU9ZnVuY3Rpb24gc2V0Q2hlY2tTdGF0ZShjaGVja2VkKXt2YXIgdG90YWxOdW09dGhpcy5jaGlsZHJlbi5sZW5ndGg7dmFyIGNoZWNrZWROdW09dGhpcy5jaGlsZHJlbi5yZWR1Y2UoZnVuY3Rpb24oYyxwKXt2YXIgbnVtPXAuY2hlY2tlZD8xOnAuaW5kZXRlcm1pbmF0ZT8wLjU6MDtyZXR1cm4gYytudW07fSwwKTt0aGlzLmNoZWNrZWQ9Y2hlY2tlZDt0aGlzLmluZGV0ZXJtaW5hdGU9Y2hlY2tlZE51bSE9PXRvdGFsTnVtJiZjaGVja2VkTnVtPjA7fTtOb2RlLnByb3RvdHlwZS5zeW5jQ2hlY2tTdGF0ZT1mdW5jdGlvbiBzeW5jQ2hlY2tTdGF0ZShjaGVja2VkVmFsdWUpe3ZhciB2YWx1ZT10aGlzLmdldFZhbHVlQnlPcHRpb24oKTt2YXIgY2hlY2tlZD10aGlzLmlzU2FtZU5vZGUoY2hlY2tlZFZhbHVlLHZhbHVlKTt0aGlzLmRvQ2hlY2soY2hlY2tlZCk7fTtOb2RlLnByb3RvdHlwZS5kb0NoZWNrPWZ1bmN0aW9uIGRvQ2hlY2soY2hlY2tlZCl7aWYodGhpcy5jaGVja2VkIT09Y2hlY2tlZCl7aWYodGhpcy5jb25maWcuY2hlY2tTdHJpY3RseSl7dGhpcy5jaGVja2VkPWNoZWNrZWQ7fWVsc2V7Ly8gYm90dG9tIHVwIHRvIHVuaWZ5IHRoZSBjYWxjdWxhdGlvbiBvZiB0aGUgaW5kZXRlcm1pbmF0ZSBzdGF0ZQp0aGlzLmJyb2FkY2FzdCgnY2hlY2snLGNoZWNrZWQpO3RoaXMuc2V0Q2hlY2tTdGF0ZShjaGVja2VkKTt0aGlzLmVtaXQoJ2NoZWNrJyk7fX19O25vZGVfY3JlYXRlQ2xhc3MoTm9kZSxbe2tleTonaXNEaXNhYmxlZCcsZ2V0OmZ1bmN0aW9uIGdldCgpe3ZhciBkYXRhPXRoaXMuZGF0YSxwYXJlbnQ9dGhpcy5wYXJlbnQsY29uZmlnPXRoaXMuY29uZmlnO3ZhciBkaXNhYmxlZEtleT1jb25maWcuZGlzYWJsZWQ7dmFyIGNoZWNrU3RyaWN0bHk9Y29uZmlnLmNoZWNrU3RyaWN0bHk7cmV0dXJuIGRhdGFbZGlzYWJsZWRLZXldfHwhY2hlY2tTdHJpY3RseSYmcGFyZW50JiZwYXJlbnQuaXNEaXNhYmxlZDt9fSx7a2V5Oidpc0xlYWYnLGdldDpmdW5jdGlvbiBnZXQoKXt2YXIgZGF0YT10aGlzLmRhdGEsbG9hZGVkPXRoaXMubG9hZGVkLGhhc0NoaWxkcmVuPXRoaXMuaGFzQ2hpbGRyZW4sY2hpbGRyZW49dGhpcy5jaGlsZHJlbjt2YXIgX2NvbmZpZzI9dGhpcy5jb25maWcsbGF6eT1fY29uZmlnMi5sYXp5LGxlYWZLZXk9X2NvbmZpZzIubGVhZjtpZihsYXp5KXt2YXIgaXNMZWFmPU9iamVjdChzaGFyZWRfWyJpc0RlZiJdKShkYXRhW2xlYWZLZXldKT9kYXRhW2xlYWZLZXldOmxvYWRlZD8hY2hpbGRyZW4ubGVuZ3RoOmZhbHNlO3RoaXMuaGFzQ2hpbGRyZW49IWlzTGVhZjtyZXR1cm4gaXNMZWFmO31yZXR1cm4haGFzQ2hpbGRyZW47fX1dKTtyZXR1cm4gTm9kZTt9KCk7LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBzcmNfbm9kZT1zcmNfbm9kZV9Ob2RlOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY2FzY2FkZXItcGFuZWwvc3JjL3N0b3JlLmpzCmZ1bmN0aW9uIHN0b3JlX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXt0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTt9fXZhciBmbGF0Tm9kZXM9ZnVuY3Rpb24gZmxhdE5vZGVzKGRhdGEsbGVhZk9ubHkpe3JldHVybiBkYXRhLnJlZHVjZShmdW5jdGlvbihyZXMsbm9kZSl7aWYobm9kZS5pc0xlYWYpe3Jlcy5wdXNoKG5vZGUpO31lbHNleyFsZWFmT25seSYmcmVzLnB1c2gobm9kZSk7cmVzPXJlcy5jb25jYXQoZmxhdE5vZGVzKG5vZGUuY2hpbGRyZW4sbGVhZk9ubHkpKTt9cmV0dXJuIHJlczt9LFtdKTt9O3ZhciBzdG9yZV9TdG9yZT1mdW5jdGlvbigpe2Z1bmN0aW9uIFN0b3JlKGRhdGEsY29uZmlnKXtzdG9yZV9jbGFzc0NhbGxDaGVjayh0aGlzLFN0b3JlKTt0aGlzLmNvbmZpZz1jb25maWc7dGhpcy5pbml0Tm9kZXMoZGF0YSk7fVN0b3JlLnByb3RvdHlwZS5pbml0Tm9kZXM9ZnVuY3Rpb24gaW5pdE5vZGVzKGRhdGEpe3ZhciBfdGhpcz10aGlzO2RhdGE9T2JqZWN0KHV0aWxfWyJjb2VyY2VUcnV0aHlWYWx1ZVRvQXJyYXkiXSkoZGF0YSk7dGhpcy5ub2Rlcz1kYXRhLm1hcChmdW5jdGlvbihub2RlRGF0YSl7cmV0dXJuIG5ldyBzcmNfbm9kZShub2RlRGF0YSxfdGhpcy5jb25maWcpO30pO3RoaXMuZmxhdHRlZE5vZGVzPXRoaXMuZ2V0RmxhdHRlZE5vZGVzKGZhbHNlLGZhbHNlKTt0aGlzLmxlYWZOb2Rlcz10aGlzLmdldEZsYXR0ZWROb2Rlcyh0cnVlLGZhbHNlKTt9O1N0b3JlLnByb3RvdHlwZS5hcHBlbmROb2RlPWZ1bmN0aW9uIGFwcGVuZE5vZGUobm9kZURhdGEscGFyZW50Tm9kZSl7dmFyIG5vZGU9bmV3IHNyY19ub2RlKG5vZGVEYXRhLHRoaXMuY29uZmlnLHBhcmVudE5vZGUpO3ZhciBjaGlsZHJlbj1wYXJlbnROb2RlP3BhcmVudE5vZGUuY2hpbGRyZW46dGhpcy5ub2RlcztjaGlsZHJlbi5wdXNoKG5vZGUpO307U3RvcmUucHJvdG90eXBlLmFwcGVuZE5vZGVzPWZ1bmN0aW9uIGFwcGVuZE5vZGVzKG5vZGVEYXRhTGlzdCxwYXJlbnROb2RlKXt2YXIgX3RoaXMyPXRoaXM7bm9kZURhdGFMaXN0PU9iamVjdCh1dGlsX1siY29lcmNlVHJ1dGh5VmFsdWVUb0FycmF5Il0pKG5vZGVEYXRhTGlzdCk7bm9kZURhdGFMaXN0LmZvckVhY2goZnVuY3Rpb24obm9kZURhdGEpe3JldHVybiBfdGhpczIuYXBwZW5kTm9kZShub2RlRGF0YSxwYXJlbnROb2RlKTt9KTt9O1N0b3JlLnByb3RvdHlwZS5nZXROb2Rlcz1mdW5jdGlvbiBnZXROb2Rlcygpe3JldHVybiB0aGlzLm5vZGVzO307U3RvcmUucHJvdG90eXBlLmdldEZsYXR0ZWROb2Rlcz1mdW5jdGlvbiBnZXRGbGF0dGVkTm9kZXMobGVhZk9ubHkpe3ZhciBjYWNoZWQ9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzFdOnRydWU7dmFyIGNhY2hlZE5vZGVzPWxlYWZPbmx5P3RoaXMubGVhZk5vZGVzOnRoaXMuZmxhdHRlZE5vZGVzO3JldHVybiBjYWNoZWQ/Y2FjaGVkTm9kZXM6ZmxhdE5vZGVzKHRoaXMubm9kZXMsbGVhZk9ubHkpO307U3RvcmUucHJvdG90eXBlLmdldE5vZGVCeVZhbHVlPWZ1bmN0aW9uIGdldE5vZGVCeVZhbHVlKHZhbHVlKXtpZih2YWx1ZSl7dmFyIG5vZGVzPXRoaXMuZ2V0RmxhdHRlZE5vZGVzKGZhbHNlLCF0aGlzLmNvbmZpZy5sYXp5KS5maWx0ZXIoZnVuY3Rpb24obm9kZSl7cmV0dXJuIE9iamVjdCh1dGlsX1sidmFsdWVFcXVhbHMiXSkobm9kZS5wYXRoLHZhbHVlKXx8bm9kZS52YWx1ZT09PXZhbHVlO30pO3JldHVybiBub2RlcyYmbm9kZXMubGVuZ3RoP25vZGVzWzBdOm51bGw7fXJldHVybiBudWxsO307cmV0dXJuIFN0b3JlO30oKTsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGNhc2NhZGVyX3BhbmVsX3NyY19zdG9yZT1zdG9yZV9TdG9yZTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jYXNjYWRlci1wYW5lbC9zcmMvY2FzY2FkZXItcGFuZWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgp2YXIgY2FzY2FkZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19leHRlbmRzPU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHRhcmdldCl7Zm9yKHZhciBpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7dmFyIHNvdXJjZT1hcmd1bWVudHNbaV07Zm9yKHZhciBrZXkgaW4gc291cmNlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLGtleSkpe3RhcmdldFtrZXldPXNvdXJjZVtrZXldO319fXJldHVybiB0YXJnZXQ7fTsvLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgY2FzY2FkZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19LZXlDb2RlPWFyaWFfdXRpbHNfZGVmYXVsdC5hLmtleXM7dmFyIERlZmF1bHRQcm9wcz17ZXhwYW5kVHJpZ2dlcjonY2xpY2snLC8vIG9yIGhvdmVyCm11bHRpcGxlOmZhbHNlLGNoZWNrU3RyaWN0bHk6ZmFsc2UsLy8gd2hldGhlciBhbGwgbm9kZXMgY2FuIGJlIHNlbGVjdGVkCmVtaXRQYXRoOnRydWUsLy8gd2V0aGVyIHRvIGVtaXQgYW4gYXJyYXkgb2YgYWxsIGxldmVscyB2YWx1ZSBpbiB3aGljaCBub2RlIGlzIGxvY2F0ZWQKbGF6eTpmYWxzZSxsYXp5TG9hZDp1dGlsX1sibm9vcCJdLHZhbHVlOid2YWx1ZScsbGFiZWw6J2xhYmVsJyxjaGlsZHJlbjonY2hpbGRyZW4nLGxlYWY6J2xlYWYnLGRpc2FibGVkOidkaXNhYmxlZCcsaG92ZXJUaHJlc2hvbGQ6NTAwfTt2YXIgY2FzY2FkZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19pc0xlYWY9ZnVuY3Rpb24gaXNMZWFmKGVsKXtyZXR1cm4hZWwuZ2V0QXR0cmlidXRlKCdhcmlhLW93bnMnKTt9O3ZhciBnZXRTaWJsaW5nPWZ1bmN0aW9uIGdldFNpYmxpbmcoZWwsZGlzdGFuY2Upe3ZhciBwYXJlbnROb2RlPWVsLnBhcmVudE5vZGU7aWYocGFyZW50Tm9kZSl7dmFyIHNpYmxpbmdzPXBhcmVudE5vZGUucXVlcnlTZWxlY3RvckFsbCgnLmVsLWNhc2NhZGVyLW5vZGVbdGFiaW5kZXg9Ii0xIl0nKTt2YXIgaW5kZXg9QXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChzaWJsaW5ncyxlbCk7cmV0dXJuIHNpYmxpbmdzW2luZGV4K2Rpc3RhbmNlXXx8bnVsbDt9cmV0dXJuIG51bGw7fTt2YXIgZ2V0TWVudUluZGV4PWZ1bmN0aW9uIGdldE1lbnVJbmRleChlbCxkaXN0YW5jZSl7aWYoIWVsKXJldHVybjt2YXIgcGllY2VzPWVsLmlkLnNwbGl0KCctJyk7cmV0dXJuIE51bWJlcihwaWVjZXNbcGllY2VzLmxlbmd0aC0yXSk7fTt2YXIgZm9jdXNOb2RlPWZ1bmN0aW9uIGZvY3VzTm9kZShlbCl7aWYoIWVsKXJldHVybjtlbC5mb2N1cygpOyFjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2lzTGVhZihlbCkmJmVsLmNsaWNrKCk7fTt2YXIgY2hlY2tOb2RlPWZ1bmN0aW9uIGNoZWNrTm9kZShlbCl7aWYoIWVsKXJldHVybjt2YXIgaW5wdXQ9ZWwucXVlcnlTZWxlY3RvcignaW5wdXQnKTtpZihpbnB1dCl7aW5wdXQuY2xpY2soKTt9ZWxzZSBpZihjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX2lzTGVhZihlbCkpe2VsLmNsaWNrKCk7fX07LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxDYXNjYWRlclBhbmVsJyxjb21wb25lbnRzOntDYXNjYWRlck1lbnU6Y2FzY2FkZXJfbWVudX0scHJvcHM6e3ZhbHVlOnt9LG9wdGlvbnM6QXJyYXkscHJvcHM6T2JqZWN0LGJvcmRlcjp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0scmVuZGVyTGFiZWw6RnVuY3Rpb259LHByb3ZpZGU6ZnVuY3Rpb24gcHJvdmlkZSgpe3JldHVybntwYW5lbDp0aGlzfTt9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybntjaGVja2VkVmFsdWU6bnVsbCxjaGVja2VkTm9kZVBhdGhzOltdLHN0b3JlOltdLG1lbnVzOltdLGFjdGl2ZVBhdGg6W10sbG9hZENvdW50OjB9O30sY29tcHV0ZWQ6e2NvbmZpZzpmdW5jdGlvbiBjb25maWcoKXtyZXR1cm4gbWVyZ2VfZGVmYXVsdCgpKGNhc2NhZGVyX3BhbmVsdnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfZXh0ZW5kcyh7fSxEZWZhdWx0UHJvcHMpLHRoaXMucHJvcHN8fHt9KTt9LG11bHRpcGxlOmZ1bmN0aW9uIG11bHRpcGxlKCl7cmV0dXJuIHRoaXMuY29uZmlnLm11bHRpcGxlO30sY2hlY2tTdHJpY3RseTpmdW5jdGlvbiBjaGVja1N0cmljdGx5KCl7cmV0dXJuIHRoaXMuY29uZmlnLmNoZWNrU3RyaWN0bHk7fSxsZWFmT25seTpmdW5jdGlvbiBsZWFmT25seSgpe3JldHVybiF0aGlzLmNoZWNrU3RyaWN0bHk7fSxpc0hvdmVyTWVudTpmdW5jdGlvbiBpc0hvdmVyTWVudSgpe3JldHVybiB0aGlzLmNvbmZpZy5leHBhbmRUcmlnZ2VyPT09J2hvdmVyJzt9LHJlbmRlckxhYmVsRm46ZnVuY3Rpb24gcmVuZGVyTGFiZWxGbigpe3JldHVybiB0aGlzLnJlbmRlckxhYmVsfHx0aGlzLiRzY29wZWRTbG90cy5kZWZhdWx0O319LHdhdGNoOntvcHRpb25zOntoYW5kbGVyOmZ1bmN0aW9uIGhhbmRsZXIoKXt0aGlzLmluaXRTdG9yZSgpO30saW1tZWRpYXRlOnRydWUsZGVlcDp0cnVlfSx2YWx1ZTpmdW5jdGlvbiB2YWx1ZSgpe3RoaXMuc3luY0NoZWNrZWRWYWx1ZSgpO3RoaXMuY2hlY2tTdHJpY3RseSYmdGhpcy5jYWxjdWxhdGVDaGVja2VkTm9kZVBhdGhzKCk7fSxjaGVja2VkVmFsdWU6ZnVuY3Rpb24gY2hlY2tlZFZhbHVlKHZhbCl7aWYoIU9iamVjdCh1dGlsX1siaXNFcXVhbCJdKSh2YWwsdGhpcy52YWx1ZSkpe3RoaXMuY2hlY2tTdHJpY3RseSYmdGhpcy5jYWxjdWxhdGVDaGVja2VkTm9kZVBhdGhzKCk7dGhpcy4kZW1pdCgnaW5wdXQnLHZhbCk7dGhpcy4kZW1pdCgnY2hhbmdlJyx2YWwpO319fSxtb3VudGVkOmZ1bmN0aW9uIG1vdW50ZWQoKXtpZighT2JqZWN0KHV0aWxfWyJpc0VtcHR5Il0pKHRoaXMudmFsdWUpKXt0aGlzLnN5bmNDaGVja2VkVmFsdWUoKTt9fSxtZXRob2RzOntpbml0U3RvcmU6ZnVuY3Rpb24gaW5pdFN0b3JlKCl7dmFyIGNvbmZpZz10aGlzLmNvbmZpZyxvcHRpb25zPXRoaXMub3B0aW9ucztpZihjb25maWcubGF6eSYmT2JqZWN0KHV0aWxfWyJpc0VtcHR5Il0pKG9wdGlvbnMpKXt0aGlzLmxhenlMb2FkKCk7fWVsc2V7dGhpcy5zdG9yZT1uZXcgY2FzY2FkZXJfcGFuZWxfc3JjX3N0b3JlKG9wdGlvbnMsY29uZmlnKTt0aGlzLm1lbnVzPVt0aGlzLnN0b3JlLmdldE5vZGVzKCldO3RoaXMuc3luY01lbnVTdGF0ZSgpO319LHN5bmNDaGVja2VkVmFsdWU6ZnVuY3Rpb24gc3luY0NoZWNrZWRWYWx1ZSgpe3ZhciB2YWx1ZT10aGlzLnZhbHVlLGNoZWNrZWRWYWx1ZT10aGlzLmNoZWNrZWRWYWx1ZTtpZighT2JqZWN0KHV0aWxfWyJpc0VxdWFsIl0pKHZhbHVlLGNoZWNrZWRWYWx1ZSkpe3RoaXMuYWN0aXZlUGF0aD1bXTt0aGlzLmNoZWNrZWRWYWx1ZT12YWx1ZTt0aGlzLnN5bmNNZW51U3RhdGUoKTt9fSxzeW5jTWVudVN0YXRlOmZ1bmN0aW9uIHN5bmNNZW51U3RhdGUoKXt2YXIgbXVsdGlwbGU9dGhpcy5tdWx0aXBsZSxjaGVja1N0cmljdGx5PXRoaXMuY2hlY2tTdHJpY3RseTt0aGlzLnN5bmNBY3RpdmVQYXRoKCk7bXVsdGlwbGUmJnRoaXMuc3luY011bHRpQ2hlY2tTdGF0ZSgpO2NoZWNrU3RyaWN0bHkmJnRoaXMuY2FsY3VsYXRlQ2hlY2tlZE5vZGVQYXRocygpO3RoaXMuJG5leHRUaWNrKHRoaXMuc2Nyb2xsSW50b1ZpZXcpO30sc3luY011bHRpQ2hlY2tTdGF0ZTpmdW5jdGlvbiBzeW5jTXVsdGlDaGVja1N0YXRlKCl7dmFyIF90aGlzPXRoaXM7dmFyIG5vZGVzPXRoaXMuZ2V0RmxhdHRlZE5vZGVzKHRoaXMubGVhZk9ubHkpO25vZGVzLmZvckVhY2goZnVuY3Rpb24obm9kZSl7bm9kZS5zeW5jQ2hlY2tTdGF0ZShfdGhpcy5jaGVja2VkVmFsdWUpO30pO30sc3luY0FjdGl2ZVBhdGg6ZnVuY3Rpb24gc3luY0FjdGl2ZVBhdGgoKXt2YXIgX3RoaXMyPXRoaXM7dmFyIHN0b3JlPXRoaXMuc3RvcmUsbXVsdGlwbGU9dGhpcy5tdWx0aXBsZSxhY3RpdmVQYXRoPXRoaXMuYWN0aXZlUGF0aCxjaGVja2VkVmFsdWU9dGhpcy5jaGVja2VkVmFsdWU7aWYoIU9iamVjdCh1dGlsX1siaXNFbXB0eSJdKShhY3RpdmVQYXRoKSl7dmFyIG5vZGVzPWFjdGl2ZVBhdGgubWFwKGZ1bmN0aW9uKG5vZGUpe3JldHVybiBfdGhpczIuZ2V0Tm9kZUJ5VmFsdWUobm9kZS5nZXRWYWx1ZSgpKTt9KTt0aGlzLmV4cGFuZE5vZGVzKG5vZGVzKTt9ZWxzZSBpZighT2JqZWN0KHV0aWxfWyJpc0VtcHR5Il0pKGNoZWNrZWRWYWx1ZSkpe3ZhciB2YWx1ZT1tdWx0aXBsZT9jaGVja2VkVmFsdWVbMF06Y2hlY2tlZFZhbHVlO3ZhciBjaGVja2VkTm9kZT10aGlzLmdldE5vZGVCeVZhbHVlKHZhbHVlKXx8e307dmFyIF9ub2Rlcz0oY2hlY2tlZE5vZGUucGF0aE5vZGVzfHxbXSkuc2xpY2UoMCwtMSk7dGhpcy5leHBhbmROb2Rlcyhfbm9kZXMpO31lbHNle3RoaXMuYWN0aXZlUGF0aD1bXTt0aGlzLm1lbnVzPVtzdG9yZS5nZXROb2RlcygpXTt9fSxleHBhbmROb2RlczpmdW5jdGlvbiBleHBhbmROb2Rlcyhub2Rlcyl7dmFyIF90aGlzMz10aGlzO25vZGVzLmZvckVhY2goZnVuY3Rpb24obm9kZSl7cmV0dXJuIF90aGlzMy5oYW5kbGVFeHBhbmQobm9kZSx0cnVlLyogc2lsZW50ICovKTt9KTt9LGNhbGN1bGF0ZUNoZWNrZWROb2RlUGF0aHM6ZnVuY3Rpb24gY2FsY3VsYXRlQ2hlY2tlZE5vZGVQYXRocygpe3ZhciBfdGhpczQ9dGhpczt2YXIgY2hlY2tlZFZhbHVlPXRoaXMuY2hlY2tlZFZhbHVlLG11bHRpcGxlPXRoaXMubXVsdGlwbGU7dmFyIGNoZWNrZWRWYWx1ZXM9bXVsdGlwbGU/T2JqZWN0KHV0aWxfWyJjb2VyY2VUcnV0aHlWYWx1ZVRvQXJyYXkiXSkoY2hlY2tlZFZhbHVlKTpbY2hlY2tlZFZhbHVlXTt0aGlzLmNoZWNrZWROb2RlUGF0aHM9Y2hlY2tlZFZhbHVlcy5tYXAoZnVuY3Rpb24odil7dmFyIGNoZWNrZWROb2RlPV90aGlzNC5nZXROb2RlQnlWYWx1ZSh2KTtyZXR1cm4gY2hlY2tlZE5vZGU/Y2hlY2tlZE5vZGUucGF0aE5vZGVzOltdO30pO30saGFuZGxlS2V5RG93bjpmdW5jdGlvbiBoYW5kbGVLZXlEb3duKGUpe3ZhciB0YXJnZXQ9ZS50YXJnZXQsa2V5Q29kZT1lLmtleUNvZGU7c3dpdGNoKGtleUNvZGUpe2Nhc2UgY2FzY2FkZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19LZXlDb2RlLnVwOnZhciBwcmV2PWdldFNpYmxpbmcodGFyZ2V0LC0xKTtmb2N1c05vZGUocHJldik7YnJlYWs7Y2FzZSBjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0tleUNvZGUuZG93bjp2YXIgbmV4dD1nZXRTaWJsaW5nKHRhcmdldCwxKTtmb2N1c05vZGUobmV4dCk7YnJlYWs7Y2FzZSBjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0tleUNvZGUubGVmdDp2YXIgcHJlTWVudT10aGlzLiRyZWZzLm1lbnVbZ2V0TWVudUluZGV4KHRhcmdldCktMV07aWYocHJlTWVudSl7dmFyIGV4cGFuZGVkTm9kZT1wcmVNZW51LiRlbC5xdWVyeVNlbGVjdG9yKCcuZWwtY2FzY2FkZXItbm9kZVthcmlhLWV4cGFuZGVkPSJ0cnVlIl0nKTtmb2N1c05vZGUoZXhwYW5kZWROb2RlKTt9YnJlYWs7Y2FzZSBjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0tleUNvZGUucmlnaHQ6dmFyIG5leHRNZW51PXRoaXMuJHJlZnMubWVudVtnZXRNZW51SW5kZXgodGFyZ2V0KSsxXTtpZihuZXh0TWVudSl7dmFyIGZpcnN0Tm9kZT1uZXh0TWVudS4kZWwucXVlcnlTZWxlY3RvcignLmVsLWNhc2NhZGVyLW5vZGVbdGFiaW5kZXg9Ii0xIl0nKTtmb2N1c05vZGUoZmlyc3ROb2RlKTt9YnJlYWs7Y2FzZSBjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0tleUNvZGUuZW50ZXI6Y2hlY2tOb2RlKHRhcmdldCk7YnJlYWs7Y2FzZSBjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzX0tleUNvZGUuZXNjOmNhc2UgY2FzY2FkZXJfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc19LZXlDb2RlLnRhYjp0aGlzLiRlbWl0KCdjbG9zZScpO2JyZWFrO2RlZmF1bHQ6cmV0dXJuO319LGhhbmRsZUV4cGFuZDpmdW5jdGlvbiBoYW5kbGVFeHBhbmQobm9kZSxzaWxlbnQpe3ZhciBhY3RpdmVQYXRoPXRoaXMuYWN0aXZlUGF0aDt2YXIgbGV2ZWw9bm9kZS5sZXZlbDt2YXIgcGF0aD1hY3RpdmVQYXRoLnNsaWNlKDAsbGV2ZWwtMSk7dmFyIG1lbnVzPXRoaXMubWVudXMuc2xpY2UoMCxsZXZlbCk7aWYoIW5vZGUuaXNMZWFmKXtwYXRoLnB1c2gobm9kZSk7bWVudXMucHVzaChub2RlLmNoaWxkcmVuKTt9dGhpcy5hY3RpdmVQYXRoPXBhdGg7dGhpcy5tZW51cz1tZW51cztpZighc2lsZW50KXt2YXIgcGF0aFZhbHVlcz1wYXRoLm1hcChmdW5jdGlvbihub2RlKXtyZXR1cm4gbm9kZS5nZXRWYWx1ZSgpO30pO3ZhciBhY3RpdmVQYXRoVmFsdWVzPWFjdGl2ZVBhdGgubWFwKGZ1bmN0aW9uKG5vZGUpe3JldHVybiBub2RlLmdldFZhbHVlKCk7fSk7aWYoIU9iamVjdCh1dGlsX1sidmFsdWVFcXVhbHMiXSkocGF0aFZhbHVlcyxhY3RpdmVQYXRoVmFsdWVzKSl7dGhpcy4kZW1pdCgnYWN0aXZlLWl0ZW0tY2hhbmdlJyxwYXRoVmFsdWVzKTsvLyBEZXByZWNhdGVkCnRoaXMuJGVtaXQoJ2V4cGFuZC1jaGFuZ2UnLHBhdGhWYWx1ZXMpO319fSxoYW5kbGVDaGVja0NoYW5nZTpmdW5jdGlvbiBoYW5kbGVDaGVja0NoYW5nZSh2YWx1ZSl7dGhpcy5jaGVja2VkVmFsdWU9dmFsdWU7fSxsYXp5TG9hZDpmdW5jdGlvbiBsYXp5TG9hZChub2RlLG9uRnVsbGZpbGVkKXt2YXIgX3RoaXM1PXRoaXM7dmFyIGNvbmZpZz10aGlzLmNvbmZpZztpZighbm9kZSl7bm9kZT1ub2RlfHx7cm9vdDp0cnVlLGxldmVsOjB9O3RoaXMuc3RvcmU9bmV3IGNhc2NhZGVyX3BhbmVsX3NyY19zdG9yZShbXSxjb25maWcpO3RoaXMubWVudXM9W3RoaXMuc3RvcmUuZ2V0Tm9kZXMoKV07fW5vZGUubG9hZGluZz10cnVlO3ZhciByZXNvbHZlPWZ1bmN0aW9uIHJlc29sdmUoZGF0YUxpc3Qpe3ZhciBwYXJlbnQ9bm9kZS5yb290P251bGw6bm9kZTtkYXRhTGlzdCYmZGF0YUxpc3QubGVuZ3RoJiZfdGhpczUuc3RvcmUuYXBwZW5kTm9kZXMoZGF0YUxpc3QscGFyZW50KTtub2RlLmxvYWRpbmc9ZmFsc2U7bm9kZS5sb2FkZWQ9dHJ1ZTsvLyBkaXNwb3NlIGRlZmF1bHQgdmFsdWUgb24gbGF6eSBsb2FkIG1vZGUKaWYoQXJyYXkuaXNBcnJheShfdGhpczUuY2hlY2tlZFZhbHVlKSl7dmFyIG5vZGVWYWx1ZT1fdGhpczUuY2hlY2tlZFZhbHVlW190aGlzNS5sb2FkQ291bnQrK107dmFyIHZhbHVlS2V5PV90aGlzNS5jb25maWcudmFsdWU7dmFyIGxlYWZLZXk9X3RoaXM1LmNvbmZpZy5sZWFmO2lmKEFycmF5LmlzQXJyYXkoZGF0YUxpc3QpJiZkYXRhTGlzdC5maWx0ZXIoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIGl0ZW1bdmFsdWVLZXldPT09bm9kZVZhbHVlO30pLmxlbmd0aD4wKXt2YXIgY2hlY2tlZE5vZGU9X3RoaXM1LnN0b3JlLmdldE5vZGVCeVZhbHVlKG5vZGVWYWx1ZSk7aWYoIWNoZWNrZWROb2RlLmRhdGFbbGVhZktleV0pe190aGlzNS5sYXp5TG9hZChjaGVja2VkTm9kZSxmdW5jdGlvbigpe190aGlzNS5oYW5kbGVFeHBhbmQoY2hlY2tlZE5vZGUpO30pO31pZihfdGhpczUubG9hZENvdW50PT09X3RoaXM1LmNoZWNrZWRWYWx1ZS5sZW5ndGgpe190aGlzNS4kcGFyZW50LmNvbXB1dGVQcmVzZW50VGV4dCgpO319fW9uRnVsbGZpbGVkJiZvbkZ1bGxmaWxlZChkYXRhTGlzdCk7fTtjb25maWcubGF6eUxvYWQobm9kZSxyZXNvbHZlKTt9LC8qKgogICAgICogcHVibGljIG1ldGhvZHMKICAgICovY2FsY3VsYXRlTXVsdGlDaGVja2VkVmFsdWU6ZnVuY3Rpb24gY2FsY3VsYXRlTXVsdGlDaGVja2VkVmFsdWUoKXt0aGlzLmNoZWNrZWRWYWx1ZT10aGlzLmdldENoZWNrZWROb2Rlcyh0aGlzLmxlYWZPbmx5KS5tYXAoZnVuY3Rpb24obm9kZSl7cmV0dXJuIG5vZGUuZ2V0VmFsdWVCeU9wdGlvbigpO30pO30sc2Nyb2xsSW50b1ZpZXc6ZnVuY3Rpb24gc2Nyb2xsSW50b1ZpZXcoKXtpZih0aGlzLiRpc1NlcnZlcilyZXR1cm47dmFyIG1lbnVzPXRoaXMuJHJlZnMubWVudXx8W107bWVudXMuZm9yRWFjaChmdW5jdGlvbihtZW51KXt2YXIgbWVudUVsZW1lbnQ9bWVudS4kZWw7aWYobWVudUVsZW1lbnQpe3ZhciBjb250YWluZXI9bWVudUVsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsLXNjcm9sbGJhcl9fd3JhcCcpO3ZhciBhY3RpdmVOb2RlPW1lbnVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbC1jYXNjYWRlci1ub2RlLmlzLWFjdGl2ZScpfHxtZW51RWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWwtY2FzY2FkZXItbm9kZS5pbi1hY3RpdmUtcGF0aCcpO3Njcm9sbF9pbnRvX3ZpZXdfZGVmYXVsdCgpKGNvbnRhaW5lcixhY3RpdmVOb2RlKTt9fSk7fSxnZXROb2RlQnlWYWx1ZTpmdW5jdGlvbiBnZXROb2RlQnlWYWx1ZSh2YWwpe3JldHVybiB0aGlzLnN0b3JlLmdldE5vZGVCeVZhbHVlKHZhbCk7fSxnZXRGbGF0dGVkTm9kZXM6ZnVuY3Rpb24gZ2V0RmxhdHRlZE5vZGVzKGxlYWZPbmx5KXt2YXIgY2FjaGVkPSF0aGlzLmNvbmZpZy5sYXp5O3JldHVybiB0aGlzLnN0b3JlLmdldEZsYXR0ZWROb2RlcyhsZWFmT25seSxjYWNoZWQpO30sZ2V0Q2hlY2tlZE5vZGVzOmZ1bmN0aW9uIGdldENoZWNrZWROb2RlcyhsZWFmT25seSl7dmFyIGNoZWNrZWRWYWx1ZT10aGlzLmNoZWNrZWRWYWx1ZSxtdWx0aXBsZT10aGlzLm11bHRpcGxlO2lmKG11bHRpcGxlKXt2YXIgbm9kZXM9dGhpcy5nZXRGbGF0dGVkTm9kZXMobGVhZk9ubHkpO3JldHVybiBub2Rlcy5maWx0ZXIoZnVuY3Rpb24obm9kZSl7cmV0dXJuIG5vZGUuY2hlY2tlZDt9KTt9ZWxzZXtyZXR1cm4gT2JqZWN0KHV0aWxfWyJpc0VtcHR5Il0pKGNoZWNrZWRWYWx1ZSk/W106W3RoaXMuZ2V0Tm9kZUJ5VmFsdWUoY2hlY2tlZFZhbHVlKV07fX0sY2xlYXJDaGVja2VkTm9kZXM6ZnVuY3Rpb24gY2xlYXJDaGVja2VkTm9kZXMoKXt2YXIgY29uZmlnPXRoaXMuY29uZmlnLGxlYWZPbmx5PXRoaXMubGVhZk9ubHk7dmFyIG11bHRpcGxlPWNvbmZpZy5tdWx0aXBsZSxlbWl0UGF0aD1jb25maWcuZW1pdFBhdGg7aWYobXVsdGlwbGUpe3RoaXMuZ2V0Q2hlY2tlZE5vZGVzKGxlYWZPbmx5KS5maWx0ZXIoZnVuY3Rpb24obm9kZSl7cmV0dXJuIW5vZGUuaXNEaXNhYmxlZDt9KS5mb3JFYWNoKGZ1bmN0aW9uKG5vZGUpe3JldHVybiBub2RlLmRvQ2hlY2soZmFsc2UpO30pO3RoaXMuY2FsY3VsYXRlTXVsdGlDaGVja2VkVmFsdWUoKTt9ZWxzZXt0aGlzLmNoZWNrZWRWYWx1ZT1lbWl0UGF0aD9bXTpudWxsO319fX07Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jYXNjYWRlci1wYW5lbC9zcmMvY2FzY2FkZXItcGFuZWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHNyY19jYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz1jYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2Nhc2NhZGVyLXBhbmVsL3NyYy9jYXNjYWRlci1wYW5lbC52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBjYXNjYWRlcl9wYW5lbF9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHNyY19jYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzM0OTMyMzQ2X3JlbmRlcixjYXNjYWRlcl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkXzM0OTMyMzQ2X3N0YXRpY1JlbmRlckZucyxmYWxzZSxudWxsLG51bGwsbnVsbCk7LyogaG90IHJlbG9hZCAqL2lmKGZhbHNlKXt2YXIgY2FzY2FkZXJfcGFuZWxfYXBpO31jYXNjYWRlcl9wYW5lbF9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL2Nhc2NhZGVyLXBhbmVsL3NyYy9jYXNjYWRlci1wYW5lbC52dWUiOy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgY2FzY2FkZXJfcGFuZWw9Y2FzY2FkZXJfcGFuZWxfY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jYXNjYWRlci1wYW5lbC9pbmRleC5qcwovKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL2Nhc2NhZGVyX3BhbmVsLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KGNhc2NhZGVyX3BhbmVsLm5hbWUsY2FzY2FkZXJfcGFuZWwpO307LyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19jYXNjYWRlcl9wYW5lbD1jYXNjYWRlcl9wYW5lbDsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9hdmF0YXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGF2YXRhcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxBdmF0YXInLHByb3BzOntzaXplOnt0eXBlOltOdW1iZXIsU3RyaW5nXSx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7aWYodHlwZW9mIHZhbD09PSdzdHJpbmcnKXtyZXR1cm5bJ2xhcmdlJywnbWVkaXVtJywnc21hbGwnXS5pbmNsdWRlcyh2YWwpO31yZXR1cm4gdHlwZW9mIHZhbD09PSdudW1iZXInO319LHNoYXBlOnt0eXBlOlN0cmluZyxkZWZhdWx0OidjaXJjbGUnLHZhbGlkYXRvcjpmdW5jdGlvbiB2YWxpZGF0b3IodmFsKXtyZXR1cm5bJ2NpcmNsZScsJ3NxdWFyZSddLmluY2x1ZGVzKHZhbCk7fX0saWNvbjpTdHJpbmcsc3JjOlN0cmluZyxhbHQ6U3RyaW5nLHNyY1NldDpTdHJpbmcsZXJyb3I6RnVuY3Rpb24sZml0Ont0eXBlOlN0cmluZyxkZWZhdWx0Oidjb3Zlcid9fSxkYXRhOmZ1bmN0aW9uIGRhdGEoKXtyZXR1cm57aXNJbWFnZUV4aXN0OnRydWV9O30sY29tcHV0ZWQ6e2F2YXRhckNsYXNzOmZ1bmN0aW9uIGF2YXRhckNsYXNzKCl7dmFyIHNpemU9dGhpcy5zaXplLGljb249dGhpcy5pY29uLHNoYXBlPXRoaXMuc2hhcGU7dmFyIGNsYXNzTGlzdD1bJ2VsLWF2YXRhciddO2lmKHNpemUmJnR5cGVvZiBzaXplPT09J3N0cmluZycpe2NsYXNzTGlzdC5wdXNoKCdlbC1hdmF0YXItLScrc2l6ZSk7fWlmKGljb24pe2NsYXNzTGlzdC5wdXNoKCdlbC1hdmF0YXItLWljb24nKTt9aWYoc2hhcGUpe2NsYXNzTGlzdC5wdXNoKCdlbC1hdmF0YXItLScrc2hhcGUpO31yZXR1cm4gY2xhc3NMaXN0LmpvaW4oJyAnKTt9fSxtZXRob2RzOntoYW5kbGVFcnJvcjpmdW5jdGlvbiBoYW5kbGVFcnJvcigpe3ZhciBlcnJvcj10aGlzLmVycm9yO3ZhciBlcnJvckZsYWc9ZXJyb3I/ZXJyb3IoKTp1bmRlZmluZWQ7aWYoZXJyb3JGbGFnIT09ZmFsc2Upe3RoaXMuaXNJbWFnZUV4aXN0PWZhbHNlO319LHJlbmRlckF2YXRhcjpmdW5jdGlvbiByZW5kZXJBdmF0YXIoKXt2YXIgaD10aGlzLiRjcmVhdGVFbGVtZW50O3ZhciBpY29uPXRoaXMuaWNvbixzcmM9dGhpcy5zcmMsYWx0PXRoaXMuYWx0LGlzSW1hZ2VFeGlzdD10aGlzLmlzSW1hZ2VFeGlzdCxzcmNTZXQ9dGhpcy5zcmNTZXQsZml0PXRoaXMuZml0O2lmKGlzSW1hZ2VFeGlzdCYmc3JjKXtyZXR1cm4gaCgnaW1nJyx7YXR0cnM6e3NyYzpzcmMsYWx0OmFsdCxzcmNTZXQ6c3JjU2V0fSxvbjp7J2Vycm9yJzp0aGlzLmhhbmRsZUVycm9yfSxzdHlsZTp7J29iamVjdC1maXQnOmZpdH19KTt9aWYoaWNvbil7cmV0dXJuIGgoJ2knLHsnY2xhc3MnOmljb259KTt9cmV0dXJuIHRoaXMuJHNsb3RzLmRlZmF1bHQ7fX0scmVuZGVyOmZ1bmN0aW9uIHJlbmRlcigpe3ZhciBoPWFyZ3VtZW50c1swXTt2YXIgYXZhdGFyQ2xhc3M9dGhpcy5hdmF0YXJDbGFzcyxzaXplPXRoaXMuc2l6ZTt2YXIgc2l6ZVN0eWxlPXR5cGVvZiBzaXplPT09J251bWJlcic/e2hlaWdodDpzaXplKydweCcsd2lkdGg6c2l6ZSsncHgnLGxpbmVIZWlnaHQ6c2l6ZSsncHgnfTp7fTtyZXR1cm4gaCgnc3BhbicseydjbGFzcyc6YXZhdGFyQ2xhc3Msc3R5bGU6c2l6ZVN0eWxlfSxbdGhpcy5yZW5kZXJBdmF0YXIoKV0pO319Oy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYXZhdGFyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqL3ZhciBwYWNrYWdlc19hdmF0YXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189YXZhdGFyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvYXZhdGFyL3NyYy9tYWluLnZ1ZQp2YXIgc3JjX21haW5fcmVuZGVyLHNyY19tYWluX3N0YXRpY1JlbmRlckZuczsvKiBub3JtYWxpemUgY29tcG9uZW50ICovdmFyIGF2YXRhcl9zcmNfbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhY2thZ2VzX2F2YXRhcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxzcmNfbWFpbl9yZW5kZXIsc3JjX21haW5fc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBhdmF0YXJfc3JjX21haW5fYXBpO31hdmF0YXJfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9hdmF0YXIvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGF2YXRhcl9zcmNfbWFpbj1hdmF0YXJfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9hdmF0YXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9hdmF0YXJfc3JjX21haW4uaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoYXZhdGFyX3NyY19tYWluLm5hbWUsYXZhdGFyX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgYXZhdGFyPWF2YXRhcl9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2RyYXdlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9YTQ4ODUyNjQmCnZhciBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfYTQ4ODUyNjRfcmVuZGVyPWZ1bmN0aW9uIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF9hNDg4NTI2NF9yZW5kZXIoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoInRyYW5zaXRpb24iLHthdHRyczp7bmFtZToiZWwtZHJhd2VyLWZhZGUifSxvbjp7ImFmdGVyLWVudGVyIjpfdm0uYWZ0ZXJFbnRlciwiYWZ0ZXItbGVhdmUiOl92bS5hZnRlckxlYXZlfX0sW19jKCJkaXYiLHtkaXJlY3RpdmVzOlt7bmFtZToic2hvdyIscmF3TmFtZToidi1zaG93Iix2YWx1ZTpfdm0udmlzaWJsZSxleHByZXNzaW9uOiJ2aXNpYmxlIn1dLHN0YXRpY0NsYXNzOiJlbC1kcmF3ZXJfX3dyYXBwZXIiLGF0dHJzOnt0YWJpbmRleDoiLTEifX0sW19jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtZHJhd2VyX19jb250YWluZXIiLGNsYXNzOl92bS52aXNpYmxlJiYiZWwtZHJhd2VyX19vcGVuIixhdHRyczp7cm9sZToiZG9jdW1lbnQiLHRhYmluZGV4OiItMSJ9LG9uOntjbGljazpmdW5jdGlvbiBjbGljaygkZXZlbnQpe2lmKCRldmVudC50YXJnZXQhPT0kZXZlbnQuY3VycmVudFRhcmdldCl7cmV0dXJuIG51bGw7fXJldHVybiBfdm0uaGFuZGxlV3JhcHBlckNsaWNrKCRldmVudCk7fX19LFtfYygiZGl2Iix7cmVmOiJkcmF3ZXIiLHN0YXRpY0NsYXNzOiJlbC1kcmF3ZXIiLGNsYXNzOltfdm0uZGlyZWN0aW9uLF92bS5jdXN0b21DbGFzc10sc3R5bGU6X3ZtLmlzSG9yaXpvbnRhbD8id2lkdGg6ICIrX3ZtLmRyYXdlclNpemU6ImhlaWdodDogIitfdm0uZHJhd2VyU2l6ZSxhdHRyczp7ImFyaWEtbW9kYWwiOiJ0cnVlIiwiYXJpYS1sYWJlbGxlZGJ5IjoiZWwtZHJhd2VyX190aXRsZSIsImFyaWEtbGFiZWwiOl92bS50aXRsZSxyb2xlOiJkaWFsb2ciLHRhYmluZGV4OiItMSJ9fSxbX3ZtLndpdGhIZWFkZXI/X2MoImhlYWRlciIse3N0YXRpY0NsYXNzOiJlbC1kcmF3ZXJfX2hlYWRlciIsYXR0cnM6e2lkOiJlbC1kcmF3ZXJfX3RpdGxlIn19LFtfdm0uX3QoInRpdGxlIixbX2MoInNwYW4iLHthdHRyczp7cm9sZToiaGVhZGluZyIsdGl0bGU6X3ZtLnRpdGxlfX0sW192bS5fdihfdm0uX3MoX3ZtLnRpdGxlKSldKV0pLF92bS5zaG93Q2xvc2U/X2MoImJ1dHRvbiIse3N0YXRpY0NsYXNzOiJlbC1kcmF3ZXJfX2Nsb3NlLWJ0biIsYXR0cnM6eyJhcmlhLWxhYmVsIjoiY2xvc2UgIisoX3ZtLnRpdGxlfHwiZHJhd2VyIiksdHlwZToiYnV0dG9uIn0sb246e2NsaWNrOl92bS5jbG9zZURyYXdlcn19LFtfYygiaSIse3N0YXRpY0NsYXNzOiJlbC1kaWFsb2dfX2Nsb3NlIGVsLWljb24gZWwtaWNvbi1jbG9zZSJ9KV0pOl92bS5fZSgpXSwyKTpfdm0uX2UoKSxfdm0ucmVuZGVyZWQ/X2MoInNlY3Rpb24iLHtzdGF0aWNDbGFzczoiZWwtZHJhd2VyX19ib2R5In0sW192bS5fdCgiZGVmYXVsdCIpXSwyKTpfdm0uX2UoKV0pXSldKV0pO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF9hNDg4NTI2NF9zdGF0aWNSZW5kZXJGbnM9W107bWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2E0ODg1MjY0X3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kcmF3ZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWE0ODg1MjY0JgovLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9kcmF3ZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGRyYXdlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxEcmF3ZXInLG1peGluczpbcG9wdXBfZGVmYXVsdC5hLGVtaXR0ZXJfZGVmYXVsdC5hXSxwcm9wczp7YXBwZW5kVG9Cb2R5Ont0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0sYmVmb3JlQ2xvc2U6e3R5cGU6RnVuY3Rpb259LGN1c3RvbUNsYXNzOnt0eXBlOlN0cmluZyxkZWZhdWx0OicnfSxjbG9zZU9uUHJlc3NFc2NhcGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGRlc3Ryb3lPbkNsb3NlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDpmYWxzZX0sbW9kYWw6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LGRpcmVjdGlvbjp7dHlwZTpTdHJpbmcsZGVmYXVsdDoncnRsJyx2YWxpZGF0b3I6ZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCl7cmV0dXJuWydsdHInLCdydGwnLCd0dGInLCdidHQnXS5pbmRleE9mKHZhbCkhPT0tMTt9fSxtb2RhbEFwcGVuZFRvQm9keTp7dHlwZTpCb29sZWFuLGRlZmF1bHQ6dHJ1ZX0sc2hvd0Nsb3NlOnt0eXBlOkJvb2xlYW4sZGVmYXVsdDp0cnVlfSxzaXplOnt0eXBlOltOdW1iZXIsU3RyaW5nXSxkZWZhdWx0OiczMCUnfSx0aXRsZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30sdmlzaWJsZTp7dHlwZTpCb29sZWFufSx3cmFwcGVyQ2xvc2FibGU6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9LHdpdGhIZWFkZXI6e3R5cGU6Qm9vbGVhbixkZWZhdWx0OnRydWV9fSxjb21wdXRlZDp7aXNIb3Jpem9udGFsOmZ1bmN0aW9uIGlzSG9yaXpvbnRhbCgpe3JldHVybiB0aGlzLmRpcmVjdGlvbj09PSdydGwnfHx0aGlzLmRpcmVjdGlvbj09PSdsdHInO30sZHJhd2VyU2l6ZTpmdW5jdGlvbiBkcmF3ZXJTaXplKCl7cmV0dXJuIHR5cGVvZiB0aGlzLnNpemU9PT0nbnVtYmVyJz90aGlzLnNpemUrJ3B4Jzp0aGlzLnNpemU7fX0sZGF0YTpmdW5jdGlvbiBkYXRhKCl7cmV0dXJue2Nsb3NlZDpmYWxzZSxwcmV2QWN0aXZlRWxlbWVudDpudWxsfTt9LHdhdGNoOnt2aXNpYmxlOmZ1bmN0aW9uIHZpc2libGUodmFsKXt2YXIgX3RoaXM9dGhpcztpZih2YWwpe3RoaXMuY2xvc2VkPWZhbHNlO3RoaXMuJGVtaXQoJ29wZW4nKTtpZih0aGlzLmFwcGVuZFRvQm9keSl7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLiRlbCk7fXRoaXMucHJldkFjdGl2ZUVsZW1lbnQ9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDt9ZWxzZXtpZighdGhpcy5jbG9zZWQpdGhpcy4kZW1pdCgnY2xvc2UnKTt0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe2lmKF90aGlzLnByZXZBY3RpdmVFbGVtZW50KXtfdGhpcy5wcmV2QWN0aXZlRWxlbWVudC5mb2N1cygpO319KTt9fX0sbWV0aG9kczp7YWZ0ZXJFbnRlcjpmdW5jdGlvbiBhZnRlckVudGVyKCl7dGhpcy4kZW1pdCgnb3BlbmVkJyk7fSxhZnRlckxlYXZlOmZ1bmN0aW9uIGFmdGVyTGVhdmUoKXt0aGlzLiRlbWl0KCdjbG9zZWQnKTt9LGhpZGU6ZnVuY3Rpb24gaGlkZShjYW5jZWwpe2lmKGNhbmNlbCE9PWZhbHNlKXt0aGlzLiRlbWl0KCd1cGRhdGU6dmlzaWJsZScsZmFsc2UpO3RoaXMuJGVtaXQoJ2Nsb3NlJyk7aWYodGhpcy5kZXN0cm95T25DbG9zZT09PXRydWUpe3RoaXMucmVuZGVyZWQ9ZmFsc2U7fXRoaXMuY2xvc2VkPXRydWU7fX0saGFuZGxlV3JhcHBlckNsaWNrOmZ1bmN0aW9uIGhhbmRsZVdyYXBwZXJDbGljaygpe2lmKHRoaXMud3JhcHBlckNsb3NhYmxlKXt0aGlzLmNsb3NlRHJhd2VyKCk7fX0sY2xvc2VEcmF3ZXI6ZnVuY3Rpb24gY2xvc2VEcmF3ZXIoKXtpZih0eXBlb2YgdGhpcy5iZWZvcmVDbG9zZT09PSdmdW5jdGlvbicpe3RoaXMuYmVmb3JlQ2xvc2UodGhpcy5oaWRlKTt9ZWxzZXt0aGlzLmhpZGUoKTt9fSxoYW5kbGVDbG9zZTpmdW5jdGlvbiBoYW5kbGVDbG9zZSgpey8vIFRoaXMgbWV0aG9kIGhlcmUgd2lsbCBiZSBjYWxsZWQgYnkgUG9wdXBNYW5nZXIsIHdoZW4gdGhlIGBjbG9zZU9uUHJlc3NFc2NhcGVgIHdhcyBzZXQgdG8gdHJ1ZQovLyBwcmVzc2luZyBgRVNDYCB3aWxsIGNhbGwgdGhpcyBtZXRob2QsIGFuZCBhbHNvIGNsb3NlIHRoZSBkcmF3ZXIuCi8vIFRoaXMgbWV0aG9kIGFsc28gY2FsbHMgYGJlZm9yZUNsb3NlYCBpZiB0aGVyZSB3YXMgb25lLgp0aGlzLmNsb3NlRHJhd2VyKCk7fX0sbW91bnRlZDpmdW5jdGlvbiBtb3VudGVkKCl7aWYodGhpcy52aXNpYmxlKXt0aGlzLnJlbmRlcmVkPXRydWU7dGhpcy5vcGVuKCk7fX0sZGVzdHJveWVkOmZ1bmN0aW9uIGRlc3Ryb3llZCgpey8vIGlmIGFwcGVuZFRvQm9keSBpcyB0cnVlLCByZW1vdmUgRE9NIG5vZGUgYWZ0ZXIgZGVzdHJveQppZih0aGlzLmFwcGVuZFRvQm9keSYmdGhpcy4kZWwmJnRoaXMuJGVsLnBhcmVudE5vZGUpe3RoaXMuJGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy4kZWwpO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RyYXdlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcGFja2FnZXNfZHJhd2VyX3NyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfPWRyYXdlcl9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2RyYXdlci9zcmMvbWFpbi52dWUKLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL3ZhciBkcmF3ZXJfc3JjX21haW5fY29tcG9uZW50PW5vcm1hbGl6ZUNvbXBvbmVudChwYWNrYWdlc19kcmF3ZXJfc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkX2E0ODg1MjY0X3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfYTQ4ODUyNjRfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBkcmF3ZXJfc3JjX21haW5fYXBpO31kcmF3ZXJfc3JjX21haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlPSJwYWNrYWdlcy9kcmF3ZXIvc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIGRyYXdlcl9zcmNfbWFpbj1kcmF3ZXJfc3JjX21haW5fY29tcG9uZW50LmV4cG9ydHM7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9kcmF3ZXIvaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9kcmF3ZXJfc3JjX21haW4uaW5zdGFsbD1mdW5jdGlvbihWdWUpe1Z1ZS5jb21wb25lbnQoZHJhd2VyX3NyY19tYWluLm5hbWUsZHJhd2VyX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgZHJhd2VyPWRyYXdlcl9zcmNfbWFpbjsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL3BvcGNvbmZpcm0vc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA0OGRlNzMwJgp2YXIgbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA0OGRlNzMwX3JlbmRlcj1mdW5jdGlvbiBtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMDQ4ZGU3MzBfcmVuZGVyKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCJlbC1wb3BvdmVyIixfdm0uX2Ioe2F0dHJzOnt0cmlnZ2VyOiJjbGljayJ9LG1vZGVsOnt2YWx1ZTpfdm0udmlzaWJsZSxjYWxsYmFjazpmdW5jdGlvbiBjYWxsYmFjaygkJHYpe192bS52aXNpYmxlPSQkdjt9LGV4cHJlc3Npb246InZpc2libGUifX0sImVsLXBvcG92ZXIiLF92bS4kYXR0cnMsZmFsc2UpLFtfYygiZGl2Iix7c3RhdGljQ2xhc3M6ImVsLXBvcGNvbmZpcm0ifSxbX2MoInAiLHtzdGF0aWNDbGFzczoiZWwtcG9wY29uZmlybV9fbWFpbiJ9LFshX3ZtLmhpZGVJY29uP19jKCJpIix7c3RhdGljQ2xhc3M6ImVsLXBvcGNvbmZpcm1fX2ljb24iLGNsYXNzOl92bS5pY29uLHN0eWxlOntjb2xvcjpfdm0uaWNvbkNvbG9yfX0pOl92bS5fZSgpLF92bS5fdigiXG4gICAgICAiK192bS5fcyhfdm0udGl0bGUpKyJcbiAgICAiKV0pLF9jKCJkaXYiLHtzdGF0aWNDbGFzczoiZWwtcG9wY29uZmlybV9fYWN0aW9uIn0sW19jKCJlbC1idXR0b24iLHthdHRyczp7c2l6ZToibWluaSIsdHlwZTpfdm0uY2FuY2VsQnV0dG9uVHlwZX0sb246e2NsaWNrOl92bS5jYW5jZWx9fSxbX3ZtLl92KCJcbiAgICAgICAgIitfdm0uX3MoX3ZtLmRpc3BsYXlDYW5jZWxCdXR0b25UZXh0KSsiXG4gICAgICAiKV0pLF9jKCJlbC1idXR0b24iLHthdHRyczp7c2l6ZToibWluaSIsdHlwZTpfdm0uY29uZmlybUJ1dHRvblR5cGV9LG9uOntjbGljazpfdm0uY29uZmlybX19LFtfdm0uX3YoIlxuICAgICAgICAiK192bS5fcyhfdm0uZGlzcGxheUNvbmZpcm1CdXR0b25UZXh0KSsiXG4gICAgICAiKV0pXSwxKV0pLF92bS5fdCgicmVmZXJlbmNlIixudWxsLHtzbG90OiJyZWZlcmVuY2UifSldLDIpO307dmFyIG1haW52dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNDhkZTczMF9zdGF0aWNSZW5kZXJGbnM9W107bWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA0OGRlNzMwX3JlbmRlci5fd2l0aFN0cmlwcGVkPXRydWU7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9wb3Bjb25maXJtL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNDhkZTczMCYKLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCAiZWxlbWVudC11aS9saWIvcG9wb3ZlciIKdmFyIHBvcG92ZXJfPV9fd2VicGFja19yZXF1aXJlX18oNDQpO3ZhciBwb3BvdmVyX2RlZmF1bHQ9LyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihwb3BvdmVyXyk7Ly8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvcG9wY29uZmlybS9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcG9wY29uZmlybV9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXz17bmFtZTonRWxQb3Bjb25maXJtJyxwcm9wczp7dGl0bGU6e3R5cGU6U3RyaW5nfSxjb25maXJtQnV0dG9uVGV4dDp7dHlwZTpTdHJpbmd9LGNhbmNlbEJ1dHRvblRleHQ6e3R5cGU6U3RyaW5nfSxjb25maXJtQnV0dG9uVHlwZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDoncHJpbWFyeSd9LGNhbmNlbEJ1dHRvblR5cGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J3RleHQnfSxpY29uOnt0eXBlOlN0cmluZyxkZWZhdWx0OidlbC1pY29uLXF1ZXN0aW9uJ30saWNvbkNvbG9yOnt0eXBlOlN0cmluZyxkZWZhdWx0OicjZjkwJ30saGlkZUljb246e3R5cGU6Qm9vbGVhbixkZWZhdWx0OmZhbHNlfX0sY29tcG9uZW50czp7RWxQb3BvdmVyOnBvcG92ZXJfZGVmYXVsdC5hLEVsQnV0dG9uOmJ1dHRvbl9kZWZhdWx0LmF9LGRhdGE6ZnVuY3Rpb24gZGF0YSgpe3JldHVybnt2aXNpYmxlOmZhbHNlfTt9LGNvbXB1dGVkOntkaXNwbGF5Q29uZmlybUJ1dHRvblRleHQ6ZnVuY3Rpb24gZGlzcGxheUNvbmZpcm1CdXR0b25UZXh0KCl7cmV0dXJuIHRoaXMuY29uZmlybUJ1dHRvblRleHR8fE9iamVjdChsaWJfbG9jYWxlX1sidCJdKSgnZWwucG9wY29uZmlybS5jb25maXJtQnV0dG9uVGV4dCcpO30sZGlzcGxheUNhbmNlbEJ1dHRvblRleHQ6ZnVuY3Rpb24gZGlzcGxheUNhbmNlbEJ1dHRvblRleHQoKXtyZXR1cm4gdGhpcy5jYW5jZWxCdXR0b25UZXh0fHxPYmplY3QobGliX2xvY2FsZV9bInQiXSkoJ2VsLnBvcGNvbmZpcm0uY2FuY2VsQnV0dG9uVGV4dCcpO319LG1ldGhvZHM6e2NvbmZpcm06ZnVuY3Rpb24gY29uZmlybSgpe3RoaXMudmlzaWJsZT1mYWxzZTt0aGlzLiRlbWl0KCdjb25maXJtJyk7fSxjYW5jZWw6ZnVuY3Rpb24gY2FuY2VsKCl7dGhpcy52aXNpYmxlPWZhbHNlO3RoaXMuJGVtaXQoJ2NhbmNlbCcpO319fTsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BvcGNvbmZpcm0vc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBhY2thZ2VzX3BvcGNvbmZpcm1fc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc189cG9wY29uZmlybV9zcmNfbWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXzsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BvcGNvbmZpcm0vc3JjL21haW4udnVlCi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi92YXIgcG9wY29uZmlybV9zcmNfbWFpbl9jb21wb25lbnQ9bm9ybWFsaXplQ29tcG9uZW50KHBhY2thZ2VzX3BvcGNvbmZpcm1fc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sbWFpbnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA0OGRlNzMwX3JlbmRlcixtYWludnVlX3R5cGVfdGVtcGxhdGVfaWRfMDQ4ZGU3MzBfc3RhdGljUmVuZGVyRm5zLGZhbHNlLG51bGwsbnVsbCxudWxsKTsvKiBob3QgcmVsb2FkICovaWYoZmFsc2Upe3ZhciBwb3Bjb25maXJtX3NyY19tYWluX2FwaTt9cG9wY29uZmlybV9zcmNfbWFpbl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGU9InBhY2thZ2VzL3BvcGNvbmZpcm0vc3JjL21haW4udnVlIjsvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovdmFyIHBvcGNvbmZpcm1fc3JjX21haW49cG9wY29uZmlybV9zcmNfbWFpbl9jb21wb25lbnQuZXhwb3J0czsvLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL3BvcGNvbmZpcm0vaW5kZXguanMKLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9wb3Bjb25maXJtX3NyY19tYWluLmluc3RhbGw9ZnVuY3Rpb24oVnVlKXtWdWUuY29tcG9uZW50KHBvcGNvbmZpcm1fc3JjX21haW4ubmFtZSxwb3Bjb25maXJtX3NyY19tYWluKTt9Oy8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgcG9wY29uZmlybT1wb3Bjb25maXJtX3NyY19tYWluOy8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vc3JjL2luZGV4LmpzCi8qIEF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5ICcuL2J1aWxkL2Jpbi9idWlsZC1lbnRyeS5qcycgKi92YXIgY29tcG9uZW50cz1bcGFja2FnZXNfcGFnaW5hdGlvbixkaWFsb2cscGFja2FnZXNfYXV0b2NvbXBsZXRlLHBhY2thZ2VzX2Ryb3Bkb3duLHBhY2thZ2VzX2Ryb3Bkb3duX21lbnUscGFja2FnZXNfZHJvcGRvd25faXRlbSxwYWNrYWdlc19tZW51LHBhY2thZ2VzX3N1Ym1lbnUscGFja2FnZXNfbWVudV9pdGVtLHBhY2thZ2VzX21lbnVfaXRlbV9ncm91cCxwYWNrYWdlc19pbnB1dCxwYWNrYWdlc19pbnB1dF9udW1iZXIscGFja2FnZXNfcmFkaW8scGFja2FnZXNfcmFkaW9fZ3JvdXAscGFja2FnZXNfcmFkaW9fYnV0dG9uLHBhY2thZ2VzX2NoZWNrYm94LHBhY2thZ2VzX2NoZWNrYm94X2J1dHRvbixwYWNrYWdlc19jaGVja2JveF9ncm91cCxwYWNrYWdlc19zd2l0Y2gscGFja2FnZXNfc2VsZWN0LHBhY2thZ2VzX29wdGlvbixwYWNrYWdlc19vcHRpb25fZ3JvdXAscGFja2FnZXNfYnV0dG9uLHBhY2thZ2VzX2J1dHRvbl9ncm91cCxwYWNrYWdlc190YWJsZSxwYWNrYWdlc190YWJsZV9jb2x1bW4scGFja2FnZXNfZGF0ZV9waWNrZXIscGFja2FnZXNfdGltZV9zZWxlY3QscGFja2FnZXNfdGltZV9waWNrZXIscG9wb3ZlcixwYWNrYWdlc190b29sdGlwLHBhY2thZ2VzX2JyZWFkY3J1bWIscGFja2FnZXNfYnJlYWRjcnVtYl9pdGVtLHBhY2thZ2VzX2Zvcm0scGFja2FnZXNfZm9ybV9pdGVtLHBhY2thZ2VzX3RhYnMscGFja2FnZXNfdGFiX3BhbmUscGFja2FnZXNfdGFnLHBhY2thZ2VzX3RyZWUscGFja2FnZXNfYWxlcnQsc2xpZGVyLHBhY2thZ2VzX2ljb24scGFja2FnZXNfcm93LHBhY2thZ2VzX2NvbCxwYWNrYWdlc191cGxvYWQscGFja2FnZXNfcHJvZ3Jlc3MscGFja2FnZXNfc3Bpbm5lcixiYWRnZSxjYXJkLHJhdGUscGFja2FnZXNfc3RlcHMscGFja2FnZXNfc3RlcCxjYXJvdXNlbCxzY3JvbGxiYXIsY2Fyb3VzZWxfaXRlbSxwYWNrYWdlc19jb2xsYXBzZSxwYWNrYWdlc19jb2xsYXBzZV9pdGVtLHBhY2thZ2VzX2Nhc2NhZGVyLGNvbG9yX3BpY2tlcix0cmFuc2ZlcixwYWNrYWdlc19jb250YWluZXIsaGVhZGVyLGFzaWRlLHBhY2thZ2VzX21haW4sZm9vdGVyLHRpbWVsaW5lLHRpbWVsaW5lX2l0ZW0scGFja2FnZXNfbGluayxkaXZpZGVyLHBhY2thZ2VzX2ltYWdlLGNhbGVuZGFyLGJhY2t0b3AscGFnZV9oZWFkZXIscGFja2FnZXNfY2FzY2FkZXJfcGFuZWwsYXZhdGFyLGRyYXdlcixwb3Bjb25maXJtLGNvbGxhcHNlX3RyYW5zaXRpb25fZGVmYXVsdC5hXTt2YXIgc3JjX2luc3RhbGw9ZnVuY3Rpb24gaW5zdGFsbChWdWUpe3ZhciBvcHRzPWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1sxXTp7fTtsaWJfbG9jYWxlX2RlZmF1bHQuYS51c2Uob3B0cy5sb2NhbGUpO2xpYl9sb2NhbGVfZGVmYXVsdC5hLmkxOG4ob3B0cy5pMThuKTtjb21wb25lbnRzLmZvckVhY2goZnVuY3Rpb24oY29tcG9uZW50KXtWdWUuY29tcG9uZW50KGNvbXBvbmVudC5uYW1lLGNvbXBvbmVudCk7fSk7VnVlLnVzZShpbmZpbml0ZV9zY3JvbGwpO1Z1ZS51c2UocGFja2FnZXNfbG9hZGluZy5kaXJlY3RpdmUpO1Z1ZS5wcm90b3R5cGUuJEVMRU1FTlQ9e3NpemU6b3B0cy5zaXplfHwnJyx6SW5kZXg6b3B0cy56SW5kZXh8fDIwMDB9O1Z1ZS5wcm90b3R5cGUuJGxvYWRpbmc9cGFja2FnZXNfbG9hZGluZy5zZXJ2aWNlO1Z1ZS5wcm90b3R5cGUuJG1zZ2JveD1tZXNzYWdlX2JveDtWdWUucHJvdG90eXBlLiRhbGVydD1tZXNzYWdlX2JveC5hbGVydDtWdWUucHJvdG90eXBlLiRjb25maXJtPW1lc3NhZ2VfYm94LmNvbmZpcm07VnVlLnByb3RvdHlwZS4kcHJvbXB0PW1lc3NhZ2VfYm94LnByb21wdDtWdWUucHJvdG90eXBlLiRub3RpZnk9bm90aWZpY2F0aW9uO1Z1ZS5wcm90b3R5cGUuJG1lc3NhZ2U9cGFja2FnZXNfbWVzc2FnZTt9Oy8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL2lmKHR5cGVvZiB3aW5kb3chPT0ndW5kZWZpbmVkJyYmd2luZG93LlZ1ZSl7c3JjX2luc3RhbGwod2luZG93LlZ1ZSk7fS8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi92YXIgc3JjXzA9X193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdPXt2ZXJzaW9uOicyLjE1LjInLGxvY2FsZTpsaWJfbG9jYWxlX2RlZmF1bHQuYS51c2UsaTE4bjpsaWJfbG9jYWxlX2RlZmF1bHQuYS5pMThuLGluc3RhbGw6c3JjX2luc3RhbGwsQ29sbGFwc2VUcmFuc2l0aW9uOmNvbGxhcHNlX3RyYW5zaXRpb25fZGVmYXVsdC5hLExvYWRpbmc6cGFja2FnZXNfbG9hZGluZyxQYWdpbmF0aW9uOnBhY2thZ2VzX3BhZ2luYXRpb24sRGlhbG9nOmRpYWxvZyxBdXRvY29tcGxldGU6cGFja2FnZXNfYXV0b2NvbXBsZXRlLERyb3Bkb3duOnBhY2thZ2VzX2Ryb3Bkb3duLERyb3Bkb3duTWVudTpwYWNrYWdlc19kcm9wZG93bl9tZW51LERyb3Bkb3duSXRlbTpwYWNrYWdlc19kcm9wZG93bl9pdGVtLE1lbnU6cGFja2FnZXNfbWVudSxTdWJtZW51OnBhY2thZ2VzX3N1Ym1lbnUsTWVudUl0ZW06cGFja2FnZXNfbWVudV9pdGVtLE1lbnVJdGVtR3JvdXA6cGFja2FnZXNfbWVudV9pdGVtX2dyb3VwLElucHV0OnBhY2thZ2VzX2lucHV0LElucHV0TnVtYmVyOnBhY2thZ2VzX2lucHV0X251bWJlcixSYWRpbzpwYWNrYWdlc19yYWRpbyxSYWRpb0dyb3VwOnBhY2thZ2VzX3JhZGlvX2dyb3VwLFJhZGlvQnV0dG9uOnBhY2thZ2VzX3JhZGlvX2J1dHRvbixDaGVja2JveDpwYWNrYWdlc19jaGVja2JveCxDaGVja2JveEJ1dHRvbjpwYWNrYWdlc19jaGVja2JveF9idXR0b24sQ2hlY2tib3hHcm91cDpwYWNrYWdlc19jaGVja2JveF9ncm91cCxTd2l0Y2g6cGFja2FnZXNfc3dpdGNoLFNlbGVjdDpwYWNrYWdlc19zZWxlY3QsT3B0aW9uOnBhY2thZ2VzX29wdGlvbixPcHRpb25Hcm91cDpwYWNrYWdlc19vcHRpb25fZ3JvdXAsQnV0dG9uOnBhY2thZ2VzX2J1dHRvbixCdXR0b25Hcm91cDpwYWNrYWdlc19idXR0b25fZ3JvdXAsVGFibGU6cGFja2FnZXNfdGFibGUsVGFibGVDb2x1bW46cGFja2FnZXNfdGFibGVfY29sdW1uLERhdGVQaWNrZXI6cGFja2FnZXNfZGF0ZV9waWNrZXIsVGltZVNlbGVjdDpwYWNrYWdlc190aW1lX3NlbGVjdCxUaW1lUGlja2VyOnBhY2thZ2VzX3RpbWVfcGlja2VyLFBvcG92ZXI6cG9wb3ZlcixUb29sdGlwOnBhY2thZ2VzX3Rvb2x0aXAsTWVzc2FnZUJveDptZXNzYWdlX2JveCxCcmVhZGNydW1iOnBhY2thZ2VzX2JyZWFkY3J1bWIsQnJlYWRjcnVtYkl0ZW06cGFja2FnZXNfYnJlYWRjcnVtYl9pdGVtLEZvcm06cGFja2FnZXNfZm9ybSxGb3JtSXRlbTpwYWNrYWdlc19mb3JtX2l0ZW0sVGFiczpwYWNrYWdlc190YWJzLFRhYlBhbmU6cGFja2FnZXNfdGFiX3BhbmUsVGFnOnBhY2thZ2VzX3RhZyxUcmVlOnBhY2thZ2VzX3RyZWUsQWxlcnQ6cGFja2FnZXNfYWxlcnQsTm90aWZpY2F0aW9uOm5vdGlmaWNhdGlvbixTbGlkZXI6c2xpZGVyLEljb246cGFja2FnZXNfaWNvbixSb3c6cGFja2FnZXNfcm93LENvbDpwYWNrYWdlc19jb2wsVXBsb2FkOnBhY2thZ2VzX3VwbG9hZCxQcm9ncmVzczpwYWNrYWdlc19wcm9ncmVzcyxTcGlubmVyOnBhY2thZ2VzX3NwaW5uZXIsTWVzc2FnZTpwYWNrYWdlc19tZXNzYWdlLEJhZGdlOmJhZGdlLENhcmQ6Y2FyZCxSYXRlOnJhdGUsU3RlcHM6cGFja2FnZXNfc3RlcHMsU3RlcDpwYWNrYWdlc19zdGVwLENhcm91c2VsOmNhcm91c2VsLFNjcm9sbGJhcjpzY3JvbGxiYXIsQ2Fyb3VzZWxJdGVtOmNhcm91c2VsX2l0ZW0sQ29sbGFwc2U6cGFja2FnZXNfY29sbGFwc2UsQ29sbGFwc2VJdGVtOnBhY2thZ2VzX2NvbGxhcHNlX2l0ZW0sQ2FzY2FkZXI6cGFja2FnZXNfY2FzY2FkZXIsQ29sb3JQaWNrZXI6Y29sb3JfcGlja2VyLFRyYW5zZmVyOnRyYW5zZmVyLENvbnRhaW5lcjpwYWNrYWdlc19jb250YWluZXIsSGVhZGVyOmhlYWRlcixBc2lkZTphc2lkZSxNYWluOnBhY2thZ2VzX21haW4sRm9vdGVyOmZvb3RlcixUaW1lbGluZTp0aW1lbGluZSxUaW1lbGluZUl0ZW06dGltZWxpbmVfaXRlbSxMaW5rOnBhY2thZ2VzX2xpbmssRGl2aWRlcjpkaXZpZGVyLEltYWdlOnBhY2thZ2VzX2ltYWdlLENhbGVuZGFyOmNhbGVuZGFyLEJhY2t0b3A6YmFja3RvcCxJbmZpbml0ZVNjcm9sbDppbmZpbml0ZV9zY3JvbGwsUGFnZUhlYWRlcjpwYWdlX2hlYWRlcixDYXNjYWRlclBhbmVsOnBhY2thZ2VzX2Nhc2NhZGVyX3BhbmVsLEF2YXRhcjphdmF0YXIsRHJhd2VyOmRyYXdlcixQb3Bjb25maXJtOnBvcGNvbmZpcm19Oy8qKiovfS8qKioqKiovXSlbImRlZmF1bHQiXTs="},null]}