{"remainingRequest":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\JavaWebVue\\javaweb-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\JavaWebVue\\javaweb-ui\\node_modules\\element-ui\\lib\\utils\\util.js","dependencies":[{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\element-ui\\lib\\utils\\util.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbiIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0Iik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciIpOwoKdmFyIF90eXBlb2YyID0gcmVxdWlyZSgiRDovSmF2YVdlYlZ1ZS9qYXZhd2ViLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZiIpOwoKZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTsKZXhwb3J0cy5pc0VtcHR5ID0gZXhwb3J0cy5pc0VxdWFsID0gZXhwb3J0cy5hcnJheUVxdWFscyA9IGV4cG9ydHMubG9vc2VFcXVhbCA9IGV4cG9ydHMuY2FwaXRhbGl6ZSA9IGV4cG9ydHMua2ViYWJDYXNlID0gZXhwb3J0cy5hdXRvcHJlZml4ZXIgPSBleHBvcnRzLmlzRmlyZWZveCA9IGV4cG9ydHMuaXNFZGdlID0gZXhwb3J0cy5pc0lFID0gZXhwb3J0cy5jb2VyY2VUcnV0aHlWYWx1ZVRvQXJyYXkgPSBleHBvcnRzLmFycmF5RmluZCA9IGV4cG9ydHMuYXJyYXlGaW5kSW5kZXggPSBleHBvcnRzLmVzY2FwZVJlZ2V4cFN0cmluZyA9IGV4cG9ydHMudmFsdWVFcXVhbHMgPSBleHBvcnRzLmdlbmVyYXRlSWQgPSBleHBvcnRzLmdldFZhbHVlQnlQYXRoID0gdW5kZWZpbmVkOwoKdmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIF90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcikgPT09ICJzeW1ib2wiID8gZnVuY3Rpb24gKG9iaikgewogIHJldHVybiBfdHlwZW9mMihvYmopOwp9IDogZnVuY3Rpb24gKG9iaikgewogIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IF90eXBlb2YyKG9iaik7Cn07CgpleHBvcnRzLm5vb3AgPSBub29wOwpleHBvcnRzLmhhc093biA9IGhhc093bjsKZXhwb3J0cy50b09iamVjdCA9IHRvT2JqZWN0OwpleHBvcnRzLmdldFByb3BCeVBhdGggPSBnZXRQcm9wQnlQYXRoOwpleHBvcnRzLnJhZlRocm90dGxlID0gcmFmVGhyb3R0bGU7CmV4cG9ydHMub2JqVG9BcnJheSA9IG9ialRvQXJyYXk7Cgp2YXIgX3Z1ZSA9IHJlcXVpcmUoJ3Z1ZScpOwoKdmFyIF92dWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdnVlKTsKCnZhciBfdHlwZXMgPSByZXF1aXJlKCdlbGVtZW50LXVpL2xpYi91dGlscy90eXBlcycpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKdmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTsKCmZ1bmN0aW9uIG5vb3AoKSB7fQoKOwoKZnVuY3Rpb24gaGFzT3duKG9iaiwga2V5KSB7CiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpOwp9Cgo7CgpmdW5jdGlvbiBleHRlbmQodG8sIF9mcm9tKSB7CiAgZm9yICh2YXIga2V5IGluIF9mcm9tKSB7CiAgICB0b1trZXldID0gX2Zyb21ba2V5XTsKICB9CgogIHJldHVybiB0bzsKfQoKOwoKZnVuY3Rpb24gdG9PYmplY3QoYXJyKSB7CiAgdmFyIHJlcyA9IHt9OwoKICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgaWYgKGFycltpXSkgewogICAgICBleHRlbmQocmVzLCBhcnJbaV0pOwogICAgfQogIH0KCiAgcmV0dXJuIHJlczsKfQoKOwoKdmFyIGdldFZhbHVlQnlQYXRoID0gZXhwb3J0cy5nZXRWYWx1ZUJ5UGF0aCA9IGZ1bmN0aW9uIGdldFZhbHVlQnlQYXRoKG9iamVjdCwgcHJvcCkgewogIHByb3AgPSBwcm9wIHx8ICcnOwogIHZhciBwYXRocyA9IHByb3Auc3BsaXQoJy4nKTsKICB2YXIgY3VycmVudCA9IG9iamVjdDsKICB2YXIgcmVzdWx0ID0gbnVsbDsKCiAgZm9yICh2YXIgaSA9IDAsIGogPSBwYXRocy5sZW5ndGg7IGkgPCBqOyBpKyspIHsKICAgIHZhciBwYXRoID0gcGF0aHNbaV07CiAgICBpZiAoIWN1cnJlbnQpIGJyZWFrOwoKICAgIGlmIChpID09PSBqIC0gMSkgewogICAgICByZXN1bHQgPSBjdXJyZW50W3BhdGhdOwogICAgICBicmVhazsKICAgIH0KCiAgICBjdXJyZW50ID0gY3VycmVudFtwYXRoXTsKICB9CgogIHJldHVybiByZXN1bHQ7Cn07CgpmdW5jdGlvbiBnZXRQcm9wQnlQYXRoKG9iaiwgcGF0aCwgc3RyaWN0KSB7CiAgdmFyIHRlbXBPYmogPSBvYmo7CiAgcGF0aCA9IHBhdGgucmVwbGFjZSgvXFsoXHcrKVxdL2csICcuJDEnKTsKICBwYXRoID0gcGF0aC5yZXBsYWNlKC9eXC4vLCAnJyk7CiAgdmFyIGtleUFyciA9IHBhdGguc3BsaXQoJy4nKTsKICB2YXIgaSA9IDA7CgogIGZvciAodmFyIGxlbiA9IGtleUFyci5sZW5ndGg7IGkgPCBsZW4gLSAxOyArK2kpIHsKICAgIGlmICghdGVtcE9iaiAmJiAhc3RyaWN0KSBicmVhazsKICAgIHZhciBrZXkgPSBrZXlBcnJbaV07CgogICAgaWYgKGtleSBpbiB0ZW1wT2JqKSB7CiAgICAgIHRlbXBPYmogPSB0ZW1wT2JqW2tleV07CiAgICB9IGVsc2UgewogICAgICBpZiAoc3RyaWN0KSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdwbGVhc2UgdHJhbnNmZXIgYSB2YWxpZCBwcm9wIHBhdGggdG8gZm9ybSBpdGVtIScpOwogICAgICB9CgogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiB7CiAgICBvOiB0ZW1wT2JqLAogICAgazoga2V5QXJyW2ldLAogICAgdjogdGVtcE9iaiA/IHRlbXBPYmpba2V5QXJyW2ldXSA6IG51bGwKICB9Owp9Cgo7Cgp2YXIgZ2VuZXJhdGVJZCA9IGV4cG9ydHMuZ2VuZXJhdGVJZCA9IGZ1bmN0aW9uIGdlbmVyYXRlSWQoKSB7CiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKTsKfTsKCnZhciB2YWx1ZUVxdWFscyA9IGV4cG9ydHMudmFsdWVFcXVhbHMgPSBmdW5jdGlvbiB2YWx1ZUVxdWFscyhhLCBiKSB7CiAgLy8gc2VlOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zMTE1OTgyL2hvdy10by1jaGVjay1pZi10d28tYXJyYXlzLWFyZS1lcXVhbC13aXRoLWphdmFzY3JpcHQKICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7CiAgaWYgKCEoYSBpbnN0YW5jZW9mIEFycmF5KSkgcmV0dXJuIGZhbHNlOwogIGlmICghKGIgaW5zdGFuY2VvZiBBcnJheSkpIHJldHVybiBmYWxzZTsKICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7CgogIGZvciAodmFyIGkgPSAwOyBpICE9PSBhLmxlbmd0aDsgKytpKSB7CiAgICBpZiAoYVtpXSAhPT0gYltpXSkgcmV0dXJuIGZhbHNlOwogIH0KCiAgcmV0dXJuIHRydWU7Cn07Cgp2YXIgZXNjYXBlUmVnZXhwU3RyaW5nID0gZXhwb3J0cy5lc2NhcGVSZWdleHBTdHJpbmcgPSBmdW5jdGlvbiBlc2NhcGVSZWdleHBTdHJpbmcoKSB7CiAgdmFyIHZhbHVlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAnJzsKICByZXR1cm4gU3RyaW5nKHZhbHVlKS5yZXBsYWNlKC9bfFxce30oKVtcXV4kKyo/Ll0vZywgJ1xcJCYnKTsKfTsgLy8gVE9ETzogdXNlIG5hdGl2ZSBBcnJheS5maW5kLCBBcnJheS5maW5kSW5kZXggd2hlbiBJRSBzdXBwb3J0IGlzIGRyb3BwZWQKCgp2YXIgYXJyYXlGaW5kSW5kZXggPSBleHBvcnRzLmFycmF5RmluZEluZGV4ID0gZnVuY3Rpb24gYXJyYXlGaW5kSW5kZXgoYXJyLCBwcmVkKSB7CiAgZm9yICh2YXIgaSA9IDA7IGkgIT09IGFyci5sZW5ndGg7ICsraSkgewogICAgaWYgKHByZWQoYXJyW2ldKSkgewogICAgICByZXR1cm4gaTsKICAgIH0KICB9CgogIHJldHVybiAtMTsKfTsKCnZhciBhcnJheUZpbmQgPSBleHBvcnRzLmFycmF5RmluZCA9IGZ1bmN0aW9uIGFycmF5RmluZChhcnIsIHByZWQpIHsKICB2YXIgaWR4ID0gYXJyYXlGaW5kSW5kZXgoYXJyLCBwcmVkKTsKICByZXR1cm4gaWR4ICE9PSAtMSA/IGFycltpZHhdIDogdW5kZWZpbmVkOwp9OyAvLyBjb2VyY2UgdHJ1dGh5IHZhbHVlIHRvIGFycmF5CgoKdmFyIGNvZXJjZVRydXRoeVZhbHVlVG9BcnJheSA9IGV4cG9ydHMuY29lcmNlVHJ1dGh5VmFsdWVUb0FycmF5ID0gZnVuY3Rpb24gY29lcmNlVHJ1dGh5VmFsdWVUb0FycmF5KHZhbCkgewogIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHsKICAgIHJldHVybiB2YWw7CiAgfSBlbHNlIGlmICh2YWwpIHsKICAgIHJldHVybiBbdmFsXTsKICB9IGVsc2UgewogICAgcmV0dXJuIFtdOwogIH0KfTsKCnZhciBpc0lFID0gZXhwb3J0cy5pc0lFID0gZnVuY3Rpb24gaXNJRSgpIHsKICByZXR1cm4gIV92dWUyLmRlZmF1bHQucHJvdG90eXBlLiRpc1NlcnZlciAmJiAhaXNOYU4oTnVtYmVyKGRvY3VtZW50LmRvY3VtZW50TW9kZSkpOwp9OwoKdmFyIGlzRWRnZSA9IGV4cG9ydHMuaXNFZGdlID0gZnVuY3Rpb24gaXNFZGdlKCkgewogIHJldHVybiAhX3Z1ZTIuZGVmYXVsdC5wcm90b3R5cGUuJGlzU2VydmVyICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRWRnZScpID4gLTE7Cn07Cgp2YXIgaXNGaXJlZm94ID0gZXhwb3J0cy5pc0ZpcmVmb3ggPSBmdW5jdGlvbiBpc0ZpcmVmb3goKSB7CiAgcmV0dXJuICFfdnVlMi5kZWZhdWx0LnByb3RvdHlwZS4kaXNTZXJ2ZXIgJiYgISF3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvZmlyZWZveC9pKTsKfTsKCnZhciBhdXRvcHJlZml4ZXIgPSBleHBvcnRzLmF1dG9wcmVmaXhlciA9IGZ1bmN0aW9uIGF1dG9wcmVmaXhlcihzdHlsZSkgewogIGlmICgodHlwZW9mIHN0eWxlID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihzdHlsZSkpICE9PSAnb2JqZWN0JykgcmV0dXJuIHN0eWxlOwogIHZhciBydWxlcyA9IFsndHJhbnNmb3JtJywgJ3RyYW5zaXRpb24nLCAnYW5pbWF0aW9uJ107CiAgdmFyIHByZWZpeGVzID0gWydtcy0nLCAnd2Via2l0LSddOwogIHJ1bGVzLmZvckVhY2goZnVuY3Rpb24gKHJ1bGUpIHsKICAgIHZhciB2YWx1ZSA9IHN0eWxlW3J1bGVdOwoKICAgIGlmIChydWxlICYmIHZhbHVlKSB7CiAgICAgIHByZWZpeGVzLmZvckVhY2goZnVuY3Rpb24gKHByZWZpeCkgewogICAgICAgIHN0eWxlW3ByZWZpeCArIHJ1bGVdID0gdmFsdWU7CiAgICAgIH0pOwogICAgfQogIH0pOwogIHJldHVybiBzdHlsZTsKfTsKCnZhciBrZWJhYkNhc2UgPSBleHBvcnRzLmtlYmFiQ2FzZSA9IGZ1bmN0aW9uIGtlYmFiQ2FzZShzdHIpIHsKICB2YXIgaHlwaGVuYXRlUkUgPSAvKFteLV0pKFtBLVpdKS9nOwogIHJldHVybiBzdHIucmVwbGFjZShoeXBoZW5hdGVSRSwgJyQxLSQyJykucmVwbGFjZShoeXBoZW5hdGVSRSwgJyQxLSQyJykudG9Mb3dlckNhc2UoKTsKfTsKCnZhciBjYXBpdGFsaXplID0gZXhwb3J0cy5jYXBpdGFsaXplID0gZnVuY3Rpb24gY2FwaXRhbGl6ZShzdHIpIHsKICBpZiAoISgwLCBfdHlwZXMuaXNTdHJpbmcpKHN0cikpIHJldHVybiBzdHI7CiAgcmV0dXJuIHN0ci5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0ci5zbGljZSgxKTsKfTsKCnZhciBsb29zZUVxdWFsID0gZXhwb3J0cy5sb29zZUVxdWFsID0gZnVuY3Rpb24gbG9vc2VFcXVhbChhLCBiKSB7CiAgdmFyIGlzT2JqZWN0QSA9ICgwLCBfdHlwZXMuaXNPYmplY3QpKGEpOwogIHZhciBpc09iamVjdEIgPSAoMCwgX3R5cGVzLmlzT2JqZWN0KShiKTsKCiAgaWYgKGlzT2JqZWN0QSAmJiBpc09iamVjdEIpIHsKICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhKSA9PT0gSlNPTi5zdHJpbmdpZnkoYik7CiAgfSBlbHNlIGlmICghaXNPYmplY3RBICYmICFpc09iamVjdEIpIHsKICAgIHJldHVybiBTdHJpbmcoYSkgPT09IFN0cmluZyhiKTsKICB9IGVsc2UgewogICAgcmV0dXJuIGZhbHNlOwogIH0KfTsKCnZhciBhcnJheUVxdWFscyA9IGV4cG9ydHMuYXJyYXlFcXVhbHMgPSBmdW5jdGlvbiBhcnJheUVxdWFscyhhcnJheUEsIGFycmF5QikgewogIGFycmF5QSA9IGFycmF5QSB8fCBbXTsKICBhcnJheUIgPSBhcnJheUIgfHwgW107CgogIGlmIChhcnJheUEubGVuZ3RoICE9PSBhcnJheUIubGVuZ3RoKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5QS5sZW5ndGg7IGkrKykgewogICAgaWYgKCFsb29zZUVxdWFsKGFycmF5QVtpXSwgYXJyYXlCW2ldKSkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgfQoKICByZXR1cm4gdHJ1ZTsKfTsKCnZhciBpc0VxdWFsID0gZXhwb3J0cy5pc0VxdWFsID0gZnVuY3Rpb24gaXNFcXVhbCh2YWx1ZTEsIHZhbHVlMikgewogIGlmIChBcnJheS5pc0FycmF5KHZhbHVlMSkgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZTIpKSB7CiAgICByZXR1cm4gYXJyYXlFcXVhbHModmFsdWUxLCB2YWx1ZTIpOwogIH0KCiAgcmV0dXJuIGxvb3NlRXF1YWwodmFsdWUxLCB2YWx1ZTIpOwp9OwoKdmFyIGlzRW1wdHkgPSBleHBvcnRzLmlzRW1wdHkgPSBmdW5jdGlvbiBpc0VtcHR5KHZhbCkgewogIC8vIG51bGwgb3IgdW5kZWZpbmVkCiAgaWYgKHZhbCA9PSBudWxsKSByZXR1cm4gdHJ1ZTsKICBpZiAodHlwZW9mIHZhbCA9PT0gJ2Jvb2xlYW4nKSByZXR1cm4gZmFsc2U7CiAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSByZXR1cm4gIXZhbDsKICBpZiAodmFsIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiB2YWwubWVzc2FnZSA9PT0gJyc7CgogIHN3aXRjaCAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbCkpIHsKICAgIC8vIFN0cmluZyBvciBBcnJheQogICAgY2FzZSAnW29iamVjdCBTdHJpbmddJzoKICAgIGNhc2UgJ1tvYmplY3QgQXJyYXldJzoKICAgICAgcmV0dXJuICF2YWwubGVuZ3RoOwogICAgLy8gTWFwIG9yIFNldCBvciBGaWxlCgogICAgY2FzZSAnW29iamVjdCBGaWxlXSc6CiAgICBjYXNlICdbb2JqZWN0IE1hcF0nOgogICAgY2FzZSAnW29iamVjdCBTZXRdJzoKICAgICAgewogICAgICAgIHJldHVybiAhdmFsLnNpemU7CiAgICAgIH0KICAgIC8vIFBsYWluIE9iamVjdAoKICAgIGNhc2UgJ1tvYmplY3QgT2JqZWN0XSc6CiAgICAgIHsKICAgICAgICByZXR1cm4gIU9iamVjdC5rZXlzKHZhbCkubGVuZ3RoOwogICAgICB9CiAgfQoKICByZXR1cm4gZmFsc2U7Cn07CgpmdW5jdGlvbiByYWZUaHJvdHRsZShmbikgewogIHZhciBsb2NrZWQgPSBmYWxzZTsKICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgfQoKICAgIGlmIChsb2NrZWQpIHJldHVybjsKICAgIGxvY2tlZCA9IHRydWU7CiAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uIChfKSB7CiAgICAgIGZuLmFwcGx5KF90aGlzLCBhcmdzKTsKICAgICAgbG9ja2VkID0gZmFsc2U7CiAgICB9KTsKICB9Owp9CgpmdW5jdGlvbiBvYmpUb0FycmF5KG9iaikgewogIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHsKICAgIHJldHVybiBvYmo7CiAgfQoKICByZXR1cm4gaXNFbXB0eShvYmopID8gW10gOiBbb2JqXTsKfQ=="},null]}