{"remainingRequest":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JavaWebVue\\javaweb-ui\\src\\views\\common\\fragment\\Setting.vue?vue&type=template&id=2da4bd2a&","dependencies":[{"path":"D:\\JavaWebVue\\javaweb-ui\\src\\views\\common\\fragment\\Setting.vue","mtime":1616225448000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}