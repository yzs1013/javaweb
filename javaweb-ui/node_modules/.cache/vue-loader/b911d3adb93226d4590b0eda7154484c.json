{"remainingRequest":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JavaWebVue\\javaweb-ui\\src\\views\\system\\dicttype\\index.vue?vue&type=style&index=0&id=1ce0dea9&scoped=true&lang=css&","dependencies":[{"path":"D:\\JavaWebVue\\javaweb-ui\\src\\views\\system\\dicttype\\index.vue","mtime":1623224075856},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbGUtYmxvY2sgPj4+IC5lbC11cGxvYWQsIC5lbGUtYmxvY2sgPj4+IC5lbC11cGxvYWQtZHJhZ2dlciB7CiAgd2lkdGg6IDEwMCU7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuJA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/system/dicttype","sourcesContent":["<template>\r\n  <div class=\"ele-body\">\r\n    <el-card shadow=\"never\">\r\n      <!-- 搜索表单 -->\r\n      <el-form :model=\"table.where\" label-width=\"77px\" class=\"ele-form-search\"\r\n               @keyup.enter.native=\"$refs.table.reload()\" @submit.native.prevent>\r\n        <el-row :gutter=\"15\">\r\n              <el-col :md=\"6\" :sm=\"12\">\r\n            <div class=\"ele-form-actions\">\r\n              <el-button type=\"primary\" @click=\"$refs.table.reload()\" icon=\"el-icon-search\" class=\"ele-btn-icon\">查询\r\n              </el-button>\r\n              <el-button @click=\"(table.where={})&&$refs.table.reload()\">重置</el-button>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n      <!-- 操作按钮 -->\r\n      <div class=\"ele-table-tool ele-table-tool-default\">\r\n        <el-button @click=\"showEdit=true\" type=\"primary\" icon=\"el-icon-plus\" class=\"ele-btn-icon\" size=\"small\" v-if=\"permission.includes('sys:dicttype:add')\">添加\r\n        </el-button>\r\n        <el-button @click=\"remove()\" type=\"danger\" icon=\"el-icon-delete\" class=\"ele-btn-icon\" size=\"small\" v-if=\"permission.includes('sys:dicttype:dall')\">批量删除\r\n        </el-button>\r\n      </div>\r\n      <!-- 数据表格 -->\r\n      <ele-data-table ref=\"table\" :config=\"table\" :choose.sync=\"choose\" height=\"calc(100vh - 315px)\" highlight-current-row>\r\n        <template slot-scope=\"{index}\">\r\n          <el-table-column type=\"selection\" width=\"45\" align=\"center\" fixed=\"left\"/>\r\n          <el-table-column type=\"index\" :index=\"index\" label=\"编号\" width=\"60\" align=\"center\" fixed=\"left\" show-overflow-tooltip/>\r\n          <el-table-column label=\"操作\" width=\"130px\" align=\"center\" :resizable=\"false\"  fixed=\"right\">\r\n            <template slot-scope=\"{row}\">\r\n              <el-link @click=\"edit(row)\" icon=\"el-icon-edit\" type=\"primary\" :underline=\"false\" v-if=\"permission.includes('sys:dicttype:edit')\">修改</el-link>\r\n              <el-popconfirm title=\"确定要删除此字典类型表吗？\" @confirm=\"remove(row)\" class=\"ele-action\">\r\n                <el-link slot=\"reference\" icon=\"el-icon-delete\" type=\"danger\" :underline=\"false\" v-if=\"permission.includes('sys:dicttype:delete')\">删除</el-link>\r\n              </el-popconfirm>\r\n            </template>\r\n          </el-table-column>\r\n        </template>\r\n      </ele-data-table>\r\n    </el-card>\r\n    <!-- 编辑弹窗 -->\r\n    <el-dialog :title=\"editForm.id?'修改字典类型表':'修改字典类型表'\" :visible.sync=\"showEdit\" width=\"400px\"\r\n               @closed=\"editForm={}\" :destroy-on-close=\"true\" :lock-scroll=\"false\">\r\n      <el-form :model=\"editForm\" ref=\"editForm\" :rules=\"editRules\" label-width=\"82px\">\r\n      </el-form>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"showEdit=false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n  import { mapGetters } from \"vuex\";\r\n  export default {\r\n    name: \"SysDictType\",\r\n    data() {\r\n      return {\r\n        table: {url: '/dicttype/index', where: {}},  // 表格配置\r\n        choose: [],  // 表格选中数据\r\n        showEdit: false,  // 是否显示表单弹窗\r\n        editForm: {},  // 表单数据\r\n        editRules: {  // 表单验证规则\r\n\r\n        },\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n      /* 显示编辑 */\r\n      edit(row) {\r\n        this.$http.get('/dicttype/info/' + row.id).then(res => {\r\n          if (res.data.code === 0) {\r\n            this.editForm = res.data.data;\r\n            this.showEdit = true;\r\n          } else {\r\n            this.$message.error(res.data.msg);\r\n          }\r\n        }).catch(e => {\r\n          this.$message.error(e.message);\r\n        });\r\n      },\r\n      /* 保存编辑 */\r\n      save() {\r\n        this.$refs['editForm'].validate((valid) => {\r\n          if (valid) {\r\n            const loading = this.$loading({lock: true});\r\n            this.$http[this.editForm.id ? 'put' : 'post'](this.editForm.id ? '/dicttype/edit' : '/dicttype/add', this.editForm).then(res => {\r\n              loading.close();\r\n              if (res.data.code === 0) {\r\n                this.showEdit = false;\r\n                this.$message({type: 'success', message: res.data.msg});\r\n                this.$refs.table.reload();\r\n              } else {\r\n                this.$message.error(res.data.msg);\r\n              }\r\n            }).catch(e => {\r\n              loading.close();\r\n              this.$message.error(e.message);\r\n            });\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      /* 删除 */\r\n      remove(row) {\r\n        if (!row) {  // 批量删除\r\n          if (this.choose.length === 0) return this.$message.error('请至少选择一条数据');\r\n          let ids = this.choose.map(d => d.id);\r\n          this.$confirm('确定要删除选中的字典类型表吗?', '提示', {type: 'warning'}).then(() => {\r\n            const loading = this.$loading({lock: true});\r\n            this.$http.delete('/dicttype/delete/' + ids).then(res => {\r\n              loading.close();\r\n              if (res.data.code === 0) {\r\n                this.$message({type: 'success', message: res.data.msg});\r\n                this.$refs.table.reload();\r\n              } else {\r\n                this.$message.error(res.data.msg);\r\n              }\r\n            }).catch(e => {\r\n              loading.close();\r\n              this.$message.error(e.message);\r\n            });\r\n          }).catch(() => 0);\r\n        } else {  // 单个删除\r\n          const loading = this.$loading({lock: true});\r\n          this.$http.delete('/dicttype/delete/' + [row.id]).then(res => {\r\n            loading.close();\r\n            if (res.data.code === 0) {\r\n              this.$message({type: 'success', message: res.data.msg});\r\n              this.$refs.table.reload();\r\n            } else {\r\n              this.$message.error(res.data.msg);\r\n            }\r\n          }).catch(e => {\r\n            loading.close();\r\n            this.$message.error(e.message);\r\n          });\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .ele-block >>> .el-upload, .ele-block >>> .el-upload-dragger {\r\n    width: 100%;\r\n  }\r\n</style>"]}]}