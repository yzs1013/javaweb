{"remainingRequest":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JavaWebVue\\javaweb-ui\\src\\components\\uploadImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\JavaWebVue\\javaweb-ui\\src\\components\\uploadImage.vue","mtime":1616814066000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgbGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiAxOwogICAgICB9LAogICAgfSwKICAgIHVwZERpcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuICJlcnJvciI7CiAgICAgIH0sCiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0sCiAgICB9LAogICAgaXNDb21wcmVzczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSwKICAgIH0sCiAgICB2YWx1ZTogewogICAgICB0eXBlOiBbQXJyYXksIFN0cmluZ10sCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9LAogICAgfSwKICB9LAogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIHBob3RvOiBbXSwKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHBob3RvKCkgewogICAgICBpZiAodGhpcy5saW1pdCA9PSAxKSB7CiAgICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCB0aGlzLnBob3RvLmxlbmd0aCA+IDAgPyB0aGlzLnBob3RvWzBdLnVybCA6ICIiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMucGhvdG8pOwogICAgICB9CiAgICB9LAogICAgdmFsdWUoKSB7CiAgICAgIGlmICh0aGlzLmxpbWl0ID09IDEpIHsKICAgICAgICBpZiAodGhpcy52YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgICB0aGlzLnBob3RvID0gW107CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMucGhvdG8gPSB0aGlzLnZhbHVlID8gW3sgdXJsOiB0aGlzLnZhbHVlIH1dIDogW107CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIC8vIHRoaXMucGhvdG8gPSB0aGlzLnZhbHVlCiAgICAgICAgLy8gbGV0IHBob3Rvcz10aGlzLnZhbHVlCiAgICAgICAgLy8gcGhvdG9zPXBob3Rvcy5tYXAoaXRlbT0+ewogICAgICAgIC8vICAgICBpZih0eXBlb2YgaXRlbT09J3N0cmluZycpewogICAgICAgIC8vICAgICAgICAgcmV0dXJuIHtmaWxlTmFtZToiIix1cmw6aXRlbX0KICAgICAgICAvLyAgICAgfWVsc2V7CiAgICAgICAgLy8gICAgICAgICByZXR1cm4gaXRlbQogICAgICAgIC8vICAgICB9CiAgICAgICAgLy8gfSkKICAgICAgICB0aGlzLnBob3RvID0gdGhpcy52YWx1ZSB8fCBbXTsKICAgICAgfQogICAgICBpZiAodHlwZW9mIHRoaXMucGhvdG8gPT0gInN0cmluZyIpIHsKICAgICAgICB0aGlzLnBob3RvID0gW3RoaXMucGhvdG9dOwogICAgICB9CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLmxpbWl0ID09IDEpIHsKICAgICAgaWYgKHRoaXMudmFsdWUgaW5zdGFuY2VvZiBBcnJheSkgewogICAgICAgIHRoaXMucGhvdG8gPSBbXTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnBob3RvID0gdGhpcy52YWx1ZSA/IFt0aGlzLnZhbHVlXSA6IFtdOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICAvLyBsZXQgcGhvdG9zPXRoaXMudmFsdWUKICAgICAgLy8gICAgIHBob3Rvcz1waG90b3MubWFwKGl0ZW09PnsKICAgICAgLy8gICAgICAgICBpZih0eXBlb2YgaXRlbT09J3N0cmluZycpewogICAgICAvLyAgICAgICAgICAgICByZXR1cm4ge2ZpbGVOYW1lOiIiLHVybDppdGVtfQogICAgICAvLyAgICAgICAgIH1lbHNlewogICAgICAvLyAgICAgICAgICAgICByZXR1cm4gaXRlbQogICAgICAvLyAgICAgICAgIH0KICAgICAgLy8gICAgIH0pCiAgICAgIC8vICAgICB0aGlzLnBob3RvPXBob3RvcwogICAgICB0aGlzLnBob3RvID0gdGhpcy52YWx1ZSB8fCBbXTsKICAgIH0KICAgIGlmICh0eXBlb2YgdGhpcy5waG90byA9PSAic3RyaW5nIikgewogICAgICB0aGlzLnBob3RvID0gW3RoaXMucGhvdG9dOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZGVsZXRlSW1nKGluZGV4KSB7CiAgICAgIHRoaXMucGhvdG8uc3BsaWNlKGluZGV4LCAxKTsKICAgIH0sCiAgICBjb21wcmVzcyhpbWcpIHsKICAgICAgdmFyIHVybCA9IG51bGw7CiAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKTsKICAgICAgdmFyIHNjYWxlID0gaW1nLmhlaWdodCAvIGltZy53aWR0aDsKICAgICAgY2FudmFzLndpZHRoID0gNzIwOwogICAgICBjYW52YXMuaGVpZ2h0ID0gNzIwICogc2NhbGU7CgogICAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CiAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTsKCiAgICAgIGN0eC5kcmF3SW1hZ2UoaW1nLCAwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpOwogICAgICB1cmwgPSBjYW52YXMudG9EYXRhVVJMKCJpbWFnZS9qcGVnIik7CiAgICAgIHJldHVybiB1cmw7CiAgICB9LAogICAgZGF0YVVSSXRvQmxvYihkYXRhVVJJKSB7CiAgICAgIGxldCBieXRlU3RyaW5nID0gd2luZG93LmF0b2IoZGF0YVVSSS5zcGxpdCgiLCIpWzFdKTsKICAgICAgbGV0IG1pbWVTdHJpbmcgPSBkYXRhVVJJLnNwbGl0KCIsIilbMF0uc3BsaXQoIjoiKVsxXS5zcGxpdCgiOyIpWzBdOwogICAgICBsZXQgYWIgPSBuZXcgQXJyYXlCdWZmZXIoYnl0ZVN0cmluZy5sZW5ndGgpOwogICAgICBsZXQgaWEgPSBuZXcgVWludDhBcnJheShhYik7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnl0ZVN0cmluZy5sZW5ndGg7IGkrKykgewogICAgICAgIGlhW2ldID0gYnl0ZVN0cmluZy5jaGFyQ29kZUF0KGkpOwogICAgICB9CiAgICAgIHJldHVybiBuZXcgd2luZG93LkJsb2IoW2FiXSwgeyB0eXBlOiBtaW1lU3RyaW5nIH0pOwogICAgfSwKICAgIGFkZF9pbWcoZXZlbnQpIHsKICAgICAgbGV0IGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgIGlmICgvXC4oZ2lmfGpwZ3xqcGVnfHBuZ3xHSUZ8SlBHfFBORykkLy50ZXN0KGV2ZW50LnRhcmdldC52YWx1ZSkpIHsKICAgICAgICBsZXQgTUFYU0laRSA9IDEwICogMTAyNCAqIDEwMjQ7CiAgICAgICAgbGV0IHNpemUgPSBmaWxlLnNpemU7CiAgICAgICAgaWYgKHNpemUgPiBNQVhTSVpFKSB7CiAgICAgICAgICBldmVudC50YXJnZXQudmFsdWUgPSAiIjsKICAgICAgICAgIHRoaXMuJG5vdGlmeS5lcnJvcih7CiAgICAgICAgICAgIHRpdGxlOiAi5LiK5Lyg5Zu+54mH6ZSZ6K+vIiwKICAgICAgICAgICAgbWVzc2FnZTogIuS4iuS8oOWbvueJh+S4jeiDvei2hei/hzEwTSIsCiAgICAgICAgICB9KTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICBsZXQgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICBsZXQgc2VsZiA9IHRoaXM7CiAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CiAgICAgICAgbGV0IGltZyA9IG5ldyBJbWFnZSgpOwogICAgICAgIGxldCB1cGREaXIgPSB0aGlzLnVwZERpcjsKICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIGltZy5zcmMgPSB0aGlzLnJlc3VsdDsKICAgICAgICAgIGltZy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCBiYXNlID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgICAgICBsZXQgZmlsZUl0ZW0gPSBmaWxlOwogICAgICAgICAgICBpZiAoc2VsZi5pc0NvbXByZXNzKSB7CiAgICAgICAgICAgICAgYmFzZSA9IHNlbGYuY29tcHJlc3MoaW1nKTsKICAgICAgICAgICAgICBmaWxlSXRlbSA9IHNlbGYuZGF0YVVSSXRvQmxvYihiYXNlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBsZXQgZm9ybWRhdGEgPSBuZXcgd2luZG93LkZvcm1EYXRhKCk7CiAgICAgICAgICAgIGZvcm1kYXRhLmFwcGVuZCgiZmlsZSIsIGZpbGVJdGVtKTsKICAgICAgICAgICAgYXhpb3MoewogICAgICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgICAgIHVybDogIi91cGxvYWQvdXBsb2FkSW1hZ2UvIiArIHVwZERpciwKICAgICAgICAgICAgICBkYXRhOiBmb3JtZGF0YSwKICAgICAgICAgICAgICB0aW1lb3V0OiAxMDAwMDAwLAogICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIsCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgICAgICBldmVudC50YXJnZXQudmFsdWUgPSAiIjsKICAgICAgICAgICAgICAgIHNlbGYucGhvdG8ucHVzaCh7CiAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBmaWxlLmZpbGVOYW1lLAogICAgICAgICAgICAgICAgICB1cmw6IHJlcy5kYXRhLmRhdGEsCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHNlbGYubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICAgICAgICBldmVudC50YXJnZXQudmFsdWUgPSAiIjsKICAgICAgICAgICAgICAgIHNlbGYubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlLm1lc3NhZ2UpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgfTsKICAgICAgICB9OwogICAgICB9IGVsc2UgewogICAgICAgIGV2ZW50LnRhcmdldC52YWx1ZSA9ICIiOwogICAgICAgIHRoaXMuJG5vdGlmeS5lcnJvcih7CiAgICAgICAgICB0aXRsZTogIuS4iuS8oOWbvueJh+mUmeivryIsCiAgICAgICAgICBtZXNzYWdlOiAi6K+35LiK5LygZ2lmfGpwZ3xqcGVnfHBuZ3xHSUZ8SlBHfFBOR+agvOW8j+WbvueJhyIsCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},null]}