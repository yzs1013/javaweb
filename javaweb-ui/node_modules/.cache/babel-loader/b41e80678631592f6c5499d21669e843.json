{"remainingRequest":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\JavaWebVue\\javaweb-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JavaWebVue\\javaweb-ui\\src\\components\\uploadImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\JavaWebVue\\javaweb-ui\\src\\components\\uploadImage.vue","mtime":1616814066000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\JavaWebVue\\javaweb-ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}